<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:32.665Z</updated>
    <entry>
        <id>333445546</id>
        <title>mac-m1_mini_2020-perf jobs sluggish and failing with NO_RESOURCE</title>
        <author>
            <name>ol...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445546"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">Currently all my pinpoint jobs with this machine are either not executed at all, or fail with State: NO_RESOURCE.

Examples:
* https://pinpoint-dot-chromeperf.appspot.com/job/146491fcbe0000
* https://pinpoint-dot-chromeperf.appspot.com/job/11c357dabe0000
* https://pinpoint-dot-chromeperf.appspot.com/job/1555d4d2be0000
</content>
    </entry>
    <entry>
        <id>333425973</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333425973"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284082:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=83af5d4f-fa73-469e-b8a2-a08fff96300d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=83af5d4f-fa73-469e-b8a2-a08fff96300d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.25%: 18.8441 -&gt; 18.23085 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.25%: 18.8441 -&gt; 18.23085 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333435023</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333435023"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284118:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=53350947-6670-4f87-a81e-98de25587943

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=53350947-6670-4f87-a81e-98de25587943

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.parser/query-selector-all-id-deep/query-selector-all-id-deep.html
        3.96%: 34765.965 -&gt; 33390.777 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.parser/query-selector-all-id-deep/query-selector-all-id-deep.html
        3.96%: 34765.965 -&gt; 33390.777 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333420614</id>
        <title>Prefer capture timestamp in Breakout Box</title>
        <author>
            <name>gu...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420614"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">Prefer the capture timestamp as the main timestamp in BreakoutBox-exposed frames if available.</content>
    </entry>
    <entry>
        <id>333460773</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333460773"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284118:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f8326119-7c80-4296-bdc7-154608dc78f0

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f8326119-7c80-4296-bdc7-154608dc78f0

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.parser/query-selector-all-id-first/query-selector-all-id-first.html
        3.96%: 34765.965 -&gt; 33390.777 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.parser/query-selector-all-id-first/query-selector-all-id-first.html
        3.96%: 34765.965 -&gt; 33390.777 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333424128</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424128"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284082:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a3df13ff-fee9-4a47-8cb3-4bbfa1b63867

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a3df13ff-fee9-4a47-8cb3-4bbfa1b63867

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.25%: 18.8441 -&gt; 18.23085 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.25%: 18.8441 -&gt; 18.23085 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333418145</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418145"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=503899e2-b95f-44d6-8ce9-78c0c90b3dcc

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=503899e2-b95f-44d6-8ce9-78c0c90b3dcc

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333418144</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418144"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284117:1284140:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c0b9666c-3aa2-490d-929d-4dcb3d68e5f8

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c0b9666c-3aa2-490d-929d-4dcb3d68e5f8

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333414295</id>
        <title>Dangling pointer in ProofVerifierChromium detected during local run</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333414295"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: built from refs/heads/main@{#1283729}
OS: Linux

What steps will reproduce the problem?
(1) I was randomly running a local Release build (augmented with debug prints, but no changes in business logic)
(2) I navigated to https://docs.google.com/document/d/19xTAM4A75tz0xUq_velMzGA4JHEgXpyflUxXTcuNiyE/edit
(3) Pressed Ctrl-c to close the browser

I got these logs printed out:

[904461:904469:0409/140708.030106:ERROR:partition_alloc_support.cc(620)] Detected dangling raw_ptr with id=0x000001b000134178:
[DanglingSignature]	net::ProofVerifierChromium::Job::~Job()	No active task	net::CoalescingCertVerifier::Request::~Request()	No active task

The memory was freed at:
#0 0x56177b5b8f92 base::debug::CollectStackTrace()
#1 0x56177b5a1d22 base::debug::StackTrace::StackTrace()
#2 0x56177b5bf225 base::allocator::(anonymous namespace)::DanglingRawPtrDetected()
#3 0x56177b6687db allocator_shim::internal::PartitionFree()
#4 0x56177ad60f4e base::allocator::dispatcher::internal::DispatcherImpl&lt;&gt;::FreeFn()
#5 0x56177bb21787 net::ProofVerifierChromium::Job::~Job()
#6 0x56177bb2432f std::__Cr::__tree&lt;&gt;::destroy()
#7 0x56177bb23e5f net::ProofVerifierChromium::~ProofVerifierChromium()
#8 0x56177bb23e9e net::ProofVerifierChromium::~ProofVerifierChromium()
#9 0x56177bc747fb quic::QuicCryptoClientConfig::~QuicCryptoClientConfig()
#10 0x56177bb13f7d net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner()
#11 0x56177bb1c3f3 std::__Cr::__list_imp&lt;&gt;::clear()
#12 0x56177bb1539c net::QuicSessionPool::~QuicSessionPool()
#13 0x56177ba7a36c net::HttpNetworkSession::~HttpNetworkSession()
#14 0x56177bbce09a net::URLRequestContext::~URLRequestContext()
#15 0x56177da5aae3 network::URLRequestContextOwner::~URLRequestContextOwner()
#16 0x56177d92f14c network::NetworkContext::~NetworkContext()
#17 0x56177d92f2ae network::NetworkContext::~NetworkContext()
#18 0x56177d917359 network::NetworkService::OnNetworkContextConnectionClosed()
#19 0x561774cb5088 base::OnceCallback&lt;&gt;::Run()
#20 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#21 0x56177bdee0ef mojo::InterfaceEndpointClient::NotifyError()
#22 0x56177bdfca36 mojo::internal::MultiplexRouter::ProcessNotifyErrorTask()
#23 0x56177bdf8c62 mojo::internal::MultiplexRouter::ProcessTasks()
#24 0x56177bdf77ca mojo::internal::MultiplexRouter::OnPipeConnectionError()
#25 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#26 0x56177bde7663 mojo::Connector::HandleError()
#27 0x56177bde8377 mojo::Connector::OnWatcherHandleReady()
#28 0x5617756f059f base::RepeatingCallback&lt;&gt;::Run()
#29 0x561774d4c11d base::RepeatingCallback&lt;&gt;::Run()
#30 0x56177be1a6f8 mojo::SimpleWatcher::OnHandleReady()
#31 0x56177be1a894 mojo::SimpleWatcher::Context::Notify()
#32 0x56177be19880 mojo::SimpleWatcher::Context::CallNotify()
#33 0x561774da1805 mojo::core::ipcz_driver::MojoTrap::DispatchEvent()
#34 0x561774da04f1 mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent()
#35 0x561774da11fd mojo::core::ipcz_driver::MojoTrap::HandleEvent()
#36 0x561774da0f2d mojo::core::ipcz_driver::MojoTrap::TrapEventHandler()
#37 0x561774dfd366 ipcz::TrapEventDispatcher::~TrapEventDispatcher()
#38 0x561774df2e1d ipcz::Router::AcceptRouteClosureFrom()
#39 0x561774de463b ipcz::NodeLink::OnRouteClosed()
#40 0x561774debedc ipcz::msg::NodeMessageListener::OnTransportMessage()
#41 0x561774dd15c1 ipcz::(anonymous namespace)::NotifyTransport()
#42 0x561774da775b mojo::core::ipcz_driver::Transport::OnChannelMessage()
#43 0x561774d83256 mojo::core::Channel::TryDispatchMessage()
#44 0x561774d82ec8 mojo::core::Channel::OnReadComplete()
#45 0x561774dc6bec mojo::core::ChannelPosix::OnFileCanReadWithoutBlocking()
#46 0x56177b5caa45 base::MessagePumpLibevent::FdWatchController::OnFdReadable()
#47 0x56177b5d0593 base::MessagePumpEpoll::HandleEvent()
#48 0x56177b5cfa18 base::MessagePumpEpoll::OnEpollEvent()
#49 0x56177b5cf213 base::MessagePumpEpoll::WaitForEpollEvents()
#50 0x56177b5cecd8 base::MessagePumpEpoll::Run()
#51 0x56177b53f54f base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run()
#52 0x56177b4e193c base::RunLoop::Run()
#53 0x56177b57b28d base::Thread::Run()
#54 0x56177f63e5d0 content::(anonymous namespace)::ChildIOThread::Run()
#55 0x56177b57b683 base::Thread::ThreadMain()
#56 0x56177b595ea3 base::(anonymous namespace)::ThreadFunc()
#57 0x7f29658f645c (/usr/lib/x86_64-linux-gnu/libc.so.6+0x8845b)
#58 0x7f2965976ae0 __clone

Task trace:
No active task.
The dangling raw_ptr was released at:
#0 0x56177b5b8f92 base::debug::CollectStackTrace()
#1 0x56177b5a1d22 base::debug::StackTrace::StackTrace()
#2 0x56177b5bf316 base::allocator::(anonymous namespace)::DanglingRawPtrReleased&lt;&gt;()
#3 0x56177b607c35 base::internal::RawPtrBackupRefImpl&lt;&gt;::ReleaseInternal()
#4 0x56177b99ab2f net::CoalescingCertVerifier::Request::~Request()
#5 0x56177b99abce net::CoalescingCertVerifier::Request::~Request()
#6 0x56177bb21899 net::ProofVerifierChromium::Job::~Job()
#7 0x56177bb2432f std::__Cr::__tree&lt;&gt;::destroy()
#8 0x56177bb23e5f net::ProofVerifierChromium::~ProofVerifierChromium()
#9 0x56177bb23e9e net::ProofVerifierChromium::~ProofVerifierChromium()
#10 0x56177bc747fb quic::QuicCryptoClientConfig::~QuicCryptoClientConfig()
#11 0x56177bb13f7d net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner()
#12 0x56177bb1c3f3 std::__Cr::__list_imp&lt;&gt;::clear()
#13 0x56177bb1539c net::QuicSessionPool::~QuicSessionPool()
#14 0x56177ba7a36c net::HttpNetworkSession::~HttpNetworkSession()
#15 0x56177bbce09a net::URLRequestContext::~URLRequestContext()
#16 0x56177da5aae3 network::URLRequestContextOwner::~URLRequestContextOwner()
#17 0x56177d92f14c network::NetworkContext::~NetworkContext()
#18 0x56177d92f2ae network::NetworkContext::~NetworkContext()
#19 0x56177d917359 network::NetworkService::OnNetworkContextConnectionClosed()
#20 0x561774cb5088 base::OnceCallback&lt;&gt;::Run()
#21 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#22 0x56177bdee0ef mojo::InterfaceEndpointClient::NotifyError()
#23 0x56177bdfca36 mojo::internal::MultiplexRouter::ProcessNotifyErrorTask()
#24 0x56177bdf8c62 mojo::internal::MultiplexRouter::ProcessTasks()
#25 0x56177bdf77ca mojo::internal::MultiplexRouter::OnPipeConnectionError()
#26 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#27 0x56177bde7663 mojo::Connector::HandleError()
#28 0x56177bde8377 mojo::Connector::OnWatcherHandleReady()
#29 0x5617756f059f base::RepeatingCallback&lt;&gt;::Run()
#30 0x561774d4c11d base::RepeatingCallback&lt;&gt;::Run()
#31 0x56177be1a6f8 mojo::SimpleWatcher::OnHandleReady()
#32 0x56177be1a894 mojo::SimpleWatcher::Context::Notify()
#33 0x56177be19880 mojo::SimpleWatcher::Context::CallNotify()
#34 0x561774da1805 mojo::core::ipcz_driver::MojoTrap::DispatchEvent()
#35 0x561774da04f1 mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent()
#36 0x561774da11fd mojo::core::ipcz_driver::MojoTrap::HandleEvent()
#37 0x561774da0f2d mojo::core::ipcz_driver::MojoTrap::TrapEventHandler()
#38 0x561774dfd366 ipcz::TrapEventDispatcher::~TrapEventDispatcher()
#39 0x561774df2e1d ipcz::Router::AcceptRouteClosureFrom()
#40 0x561774de463b ipcz::NodeLink::OnRouteClosed()
#41 0x561774debedc ipcz::msg::NodeMessageListener::OnTransportMessage()
#42 0x561774dd15c1 ipcz::(anonymous namespace)::NotifyTransport()
#43 0x561774da775b mojo::core::ipcz_driver::Transport::OnChannelMessage()
#44 0x561774d83256 mojo::core::Channel::TryDispatchMessage()
#45 0x561774d82ec8 mojo::core::Channel::OnReadComplete()
#46 0x561774dc6bec mojo::core::ChannelPosix::OnFileCanReadWithoutBlocking()
#47 0x56177b5caa45 base::MessagePumpLibevent::FdWatchController::OnFdReadable()
#48 0x56177b5d0593 base::MessagePumpEpoll::HandleEvent()
#49 0x56177b5cfa18 base::MessagePumpEpoll::OnEpollEvent()
#50 0x56177b5cf213 base::MessagePumpEpoll::WaitForEpollEvents()
#51 0x56177b5cecd8 base::MessagePumpEpoll::Run()
#52 0x56177b53f54f base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run()
#53 0x56177b4e193c base::RunLoop::Run()
#54 0x56177b57b28d base::Thread::Run()
#55 0x56177f63e5d0 content::(anonymous namespace)::ChildIOThread::Run()
#56 0x56177b57b683 base::Thread::ThreadMain()
#57 0x56177b595ea3 base::(anonymous namespace)::ThreadFunc()
#58 0x7f29658f645c (/usr/lib/x86_64-linux-gnu/libc.so.6+0x8845b)
#59 0x7f2965976ae0 __clone

Task trace:
No active task.

This is not reproducible, I just saw this once.</content>
    </entry>
    <entry>
        <id>333425971</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333425971"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=0c16b4b7-facb-4873-ba3e-8f69fcce1dec

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0c16b4b7-facb-4873-ba3e-8f69fcce1dec

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/indexed-getter/indexed-getter.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/indexed-getter/indexed-getter.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333513771</id>
        <title>Support weak pointers of TabGroup</title>
        <author>
            <name>lp...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333513771"/>
        <updated>1970-01-01T00:28:32.663Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333418143</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418143"/>
        <updated>1970-01-01T00:28:32.663Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=12cf6dfa-0c11-4273-a47b-c8636bf6aa0f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=12cf6dfa-0c11-4273-a47b-c8636bf6aa0f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/set-attribute/set-attribute.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/set-attribute/set-attribute.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333487750</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333487750"/>
        <updated>1970-01-01T00:28:32.663Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e1ef0978-7b21-4d41-be3b-e9a53f3b485a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e1ef0978-7b21-4d41-be3b-e9a53f3b485a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333445544</id>
        <title>components_browsertests fails to find setupHeaderFooterTemplate</title>
        <author>
            <name>ms...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445544"/>
        <updated>1970-01-01T00:28:32.662Z</updated>
        <summary>-</summary>
        <content type="html">I get a console error when printing from PrintRenderFrameHelperTest: "Uncaught ReferenceError: setupHeaderFooterTemplate is not defined", meaning that no headers and footers will be generated.

Here's a test that I believe should pass:

```cxx
TEST_F(MAYBE_PrintRenderFrameHelperTest, HeaderAndFooter) {
  LoadHTML(R"HTML(
    &lt;style&gt;
      @page {
        size: 7in;
        margin: 1in;
      }
    &lt;/style&gt;
    &lt;div&gt;&lt;/div&gt;
  )HTML");

  mojom::PrintParams&amp; params = printer()-&gt;Params();
  printer()-&gt;set_should_generate_page_images(true);
  params.display_header_footer = true;
  params.header_template =
      u"&lt;div style='width:9pt; height:9pt; border-left:9pt solid blue;'&gt;&lt;/div&gt;";

  OnPrintPages();

  const MockPrinterPage* page = printer()-&gt;GetPrinterPage(0);
  ASSERT_TRUE(page);
  const Image&amp; image = page-&gt;image();
  ASSERT_EQ(image.size(), gfx::Size(7*72, 7*72));
  // There should be some blue here (note that there may be some
  // subpixel stuff to sort out, though):
  unsigned nonwhite_count = 0;
  for (int y = 0; y &lt; 72; y++) {
    for (int x = 0; x &lt; 7*72; x++) {
      if (image.pixel_at(x, y) != 0xffffffU) {
        nonwhite_count++;
      }
    }
  }
  EXPECT_GE(nonwhite_count, 81u);
}
```

However:
```
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PrintRenderFrameHelperTest
[ RUN      ] PrintRenderFrameHelperTest.HeaderAndFooter
../../components/printing/test/print_render_frame_helper_browsertest.cc:1297: Failure
Expected: (nonwhite_count) &gt;= (81u), actual: 0 vs 81
Stack trace:
#0 0x558c7a6551c9 printing::PrintRenderFrameHelperTest_HeaderAndFooter_Test::TestBody()

[  FAILED  ] PrintRenderFrameHelperTest.HeaderAndFooter (2761 ms)
[----------] 1 test from PrintRenderFrameHelperTest (2771 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (2771 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] PrintRenderFrameHelperTest.HeaderAndFooter
```

Not surprising, since setupHeaderFooterTemplate doesn't exist. How do we fix this?</content>
    </entry>
    <entry>
        <id>333413839</id>
        <title>[Android System Health Rotation Memory]: 2 regressions in system_health.memory_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413839"/>
        <updated>1970-01-01T00:28:32.662Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284244:1284248:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a06b51cc-572c-4acb-8994-b0efcf75795b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a06b51cc-572c-4acb-8994-b0efcf75795b

Top 2 regressions (out of 6, with 4 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_allocated_size_avg/load_news
       15.69%: 33323261.0 -&gt; 38551698.5 sizeInBytes
  - ChromiumPerf/android-pixel4_webview-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_committed_size_avg/load_news
       13.06%: 42589662.0 -&gt; 48151808.0 sizeInBytes

Top 2 affected measurements in android-pixel4_webview-perf:
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_allocated_size_avg/load_news
       15.69%: 33323261.0 -&gt; 38551698.5 sizeInBytes
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_committed_size_avg/load_news
       13.06%: 42589662.0 -&gt; 48151808.0 sizeInBytes

Regressions grouped by system_health.memory_mobile includes data from the following benchmarks with listed owners:
  system_health.memory_mobile: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/cd3f12d62067f82140f510153aac019455f7c875..d4f8d6bd9c808f0dfe7e2e8be2763eb8a0f81a9e
  Chromium Commit Position: https://crrev.com/1284243..1284248
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/594a3295d4d26508634492b03582a8f76738a379..594a3295d4d26508634492b03582a8f76738a379
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5a6ab45d351d23c17feca2b6d1961e5f7d4eec5..e5a6ab45d351d23c17feca2b6d1961e5f7d4eec5</content>
    </entry>
    <entry>
        <id>333420613</id>
        <title>Missing of consideration of a CSS specification with ':nth-child( of &amp;lt;selector&amp;gt;)' syntax</title>
        <author>
            <name>ka...@googlemail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420613"/>
        <updated>1970-01-01T00:28:32.662Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. download html file from https://drive.google.com/file/d/1SH5Ld8qOWdajNI4C-JmCXY6HU_ewDZvV/view?usp=drive_link
2. open file in chrome
3. 

# Problem Description
If any class-dependent rule exists in the CSS rules, rules that use the ':nth-child( of &lt;selector&gt;)' syntax, where &lt;selector&gt; itself is a class-dependent rule, will not be taken into account after DOM modifications.

A class-dependent rule can be e.g.
			[class*="any_class_name"] &gt; * {
			}
If this rule is removed from the style information, everything works correctly.
To demonstrate the error, I have included the well-known table with zebra stripes in three versions below.

In each table, row number 3 is initially hidden and is displayed after 2 seconds.
	table 1 - row no. 3 hidden with style="display:none" 
	table 2 - row no. 3 hidden with hidden attribute
	table 3 - row no. 3 hidden with class="hide-it" (style spec .hide-it { display: none; })
	
After 2 seconds the following values are set
	table 1 - row no. 3 is shown / style="" 
	table 2 - row no. 3 is shown / hidden attribute removed
	table 3 - row no. 3 is shown / class="" 

Tables 1 and 2 work correctly and the zebra stripes change as expected. Only in Table 3 the zebra stripes are not updated after changing a class value.
I checked the error in Windows (Chrome 123.06312.106), macOS (Chrome 123.06312.107) and Android (Chrome 123.06312.99).

In the Firefox 124.0.2 (Windows) and Safari 17.4.1 (macOS) browsers, all tables display correctly and as expected.

# Summary
Missing of consideration of a CSS specification with ':nth-child( of &lt;selector&gt;)' syntax

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333423696</id>
        <title>Re-implement GC on page navigation</title>
        <author>
            <name>ml...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423696"/>
        <updated>1970-01-01T00:28:32.660Z</updated>
        <summary>-</summary>
        <content type="html">Find a way to reclaim some memory on page navigation. GC time needs to be bounded here or otherwise we'd cause jank on same-site navigations by eating away CPU cycles for GC.</content>
    </entry>
    <entry>
        <id>333413838</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413838"/>
        <updated>1970-01-01T00:28:32.660Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284117:1284140:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=03e544a7-e7bd-478d-b995-9c09d61a4763

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=03e544a7-e7bd-478d-b995-9c09d61a4763

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/v8:gc:cycle:main_thread:cpp_sum/browse_shopping/browse_shopping_avito_2019
       12.29%: 77.62601 -&gt; 87.165 

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/v8:gc:cycle:main_thread:cpp_sum/browse_shopping/browse_shopping_avito_2019
       12.29%: 77.62601 -&gt; 87.165 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333413837</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413837"/>
        <updated>1970-01-01T00:28:32.660Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284117:1284140:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ceb4576f-e129-483a-bcf4-cf44526c02bb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ceb4576f-e129-483a-bcf4-cf44526c02bb

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333508726</id>
        <title>ActiveText, LinkText and VisitedText CSS system colours can share the same value</title>
        <author>
            <name>lw...@igalia.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333508726"/>
        <updated>1970-01-01T00:28:32.659Z</updated>
        <summary>-</summary>
        <content type="html">Due to how the system colors system provider is wired up, these three system colours (ActiveText, LinkText and VisitedText) end up sharing a value (the one expected for LinkText). This is because Windows' themes have a single "SystemColorHotlightColor" value for hyperlinks. However, in general use where forced-colors mode isn't enabled and where the web browser is in use, these three values should be separated like they are on platforms that don't use a system provider (e.g. Android).

This also seems to impact macOS too where there isn't even a system color for links.</content>
    </entry>
    <entry>
        <id>333420611</id>
        <title>Complex drop-shadow is slow and causes tab to become unresponsive</title>
        <author>
            <name>lc...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420611"/>
        <updated>1970-01-01T00:28:32.659Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Example: https://blackdoor.nl/test/drop-shadow/
2. 
3. 

# Problem Description
While using complex drop-shadows the performance is really slow and causes the tab to become unresponsive. 
Slowdown seems to almost be exponential when adding multiple drop-shadows. 
See example: https://blackdoor.nl/test/drop-shadow/ 
Works fine in FireFox and Safari.

# Summary
Complex drop-shadow is slow and causes tab to become unresponsive

# Custom Questions
#### Which component does this fall under?
Blink&gt;CSS

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333424904</id>
        <title>calculation wrong </title>
        <author>
            <name>ku...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424904"/>
        <updated>1970-01-01T00:28:32.658Z</updated>
        <summary>-</summary>
        <content type="html">Hi team, 
I found the issue in google sheet when we do the sum in sheet it showing the wrong value because of comma.
When we sum the values with Comma it given wrong answer 
without we try to sum it shows the correct value 
In Microsoft excel if you try to sum the values with comma or without comma answer will be correct 
so need to change the condition in Google sheets with or without comma value should be correct.

For reference check the screenshot also
</content>
    </entry>
    <entry>
        <id>333424903</id>
        <title>Problema de error en Chrome </title>
        <author>
            <name>se...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424903"/>
        <updated>1970-01-01T00:28:32.657Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: &lt;From about:version: Google Chrome x.x.x.x&gt;
Chrome OS Version: &lt;From about:version: Platform x.x.x.x&gt;
Chrome OS Platform: &lt;Make/model of computer running Chrome OS&gt;
Lacros Version (if applicable): &lt;From about:version: Google Chrome x.x.x.x&gt;
Network info: &lt;network, encryption type, router model (if known)&gt;

Please specify Cr-* of the system to which this bug/feature applies (add the label below).

Steps To Reproduce:
(1)
(2)
(3)

Expected Result:

Actual Result:

How frequently does this problem reproduce? (Always, sometimes, hard to reproduce?)

What is the impact to the user, and is there a workaround? If so, what is it?

Please provide any additional information below. Attach a screen shot or log if possible.

For graphics-related bugs, please copy/paste the contents of the about:gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>333504586</id>
        <title>ExtendedDragSourceTest.HandlesMouseMoveBeforeExtendedDragStart started to fail</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333504586"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html">The test started to fail recently and I couldn't pinpoint the culprit
The gardener is going to disable the test
Please reroute the bug as appropriate.
</content>
    </entry>
    <entry>
        <id>333423692</id>
        <title>text input inputs spill into parent details&amp;gt;summary when space is pressed (closing and opening them)</title>
        <author>
            <name>ga...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423692"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. create an HTML structure like this Emmet abbreviation `details&gt;(summary&gt;input){lorem ipsum}` or open this codepen https://codepen.io/gabrielesilinic/pen/ExJLjOP
2. focus the input.
3. type in the input something that has a space in it. like "lorem ipsum", you will notice the focus "spills out" and closes the details&gt;summary

# Problem Description
The space keydown is not properly contained inside the text input, pressing space while typing affects elements outside the input like the summary and details the input is contained into in this case, making it hard to deal with setups like forms with expandable sections (see steps to reproduce).
 
Unfortunately there aren't many other browser engines I have access to, but as far as Firefox is concerned, they keep all inputs inside the input element making it easier to deal with complex components, so I guess its a bug in chromium.

HTML structure

```html
&lt;details&gt;
  &lt;summary&gt;Try to type &lt;input type="text" id="inputInsideSummary"/&gt;&lt;/summary&gt;
  &lt;p&gt;when you hit space while using the text input this should not open, but currently it does on chromium v123&lt;/p&gt;
&lt;/details&gt;
```

# Additional Comments
Bug found on both google chrome and microsoft edge (chromium), firefox developer edition 125.0b9 is the only one who behaves correctly, I have no idea about webkit.

# Summary
text input inputs spill into parent details&gt;summary when space is pressed (closing and opening them)

# Custom Questions
#### Which component does this fall under?
Blink&gt;INPUT

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333443437</id>
        <title>Change classification into single-slot spans</title>
        <author>
            <name>ba...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333443437"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html">In PartitionAlloc we have 3 types of slot spans (see also [PartitionAlloc glossary](https://source.chromium.org/chromium/chromium/src/+/main:base/allocator/partition_allocator/glossary.md)):
1. "small buckets" - a slot span which hosts N&gt;=1 slots (yes, N can be 1)
2. "single-slot span" - a slot span which hosts exactly 1 slot (because it's a guarantee, we can treat these slot spans differently)
3. "direct map" - an artificial slot span for allocations over kMaxBucketed (900kB-ish)

The heuristic that selects these is simple. If slot size `&lt;= 16*SytemPageSize()` we choose type #1, if `&gt; kMaxBucketed` we choose type #3, otherwise type #2. `16*SytemPageSize()` was chosen as a selector, because it's the maximum size of type #1 slot span, out of convenience, not out of necessity. As a result, any slot size `&gt; 6*SytemPageSize() &amp;&amp; &lt;= 16*SytemPageSize()` (and probably not only) will fall into type #1 slot span with N=1. We might as well assign them to type #2, and take advantage of the special treatment.

This will enable the following scenarios:
- (A) When 64kB system pages are used, type #2 becomes non-existent, which causes failures on tests that specifically test this type of a span. With the new approach, type #2 will show up on the map again.
- (B) Requested allocation size will be saved out-of-line for more allocations. This means we'll need less bits of inline metadata if we ever decide to save requested size for all allocations (e.g. for crbug.com/41496184).
- (C) This will increase number of cases where in-slot ref-count can be avoided (see crbug.com/330589224)

Having said all that, we need to evaluate performance of the new approach. The difference in treatment of type #1 and type #2 spans may change perf and memory usage in an unknown direction.
</content>
    </entry>
    <entry>
        <id>333503465</id>
        <title>Add flag to ship iPad separately</title>
        <author>
            <name>ga...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333503465"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333420609</id>
        <title>display inline-grid causes 1st page empty when printed </title>
        <author>
            <name>pa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420609"/>
        <updated>1970-01-01T00:28:32.655Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. open the attached html
2. select print preview
3. see the first page is empty and test text starts at the 2nd page

# Problem Description
The test text should be printed at the 1st page.

# Summary
display inline-grid causes 1st page empty when printed 

# Custom Questions
#### Does the problem occur on multiple sites?
Not sure - I don't know

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333501264</id>
        <title>Tests are failing: ninja://:blink_wpt_tests/virtual/fenced-frame-mparch/external/wpt/fenced-frame/setting-null-config-navigates-to-about-blank.https.html</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333501264"/>
        <updated>1970-01-01T00:28:32.654Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://:blink_wpt_tests/virtual/fenced-frame-mparch/external/wpt/fenced-frame/setting-null-config-navigates-to-about-blank.https.html

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/37f067a5c8a4374f0ac2c750760969ef

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333423689</id>
        <title>org.chromium.base.ThreadChecker works incorrectly when BuildConfig.ENABLE_ASSERTS is set to false</title>
        <author>
            <name>na...@avast.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423689"/>
        <updated>1970-01-01T00:28:32.653Z</updated>
        <summary>-</summary>
        <content type="html">**Issue**

The following CL 

https://chromium-review.googlesource.com/c/chromium/src/+/4361339/9/base/android/java/src/org/chromium/base/ThreadUtils.java

changed the default value of **`mThreadId`** from `Process.myTid()` to `0` and only when `BuildConfig.ENABLE_ASSERTS` is enabled is this variable set to `Process.myTid()`. This change is not reflected in the `assertOnValidThread` function, meaning that calling `assertOnValidThread()` in non-debug build will fail the `assert`, since the `mThreadId` is always `0`.

**Proposed solution**

Add `if (BuildConfig.ENABLE_ASSERTS)` to `ThreadChecker.assertOnValidThread`.

**Additional description**

I've arrived to this issue following this stack trace, which is generated when `BuildConfig.ENABLE_ASSERTS` is set to `false`:
```
java.lang.AssertionError: Must only be used on a single thread.
at org.chromium.base.ThreadUtils$ThreadChecker.assertOnValidThread(ThreadUtils.java:65)
at org.chromium.base.ObserverList.addObserver(ObserverList.java:72)
at org.chromium.base.ApplicationStatus.registerWindowFocusChangedListener(ApplicationStatus.java:176)
at org.chromium.base.ApplicationStatus.initialize(ApplicationStatus.java:307)
```

Although I could use `ObserverList.disableThreadAsserts` to get rid of this problem, it seems more natural to fix the problem at the root. (Not to mention that `disableThreadAsserts` specifies that `using it indicates a bug`</content>
    </entry>
    <entry>
        <id>333423688</id>
        <title>ICU is no longer rolled</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423688"/>
        <updated>1970-01-01T00:28:32.652Z</updated>
        <summary>-</summary>
        <content type="html">Last roll is several months old.

The roll shows different deps between chromium and v8, but then does nothing:
https://ci.chromium.org/ui/p/v8-internal/builders/ci-hp/Roll%20-%20ICU/602/overview

https://logs.chromium.org/logs/v8-internal/buildbucket/cr-buildbucket/8751163657286211281/+/u/Find_updated_deps/gclient_get_src_deps/deps
https://logs.chromium.org/logs/v8-internal/buildbucket/cr-buildbucket/8751163657286211281/+/u/Find_updated_deps/gclient_get_v8_deps/deps

"third_party/icu": "https://chromium.googlesource.com/chromium/deps/icu.git@364118a1d9da24bb5b770ac3d762ac144d6da5a4"
"third_party/icu": "https://chromium.googlesource.com/chromium/deps/icu.git@a622de35ac311c5ad390a7af80724634e5dc61ed"

Deps key and repo are equal, and ICU doesn't seem to be blocklisted:
https://chrome-internal.googlesource.com/v8/v8-internal/+/refs/heads/infra/config/definitions/incoming_rollers.star

Maybe some refactoring broke this?

Ideally the rollers should show which deps they are comparing. The current output doesn't really elucidate this.</content>
    </entry>
    <entry>
        <id>333426477</id>
        <title>DevTools: Show a prerendered main frame as "Main" on the performance tab</title>
        <author>
            <name>nh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333426477"/>
        <updated>1970-01-01T00:28:32.652Z</updated>
        <summary>-</summary>
        <content type="html">The performance tab shows a prerendered page as "Main" if recording starts after prerendering starts.

Repro steps:
1) Open https://prerender2-specrules.glitch.me/
2) Click "Add speculationrules"
3) Open DevTools performance tab
4) Start recording
5) Stop recording after a few seconds
6) DevTools shows https://prerender2-specrules.glitch.me/timer.html (prerendered page) as "Main" (see an attached screenshot)

Expected behavior:
- At the step (6), https://prerender2-specrules.glitch.me/ should be shown as "Main".

I confirmed this on 125.0.6407.0 (canary) and 123.0.6312.107 (stable) on macOS.</content>
    </entry>
    <entry>
        <id>333445542</id>
        <title>Plugin should warn about forgotten Trace() dispatch of TraceWrapperV8Reference / v8::TracedReference</title>
        <author>
            <name>ml...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445542"/>
        <updated>1970-01-01T00:28:32.651Z</updated>
        <summary>-</summary>
        <content type="html">Plugin should warn about forgotten Trace() dispatch of TraceWrapperV8Reference / v8::TracedReference</content>
    </entry>
    <entry>
        <id>333496934</id>
        <title>After the long-press triggered Link-Preview, mouse release triggers normal navigation</title>
        <author>
            <name>to...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333496934"/>
        <updated>1970-01-01T00:28:32.650Z</updated>
        <summary>-</summary>
        <content type="html">Current behavior on the long press preview would not be expected.
After a long press, LinkPreview is shown, but when users release the mouse button, it triggers an usual navigation that cancels the preview.
This is not expected, and we would ignore the case to avoid it.</content>
    </entry>
    <entry>
        <id>333423685</id>
        <title>Simplify DevTools testing infrastructure</title>
        <author>
            <name>pf...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423685"/>
        <updated>1970-01-01T00:28:32.649Z</updated>
        <summary>-</summary>
        <content type="html">On top of the actual test frameworks karma and mocha, we have 5 test runners, 2 web servers (not including karma's), and 23 npm scripts for running tests. Let's simplify!</content>
    </entry>
    <entry>
        <id>333424125</id>
        <title>[Blink CSS]: 1 regressions in blink_perf.css</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424125"/>
        <updated>1970-01-01T00:28:32.649Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283994:1284019:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=8944227d-87a1-40e0-9d35-642825c3b53e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=8944227d-87a1-40e0-9d35-642825c3b53e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.css/ModifySelectorText/ModifySelectorText.html
       17.12%: 232669.6 -&gt; 192847.94 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.css/ModifySelectorText/ModifySelectorText.html
       17.12%: 232669.6 -&gt; 192847.94 

Regressions grouped by blink_perf.css includes data from the following benchmarks with listed owners:
  blink_perf.css: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333413832</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413832"/>
        <updated>1970-01-01T00:28:32.648Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284022:1284035:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=adba486f-6ec9-4271-a5fe-b4df28a664f7

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=adba486f-6ec9-4271-a5fe-b4df28a664f7

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.bindings/indexed-getter/indexed-getter.html
        1.99%: 8530.53 -&gt; 8360.734 

Top 1 affected measurements in android-pixel2_webview-perf:
  - blink_perf.bindings/indexed-getter/indexed-getter.html
        1.99%: 8530.53 -&gt; 8360.734 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333426475</id>
        <title>Create specific flags + remove usage of CHROME_HEADLESS from tests</title>
        <author>
            <name>ed...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333426475"/>
        <updated>1970-01-01T00:28:32.646Z</updated>
        <summary>-</summary>
        <content type="html">See https://crrev.com/c/5428352 and b/330839958 for context.

Currently, tests on buildbot, chrome performance telemetry tests, and tast tests have CHROME_HEADLESS set.

The direct reason for tast is to make sure crash dumps are taken (and not uploaded): https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/tast-tests/src/go.chromium.org/tast-tests/cros/local/chrome/internal/setup/restart.go;l=318;drc=243b6ce0b989fd1d8060f02251bf14ae4ff81ad2

Here's the relevant code w.r.t. crash dumps: https://source.chromium.org/chromium/chromium/src/+/main:components/crash/core/app/crashpad.cc;l=257;drc=d7d69375c25df2dc3980e6a4edc5d032ec940efc

It looks like CHROME_HEADLESS is being used as an 'unattended test' setting. There is some effect on logging as well: https://source.chromium.org/chromium/chromium/src/+/main:chrome/common/logging_chrome.cc;l=507;drc=d7d69375c25df2dc3980e6a4edc5d032ec940efc

CHROME_HEADLESS looks to be set for chromium side functional tests: https://source.chromium.org/chromium/chromium/src/+/main:testing/test_env.py;l=344;drc=9c09695e0882d1672639d826bfe982e8daac4c5b and chromium side performance tests: https://source.chromium.org/chromium/chromium/src/+/main:testing/scripts/run_performance_tests.py;l=517;drc=20397808bbfa85b0df364193f2508b0dc268b4bb

So it looks to me like this variable is being used as a 'test environment' flag. AFAICT it only affects the logging behaviour, crash dump behaviour, and native occlusion behaviour in chromium, so I /guess/ that ignoring native occlusion the perf will not be very different. And native occlusion is currently only enabled for lacros.

IMO, we should create separate flags for each of these behaviours and stop specifying CHROME_HEADLESS in the tests (and just leave CHROME_HEADLESS for chromedriver etc). For native occlusion specifically, we probably want it on for most e2e (tast) perf tests and off for most functional tests and smaller scale perf tests, so we need a flag anyway that we can set from tast. If/when we stop specifying CHROME_HEADLESS in tests, we can remove this and just specify the feature directly.

For the logging and crash dump behaviour, I think we can add a flag or feature to control both of them, too. After that, we can remove setting CHROME_HEADLESS for buildbot, chrome perf telemetry tests, and tast tests. Note that we probably still need to have these settings controlled by CHROME_HEADLESS since that can be set by external programs and probably things depend upon its behaviour.</content>
    </entry>
    <entry>
        <id>333487749</id>
        <title>Null-dereference READ in blink::css_longhand::BackgroundColor::ColorIncludingFallback</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333487749"/>
        <updated>1970-01-01T00:28:32.646Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=6340184049123328

Fuzzer: inferno_twister
Job Type: linux_asan_content_shell_drt
Platform Id: linux

Crash Type: Null-dereference READ
Crash Address: 0x000000000018
Crash State:
  blink::css_longhand::BackgroundColor::ColorIncludingFallback
  blink::ComputedStyle::HasBackground
  blink::LayoutBoxModelObject::BackgroundTransfersToView
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_content_shell_drt&amp;range=1275921:1275934

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=6340184049123328

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>333487748</id>
        <title>paint_op_buffer_fuzzer: Null-dereference READ in cc::PaintOpReader::Read</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333487748"/>
        <updated>1970-01-01T00:28:32.645Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4573982196957184

Fuzzing Engine: libFuzzer
Fuzz Target: paint_op_buffer_fuzzer
Job Type: libfuzzer_chrome_asan
Platform Id: linux

Crash Type: Null-dereference READ
Crash Address: 0x000000000008
Crash State:
  cc::PaintOpReader::Read
  cc::ClipPathOp::Deserialize
  cc::PaintOp* cc::Deserialize&lt;cc::ClipPathOp&gt;
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan&amp;range=1283876:1283906

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4573982196957184

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>333408168</id>
        <title>100</title>
        <author>
            <name>ak...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333408168"/>
        <updated>1970-01-01T00:28:32.644Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 5000
2. 
3. 

# Problem Description
5000

# Summary
100

# Additional Data
Category: Network / Downloading \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333424901</id>
        <title>On borderless IWA, window.close() can't close the window.</title>
        <author>
            <name>fo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424901"/>
        <updated>1970-01-01T00:28:32.644Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. on chromebook, open a borderless iwa
2. use window.close() to close the app.

# Problem Description
On chromebook, a borderless app can't be closed by calling window.close().

# Additional Comments
Componet tag: UI&gt;Browser&gt;WebAppInstalls&gt;Isolated"

# Summary
On borderless IWA, window.close() can't close the window.

# Additional Data
Category: API \
Chrome Channel: Dev \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333425962</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333425962"/>
        <updated>1970-01-01T00:28:32.643Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283832:1283863:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9d95cd66-847b-42c5-b09a-1a1a7ae37db6

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9d95cd66-847b-42c5-b09a-1a1a7ae37db6

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/text_75000_pixels_per_second
        1.07%: 33426.76 -&gt; 33785.99 

Top 1 affected measurements in android-pixel6-perf:
  - rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/text_75000_pixels_per_second
        1.07%: 33426.76 -&gt; 33785.99 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333424123</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424123"/>
        <updated>1970-01-01T00:28:32.640Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283611:1283674:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=446dea24-8715-41ba-9783-6bbf0398800e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=446dea24-8715-41ba-9783-6bbf0398800e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/blink_perf.parser/textarea-parsing/textarea-parsing.html
        4.30%: 936.60547 -&gt; 896.2924 

Top 1 affected measurements in lacros-x86-perf:
  - blink_perf.parser/textarea-parsing/textarea-parsing.html
        4.30%: 936.60547 -&gt; 896.2924 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333460767</id>
        <title>CHECK failure: false. InlineCursor({Line #descendants=4 LTR Standard}) {Box #descendants=3 Stan</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333460767"/>
        <updated>1970-01-01T00:28:32.635Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5196160586678272

Fuzzer: bj_broddelwerk
Job Type: linux_asan_content_shell_drt
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  false. InlineCursor({Line #descendants=4 LTR Standard}) {Box #descendants=3 Stan
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_content_shell_drt&amp;range=1084462:1084486

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5196160586678272

Additional requirements: Requires Gestures

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>333475413</id>
        <title>createImageBitmap(Blob) crushes 16-bit png to 8-bit</title>
        <author>
            <name>po...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333475413"/>
        <updated>1970-01-01T00:28:32.633Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Fetch a Blob of 16-bit png
2. Call createImageBitmap(blob)
3. Create a WebGL context and call texImage2D(..., RGBA16F, ..., bitmap)

See linked internal issue for my actual code.

# Problem Description
Expected behavior: The texture should have 10~16 bits of precision (i.e. RGBA16F)
Actual behavior: The texture only has 8 bits of precision (like an RGBA8)

# Additional Comments
Known workaround: Create an HTMLImageElement from the blob, then call createImageBitmap(theImageElement) instead

Proposed fix: Replace ImageDecoder::kDefaultBitDepth in [DecodeImageOnDecoderThread] with ImageDecoder::kHighBitDepthToHalfFloat

[DecodeImageOnDecoderThread]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/canvas/imagebitmap/image_bitmap_factories.cc;l=373;drc=a169ebabcd533a7f5489ac17c1df80f8b89c6fee

# Summary
createImageBitmap(Blob) crushes 16-bit png to 8-bit

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>333424900</id>
        <title>CTS regression on Pixel 4: webgpu:shader,execution,expression,call,builtin,textureSampleBias:arrayed_2d_coords:</title>
        <author>
            <name>ka...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424900"/>
        <updated>1970-01-01T00:28:32.632Z</updated>
        <summary>-</summary>
        <content type="html">Test:
`gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:shader,execution,expression,call,builtin,textureSampleBias:arrayed_2d_coords:`

First failure:
https://ci.chromium.org/ui/p/chromium/builders/ci/Dawn%20Android%20arm%20DEPS%20Release%20(Pixel%204)/46430/overview

Blamelist points to a CTS roll, with this log:
https://chromium.googlesource.com/external/github.com/gpuweb/cts/+log/ffcbe428636d..7131e1993a81

Brandon, I think you have a Pixel 4 (and you landed some PRs in this range), could you help figure out what is happening?</content>
    </entry>
    <entry>
        <id>333424897</id>
        <title>MemorySanitizer: use-of-uninitialized-value in syncer::ModelTypeController::OnDelegateStarted(...) components/sync/service/model_type_controller.cc:387</title>
        <author>
            <name>dc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424897"/>
        <updated>1970-01-01T00:28:32.630Z</updated>
        <summary>-</summary>
        <content type="html">Repro steps:

1. Build on Linux with:

  ```
  dcheck_always_on = false
  is_component_build = false
  is_debug = false
  is_msan = true
  msan_track_origins = 2
  use_remoteexec = true
  use_siso = true  # Optional
  msan_eager_checks = true
  symbol_level = 1
  ```

2. Run `testing/xvfb.py out/msan/components_unittests --gtest_filter=ModelTypeControllerTest.ReportErrorWhileStarting`

Result:

```
==3439988==WARNING: MemorySanitizer: use-of-uninitialized-value
    #0 0x55bf046272e6 in syncer::ModelTypeController::OnDelegateStarted(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;) components/sync/service/model_type_controller.cc:387:18
    #1 0x55bf0462a788 in Invoke&lt;void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt;), const base::WeakPtr&lt;syncer::ModelTypeController&gt; &amp;, std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt; &gt; base/functional/bind_internal.h:738:12
    #2 0x55bf0462a788 in MakeItSo&lt;void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;syncer::ModelTypeController&gt; &gt;, std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt; &gt; base/functional/bind_internal.h:954:5
    #3 0x55bf0462a788 in RunImpl&lt;void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;syncer::ModelTypeController&gt; &gt;, 0UL&gt; base/functional/bind_internal.h:1067:14
    #4 0x55bf0462a788 in base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (syncer::ModelTypeController::*&amp;&amp;)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;), base::WeakPtr&lt;syncer::ModelTypeController&gt;&amp;&amp;&gt;, base::internal::BindState&lt;true, true, false, void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;), base::WeakPtr&lt;syncer::ModelTypeController&gt;&gt;, void (std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;)&gt;::RunOnce(base::internal::BindStateBase*, std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;&amp;&amp;) base/functional/bind_internal.h:980:12
    #5 0x55bee05fe0e6 in base::OnceCallback&lt;void (std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;)&gt;::Run(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;) &amp;&amp; base/functional/callback.h:156:12
    #6 0x55bee0618114 in syncer::ModelTypeControllerTest_ReportErrorWhileStarting_Test::TestBody() components/sync/service/model_type_controller_unittest.cc:467:29
    #7 0x55beecf81337 in HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; third_party/googletest/src/googletest/src/gtest.cc
    #8 0x55beecf81337 in testing::Test::Run() third_party/googletest/src/googletest/src/gtest.cc:2710:5
    #9 0x55beecf84137 in testing::TestInfo::Run() third_party/googletest/src/googletest/src/gtest.cc:2856:11
    #10 0x55beecf87294 in testing::TestSuite::Run() third_party/googletest/src/googletest/src/gtest.cc:3034:30
    #11 0x55beecfbf864 in testing::internal::UnitTestImpl::RunAllTests() third_party/googletest/src/googletest/src/gtest.cc:5937:44
    #12 0x55beecfbe25c in HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; third_party/googletest/src/googletest/src/gtest.cc
    #13 0x55beecfbe25c in testing::UnitTest::Run() third_party/googletest/src/googletest/src/gtest.cc:5516:10
    #14 0x55bf01cac891 in base::TestSuite::Run() base/test/test_suite.cc:420:16
    #15 0x55bf0f4ecb4e in content::UnitTestTestSuite::Run() content/public/test/unittest_test_suite.cc:191:23
    #16 0x55bf01cbea42 in Run base/functional/callback.h:156:12
    #17 0x55bf01cbea42 in RunTestSuite base/test/launcher/unit_test_launcher.cc:183:38
    #18 0x55bf01cbea42 in base::(anonymous namespace)::LaunchUnitTestsInternal(base::OnceCallback&lt;int ()&gt;, unsigned long, int, unsigned long, bool, base::RepeatingCallback&lt;void ()&gt;, base::OnceCallback&lt;void ()&gt;) base/test/launcher/unit_test_launcher.cc:263:10
    #19 0x55bf01cbe173 in base::LaunchUnitTests(int, char**, base::OnceCallback&lt;int ()&gt;, unsigned long) base/test/launcher/unit_test_launcher.cc:311:10
    #20 0x7faf0fe456c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #21 0x7faf0fe45784 in __libc_start_main csu/../csu/libc-start.c:360:3
    #22 0x55bed47e6029 in _start (/usr/local/google/home/dcheng/src/chrome/src/out/msan/components_unittests+0x6cf9029) (BuildId: 21ec553c999f06a6)

  Uninitialized value was stored to memory at
    #0 0x55bf046272df in syncer::ModelTypeController::OnDelegateStarted(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;) components/sync/service/model_type_controller.cc:387:33
    #1 0x55bf0462a788 in Invoke&lt;void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt;), const base::WeakPtr&lt;syncer::ModelTypeController&gt; &amp;, std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt; &gt; base/functional/bind_internal.h:738:12
    #2 0x55bf0462a788 in MakeItSo&lt;void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;syncer::ModelTypeController&gt; &gt;, std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt; &gt; base/functional/bind_internal.h:954:5
    #3 0x55bf0462a788 in RunImpl&lt;void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt; &gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;syncer::ModelTypeController&gt; &gt;, 0UL&gt; base/functional/bind_internal.h:1067:14
    #4 0x55bf0462a788 in base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (syncer::ModelTypeController::*&amp;&amp;)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;), base::WeakPtr&lt;syncer::ModelTypeController&gt;&amp;&amp;&gt;, base::internal::BindState&lt;true, true, false, void (syncer::ModelTypeController::*)(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;), base::WeakPtr&lt;syncer::ModelTypeController&gt;&gt;, void (std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;)&gt;::RunOnce(base::internal::BindStateBase*, std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;&amp;&amp;) base/functional/bind_internal.h:980:12
    #5 0x55bee05fe0e6 in base::OnceCallback&lt;void (std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;)&gt;::Run(std::__Cr::unique_ptr&lt;syncer::DataTypeActivationResponse, std::__Cr::default_delete&lt;syncer::DataTypeActivationResponse&gt;&gt;) &amp;&amp; base/functional/callback.h:156:12
    #6 0x55bee0618114 in syncer::ModelTypeControllerTest_ReportErrorWhileStarting_Test::TestBody() components/sync/service/model_type_controller_unittest.cc:467:29
    #7 0x55beecf81337 in HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; third_party/googletest/src/googletest/src/gtest.cc
    #8 0x55beecf81337 in testing::Test::Run() third_party/googletest/src/googletest/src/gtest.cc:2710:5
    #9 0x55beecf84137 in testing::TestInfo::Run() third_party/googletest/src/googletest/src/gtest.cc:2856:11
    #10 0x55beecf87294 in testing::TestSuite::Run() third_party/googletest/src/googletest/src/gtest.cc:3034:30
    #11 0x55beecfbf864 in testing::internal::UnitTestImpl::RunAllTests() third_party/googletest/src/googletest/src/gtest.cc:5937:44
    #12 0x55beecfbe25c in HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; third_party/googletest/src/googletest/src/gtest.cc
    #13 0x55beecfbe25c in testing::UnitTest::Run() third_party/googletest/src/googletest/src/gtest.cc:5516:10
    #14 0x55bf01cac891 in base::TestSuite::Run() base/test/test_suite.cc:420:16
    #15 0x55bf0f4ecb4e in content::UnitTestTestSuite::Run() content/public/test/unittest_test_suite.cc:191:23
    #16 0x55bf01cbea42 in Run base/functional/callback.h:156:12
    #17 0x55bf01cbea42 in RunTestSuite base/test/launcher/unit_test_launcher.cc:183:38
    #18 0x55bf01cbea42 in base::(anonymous namespace)::LaunchUnitTestsInternal(base::OnceCallback&lt;int ()&gt;, unsigned long, int, unsigned long, bool, base::RepeatingCallback&lt;void ()&gt;, base::OnceCallback&lt;void ()&gt;) base/test/launcher/unit_test_launcher.cc:263:10
    #19 0x55bf01cbe173 in base::LaunchUnitTests(int, char**, base::OnceCallback&lt;int ()&gt;, unsigned long) base/test/launcher/unit_test_launcher.cc:311:10
    #20 0x7faf0fe456c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16

  Uninitialized value was created by a heap allocation
    #0 0x55bed487137c in operator new(unsigned long) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/msan/msan_new_delete.cpp:51:35
    #1 0x55bee062a8a5 in testing::internal::TestFactoryImpl&lt;syncer::ModelTypeControllerTest_ReportErrorWhileStarting_Test&gt;::CreateTest() third_party/googletest/src/googletest/include/gtest/internal/gtest-internal.h:456:40
    #2 0x55beecf83f65 in HandleExceptionsInMethodIfSupported&lt;testing::internal::TestFactoryBase, testing::Test *&gt; third_party/googletest/src/googletest/src/gtest.cc
    #3 0x55beecf83f65 in testing::TestInfo::Run() third_party/googletest/src/googletest/src/gtest.cc:2846:22
    #4 0x55beecf87294 in testing::TestSuite::Run() third_party/googletest/src/googletest/src/gtest.cc:3034:30
    #5 0x55beecfbf864 in testing::internal::UnitTestImpl::RunAllTests() third_party/googletest/src/googletest/src/gtest.cc:5937:44
    #6 0x55beecfbe25c in HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; third_party/googletest/src/googletest/src/gtest.cc
    #7 0x55beecfbe25c in testing::UnitTest::Run() third_party/googletest/src/googletest/src/gtest.cc:5516:10
    #8 0x55bf01cac891 in base::TestSuite::Run() base/test/test_suite.cc:420:16
    #9 0x55bf0f4ecb4e in content::UnitTestTestSuite::Run() content/public/test/unittest_test_suite.cc:191:23
    #10 0x55bf01cbea42 in Run base/functional/callback.h:156:12
    #11 0x55bf01cbea42 in RunTestSuite base/test/launcher/unit_test_launcher.cc:183:38
    #12 0x55bf01cbea42 in base::(anonymous namespace)::LaunchUnitTestsInternal(base::OnceCallback&lt;int ()&gt;, unsigned long, int, unsigned long, bool, base::RepeatingCallback&lt;void ()&gt;, base::OnceCallback&lt;void ()&gt;) base/test/launcher/unit_test_launcher.cc:263:10
    #13 0x55bf01cbe173 in base::LaunchUnitTests(int, char**, base::OnceCallback&lt;int ()&gt;, unsigned long) base/test/launcher/unit_test_launcher.cc:311:10
    #14 0x7faf0fe456c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
```

The root cause is pretty straightforward, though it's not clear to me what the right fix is. `model_stop_metadata_fate_` is not ever initialized with a default value here: https://source.chromium.org/chromium/chromium/src/+/main:components/sync/service/model_type_controller.h;l=198;drc=2182c9e216850b082b62a676587b5dcbb3f34c28

And I don't know the unit test well enough to understand if this is because the unit test fails to model how sync dispatches events in actual official builds, or if this is a real defect that needs to be fixed by initializing it to something.</content>
    </entry>
    <entry>
        <id>333457544</id>
        <title>v8_wasm_compile_fuzzer: Unreachable code in v8::internal::Simulator::InstructionDecode</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333457544"/>
        <updated>1970-01-01T00:28:32.629Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5160732459991040

Fuzzing Engine: libFuzzer
Fuzz Target: v8_wasm_compile_fuzzer
Job Type: v8_libfuzzer_asan_linux_arm_sim
Platform Id: linux

Crash Type: Unreachable code
Crash Address: 
Crash State:
  v8::internal::Simulator::InstructionDecode
  v8::internal::Simulator::CallInternal
  v8::internal::Simulator::CallImpl
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=v8_libfuzzer_asan_linux_arm_sim&amp;range=1283981:1284000

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5160732459991040

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>333418167</id>
        <title> The frequency of WebView crashes has increased following the update to version 123.0.6312.40</title>
        <author>
            <name>gj...@toss.im</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418167"/>
        <updated>1970-01-01T00:28:32.628Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name: Various Device(More than 100 devices are experiencing this issue)

Android OS version: 10 ~ 14

Android System WebView version: 123.0.6312.40, 123.0.6312.42

Application: viva.republica.toss

Application version: Regardless of app version, the latest version is 5.158.0

Steps to reproduce:

During the use of WebView, it crashes for an unknown reason. It doesn't always occur at specific timings but is experienced by a minority of users, making it difficult to clearly understand the reproduction process. There were no problems in the past, but since April 3rd, the number of crashes has surged, and currently, there are more than 40,000 recorded crashes.


The stack trace recorded at the time of the problem is as follows:

backtrace:
  #00  pc 0x000000000341a5a4  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #01  pc 0x0000000006491528  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #02  pc 0x0000000006ea49c8  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #03  pc 0x0000000004706ea4  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #04  pc 0x0000000002c26320  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #05  pc 0x00000000064c183c  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #06  pc 0x0000000003f60f58  /data/app/~~LNhfu0vkadceWRjUzYPmHg==/com.google.android.trichromelibrary_626111933-hdiknmeSsTVQLQSvkaTs3Q==/base.apk!libmonochrome_64.so (BuildId: b6840e49b4ed341f5f079f8027835baddbb8ce2f)
  #07  pc 0x0000000000018028  /system/lib64/libutils.so (android::Looper::pollInner(int)+1064)
  #08  pc 0x0000000000017b9c  /system/lib64/libutils.so (android::Looper::pollOnce(int, int*, int*, void**)+116)
  #09  pc 0x0000000000168b34  /system/lib64/libandroid_runtime.so (android::android_os_MessageQueue_nativePollOnce(_JNIEnv*, _jobject*, long, int)+48)
  #10  pc 0x0000000000330514  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (art_jni_trampoline+116)
  #11  pc 0x0000000000a494f0  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (android.os.MessageQueue.next+304)
  #12  pc 0x0000000000a45fa0  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (android.os.Looper.loopOnce+96)
  #13  pc 0x0000000000a45e98  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (android.os.Looper.loop+1112)
  #14  pc 0x0000000000780e70  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (android.app.ActivityThread.main+2432)
  #15  pc 0x000000000033ee80  /apex/com.android.art/lib64/libart.so (art_quick_invoke_static_stub+640)
  #16  pc 0x000000000037ff40  /apex/com.android.art/lib64/libart.so (_jobject* art::InvokeMethod&lt;(art::PointerSize)8&gt;(art::ScopedObjectAccessAlreadyRunnable const&amp;, _jobject*, _jobject*, _jobject*, unsigned long)+1556)
  #17  pc 0x000000000037f91c  /apex/com.android.art/lib64/libart.so (art::Method_invoke(_JNIEnv*, _jobject*, _jobject*, _jobjectArray*) (.__uniq.165753521025965369065708152063621506277)+32)
  #18  pc 0x00000000003366a8  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (art_jni_trampoline+120)
  #19  pc 0x00000000009be328  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run+136)
  #20  pc 0x00000000009c8620  /data/misc/apexdata/com.android.art/dalvik-cache/arm64/boot.oat (com.android.internal.os.ZygoteInit.main+3584)
  #21  pc 0x000000000033ee80  /apex/com.android.art/lib64/libart.so (art_quick_invoke_static_stub+640)
  #22  pc 0x00000000004e3440  /apex/com.android.art/lib64/libart.so (art::JValue art::InvokeWithVarArgs&lt;_jmethodID*&gt;(art::ScopedObjectAccessAlreadyRunnable const&amp;, _jobject*, _jmethodID*, std::__va_list)+728)
  #23  pc 0x000000000057c91c  /apex/com.android.art/lib64/libart.so (art::JNI&lt;true&gt;::CallStaticVoidMethodV(_JNIEnv*, _jclass*, _jmethodID*, std::__va_list)+156)
  #24  pc 0x00000000000c1c04  /system/lib64/libandroid_runtime.so (_JNIEnv::CallStaticVoidMethod(_jclass*, _jmethodID*, ...)+124)
  #25  pc 0x00000000000ce470  /system/lib64/libandroid_runtime.so (android::AndroidRuntime::start(char const*, android::Vector&lt;android::String8&gt; const&amp;, bool)+856)
  #26  pc 0x0000000000002570  /system/bin/app_process64 (main+1304)
  #27  pc 0x000000000004b930  /apex/com.android.runtime/lib64/bionic/libc.so (__libc_init+100)


Expected result: Crash Doesn't happen

Actual result: Sometimes Crash happens

Did this work before? (last working WebView version, or N/A)
Yes. 
Prior to April 3rd and under WebView version 123.0.6312.40, these crashes were not frequent.

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
</feed>