<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:32.924Z</updated>
    <entry>
        <id>333972294</id>
        <title>payment_web_app_manifest_fuzzer: Out-of-memory in payment_web_app_manifest_fuzzer</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333972294"/>
        <updated>1970-01-01T00:28:32.924Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5177731437232128

Fuzzing Engine: libFuzzer
Fuzz Target: payment_web_app_manifest_fuzzer
Job Type: libfuzzer_chrome_asan_debug
Platform Id: linux

Crash Type: Out-of-memory (exceeds 2560 MB)
Crash Address: 
Crash State:
  payment_web_app_manifest_fuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan_debug&amp;range=1064574:1064575

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5177731437232128

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>333926312</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926312"/>
        <updated>1970-01-01T00:28:32.924Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285727:1285764:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e8aef129-c2fc-41ef-a359-11d4b87619a2

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e8aef129-c2fc-41ef-a359-11d4b87619a2

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/css_animations_triggered_inline_style
        7.27%: 20.1376 -&gt; 21.601 

Top 1 affected measurements in android-pixel4_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/css_animations_triggered_inline_style
        7.27%: 20.1376 -&gt; 21.601 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926699</id>
        <title>paint_op_raster_fuzzer: Unexpected-exit in SkConic::BuildUnitArc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926699"/>
        <updated>1970-01-01T00:28:32.924Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4814533616402432

Fuzzing Engine: libFuzzer
Fuzz Target: paint_op_raster_fuzzer
Job Type: libfuzzer_chrome_asan_debug
Platform Id: linux

Crash Type: Unexpected-exit
Crash Address: 
Crash State:
  SkConic::BuildUnitArc
  SkConic::BuildUnitArc
  build_arc_conics
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan_debug&amp;range=1285150:1285197

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4814533616402432

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>333926698</id>
        <title>[V8 Memory Perf Sheriff]: 3 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926698"/>
        <updated>1970-01-01T00:28:32.924Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ba6f9cf4-d9a5-4d8d-a90c-143dd6dc99bb

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=ba6f9cf4-d9a5-4d8d-a90c-143dd6dc99bb
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ba6f9cf4-d9a5-4d8d-a90c-143dd6dc99bb

Top 3 regressions (out of 4, with 1 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:sweep_sum/browse_search/browse_search_google_india_2021
      118.19%: 7.8245000000000005 -&gt; 17.072499999999998 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt_max/browse_tools/browse_tools_docs_scrolling
       85.01%: 242.9135 -&gt; 449.42499999999995 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/v8:gc:cycle:young_avg/browse_search/browse_search_google_india_2021
       60.20%: 2.396 -&gt; 3.8385 ms

Top 3 affected measurements in win-10-perf:
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:sweep_sum/browse_search/browse_search_google_india_2021
      118.19%: 7.8245000000000005 -&gt; 17.072499999999998 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt_max/browse_tools/browse_tools_docs_scrolling
       85.01%: 242.9135 -&gt; 449.42499999999995 ms
  - v8.browsing_desktop/v8:gc:cycle:young_avg/browse_search/browse_search_google_india_2021
       60.20%: 2.396 -&gt; 3.8385 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333926311</id>
        <title>[Skia Desktop Memory Sheriff]: 27 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926311"/>
        <updated>1970-01-01T00:28:32.923Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=0ac12612-77ec-4564-ae8e-d91fccc78543

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=0ac12612-77ec-4564-ae8e-d91fccc78543
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0ac12612-77ec-4564-ae8e-d91fccc78543

Top 10 regressions (out of 27, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_media/load_media_facebook_photos_desktop_2020
    12179.23%: 241878.0 -&gt; 29700748.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_bubbles_2020
     9555.22%: 470866.0 -&gt; 45463170.5 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_lazors
     7096.30%: 202036.5 -&gt; 14539154.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_search/load_search_amazon_2018
     6565.30%: 436383.0 -&gt; 29086236.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/long_running_tools/long_running_tools_gmail-foreground
     5391.39%: 586557.0 -&gt; 32210140.5 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_search/load_search_yahoo_2018
     4869.46%: 289553.0 -&gt; 14389209.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/browse_media/browse_media_pinterest_2018
     4572.52%: 578374.5 -&gt; 27024673.5 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_social/load_social_instagram_2018
     4497.67%: 2546192.0 -&gt; 117065625.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_media/load_media_flickr_2018
     4420.62%: 857909.5 -&gt; 38782865.5 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/browse_news/browse_news_reddit_2020
     3576.03%: 1073902.5 -&gt; 39476971.5 sizeInBytes

Top 3 affected measurements in win-10-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_media/load_media_facebook_photos_desktop_2020
    12179.23%: 241878.0 -&gt; 29700748.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_bubbles_2020
     9555.22%: 470866.0 -&gt; 45463170.5 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_lazors
     7096.30%: 202036.5 -&gt; 14539154.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333886783</id>
        <title>[Desktop Power Perf Sheriff]: 14 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886783"/>
        <updated>1970-01-01T00:28:32.923Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fe334531-f820-4cb3-8f4b-5dbd8166fba6

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=fe334531-f820-4cb3-8f4b-5dbd8166fba6
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fe334531-f820-4cb3-8f4b-5dbd8166fba6

Top 7 regressions (out of 7, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/browse_media/browse_media_googleplaystore_2021
       64.38%: 0.3285 -&gt; 0.54 n%
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/play_media/play_media_soundcloud_2018
       43.81%: 0.26422999999999996 -&gt; 0.38 n%
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/browse_tools/browse_tools_autocad_2021
       39.01%: 0.4435 -&gt; 0.6165 n%
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_cnn_2020
       29.24%: 0.33 -&gt; 0.4265 n%
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/browse_tools/browse_tools_maps_2019
       26.06%: 0.401 -&gt; 0.5055000000000001 n%
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/load_social/load_social_pinterest_2019
       25.39%: 0.38 -&gt; 0.4765 n%
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/load_tools/load_tools_stackoverflow_2018
       25.09%: 0.271 -&gt; 0.33899999999999997 n%

Top 3 affected measurements in win-10-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/browse_media/browse_media_googleplaystore_2021
       64.38%: 0.3285 -&gt; 0.54 n%
  - system_health.common_desktop/cpu_time_percentage_avg/play_media/play_media_soundcloud_2018
       43.81%: 0.26422999999999996 -&gt; 0.38 n%
  - system_health.common_desktop/cpu_time_percentage_avg/browse_tools/browse_tools_autocad_2021
       39.01%: 0.4435 -&gt; 0.6165 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: charliea@chromium.org, chrome-speed-metrics-dev@chromium.org, sullivan@chromium.org, tdresser@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333760381</id>
        <title>[Graphics]: 89 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333760381"/>
        <updated>1970-01-01T00:28:32.923Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=93030b4a-963b-41fa-a4b8-f0173c09df7c

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=93030b4a-963b-41fa-a4b8-f0173c09df7c
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=93030b4a-963b-41fa-a4b8-f0173c09df7c

Top 10 regressions (out of 58, with 2 improvements) in this group:
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/canvas_10000_pixels_per_second
         inf%: 0.0 -&gt; 1.4167 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/web_animation_value_type_color
         inf%: 0.0 -&gt; 9.5 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/draw_image_not_pixel_aligned
         inf%: 0.0 -&gt; 2.5 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/text_scroll_input_one_per_vsync_plus_3000us
         inf%: 0.0 -&gt; 8.75 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/raf_canvas
         inf%: 0.0 -&gt; 7.0 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/text_hover_05000_pixels_per_second
         inf%: 0.0 -&gt; 25.0 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 8.96925 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/text_constant_full_page_raster_90000_pixels_per_second
         inf%: 0.0 -&gt; 7.58585 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/text_scroll_input_two_per_vsync_plus_0us
         inf%: 0.0 -&gt; 8.0 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/text_scroll_input_one_per_vsync_plus_0us
         inf%: 0.0 -&gt; 7.0 unitless

Top 3 affected measurements in win-10-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/canvas_10000_pixels_per_second
         inf%: 0.0 -&gt; 1.4167 unitless
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/web_animation_value_type_color
         inf%: 0.0 -&gt; 9.5 unitless
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/draw_image_not_pixel_aligned
         inf%: 0.0 -&gt; 2.5 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333976540</id>
        <title>[Chromium Perf Motionmark Sheriff]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976540"/>
        <updated>1970-01-01T00:28:32.923Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d0dd9fc3-a5bb-4a12-bf9a-0a574781a48c

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=d0dd9fc3-a5bb-4a12-bf9a-0a574781a48c
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d0dd9fc3-a5bb-4a12-bf9a-0a574781a48c

Top 1 regressions (out of 2, with 1 improvements) in this group:
  - ChromiumPerf/win-10-perf/rendering.desktop/motionmark/motionmark_ramp_images
       30.75%: 146.7988 -&gt; 101.66335 unitless

Top 1 affected measurements in win-10-perf:
  - rendering.desktop/motionmark/motionmark_ramp_images
       30.75%: 146.7988 -&gt; 101.66335 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333926697</id>
        <title>[V8 Perf Sheriff]: 4 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926697"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ed4a6395-9565-45c6-a760-ab3d1dfa1e3d

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=ed4a6395-9565-45c6-a760-ab3d1dfa1e3d
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ed4a6395-9565-45c6-a760-ab3d1dfa1e3d

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_docs_scrolling
       85.34%: 241.6085 -&gt; 447.79600000000005 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs_max/browse_tools/browse_tools_docs_scrolling
       47.51%: 39.741 -&gt; 58.622745 ms

Top 2 affected measurements in win-10-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_docs_scrolling
       85.34%: 241.6085 -&gt; 447.79600000000005 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs_max/browse_tools/browse_tools_docs_scrolling
       47.51%: 39.741 -&gt; 58.622745 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333971739</id>
        <title>[Skia Desktop Memory Sheriff]: 5 regressions in memory.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971739"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9502837d-b07d-4479-959a-f91fec91002c

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=9502837d-b07d-4479-959a-f91fec91002c
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9502837d-b07d-4479-959a-f91fec91002c

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/memory.desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/TrivialCanvasPageSharedPageState
    12062.57%: 91520.5 -&gt; 11131243.0 sizeInBytes
  - ChromiumPerf/win-10-perf/memory.desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/TrivialWebGLPageSharedPageState
     6663.58%: 91798.5 -&gt; 6208860.5 sizeInBytes

Top 2 affected measurements in win-10-perf:
  - memory.desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/TrivialCanvasPageSharedPageState
    12062.57%: 91520.5 -&gt; 11131243.0 sizeInBytes
  - memory.desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/TrivialWebGLPageSharedPageState
     6663.58%: 91798.5 -&gt; 6208860.5 sizeInBytes

Regressions grouped by memory.desktop includes data from the following benchmarks with listed owners:
  memory.desktop: lizeb@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333971738</id>
        <title>[V8 Perf Sheriff]: 4 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971738"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286080:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f0163448-9c76-46aa-bec2-96a4fa8ded1f

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=f0163448-9c76-46aa-bec2-96a4fa8ded1f
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f0163448-9c76-46aa-bec2-96a4fa8ded1f

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop-future/V8-Only:duration_avg/browse_tools/browse_tools_docs_scrolling
       22.95%: 2757.8695 -&gt; 3390.7754999999997 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop-future/IC:duration_avg/browse_tools/browse_tools_docs_scrolling
       17.37%: 71.5675 -&gt; 83.997 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop-future/JavaScript:duration_avg/browse_tools/browse_tools_docs_scrolling
       16.21%: 696.611 -&gt; 809.561 ms

Top 3 affected measurements in win-10-perf:
  - v8.browsing_desktop-future/V8-Only:duration_avg/browse_tools/browse_tools_docs_scrolling
       22.95%: 2757.8695 -&gt; 3390.7754999999997 ms
  - v8.browsing_desktop-future/IC:duration_avg/browse_tools/browse_tools_docs_scrolling
       17.37%: 71.5675 -&gt; 83.997 ms
  - v8.browsing_desktop-future/JavaScript:duration_avg/browse_tools/browse_tools_docs_scrolling
       16.21%: 696.611 -&gt; 809.561 ms

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: almuthanna@chromium.org, mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286080
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333957352</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333957352"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286040:1286092:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d5c729e4-11a3-447f-a539-2852aa2b55fb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d5c729e4-11a3-447f-a539-2852aa2b55fb

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_espn.html
        2.45%: 1.9990001 -&gt; 2.048 

Top 1 affected measurements in android-pixel6-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_espn.html
        2.45%: 1.9990001 -&gt; 2.048 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333962762</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962762"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285815:1285843:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=aaf4aff9-9082-4721-946a-1a2313fc2e52

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=aaf4aff9-9082-4721-946a-1a2313fc2e52
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=aaf4aff9-9082-4721-946a-1a2313fc2e52

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/blink_perf.dom/insert-text-with-dir-auto/insert-text-with-dir-auto.html
        4.38%: 140.79291 -&gt; 134.6227 

Top 1 affected measurements in linux-perf:
  - blink_perf.dom/insert-text-with-dir-auto/insert-text-with-dir-auto.html
        4.38%: 140.79291 -&gt; 134.6227 

Regressions grouped by blink_perf.dom includes data from the following benchmarks with listed owners:
  blink_perf.dom: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926696</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926696"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286113:1286124:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=42382373-0e15-4716-adf1-92c26eb985d2

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=42382373-0e15-4716-adf1-92c26eb985d2

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop-future/Compile:duration_avg/browse_media/browse_media_youtubetv_watch_2020
        4.31%: 75.2415 -&gt; 78.487 

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - v8.browsing_desktop-future/Compile:duration_avg/browse_media/browse_media_youtubetv_watch_2020
        4.31%: 75.2415 -&gt; 78.487 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333962761</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962761"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285708:1285737:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a8ac5d97-fd86-4734-92af-8187f0a9017a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a8ac5d97-fd86-4734-92af-8187f0a9017a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.dom/dom-parts-api-flat-append/dom-parts-api-flat-append.html
        5.12%: 5.5015 -&gt; 5.783 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.dom/dom-parts-api-flat-append/dom-parts-api-flat-append.html
        5.12%: 5.5015 -&gt; 5.783 

Regressions grouped by blink_perf.dom includes data from the following benchmarks with listed owners:
  blink_perf.dom: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886782</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886782"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285928:1285983:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c4ee98d3-e7ab-4bbc-b415-20b2ee758731

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c4ee98d3-e7ab-4bbc-b415-20b2ee758731

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/v8.browsing_mobile/v8:gc:cycle:young_avg/browse_media/browse_media_tiktok_infinite_scroll_2021
       19.92%: 3.72675 -&gt; 4.469 

Top 1 affected measurements in android-pixel6-perf:
  - v8.browsing_mobile/v8:gc:cycle:young_avg/browse_media/browse_media_tiktok_infinite_scroll_2021
       19.92%: 3.72675 -&gt; 4.469 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886781</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886781"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285708:1285737:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f8905722-2153-4416-9981-ccf1dc8357c8

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f8905722-2153-4416-9981-ccf1dc8357c8

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.dom/dom-parts-api-nested-append/dom-parts-api-nested-append.html
        5.12%: 5.5015 -&gt; 5.783 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.dom/dom-parts-api-nested-append/dom-parts-api-nested-append.html
        5.12%: 5.5015 -&gt; 5.783 

Regressions grouped by blink_perf.dom includes data from the following benchmarks with listed owners:
  blink_perf.dom: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333954422</id>
        <title>Inconsistent Web USB Communication on Windows Machines</title>
        <author>
            <name>sa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333954422"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Just simpty connect and click start button to start the communications in my web app
2. 
3. 

# Problem Description
I use the web usb for communication with the usb device having three sensors. It working fine on some of the windows and all mac os machines. But in some windows machine it get lags and sometimes works fine in same machine. I capture the data continuously. So what is the problem in this.
The code which is use is below :
const CMD1 = new Uint8Array([78, 84, 83, 83, 84, 65, 82, 84, 76, 238, 167, 78, 84, 69]);

const CMD2 = new Uint8Array([78, 84, 83, 83, 84, 65, 82, 84, 68, 40, 166, 78, 84, 69]);

var port = null;
port = await navigator.serial.requestPort();
await port.open({
baudRate: 115200
});
var selectedDevice = port.getInfo();
if (selectedDevice.usbProductId != 10 || selectedDevice.usbVendorId != 1240) {
const { writable, readable } = port;
await writer.write(CMD1);
await writer.write(CMD2);
writer = writable.getWriter();
reader = readable.getReader();
while (true) {
startLoopTimer();
const {
value,
done
} = await reader.read();
if (done) break;
console.log('Received data:', value);
}

My device details showing in chrome://device-log is:-
SerialEvent[11:05:11] Serial device added: path=COM5 instance_id=USB\VID_04D8&amp;PID_000A\5&amp;2C179895&amp;0&amp;2 vid=04D8 pid=000A

USBUser[11:05:11] USB device added: path=\?\usb#vid_04d8&amp;pid_000a#5&amp;2c179895&amp;0&amp;2#{a5dcbf10-6530-11d2-901f-00c04fb951ed} vendor=1240 "Microchip Technology Inc.", product=10 "Simple CDC Device Demo", serial="", driver="usbser", guid=f02c59af-8c78-431d-888b-6a987c1ed8e8

SerialEvent[11:05:10] Serial device removed: path=COM5

USBUser[11:05:10] USB device removed: path=\?\usb#vid_04d8&amp;pid_000a#5&amp;2c179895&amp;0&amp;2#{a5dcbf10-6530-11d2-901f-00c04fb951ed} guid=3959900e-8309-4393-9be0-8c65dde53689

# Additional Comments
The issue is happening on most Windows machines with 8GB of RAM.

# Summary
Inconsistent Web USB Communication on Windows Machines

# Custom Questions
#### Which component does this fall under?
Blink&gt;Javascript

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
undefined

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333971737</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971737"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285727:1285764:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=51387286-6d66-44f4-8ee5-2fee44ae487b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=51387286-6d66-44f4-8ee5-2fee44ae487b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.parser/html-parser/html-parser.html
       11.30%: 532.80005 -&gt; 593.02 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.parser/html-parser/html-parser.html
       11.30%: 532.80005 -&gt; 593.02 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926310</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926310"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285708:1285737:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f213dea9-7350-4aa5-b02c-8aa3304c3e01

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f213dea9-7350-4aa5-b02c-8aa3304c3e01

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_linkedin.html
        3.16%: 15.5855 -&gt; 16.078 

Top 1 affected measurements in android-pixel4_webview-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_linkedin.html
        3.16%: 15.5855 -&gt; 16.078 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886780</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886780"/>
        <updated>1970-01-01T00:28:32.922Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285833:1285853:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7237a10d-cb06-4335-b224-0f6c0ce0f1e4

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=7237a10d-cb06-4335-b224-0f6c0ce0f1e4
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7237a10d-cb06-4335-b224-0f6c0ce0f1e4

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/blink_perf.dom/insert-text-with-dir-auto/insert-text-with-dir-auto.html
        4.38%: 140.79291 -&gt; 134.6227 

Top 1 affected measurements in linux-perf:
  - blink_perf.dom/insert-text-with-dir-auto/insert-text-with-dir-auto.html
        4.38%: 140.79291 -&gt; 134.6227 

Regressions grouped by blink_perf.dom includes data from the following benchmarks with listed owners:
  blink_perf.dom: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333830037</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333830037"/>
        <updated>1970-01-01T00:28:32.921Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286040:1286092:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d26ef163-2858-4e34-a1f1-8f5e43919360

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d26ef163-2858-4e34-a1f1-8f5e43919360

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_techcrunch.html
        2.45%: 1.9990001 -&gt; 2.048 

Top 1 affected measurements in android-pixel6-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_techcrunch.html
        2.45%: 1.9990001 -&gt; 2.048 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333969578</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333969578"/>
        <updated>1970-01-01T00:28:32.921Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285708:1285737:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fe400233-7325-44a7-8735-c469fef0ba48

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fe400233-7325-44a7-8735-c469fef0ba48

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_espn.html
        3.16%: 15.5855 -&gt; 16.078 

Top 1 affected measurements in android-pixel4_webview-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_espn.html
        3.16%: 15.5855 -&gt; 16.078 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971736</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971736"/>
        <updated>1970-01-01T00:28:32.921Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285708:1285737:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=dc707855-f1ce-4029-a204-a4f0359aca03

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=dc707855-f1ce-4029-a204-a4f0359aca03

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_amazon.html
        3.16%: 15.5855 -&gt; 16.078 

Top 1 affected measurements in android-pixel4_webview-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_amazon.html
        3.16%: 15.5855 -&gt; 16.078 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333962760</id>
        <title>[Desktop Power Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962760"/>
        <updated>1970-01-01T00:28:32.920Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286119:1286119:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9f1d30a2-13bd-4efd-8b44-176e3cd72ef7

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=9f1d30a2-13bd-4efd-8b44-176e3cd72ef7
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9f1d30a2-13bd-4efd-8b44-176e3cd72ef7

Top 1 regressions (out of 4, with 3 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_2018
       80.50%: 0.323 -&gt; 0.583 n%

Top 1 affected measurements in win-10-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_2018
       80.50%: 0.323 -&gt; 0.583 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: charliea@chromium.org, chrome-speed-metrics-dev@chromium.org, sullivan@chromium.org, tdresser@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286124
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333830036</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333830036"/>
        <updated>1970-01-01T00:28:32.920Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286172:1286254:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=8b7f7914-3755-463c-b70a-1529606e1942

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=8b7f7914-3755-463c-b70a-1529606e1942

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/text_constant_full_page_raster_05000_pixels_per_second
       35.65%: 41648.02395 -&gt; 56496.18285 unitless

Top 1 affected measurements in android-pixel6-perf:
  - rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/text_constant_full_page_raster_05000_pixels_per_second
       35.65%: 41648.02395 -&gt; 56496.18285 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/946c2af84d656632f7a2857e6e409faf04f2d9e0..bcdfa5d8f49c59c82c469a23770c739e304453fa
  Chromium Commit Position: https://crrev.com/1286171..1286254
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/0567fc17863c733a58907e561ef2fdcba53c17f8..69eafa67829f10ed19856b44b304629571069661</content>
    </entry>
    <entry>
        <id>333981068</id>
        <title>PEFeedback Fred McCord
Cannot connect Moto Gpure phone to the Chromebook after a powerwash</title>
        <author>
            <name>jf...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333981068"/>
        <updated>1970-01-01T00:28:32.920Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. At the bottom right, select the time.
2.Select Settings .
3. Under "Connected devices," next to "Android phone," select Set up.
4. Confirm that you want to connect your phone and then enter your password.
5. Follow the steps. Once completed, you’ll get a confirmation on your phone.
6.On your Chromebook, under "Enabled," select which features you want to turn on.

# Problem Description
After doing the setup steps and going to verify, I click on verify, but nothing happens.

# Summary
PEFeedback Fred McCord
Cannot connect Moto Gpure phone to the Chromebook after a powerwash

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333962759</id>
        <title>paint_op_raster_fuzzer: Timeout in paint_op_raster_fuzzer</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962759"/>
        <updated>1970-01-01T00:28:32.919Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5188563663519744

Fuzzing Engine: libFuzzer
Fuzz Target: paint_op_raster_fuzzer
Job Type: libfuzzer_chrome_asan_debug
Platform Id: linux

Crash Type: Timeout (exceeds 60 secs)
Crash Address: 
Crash State:
  paint_op_raster_fuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan_debug&amp;range=1285150:1285197

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5188563663519744

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>333989075</id>
        <title>Some images in Chrome aren't centered</title>
        <author>
            <name>ja...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333989075"/>
        <updated>1970-01-01T00:28:32.918Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open https://user-images.githubusercontent.com/12532091/135541406-7141a8d7-7bf9-4c82-a4d9-ea4b7fe1fb34.jpg
2. Open https://www.gnu.org/graphics/heckert_gnu.png
3. See difference

# Problem Description
Some images in Chrome aren't centered

# Summary
Some images in Chrome aren't centered

# Custom Questions
#### Example URL: 
https://user-images.githubusercontent.com/12532091/135541406-7141a8d7-7bf9-4c82-a4d9-ea4b7fe1fb34.jpg

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333969577</id>
        <title>[Chrome Perf Accessibility Sheriff]: 1 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333969577"/>
        <updated>1970-01-01T00:28:32.918Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286120:1286175:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=eed1a42a-d76f-4645-a60a-9d3cfb3c0307

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=eed1a42a-d76f-4645-a60a-9d3cfb3c0307

Top 1 regressions (out of 4, with 3 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/UpdateTreeIfNeeded_sum/unassignable-slots-wide-tree.html
       14.06%: 4.573 -&gt; 5.216 ms

Top 1 affected measurements in mac-laptop_low_end-perf:
  - blink_perf.accessibility/UpdateTreeIfNeeded_sum/unassignable-slots-wide-tree.html
       14.06%: 4.573 -&gt; 5.216 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286116..1286182
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/0567fc17863c733a58907e561ef2fdcba53c17f8..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>334016742</id>
        <title>Suggestion to make Updating Chrome O/S easier and quicker to update</title>
        <author>
            <name>dr...@fowlervilleschools.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334016742"/>
        <updated>1970-01-01T00:28:32.918Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Have to log into Chrome O/S
2. Open Chrome and go through that route or search update and open updates and update
3. 

# Problem Description
Would like an easier and quicker way to run updates in Chrome O/S (whether it be a Chromebook or Chromebox).  This would help every end user or system admin in the world.  There is already a quick way to view the build, serial number/asset number by pressing ALT+V at the log in screen.  Could there be a way to create some sort of new key combination at the login screen that could jump start the device into updating its O/S version without having to login to the device.  That would save so much time for system admins or technicians around the world.   It could be a 3-5 key combination just like ALT+V or the ESC+Refresh+Power to kick off the Powerwash of the device.  When said key combination is hit, lets say in the upper right corner like you currently have when you hit the ALT+V combination you might see something like initially searching for updates than installing updates with a percentage.  That way, the update process could be tracked and when it hits 100%, maybe something on the screen says "Hit Enter to finish update" and it restarts the device into the latest version O/S.  Again,  this would make things so much easier for everybody.  I had been thinking about this for a long time because I am a System Admin for multiple school districts.  Thank you again for the opportunity to suggest a change.

# Summary
Suggestion to make Updating Chrome O/S easier and quicker to update

# Custom Questions
#### Please select a label to classify your issue:
Type-Feature - Request for new or improved features

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333957182</id>
        <title> Stylus handwriting not working in visible password field.</title>
        <author>
            <name>sy...@samsung.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333957182"/>
        <updated>1970-01-01T00:28:32.917Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Launch Browser app &gt; Go to google.com sign in page
2. Enter email address and go to password field.
3. Click show password. 
4. Stylus writing hover icon is shown in password field when show password is clicked indicating stylus writing is possible, but stylus handwriting is not working.

# Problem Description
 Stylus handwriting not working in visible password field even though handwriting icon is shown in visible password field indicating stylus writing is possible.

# Additional Comments
Stylus writing should work in visible password fields.

# Summary
 Stylus handwriting not working in visible password field.

# Additional Data
Category: UI \
Chrome Channel: Canary \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333989074</id>
        <title>Phone Hub</title>
        <author>
            <name>ke...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333989074"/>
        <updated>1970-01-01T00:28:32.917Z</updated>
        <summary>-</summary>
        <content type="html">Device name: Acer Chromebook Spin 713

From ""Settings &gt; About Chrome""
Application version: 123.0.6312.112 (Official Build) (64-bit)
Operating system: Chrome OS

URLs (if applicable):

Steps to reproduce:
(1) Connected Devices &gt; Set Up
(2) Connect
(3) Enter Password &gt; Done

Expected result: Phone connected to Chromebook

Actual result: Correct Password rejected therefore set up cannot continue. Incorrect password correctly identified.</content>
    </entry>
    <entry>
        <id>333967627</id>
        <title>HDR canvas</title>
        <author>
            <name>cc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333967627"/>
        <updated>1970-01-01T00:28:32.916Z</updated>
        <summary>-</summary>
        <content type="html">Separating this work off from issue 40206688 now that it's getting closer to shipping.

WebGPU Issue: https://github.com/gpuweb/gpuweb/issues/4239
Explainer: https://github.com/ccameron-chromium/webgpu-hdr/blob/main/EXPLAINER.md
PR: https://github.com/gpuweb/gpuweb/pull/4500
</content>
    </entry>
    <entry>
        <id>333965940</id>
        <title>Produce one zip per fuzz target</title>
        <author>
            <name>ti...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333965940"/>
        <updated>1970-01-01T00:28:32.915Z</updated>
        <summary>-</summary>
        <content type="html"># TL;DR

It could be worth building many more smaller zips, one per fuzz target. Find out whether that's true, and do it if so.

# Background

We build one zip per chrome build configuration for ClusterFuzz to use with black-box fuzzers, e.g. linux-asan-release, win32-asan-debug, etc. The contents of those zips are probably just about what you need to run the `chrome` binary within - modulo some additional targets chosen by the builder recipe (ahijazi@ mentioned heuristics therein).

We also build a single zip for all libfuzzer fuzz targets per build configuration (same for centipede), for ClusterFuzz to use with the built-in `libFuzzer` fuzzer. This zip is quite large (16 GiB zipped, 61 GiB unzipped for the latest linux asan release build [1]), as it contains many fuzz targets.

metzman@ has expressed that Chrome is unique among ClusterFuzz users for doing so, and that in OSS-Fuzz there is a single zip per fuzz target.

# Steps

1. Figure out how the OSS-Fuzz model works. Open questions:
   1. How does ClusterFuzz know which zip to download? For Chrome, first ClusterFuzz downloads the big zip, then it selects a fuzz target in the zip to unpack.
   2. Is there one job per fuzz target in OSS-Fuzz?
1. Estimate dollar cost/benefit of generating separate zips
   - Hopefully-useful reference doc: [go/crfuzz-clusterfuzz-money](http://go/crfuzz-clusterfuzz-money)
   - One one hand, we would be duplicating many shared libraries across all zips and increasing storage costs
   - On the other hand, we would save money on:
     - networking costs: downloading large zips is expensive (see doc)
     - compute time: downloading large zips takes time, though these days we generally unpack selectively quite precisely thanks to paulsemel@'s work on `.runtime_deps`
1. Decide whether doing this is worth it
1. Do it?

[1] https://ci.chromium.org/ui/p/chromium/builders/ci/Libfuzzer%20Upload%20Linux%20ASan/161675/overview</content>
    </entry>
    <entry>
        <id>333957180</id>
        <title>WebGLTransformFeedback read value missing after 65535 (Intel MacOS ONLY)</title>
        <author>
            <name>hs...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333957180"/>
        <updated>1970-01-01T00:28:32.915Z</updated>
        <summary>-</summary>
        <content type="html">### Introduction: 
When attempting to use WebGL2's TransformFeedback for general-purpose computing on the GPU, I found that if the data length exceeds 65536, the buffer data retrieved from the GPU is incorrect. Starting from the 65536th element, each element's value is shifted forward by one position.

For example, a sequence of 10 elements starting from the 65532st element should be:
65532, 65533, 65534, 65535, 65536, 65537, 65538, 65539, 65540

However, in Chrome on Intel Mac, the output result is:
65532, 65533, 65534, 65535, 65537, 65538, 65539, 65540, 65541

The number 65536 is missing, and the subsequent array is shifted forward as a whole. 

Please note the issued problem can only be reproduced on Intel Mac after certain steps as follow.

### Attemps before:
- Chrome on Windows, fine
- Chrome on Mac with Apple Silicon, fine
- Firefox on Mac with Intel CPU and AMD GPU, fine
- **Chrome on Mac with Intel CPU and AMD GPU, wrong**

### My local environment:
- Model: [Macbook Pro 16 2019](https://support.apple.com/en-us/111932)
- Processor: Intel i7 9750H
- GPU: AMD Radeon Pro 5300M 4GB
- OS: MacOS Sonoma 14.1
- Browser: Chrome 123.0.6312

### Steps to reproduce:

I have create a jsfiddle page, and to reproduce this bug, please **STRICTLY** follow the steps below:
  1. Shut down all chrome instances;
  2. Switch to use Discrete GPU (e.g. AMD Pro 5300M on Macbook Pro 16 2019)
  3. Launch Chrome and start a incognito window;
  4. **Open a heavy WebGL rendering page, any one heavy (e.g. https://webglsamples.org/aquarium/aquarium.html), then just shut it down;**
  5. Now open the jsfiddle page https://jsfiddle.net/qcaymhpu/1/
  6. Look at the output result, 65536 is missing.</content>
    </entry>
    <entry>
        <id>333945853</id>
        <title>Source loads extremely slow and debugger doesn't jump to break point.</title>
        <author>
            <name>el...@gmx.net</name>
        </author>
        <link href="https://issues.chromium.org/issues/333945853"/>
        <updated>1970-01-01T00:28:32.915Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Visit https://stackblitz.com/edit/stackblitz-starters-hwlude
2. Open DevTools and click on Sources
3. Click CMD+P or equivalent to open a file
4. Search for blitz and open the one named `blitz.&lt;hash&gt;.js`
5. The file should be pretty printed automatically, search for `.Module.runMain(e.argv[1])` and put a breakpoint on that line
6. Close the file again
7. Close DevTools and re-open again
7. Head over to the terminal on the page and type in `node index.js` and hit enter
8. Notice how long it takes for the source code to show up and also that the debugger doesn't end up on the breakpoint. It jumps to it for a brief moment but then the editor scroll is set to a different location.

# Problem Description
The source code in the Sources panel loads slowly and the debugger doesn't jump automatically to the breakpoint and the scroll of the editor seems to be incorrect. It may be related to the overall size of the JS file which is 3.6 MiB uncompressed. During development the file is 8 MiB large and it takes even longer to load the code in the editor.

# Summary
Source loads extremely slow and debugger doesn't jump to break point.

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333945852</id>
        <title>Enabling &amp;gt;4G heap cage sizes in Oilpan</title>
        <author>
            <name>ml...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333945852"/>
        <updated>1970-01-01T00:28:32.914Z</updated>
        <summary>-</summary>
        <content type="html">We need to set up a Finch here to check memory metrics.</content>
    </entry>
    <entry>
        <id>333969576</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333969576"/>
        <updated>1970-01-01T00:28:32.914Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286113:1286124:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4544d3ff-9a6f-4f9c-81e4-3d8d5887937d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4544d3ff-9a6f-4f9c-81e4-3d8d5887937d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_pinterest.html
        2.38%: 1.683 -&gt; 1.723 

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_pinterest.html
        2.38%: 1.683 -&gt; 1.723 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926695</id>
        <title>gpu_raster_fuzzer: Out-of-memory in gpu_raster_fuzzer</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926695"/>
        <updated>1970-01-01T00:28:32.914Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5812490071375872

Fuzzing Engine: libFuzzer
Fuzz Target: gpu_raster_fuzzer
Job Type: x86_libfuzzer_chrome_asan
Platform Id: linux

Crash Type: Out-of-memory (exceeds 2560 MB)
Crash Address: 
Crash State:
  gpu_raster_fuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=x86_libfuzzer_chrome_asan&amp;range=1285178:1285241

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5812490071375872

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>334007230</id>
        <title>Tests are failing: ninja://chrome/test:browser\\_tests/%ProfileMenuViewPixelTest.InvokeUi\\_default%</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334007230"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with a test name like: ninja://chrome/test:browser\\_tests/%ProfileMenuViewPixelTest.InvokeUi\\_default%

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e821003c6e05f5a759e096f8da812558

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333989070</id>
        <title>DevTools get stuck in "Processing profile..." in the Performance panel.</title>
        <author>
            <name>el...@gmx.net</name>
        </author>
        <link href="https://issues.chromium.org/issues/333989070"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Visit https://stackblitz.com/edit/stackblitz-starters-hwlude
2. Open DevTools
3. Click on the Performance tab
4. Click on the reload button and wait a few seconds
5. Notice how it's stuck at "Processing profile...."

I noticed that when you reload the page again, say via CMD+R, then the profile would load.

# Problem Description
As described in the steps to reproduce, the DevTools get stuck on processing the profile. This seems to be a regression because I have tried an older version of Chrome (116.0.5793.0) where the profile loads fine.

# Summary
DevTools get stuck in "Processing profile..." in the Performance panel.

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333886779</id>
        <title>[Blink Storage]: 1 regressions in blink_perf.owp_storage</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886779"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286114:1286180:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a04cdfcb-19d8-4385-ae21-e69c64a04e2f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a04cdfcb-19d8-4385-ae21-e69c64a04e2f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/blink_perf.owp_storage/Registry::RegisterBlob/blob-perf-files.html
        3.64%: 0.4255 -&gt; 0.441 

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - blink_perf.owp_storage/Registry::RegisterBlob/blob-perf-files.html
        3.64%: 0.4255 -&gt; 0.441 

Regressions grouped by blink_perf.owp_storage includes data from the following benchmarks with listed owners:
  blink_perf.owp_storage: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926694</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926694"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285772:1285829:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7877c51d-aeb4-4fc8-8956-6e7b8238240e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7877c51d-aeb4-4fc8-8956-6e7b8238240e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-go-wembley-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_media/browse_media_googleplaystore_2019
       69.86%: 260.387 -&gt; 442.298 

Top 1 affected measurements in android-go-wembley-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_media/browse_media_googleplaystore_2019
       69.86%: 260.387 -&gt; 442.298 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333957350</id>
        <title>[Blink CSS]: 1 regressions in blink_perf.css</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333957350"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1277773:1277846:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=6f9a1424-f037-48d1-be0c-b209e2bbf41f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=6f9a1424-f037-48d1-be0c-b209e2bbf41f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/blink_perf.css/SelectorCountScaling/SelectorCountScaling.html
       34.22%: 1921.7372 -&gt; 1264.1006 

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - blink_perf.css/SelectorCountScaling/SelectorCountScaling.html
       34.22%: 1921.7372 -&gt; 1264.1006 

Regressions grouped by blink_perf.css includes data from the following benchmarks with listed owners:
  blink_perf.css: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334003901</id>
        <title>Animation Timeline unit tests are flaky because of pending raf after `done` is called</title>
        <author>
            <name>er...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334003901"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html">After adding more tests in crrev.com/c/5444548; it started showing flakes again.</content>
    </entry>
    <entry>
        <id>333989069</id>
        <title>Printing on a hidden iframe not waiting for web font</title>
        <author>
            <name>re...@igalia.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333989069"/>
        <updated>1970-01-01T00:28:32.913Z</updated>
        <summary>-</summary>
        <content type="html">In the attached example (`print.html`) we have a hidden `iframe` (using `display: none;`). When the user clicks the button *Print*, we set the `src` attribute on the `iframe` to the second attachment (`print-example.html`).

The iframe uses *Noto Emoji* web font and calls `window.print()`. The first time, the font is not loaded and it's not used in the printed result. The second time you click *Print* the font has been loaded, so it's used as expected. If you cannot reproduce it, you can try *Slow 3G* mode (by modifying *Dev Tools &gt; Network &gt; No throttling*).

This doesn't happen if the `iframe` is not hidden.</content>
    </entry>
    <entry>
        <id>333969574</id>
        <title>[Graphics]: 5 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333969574"/>
        <updated>1970-01-01T00:28:32.912Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286088:1286171:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=87c6958a-83b9-4376-8d0c-3d5b98b9f768

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=87c6958a-83b9-4376-8d0c-3d5b98b9f768

Top 5 regressions (out of 6, with 1 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/EventLatency.FirstGestureScrollUpdate.Touchscreen.TotalLatency/canvas_10000_pixels_per_second
       40.19%: 41616.0 -&gt; 58342.0 unitless
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/canvas_10000_pixels_per_second
       39.95%: 38747.03885 -&gt; 54226.833750000005 unitless
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/canvas_05000_pixels_per_second
       39.83%: 38757.623600000006 -&gt; 54196.0801 unitless
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/EventLatency.FirstGestureScrollUpdate.Touchscreen.TotalLatency/canvas_20000_pixels_per_second
       36.68%: 37582.5 -&gt; 51368.0 unitless
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/canvas_20000_pixels_per_second
       32.96%: 36641.5044 -&gt; 48719.56145 unitless

Top 3 affected measurements in android-pixel6-pro-perf:
  - rendering.mobile/EventLatency.FirstGestureScrollUpdate.Touchscreen.TotalLatency/canvas_10000_pixels_per_second
       40.19%: 41616.0 -&gt; 58342.0 unitless
  - rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/canvas_10000_pixels_per_second
       39.95%: 38747.03885 -&gt; 54226.833750000005 unitless
  - rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/canvas_05000_pixels_per_second
       39.83%: 38757.623600000006 -&gt; 54196.0801 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/1c126fdaccf3cc83023605d0d9b92cd381d0efa5..946c2af84d656632f7a2857e6e409faf04f2d9e0
  Chromium Commit Position: https://crrev.com/1286118..1286171
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/0567fc17863c733a58907e561ef2fdcba53c17f8..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333950748</id>
        <title>Intl.Segmenter is slow when text contains ligature emojis.</title>
        <author>
            <name>ry...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333950748"/>
        <updated>1970-01-01T00:28:32.912Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open DevTools
2. Run the following code: [...new Intl.Segmenter().segment('abcd🇺🇸'.repeat(50000))]

# Problem Description
It takes a few seconds to segment the text. In Safari this is instant.

# Additional Comments
Similar to the issue below, but only seems to slow down when including emojis.
https://issues.chromium.org/issues/40877893

# Summary
Intl.Segmenter is slow when text contains ligature emojis.

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333971733</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971733"/>
        <updated>1970-01-01T00:28:32.911Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286113:1286124:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=8dd9a332-e313-44f6-988d-05b8fe6e5df2

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=8dd9a332-e313-44f6-988d-05b8fe6e5df2

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_techcrunch.html
        2.38%: 1.683 -&gt; 1.723 

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_techcrunch.html
        2.38%: 1.683 -&gt; 1.723 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
</feed>