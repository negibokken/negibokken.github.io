<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-27T20:02:55.422Z</updated>
    <entry>
        <id>327237107</id>
        <title>Update upstream ios-m1-simulator to Mac14</title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327237107"/>
        <updated>2024-02-27T20:02:55.422Z</updated>
        <summary>-</summary>
        <content type="html">1. cut a ticket to lab to upgrade builder bots to Mac14
2. update the builder config to point to Mac14

No need to do it for tester as it's already done in https://chromium-review.googlesource.com/c/chromium/src/+/5324401</content>
    </entry>
    <entry>
        <id>327226770</id>
        <title>Make internals tables independently scrollable</title>
        <author>
            <name>ap...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327226770"/>
        <updated>2024-02-27T20:01:47.302Z</updated>
        <summary>-</summary>
        <content type="html">So that the top of the page and table header/footer remain visible, instead of scrolling the whole body.</content>
    </entry>
    <entry>
        <id>327220838</id>
        <title>Testing</title>
        <author>
            <name>lo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327220838"/>
        <updated>2024-02-27T19:38:52.389Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Nothing
2. Nothing
3. Nothing

# Problem Description
Just testing

# Additional Comments
Thanks if it words on iOS 

# Summary
Testing

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327228577</id>
        <title>Tests are failing: org.mockito.exceptions.misusing.UnfinishedStubbingException: \nUnfinished stubbing detected here:\n-&amp;gt; at org.chromium.chrome.browser.page_insights....</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327228577"/>
        <updated>2024-02-27T19:27:19.820Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
org.mockito.exceptions.misusing.UnfinishedStubbingException: \nUnfinished stubbing detected here:\n-&gt; at org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest.hideTopBar(PageInsightsCoordinatorTest.java:299)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3. you are stubbing the behaviour of another mock inside before 'thenReturn' instruction is completed\n

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/android:chrome_public_unit_test_apk/org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest#testExpandedStateAfterPeekState_scrimShown
- ninja://chrome/android:chrome_public_unit_test_apk/org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest#testRoundTopCornerAtExpandedStateAfterPeekState
- ninja://chrome/android:chrome_public_unit_test_apk/org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest#testBackgroundColorAtExpandedStateAfterPeekState
- ninja://chrome/android:chrome_public_unit_test_apk/org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest#testResizeContent
- ninja://chrome/android:chrome_public_unit_test_apk/org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest#testAutoTrigger


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/a54c123fb04aa3abcb117feb90630354

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327226481</id>
        <title>Shopping filter isn't getting sorted properly</title>
        <author>
            <name>wy...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327226481"/>
        <updated>2024-02-27T19:19:09.198Z</updated>
        <summary>-</summary>
        <content type="html">Steps:
1. Open bookmarks manager &gt; tracked products
2. Choose a sort option
3. Observe

Expected result:
Bookmarks are sorted according to chosen option

Actual result:
Bookmarks aren't sorted</content>
    </entry>
    <entry>
        <id>327135995</id>
        <title>x Buttons don't reliably show on hover</title>
        <author>
            <name>br...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327135995"/>
        <updated>2024-02-27T19:12:37.473Z</updated>
        <summary>-</summary>
        <content type="html">I think the x button for playing media is supposed to show on hover, but I'm having a hard time getting that to happen reliably. Sometimes they show even without having my cursor over the preview and other times they don't show at all.

In the attached screenshot you can see that both x buttons are showing even though it's only possible to hover over one item at a time.

What steps will reproduce the problem?
(1) Play some media
(2) Open media controls and hover over items

What is the expected result?
The x button always shows on hover

What is the actual result?
The x button sometimes shows, but the trigger is unpredictable.

Please also provide additional information:
I've only tried this on Linux, so I'm not sure if it's a problem on other platforms.</content>
    </entry>
    <entry>
        <id>327135994</id>
        <title>/node_modules/|/bower_components/|/\.devtools|/\.git/|/\.sass-cache/|/\.hg/|/\.idea/|/\.svn/|/\.cache/|/\.project/|/Thumbs.db$|/ehthumbs.db$|/Desktop.ini$|/\$RECYCLE.BIN/</title>
        <author>
            <name>je...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327135994"/>
        <updated>2024-02-27T19:06:44.253Z</updated>
        <summary>-</summary>
        <content type="html">Version: 15185-52b015d
From Link: https://ci.chromium.org/ui/p/chromium/builders/ci/3pp-mac-amd64-packager/10/test-results?sortby=&amp;groupby=
Please enter a description of the problem, with repro steps if applicable.</content>
    </entry>
    <entry>
        <id>327224061</id>
        <title>external/wpt/scroll-to-text-fragment/iframe-scroll.sub.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327224061"/>
        <updated>2024-02-27T19:06:13.357Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/scroll-to-text-fragment/iframe-scroll.sub.html

Harness Failure on WebKit Win10 builder

Test History Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fscroll-to-text-fragment%2Fiframe-scroll.sub.html?q=VHASH%3A3767ecdffabc49e7

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fscroll-to-text-fragment%2Fiframe-scroll.sub.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 5.90% flaky rate in runs mostly on Win builders</content>
    </entry>
    <entry>
        <id>327027614</id>
        <title>WebGL Vulkan tests timing out on experimental Win/NVIDIA config</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027614"/>
        <updated>2024-02-27T18:59:41.952Z</updated>
        <summary>-</summary>
        <content type="html">Starting in [this build](https://ci.chromium.org/ui/p/chromium/builders/ci/Win10%20FYI%20x64%20Exp%20Release%20(NVIDIA)/16261/overview), `webgl_conformance_vulkan_passthrough_tests` has been consistently failing on our experimental Windows version and NVIDIA driver due to the test tasks timing out.

Looking at the task output, tests are consistently crashing and driving up the test time:

```
[332:11700:0226/224805.497:ERROR:angle_platform_impl.cc(44)] RendererVk.cpp:3891 (queryAndCacheFragmentShadingRates): 	! Assert failed in queryAndCacheFragmentShadingRates (..\..\third_party\angle\src\libANGLE\renderer\vulkan\RendererVk.cpp:3891): shadingRate.sampleCounts &lt; 256
FATAL: RendererVk.cpp:3891 (queryAndCacheFragmentShadingRates): 	! Assert failed in queryAndCacheFragmentShadingRates (..\..\third_party\angle\src\libANGLE\renderer\vulkan\RendererVk.cpp:3891): shadingRate.sampleCounts &lt; 256
Received fatal exception EXCEPTION_ACCESS_VIOLATION
[2916:11196:0226/224805.501:WARNING:chrome_main_delegate.cc(755)] This is Chrome version 124.0.6326.0 (not a warning)
[2916:11196:0226/224805.557:ERROR:policy_logger.cc(157)] :components\enterprise\browser\controller\chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.
(INFO) 2024-02-26 22:48:05,561 devtools_client_backend.GetDevToolsBackEndIfReady:60  DevTools agent ready at ws://127.0.0.1:61552/devtools/browser/bae88ace-97a8-4a44-a92f-4226ba3b74a4
[2916:11196:0226/224805.584:WARNING:account_consistency_mode_manager.cc(77)] Desktop Identity Consistency cannot be enabled as no OAuth client ID and client secret have been configured.
	gl::LogMessage::~LogMessage [0x00007FF9936E41AC+428] (o:\third_party\angle\src\common\debug.cpp:208)
	(No symbol) [0x000001A0077839E0]
	std::__Cr::__put_character_sequence&lt;char,std::__Cr::char_traits&lt;char&gt; &gt; [0x00007FF9930170F2+370] (o:\third_party\libc++\src\include\ostream:690)
	(No symbol) [0x000001A007783AC0]
	(No symbol) [0x00000083507FBA98]
	(No symbol) [0x00000083507FBA20]
	(No symbol) [0x00007FF900000F33]
	`string' [0x00007FF99394CB66+30]
	(No symbol) [0x00000083507FBB08]
	(No symbol) [0x00000083507FBA20]
	(No symbol) [0x00000083507FBAA0]
	(No symbol) [0x000029F245708972]
	(No symbol) [0x000029F245708902]
	(No symbol) [0x000001A007739AC8]
	(No symbol) [0x000001A007783AA0]
	(No symbol) [0x000001A007739AC9]
	(No symbol) [0x0000000000000001]
	(No symbol) [0x000001A0077839E0]
	rx::RendererVk::queryAndCacheFragmentShadingRates [0x00007FF99313C155+1605] (o:\third_party\angle\src\libANGLE\renderer\vulkan\RendererVk.cpp:3891)
	(No symbol) [0xAAAAAAAAAAAAAAAA]
	(No symbol) [0x00000083507FB840]
```

The only relevant CL in the blamelist is [this ANGLE roll](https://chromium.googlesource.com/chromium/src/+/eefbd68ee417b670f7c23923ac8073a47f32c86b) which only contains two changes. Of those, only [this CL](https://chromium-review.googlesource.com/c/angle/angle/+/5322317) touches `RendererVk`, so assuming that's the culprit. Assigning to the CL author.</content>
    </entry>
    <entry>
        <id>327219570</id>
        <title>what is the expected result</title>
        <author>
            <name>ba...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327219570"/>
        <updated>2024-02-27T18:53:42.889Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>327112549</id>
        <title>Attached callstacks can disagree with built JS stack tree</title>
        <author>
            <name>pa...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327112549"/>
        <updated>2024-02-27T18:52:07.691Z</updated>
        <summary>-</summary>
        <content type="html">This is a minor bug but.. coincidentally found it 30min before your talk on sampling and merging.

See attached image.


The stack trace attached to this trace event has function `uc`
But our current stack says `bc`.
You can see `uc` starts right after.

Thanks to some of the work Adriana/Adam were doing.. I realized that a BUNCH of our trace events end up calling `v8::CpuProfiler::CollectSample()` as a one-off.
https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/inspector/inspector_trace_events.cc;l=108-124;drc=a81090ec3c1bbfb3855dcd7a2869bbdba24251cf


So.. we could also incorporate that data into the SamplesIntegrator.  Could go as far as .. if there's `args.data.stackTrace` attached to any event we treat that equivalently to a profilecall/sample.

Again.. this is minor IMO, but.. figured you'd be interested. :)</content>
    </entry>
    <entry>
        <id>327022946</id>
        <title>Preflight request for PNA never sent</title>
        <author>
            <name>kl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327022946"/>
        <updated>2024-02-27T18:50:22.280Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 124.0.6327.0 (Developer Build) (64-bit)
OS: Linux
What steps will reproduce the problem?
(1) A cli tool spins up an HTTP server on http://localhost:8085/ then opens chromium to initiate OAuth 2.0 Code Flow. It implements CORS including PNA headers.
(2) User enters credentials at auth server (https://somewhere.x), auth server redirects to actual service (https://somewhere.y) which in turn redirects to http://localhost:8085/auth/callback

What is the expected result?
Chrome sends a preflight request to verify PNA through CORS and after this succeeds then requests the actual page and displays it to the user.

What happens instead?
Chrome shows an error page for net::ERR_INVALID_URL
DevTools show a preflight request, but this is never sent.
Net-log shows the preflight request, which does *not* have the "url" field set (and the initiator is https://somewhere.x _not_ https://somewhere.y).

This is a regression. It worked up until at least 1259024.

I could not find any combination of PNA-related flags to get this to work and the preflight request to either be sent or not be created at all.

Please find the important parts of the net-log attached with sensitive information removed.

I think this could be related to https://issues.chromium.org/issues/41497295/</content>
    </entry>
    <entry>
        <id>327029806</id>
        <title>Issues - Logs </title>
        <author>
            <name>kf...@unitrustconnect.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327029806"/>
        <updated>2024-02-27T18:45:17.174Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?
opening Mutual Of Omaha requests in SuranceBay - all requests - all agents, on all employees computers.

What is the expected result?


What happens instead?
Error message appears

You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>327220152</id>
        <title>Tests are failing: Expect: VALUE_CHANGED,VALUE_CHANGED,COMMIT Result: VALUE_CHANGED,VALUE_CHANGED,COMMIT,CANCEL: array lengths differed, expected.length=3 actual.leng...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327220152"/>
        <updated>2024-02-27T18:41:10.729Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
Expect: VALUE_CHANGED,VALUE_CHANGED,COMMIT Result: VALUE_CHANGED,VALUE_CHANGED,COMMIT,CANCEL: array lengths differed, expected.length=3 actual.length=4; arrays first differed at element [3]; expected:&lt;end of array&gt; but was:&lt;5&gt;

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://android_webview/test:webview_instrumentation_test_apk/org.chromium.android_webview.test.AwAutofillTest#testCommit
- ninja://android_webview/test:webview_instrumentation_test_apk/org.chromium.android_webview.test.AwAutofillTest#testCommitWithChangedFormProperties


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/43136ab62b75f20c8bea7fc9f2d641da

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327219569</id>
        <title>[Code health] CBD dialog: fetch time range to send to the CPP side from the dropdownMenu instead of relying on the dropdownMenu's pref value</title>
        <author>
            <name>ra...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327219569"/>
        <updated>2024-02-27T18:35:36.723Z</updated>
        <summary>-</summary>
        <content type="html">Reason:  
https://chromium-review.googlesource.com/c/chromium/src/+/5324911/comment/30e2f6b2_220863fc/

In the clear browsing data dialog, when the user confirms the deletion, the time range value to be sent to the CPP side gets [fetched from the dropdownMenu pref](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.ts?q=%22timePeriod%20%3D%20dropdownMenu.pref!.value%22%20f:chrome%2Fbrowser%2Fresources%2Fsettings%2Fclear_browsing_data_dialog%2Fclear_browsing_data_dialog.ts&amp;ss=chromium%2Fchromium%2Fsrc). This is suboptimal, as the dropdownMenu has |noSetPref|, which means its pref value can differ from its dropdown selection value. This could lead to bugs like [crbug.com/326887760](https://crbug.com/326887760).

It would be better if the time range value would be fetched directly from the dropdownMenu instead.</content>
    </entry>
    <entry>
        <id>327217753</id>
        <title>webnn coreml: Use folder structure with weights as a separate file</title>
        <author>
            <name>ph...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327217753"/>
        <updated>2024-02-27T18:27:32.794Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327216253</id>
        <title>Support CoreML versions &amp;gt;=7 on appropriate platforms</title>
        <author>
            <name>ph...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327216253"/>
        <updated>2024-02-27T18:19:10.789Z</updated>
        <summary>-</summary>
        <content type="html">WebNN CoreML backend currently targets CoreML6 (ios16, mac13), meaning it can support ops &lt;=CoreML6. 
There are some more additional ops and also existing ops with new capabilities in CoreML7 (the max version coremltool has right now), we should figure out how to structure the MIL.Program to add ops for CoreML7.

https://github.com/apple/coremltools/tree/main/coremltools/converters/mil/mil/ops/defs</content>
    </entry>
    <entry>
        <id>327213926</id>
        <title>[Benefits] Add unittest coverage that credit cards with benefits do not have benefit labels in suggestions when flag is disabled</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327213926"/>
        <updated>2024-02-27T18:13:46.407Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327213107</id>
        <title>Off-by-one error in source location for InvalidateLayout/ScheduleStyleRecalculation</title>
        <author>
            <name>bc...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327213107"/>
        <updated>2024-02-27T18:12:05.064Z</updated>
        <summary>-</summary>
        <content type="html">The initiator arrows for style recalcs are fantastic, but they reveal an error in the source location for `ScheduleStyleRecalculation` and `InvalidateLayout` events where the `lineNumber` and `columnNumber` are 1 higher than they should be.

The `stackTrace` for those two trace events have a `lineNumber` and `columnNumber` that are 1 higher than expected, so when 1 is added to both of them when linkified in the Summary pane, they're pointing to the wrong location. For a js bundle of only a single or couple of lines, that's the difference between a source location and a link to the end of the file.

It looks like the `lineNumber` and `columnNumber` can just not be incremented and they'll be correct.

While in there, could the initiator stack also include the column number (currently it's just the line number)? Again with bundled code, narrowing the location to a single line isn't meaningful.

---

Attached video demonstrates the problem and shows how a hack of manually editing the trace to subtract 1 from the line/column numbers fixes the issue.</content>
    </entry>
    <entry>
        <id>327208232</id>
        <title>Add option to avoid minimization for uploaded samples</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327208232"/>
        <updated>2024-02-27T17:47:14.771Z</updated>
        <summary>-</summary>
        <content type="html">Fuzzilli [1] currently runs independently of Clusterfuzz (for various reasons) but uploads crashes to CF for triaging using the "Upload Testcase" API [2].

Fuzzilli already performs minimization on its own, so it is usually not necessary to attempt another round of minimization on the Clusterfuzz side, especially since this can be quite expensive. Fuzzilli also generates some samples with a lot of manually-written code, for example from the Explore/Probe Mutators [3] or our v8-sandbox-fuzzer [4]. These samples can easily contain hundreds of lines of (commented) JavaScript code that probably doesn't need to be minimized as they just contain well-known fuzzer helper functions.

If there was an option in the web API to not perform minimization, we could enable that for in our ClusterfuzzUploader module to avoid duplicate/needless minimization work.

[1] https://github.com/googleprojectzero/fuzzilli \
[2] https://team.git.corp.google.com/v8-team/autozilli/+/refs/heads/main/FuzzilliModules/ClusterfuzzUploader.swift#176 \
[3] https://github.com/googleprojectzero/fuzzilli/blob/main/Sources/Fuzzilli/Lifting/JavaScriptExploreLifting.swift \
[4] https://team.git.corp.google.com/v8-team/autozilli/+/refs/heads/main/FuzzilliProfiles/V8SandboxProfile.swift#133
</content>
    </entry>
    <entry>
        <id>327208227</id>
        <title>Flicker during ViewTransition</title>
        <author>
            <name>kh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327208227"/>
        <updated>2024-02-27T17:43:27.506Z</updated>
        <summary>-</summary>
        <content type="html">1. Open the test.html file on linux with --disable-gpu.
2. Click anywhere on the page, notice the color flickers.

The page is creating a view transition between 2 identical states of the DOM. This is compositing 2 textures with plus-lighter blending where the opacities on both the textures add up to 1. The result should be such that the blending is a no-op but we're noticing it flickering.

While we can't repro it with a local dev build with GPU enabled, the bug is related to a GPU experiment because we have reports from some users who can repro it on stable. I've attached the config for it below with broken.txt. You can use it locally to test with:

```
./tools/variations/bisect_variations.py --input-file="broken.txt" --output-dir="./out/linux-release" --browser=stable --url=./test.html
```

Here's the list of experiments from this config:
AblateSearchProviderWarmupRequestsDesktop-Control
AccessibilitySerializationSizeMetrics-Enabled
AllowBFCacheWhenClosedMediaStreamTrack-Control_20231219
AllowUndamagedNonrootRenderPassToSkip-Enabled
AomVpxUseChromeThreads-Control_20240110
AttestationSentinelGuard-Control
AugmentExistingImageLabels-Control_20240222
AutoSpeculationRules-Disabled_20231201
AutoTabGroupsDogfood-Enabled_Dogfood_20240117
AutofillEnableCacheForRegexMatching-Control
AutofillEnableCvcStorage-Control
AutofillEnableExpirationDateImprovements-Enabled
AutofillEnableVirtualCardOnFile-Enabled_2023_01_04
AutofillEnableZipOnlyAddressForms-Enabled
AutofillGranularFillingAvailable-Enabled
AutofillModelPredictions-Enabled_20240214
AutofillParsingPatternProvider-Enabled
AutofillReplaceCachedWebElementsByRendererIds-Enabled_20240219
AutofillSharedStorageServerCardData-Control
AutofillTrackProfileTokenQuality-Enabled_20240109
AutofillUseI18nAddressModel-Control
BackForwardCacheCaptureBlockingDetails-Enabled_2024-01-20
BackForwardCacheForPageWithCacheControlNotStoredHeader-Control_20240129
BackForwardCacheNotRestoredReasons-Control_2024-02-08
BackgroundResourceFetch-Default
BackgroundTracing-SearchAFTPerformanceMark120_Dogfood
BoostResourceLoadingTaskPriorities-Default
BoundaryEventDispatchTracksNodeRemoval-Control
CPSS-V2-Control_20240221
CPUInterventionEvaluationLogging-Enabled_20240215
CSSMPCImprovements-Control
Canvas2DHibernationMac-Enabled_20240209
CdmStorageDatabaseMigrationTrial-Enabled
ChromeCartDomBasedHeuristics-enabled_chrome_cart_dom_based_heuristics_20230111
ChromeChannelCanary-Enabled
22a53a00-AboutFlags
ChromeWallpaperSearchDogfood-Enabled_Dogfood_20240201
ChromeWallpaperSearchHaTS-Enabled_Dogfood
ClientSideDetectionNotificationPrompt-Control
ClientSideDetectionRetryLimit-Enabled
CombinedPowerExperimentV2_1-Control_20231204
CommerceLocalPDPDetection-Control
CompanionEnabledByObservingExpsNavigations-Enabled_Dogfood
CompanionLabsEnable-EnabledLaunch
ComposeInternalTesting-Enabled_Dogfood
CompressionDictionaryTransportRequireKnownRootCert-Control_20240122
ConsolidatedIPCForProxyCreation-Control_non_android_20240131
ContentSettingsIndex-Enabled_20240213
DefaultANGLEMetal-Enabled_20240125_INTEL
DefaultBucketUsesRelaxedDurability-Enabled
DeferredOverlayRelease-Enabled
DeferredSparerRendererForTopChromeWebUI-NoDelay20240125
DeprecateUnload-Enabled_20240124
DesktopLinkCapturingPWAExperiment-Enabled_default_on_CANARY_DEV_BETA_20240119
DesktopNtpModulesRedesigned-Redesigned_Quests_Dogfood
DesktopOmniboxKeywordProvider-control
DesktopOmniboxShortcutBoost-Enabled_search3_journeyInherit_V7
DesktopPWAInstallPromotionML-Control_CANARY_DEV_BETA_20240209
DevToolsStructuredMetrics-Enabled_20240223
DisableCompressParkableStrings-Control_20240213
DiscountAutoPopup-Control
ESBIPHPromoOnDownloads-Control
EagerPrefetchBlockUntilHeadDifferentTimeouts-OneSecondAndAHalfTimeout_CANARY_DEV_20240205
EventTimingFallbackToModalDialogStart-Control_V1
EventTimingKeypressAndCompositionInteractionId-Control_V1
ExperimentalAIDogfood-Enabled_20240110
ExpiredHistograms-ExpiryEnabledWithAllowlist
ExtensionsServiceWorkerOptimizedEventDispatch-Preperiod_Control
FLEDGEBiddingAndAuctionServer-Enabled_20240129
FenderAutoPreconnectLcpOrigins-EnabledWithOne_20240214
FenderScriptScheduling-HighPriorityV2_20240211
FixInputQueueingBug-Control_20231129
FormControlsVerticalWritingModeDirectionSupport-Enabled
FrameRoutingCache-Control
GenGpuDiskCacheKeyPrefixInGpuService-Enabled_0213
GpuExperimentsHoldback-Enabled
HeapProfilingMacKillSwitch-Disabled_EmergencyKillSwitch_20240223
HideDelegatedFrameHostMac-Control_50
HideIncognitoMediaMetadata-Enabled_240209
HighestRequestPriorityForClassifyUrl-Enabled_20240213
HitTestOpaqueness-Enabled_20240213
HttpDiskCachePrewarming-Enabled_20240226
HttpsFirstModeV2ForTypicallySecureUsers-Enabled
HttpsUpgrades-EnabledWithHttpsFirstModeForEngagedSites_20231012
IPProtectionPhase0-enabled_direct_ip_protection_phase_1phase1_2024-02-04_Dogfood
IdentifiabilityStudy-Enabled_20220118
ImageServiceObserveSyncDownloadStatus-Enabled_20240205
IntersectionOptimization-Enabled_20240116
InvalidateLocalSurfaceIdPreCommit-Control
IsolateSandboxedIframes-EnabledWithPerOrigin_20240111
KeepAliveInBrowserMigration-Control_20240123
KeyboardFocusableScrollers-Control
LCPPFontURLPredictor-Default
LCPPLazyLoadImagePreload-EnableWithAll_20240130
LegacyTechReportEnableCookieIssueReports-Control
LinkPreview-Enabled
LiveTranslate-Enabled_Dogfood
LogOnDeviceMetricsOnStartup-Enabled_2m_20240123
LogUrlScoringSignals-EnabledWithScoringSignalsAnnotators_20230914
MacAllowBackgroundingRenderProcesses-Enabled_20240215
MacImmersiveFullscreen-Enabled_20231010
MacWebContentsOcclusionV2-Control_20240109
MediaRecorderUseMediaVideoEncoder-Enabled_20240202
MemoryCacheStrongReference-Disabled_20240124
MetricsServiceDeltaSnapshotInBg-Enabled_20240222
ModalMemorySaver-Enabled_20240212
ModelExecutionCapabilityDisable-Enabled_20240110
MojoBindingsInlineSLS-Control
MouseDragOnCancelledMouseMove-Enabled
NavigationPredictor-Enabled_20240129
NewPresentationFeedbackTimeStamps-Enabled_V2
NonStableGWS-Default_MacCanary
NonStandardAppearanceValuesHighUsage-Disabled_20240205
NtpRealboxCr23-Enabled_Icons_V4
OmniboxCr23_M119_Desktop-bfe70100
OmniboxKeywordModeRefresh-Enabled_V1
OmniboxOnDeviceHeadModelSelectionFix-Fix_10pct
OmniboxOnDeviceTailSuggestDesktop-Default_80pct
OmniboxRelaxedDriveRequirements-Enabled_NoSyncRequirement_V2
OneTimePermission-EnabledWithNormalLanguage_20230926
OptimizationTargetGeolocationPermissionPredictionsGradualRollout-Control_20240221
OptimizationTargetNotificationPermissionPredictionsGradualRollout-Control_20240221
PMProcessPriorityPolicy-Control_20240115
PartitionAllocAdvancedMemorySafetyChecks-Control
PartitionAllocBackupRefPtr-Enabled_NonRenderer_v29
PartitionAllocMemoryReclaimer-Interval_16sec_v2
PassHistogramSharedMemoryOnLaunch-Enabled
PasswordManagerFieldRanks-Disabled
PasswordSharingBackend-Enabled_20240118
PdfOcrDesktop-Enabled
PlusAddressesExperiment-Control
PlzDedicatedWorker-Control_20240213
PostQuantumKyber-Enabled_20231106
PrefetchDocumentManagerEarlyCookieCopySkipped-Enabled_20240226
PrefetchProxyDesktop-Control
PreloadingConfig-PrefetchDSEHoldback_20240213
Prerender2EmbedderBlockedHosts-Control
Prerender2NewTabPageTrigger-Default
PriceTrackingIconColors-Enabled
PriorityHeader-Enabled
PrivacySandboxAdsAPIsM1-Enabled_Notice_MPArch_M1_XS_Delay_20240131
PrivacySandboxAttestationsUserBlockingPriority-Enabled
ProcessReuseOnPrerenderCOOPSwap-Enabled
ProtectedAudienceEnableWALForInterestGroupStorageStudy-Enabled
ProtectedAudiences40ComponentAds-Enabled
ProtectedAudiencesEnableUpdatingExecutionModeToFrozenContext-Control
ProtectedAudiencesKAnonymityEnforcementStudy-Enabled_20240129
ProtectedAudiencesTrustedBiddingSignalsSlotSize-Control20240109
PruneOldTransferCacheEntries-Enabled
QUIC-MultiPortWithoutMigration30sFeb2024B
ReadAnythingIPHRollout-Enabled_Dogfood
ReadAnythingLocalSidePanelRollout-Enabled
ReadAnythingOmniboxIconRollout-Enabled
ReadAnythingWebUIToolbarRollout-Control
RemoveAttentionLoggingBeforeUnload-Enabled_20240216
RenderDocumentWithNavigationQueueing-EnabledSubframeWithQueueing_20240202
ReportNumZPSInSessionDesktop-DisabledV1
SafeBrowsingHashPrefixRealTimeLookups-Enabled_20240214_10
SafetyHub-Enabled_20231129_20231129
SavedTabGroupsDesktopSync-EnabledLaunch
ScreenCaptureKitPickerScreen-Enabled_20240213
SearchPrefetchHighPriorityPrefetches-EnabledHighPriorityBothTriggers_20240130
ServiceWorkerAutoPreload-EnableWithRespectingNavigationPreload_NoTwoPhaseWrite_20240213
SharedStorageEnableWALStudy-Enabled
SidePanelCompanionDesktopM116Plus-Enabled_Dogfood
SidePanelPinningWithResponsiveToolbar-EnabledWithSidePanelPinning
SimplifyLoadingTransparentPlaceholderImage-Control_20240221
SkiaGraphite-EnabledWithValidation_INTEL_20240214
SkipUnnecessaryThreadHopsForParseHeaders-Enabled
SonomaAccessibilityActivationRefinements-Control
SpdyHeadersToHttpResponseUseBuilder-Control
SpeculativeServiceWorkerWarmUp-StayPrewarmed30m_20240226
SqlWalMode-Disabled_20240213
SyncSessionOnVisibilityChanged-Enabled_20240226
Teamfood-Enabled_Dogfood
TextSafetyClassifierDogfood-Enabled_Dogfood
ThreadGroupSemaphore-Enabled_8worker_1
ThreadPoolCap2-Default
ThreadedBodyLoader-All_20240108
TopLevelThirdPartyCookieDeprecationTrialService-Enabled
TrackingProtectionRollback-Default
UKM-Enabled_20180314
UMA-LayerConstrained-Uniformity-DefaultEntropyLayer_SessionConsistentStudy-group_01
UMA-LayerConstrained-Uniformity-LowEntropyLayer_DefaultEntropyStudy-group_00
UMA-NonUniformity-Trial-1-Percent-New-group_31_20211115
UMA-Population-Restrict-dogfood
UMA-Pseudo-Metrics-Effect-Injection-25-Percent-SmallEffect_24_20211115
UMA-Uniformity-Trial-0.5-Percent-1-group_61
UMA-Uniformity-Trial-0.5-Percent-2-group_112
UMA-Uniformity-Trial-1-Percent-group_86
UMA-Uniformity-Trial-10-Percent-group_09
UMA-Uniformity-Trial-10-Percent-sanity-group_07
UMA-Uniformity-Trial-100-Percent-group_01
UMA-Uniformity-Trial-20-Percent-group_04
UMA-Uniformity-Trial-20-Percent-Session-group_03
UMA-Uniformity-Trial-5-Percent-group_14
UMA-Uniformity-Trial-50-Percent-default
UkmSamplingRate-Sampled
UnoDesktopM0-Enabled
UseRecordedBoundsForTiling-Control
UserInteractiveCompositingMac-Enabled
V8CodeFlushing-Default
V8EfficiencyModeTiering-EfficiencyModeEnabledWithTurbofanDelay15k1
V8IntelJCCErratumMitigation-Enabled
V8MinorMS-Enabled_20240125
V8ProfileGuidedOptimization-Control
V8SingleThreadedGCInBackground-Control_3
V8WasmMoreAggressiveCodeCaching-5_CacheAfter1Sec
V8WasmTurboshaft-Control
WaffleStudy-EnabledAllUsers_20240221
WebRTC-Audio-GainController2-Enabled,switch_to_agc2:true,target_range_min_dbfs:-50,target_range_max_dbfs:-30,max_gain_db:50,initial_gain_db:15,max_gain_change_db_per_second:6,headroom_db:5,enable_clipping_predictor:true,disallow_transient_suppressor_usage:true,Launched
WebRTC-ReceiveBufferSize-size_bytes:262144,_1
WebRTCHardwareVideoEncoderFrameDrop-Enabled_20240216
WebRtcInitializeEncoderOnFirstFrame-Enabled
YouTubePartitionedCookies-Default_20240125</content>
    </entry>
    <entry>
        <id>327207663</id>
        <title>PDF does not have focus on load</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327207663"/>
        <updated>2024-02-27T17:38:50.490Z</updated>
        <summary>-</summary>
        <content type="html">Repro steps:
1. Open https://www.pdf995.com/samples/pdf.pdf
2. Press Select+A to select all text

Observe that GuestView PDF selects all text, while OOPIF PDF doesn't. OOPIF PDF requires clicking the PDF first. To preserve behavior, OOPIF PDF should get focus on load.

This was caught by test PDFExtensionTest.SelectAllShortcut.</content>
    </entry>
    <entry>
        <id>327100669</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327100669"/>
        <updated>2024-02-27T17:35:01.504Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1265508:1265535:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=66c43036-a169-41c8-bd01-7fa8f4774842

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=66c43036-a169-41c8-bd01-7fa8f4774842

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.bindings/node-list-access/node-list-access.html
        0.85%: 74.0906 -&gt; 73.4628 

Top 1 affected measurements in android-pixel2_webview-perf:
  - blink_perf.bindings/node-list-access/node-list-access.html
        0.85%: 74.0906 -&gt; 73.4628 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>327027138</id>
        <title>console.log() does not work in AudioWorkletGlobalScope</title>
        <author>
            <name>ho...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027138"/>
        <updated>2024-02-27T17:26:59.211Z</updated>
        <summary>-</summary>
        <content type="html">Reproduction:
https://googlechromelabs.github.io/web-audio-samples/audio-worklet/basic/message-port/

Steps:
1. Open the console.
2. Click "Start" button.
3. In the console, you only see "[Node:handleMessage_]..." messages.

Before M122, this examples showed two different type of messages:

[Node:handleMessage_]...
[Processor:Received]...

The second one is the message from console.log() called in AudioWorkletGlobalScope. You can find the source code here:
https://github.com/GoogleChromeLabs/web-audio-samples/blob/main/src/audio-worklet/basic/message-port/messenger-processor.js

I don't have a confirmation but this change might be related:
https://crrev.com/c/5185611

Would love to hear thoughts from caseq@.</content>
    </entry>
    <entry>
        <id>327027613</id>
        <title>Slow problems</title>
        <author>
            <name>mu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027613"/>
        <updated>2024-02-27T17:25:18.174Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Please
2. Please fix
3. 

# Problem Description
Mobail slow problem

# Summary
Slow problems

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327200695</id>
        <title>Add histogram when updating SessionID pref</title>
        <author>
            <name>ga...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327200695"/>
        <updated>2024-02-27T17:21:51.258Z</updated>
        <summary>-</summary>
        <content type="html">We should add an histogram when updating the SessionIDGenerator pref.</content>
    </entry>
    <entry>
        <id>327202369</id>
        <title>nocompile_source_set template use invalid expansion</title>
        <author>
            <name>sd...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327202369"/>
        <updated>2024-02-27T17:17:07.078Z</updated>
        <summary>-</summary>
        <content type="html">Trying to generate Chromium's ninja file using a debug version of gn fails with an assertion error:

```
$ cd ~/Developer/gn 
$ build/gen.py --debug
$ ~/chromium/src/third_party/ninja/ninja -C out gn
ninja: Entering directory `out'
[197/197] LINK gn
$ cd ~/Developer/chromium/src 
$ git rev-parse HEAD
$ cd ~/Developer/gn 
5a15ea1bda9ee1625b313368f94de994c7fec2ba
$ lldb out/gn
(lldb) r --root=$HOME/Developer/chromium/src gen $HOME/Developer/out/Default
Process 50282 launched: '/Users/sdefresne/Developer/gn/out/gn' (arm64)
[0x1701cf000:0227/181145.901157:FATAL:substitution_writer.cc(387)] Check failed: false. Unsupported substitution for this function: {{cflags}}

Process 50282 stopped
* thread #8, stop reason = signal SIGABRT
    frame #0: 0x000000018ab060dc libsystem_kernel.dylib`__pthread_kill + 8
libsystem_kernel.dylib`:
-&gt;  0x18ab060dc &lt;+8&gt;:  b.lo   0x18ab060fc               ; &lt;+40&gt;
    0x18ab060e0 &lt;+12&gt;: pacibsp 
    0x18ab060e4 &lt;+16&gt;: stp    x29, x30, [sp, #-0x10]!
    0x18ab060e8 &lt;+20&gt;: mov    x29, sp
Target 0: (gn) stopped.
(lldb) bt
* thread #8, stop reason = signal SIGABRT
  * frame #0: 0x000000018ab060dc libsystem_kernel.dylib`__pthread_kill + 8
    frame #1: 0x000000018ab3dcc0 libsystem_pthread.dylib`pthread_kill + 288
    frame #2: 0x000000018aa49a40 libsystem_c.dylib`abort + 180
    frame #3: 0x000000010002f32c gn`logging::LogMessage::~LogMessage(this=0x00000001701cdb80) at logging.cc:185:5
    frame #4: 0x000000010002f3f0 gn`logging::LogMessage::~LogMessage(this=0x00000001701cdb80) at logging.cc:171:27
    frame #5: 0x0000000100278100 gn`SubstitutionWriter::GetSourceSubstitution(target=0x0000000121857ea0, settings=0x0000000140f05220, source=0x00006000037a1ae0, type=0x000000010036ce20, output_style=OUTPUT_RELATIVE, relative_to=0x00000001418082d8) at substitution_writer.cc:387:5
    frame #6: 0x0000000100278760 gn`SubstitutionWriter::WriteNinjaVariablesForSource(target=0x0000000121857ea0, settings=0x0000000140f05220, source=0x00006000037a1ae0, types=size=6, escape_options=0x00000001701ce0ac, out=0x00000001701ce940) at substitution_writer.cc:335:11
    frame #7: 0x00000001001c6a40 gn`NinjaActionTargetWriter::WriteSourceRules(this=0x00000001701ce768, custom_rule_name="__base_base_unsafe_buffers_nocompile_tests___build_toolchain_mac_clang_arm64__rule", input_deps=size=1, order_only_deps=size=0, output_files=0x00000001701ce2b0 size=1) at ninja_action_target_writer.cc:245:5
    frame #8: 0x00000001001c5e10 gn`NinjaActionTargetWriter::Run(this=0x00000001701ce768) at ninja_action_target_writer.cc:80:5
    frame #9: 0x00000001001f38a4 gn`NinjaTargetWriter::RunAndWriteFile(target=0x0000000121857ea0, resolved=0x0000600009ef42b8, ninja_outputs=0x0000000000000000) at ninja_target_writer.cc:152:12
    frame #10: 0x00000001000fd3c8 gn`commands::(anonymous namespace)::BackgroundDoWrite(write_info=0x000000016fdfee68, target=0x0000000121857ea0) at command_gen.cc:110:7
    frame #11: 0x00000001000fd308 gn`commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2::operator()(this=0x0000600003996bc8) const at command_gen.cc:133:34
    frame #12: 0x00000001000fd2dc gn`decltype(std::declval&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2&amp;&gt;()()) std::__1::__invoke[abi:v160006]&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2&amp;&gt;(__f=0x0000600003996bc8) at invoke.h:394:23
    frame #13: 0x00000001000fd294 gn`void std::__1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2&amp;&gt;(__args=0x0000600003996bc8) at invoke.h:487:9
    frame #14: 0x00000001000fd270 gn`std::__1::__function::__alloc_func&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2, std::__1::allocator&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2&gt;, void ()&gt;::operator()[abi:v160006](this=0x0000600003996bc8) at function.h:185:16
    frame #15: 0x00000001000fc190 gn`std::__1::__function::__func&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2, std::__1::allocator&lt;commands::(anonymous namespace)::ItemResolvedAndGeneratedCallback(commands::(anonymous namespace)::TargetWriteInfo*, BuilderRecord const*)::$_2&gt;, void ()&gt;::operator()(this=0x0000600003996bc0) at function.h:356:12
    frame #16: 0x00000001001c2de8 gn`std::__1::__function::__value_func&lt;void ()&gt;::operator()[abi:v160006](this=0x0000600003996bc0) const at function.h:510:16
    frame #17: 0x00000001001b3bcc gn`std::__1::function&lt;void ()&gt;::operator()(this=0x0000600003996bc0) const at function.h:1156:12
    frame #18: 0x000000010023eeec gn`Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2::operator()(this=0x0000600003996bb8) const at scheduler.cc:62:5
    frame #19: 0x000000010023eebc gn`decltype(std::declval&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2&amp;&gt;()()) std::__1::__invoke[abi:v160006]&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2&amp;&gt;(__f=0x0000600003996bb8) at invoke.h:394:23
    frame #20: 0x000000010023ee74 gn`void std::__1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2&amp;&gt;(__args=0x0000600003996bb8) at invoke.h:487:9
    frame #21: 0x000000010023ee50 gn`std::__1::__function::__alloc_func&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2, std::__1::allocator&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2&gt;, void ()&gt;::operator()[abi:v160006](this=0x0000600003996bb8) at function.h:185:16
    frame #22: 0x000000010023dbd0 gn`std::__1::__function::__func&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2, std::__1::allocator&lt;Scheduler::ScheduleWork(std::__1::function&lt;void ()&gt;)::$_2&gt;, void ()&gt;::operator()(this=0x0000600003996bb0) at function.h:356:12
    frame #23: 0x00000001001c2de8 gn`std::__1::__function::__value_func&lt;void ()&gt;::operator()[abi:v160006](this=0x00000001701ceef8) const at function.h:510:16
    frame #24: 0x00000001001b3bcc gn`std::__1::function&lt;void ()&gt;::operator()(this= Lambda in File scheduler.cc at Line 61) const at function.h:1156:12
    frame #25: 0x00000001002f90d8 gn`WorkerPool::Worker(this=0x0000000141808500) at worker_pool.cc:148:5
    frame #26: 0x00000001002fb944 gn`WorkerPool::WorkerPool(unsigned long)::$_0::operator()(this=0x00006000037940d8) const at worker_pool.cc:95:38
    frame #27: 0x00000001002fb8f4 gn`decltype(std::declval&lt;WorkerPool::WorkerPool(unsigned long)::$_0&gt;()()) std::__1::__invoke[abi:v160006]&lt;WorkerPool::WorkerPool(unsigned long)::$_0&gt;(__f=0x00006000037940d8) at invoke.h:394:23
    frame #28: 0x00000001002fb890 gn`void std::__1::__thread_execute[abi:v160006]&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt;&gt;, WorkerPool::WorkerPool(unsigned long)::$_0&gt;(__t=size=2, (null)=__tuple_indices&lt;&gt; @ 0x00000001701cef7f) at thread:288:5
    frame #29: 0x00000001002fb22c gn`void* std::__1::__thread_proxy[abi:v160006]&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt;&gt;, WorkerPool::WorkerPool(unsigned long)::$_0&gt;&gt;(__vp=0x00006000037940d0) at thread:299:5
    frame #30: 0x000000018ab3e034 libsystem_pthread.dylib`_pthread_start + 136
(lldb) up 5
frame #5: 0x0000000100278100 gn`SubstitutionWriter::GetSourceSubstitution(target=0x0000000121857ea0, settings=0x0000000140f05220, source=0x00006000037a1ae0, type=0x000000010036ce20, output_style=OUTPUT_RELATIVE, relative_to=0x00000001418082d8) at substitution_writer.cc:387:5
   384 	  } else if (IsValidRustSubstitution(type)) {
   385 	    to_rebase = source.value();
   386 	  } else {
-&gt; 387 	    NOTREACHED() &lt;&lt; "Unsupported substitution for this function: "
   388 	                 &lt;&lt; type-&gt;name;
   389 	    return std::string();
   390 	  }
(lldb) p target-&gt;label()-&gt;name()
(const std::string) "base_unsafe_buffers_nocompile_tests"
```

The issue is the use of `{{cflags}}` in the `args` of the `action_foreach` in the expansion of the `nocompile_source_set` template. The reason is that `gn` can only expand this pattern in a compiler context, not in an action context.

</content>
    </entry>
    <entry>
        <id>327158035</id>
        <title>Able to access UPI ID “A” with UPI Pin of another UPI ID “B” while cancelling autopay </title>
        <author>
            <name>pa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327158035"/>
        <updated>2024-02-27T16:58:43.902Z</updated>
        <summary>-</summary>
        <content type="html">Requested my respective bank to update the new mobile number corresponding to my bank account , Once it got successfully updated , the upi id (let’s say A) on gpay which was linked with the previous mobile number stopped working and on which one autopay was also enabled for a subscription , and when tried to cancel that autopay , I was getting error as incorrect upi pin since the autopay was linked to old mobile number’s upi id (A)  , Simultaneously I created another upi id (let’s say B) with newly updated mobile number for the same bank account number , now again when I tried to cancel the autopay which was linked to old upi id (A)  by entering pin of the new upi id (B) , it worked and the autopay got cancelled which actually should not be the case.

</content>
    </entry>
    <entry>
        <id>327196918</id>
        <title>Tests are failing: avatar_toolbar_button_delegate.cc(416): Check failed: management_environment != chrome::enterprise_util::ManagementEnvironment::kNone (0 vs. 0)</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327196918"/>
        <updated>2024-02-27T16:56:48.950Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
avatar_toolbar_button_delegate.cc(416): Check failed: management_environment != chrome::enterprise_util::ManagementEnvironment::kNone (0 vs. 0)

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/AvatarToolbarButtonEnterpriseBadgingBrowserTest.DecliningManagementShouldRemoveWorkBadge


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/72ca7aae8881dafba6a5505aeb9cdafc

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326980486</id>
        <title>Rendering bug with Radeon Adrenalin driver 24.2.1</title>
        <author>
            <name>op...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980486"/>
        <updated>2024-02-27T16:35:38.684Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Have a RDNA3 GPU such as the RX 7900 XTX.
2. Install Adrenalin driver version 24.2.1. Bug doesn't happen with any other version.
3. Use Windows 11, 23H2 fully up to date, with System &gt; Display &gt; Use HDR = Off.
4. (Possibly necessary) Use a monitor that does support HDR; reproduced with a Gigabye M32U, stock settings on the OSD.
5. Just use Chrome normally, the problem described below happens constantly.

# Problem Description
Rendering can become " washed out" as if the whole client area has some bad alpha blending on top or broken SDR color profile. 
Text is very hard to read, and very thin lines disappear (eg. in Google Sheets all grid lines vanish).

This happens depending on focus and mouse pointer position, so as you move the mouse over Chrome the bug pops in and out. When the mouse hovers elements like the toolbar, the bug happens but only temporarily, for a period that seems lower than 1 second so there's some timer involved in the problem.

I reported this on a Twitter thread, including a picture (the bug is impossible to capture with screenshot/capture programs)

https://twitter.com/opinali/status/1762250672416723053

Big is 100% reproducible in my system for both Chrome and Microsoft Edge, so it looks like a Chromium issue. Other browsers, like Firefox in the picture, behave normally. Many other applications that I have that make intensive and advanced use of the GPU such as games behave normally.

An AMD driver engineer replied to the thread that he tried to reproduce this bug (https://twitter.com/mikeev/status/1762499341275795469) so this is possibly tied to particular monitors or other factors. My Win11 installation is very clean since I had recently installed it.

AMD has done some massive changes in their last two drivers, so it looks like something changed in the last one that Chromium's rendering code doesn't like.

Bug disappears if I configure Windows to HDR=On, with or without HDR calibration and independent of color profiles.

I didn't test this on prior builds of Chrome so I don't know if it is a regression. I tested disabling several rendering-related flags in chrome://flags, but nothing works. Bug happens at stock Chrome settings with no override of any flag; or overriding anything that I tried, but I only tried the obvious things (not familiar with Chromium/Chrome internals).

# Additional Comments
I'm not a Chromium dev but I am a Googler, contact opinali@google.com if there is more help I can give internally such as giving remote access to the machine that repros the problem.

# Summary
Rendering bug with Radeon Adrenalin driver 24.2.1

# Custom Questions
#### Example URL: 
Not dependent of any URL. Happens to about:blank.

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327183406</id>
        <title>random occurrences of XMLHttpRequest POST resending request as GET</title>
        <author>
            <name>gr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327183406"/>
        <updated>2024-02-27T16:34:48.254Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. We are not able to reproduce this error in order to diagnose the issue that clients experience, therefore the reason for this ticket.
2.
3. 

# Problem Description
Randomly, our XMLHttpRequest POST requests do not work properly.  When this happens, according to our web server logs, the POST is received and processed by our web server and returns a status 200 with no error codes.  However, our callback method after the XMLHttpRequest does not get called (based on xhr.readyState == 4 &amp;&amp; xhr.status == 200).  We also have a separate error callback for case when the status != 200, which also does not get called.  But the really strange this is that immediately following the POST request, our web server receives another request, however this is a GET, not a POST.  This is not the result of sending another XMLHttpRequest, and even if it were, we're definitely not setting the method to be GET, it would still be a POST.

This has nothing with CORS.  The requests are all to the same domain.

According to our web server logs, based on the user agents, this only happens in Chrome and on multiple devices types (predominantly Chromebooks since that is our largest user base, however it also happens with Chrome on Windows and Mac).

To elaborate on the question below "Did this work before?",  I'm fairly certain this used to work.  I don't recall ever seeing this issue prior to sometime around September 2023, however the clients for this service are school districts (specifically students at the schools) and therefore there was little to no usage from mid June through August.  We don't have web server logs from that far back to say for sure and exactly when or which Chrome version this started happening.

Since it predominantly happens on Chromebooks, I'd want to think it related to a network disruption, however that should result in an xhr.status of 0 and our error method should be called, not another request being sent to the server as a GET.

# Summary
random occurrences of XMLHttpRequest POST resending request as GET

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327027137</id>
        <title>The Google Console does get Chrombooks Stuck on the task bar if you try to Delete users from devices</title>
        <author>
            <name>cg...@peterson.mx</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027137"/>
        <updated>2024-02-27T16:32:03.824Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Add chromebook device
2. turn off the device (like broken,lost or stolen)
3. try to erase users from console or put factory default
the Task got stuck for ever

# Problem Description
 Some Chromebooks lose connection with the Google console and make makes the ones send to it stuck for ever since there is no way to stop the one's 

# Summary
The Google Console does get Chrombooks Stuck on the task bar if you try to Delete users from devices

# Additional Data
Category: Enterprise \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>327142742</id>
        <title>Accessibility: Support of WCAG 2.2 compliant scroll bars with a target size of 24px</title>
        <author>
            <name>th...@sap.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327142742"/>
        <updated>2024-02-27T16:28:50.491Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. https://codepen.io/dencker/pen/rNbBWGx
2. Check the width of the scrollbars 

# Problem Description
Currently it is not possible to create standard scrollbars in Chromium which fulfill the new WCAG 2.2 standard of Target Size (Minimum) Level AA - Understanding SC 2.5.8 with a size of 24px. See https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html

According Chromium bug report https://issues.chromium.org/issues/41494676 and spec https://drafts.csswg.org/css-scrollbars-1/#out-of-scope the old pseudo elements -webkit-scrollbar{width 24px;} should not be used. Instead, the property scrollbar-width was introduced. 

But the scrollbar-width property supports only the value auto, thin or none. At least currently auto doesn't result in a WCAG 2.2 conform scrollbar. 

Is it planned to support in Chromium a WCAG 2.2 conform scrollbar by e.g. 
* value auto results in a WCAG 2.2 conform scrollbar with a size of 24px or 
* introduce a new value large with a width/height of 24px or
* ...

If yes, what is the time plan.   

Thorsten

# Summary
Accessibility: Support of WCAG 2.2 compliant scroll bars with a target size of 24px

# Custom Questions
#### Which component does this fall under?
Blink&gt;Scroll

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327158031</id>
        <title>Alt Gr Key not working with Wayland/GTK4 enabled</title>
        <author>
            <name>sh...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327158031"/>
        <updated>2024-02-27T16:24:29.254Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Start Chromium with wayland and gtk4 enabled
2. Type Alt Gr+Q (@)

# Problem Description
I am using Chromium on Archlinux/Wayland/GNOME with the following flags enabled

--enable-features=VaapiVideoDecodeLinuxGL
--ozone-platform=wayland
--gtk-version=4

And the following Keyboard Layouts
German (E2)
日本語 (Mozc:あ)

Using the Alt Gr Key does not work and so typing letters like @ does not work either. I tested without IME but same result.

Alt Gr works perfectly fine in every other app and/or browser, even chromium engine based browsers.

# Additional Comments
Discussed here https://bbs.archlinux.org/viewtopic.php?pid=2153566#p2153566

# Summary
Alt Gr Key not working with Wayland/GTK4 enabled

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327187221</id>
        <title>pagereveal should be dispatched for iframes on BFCache restore</title>
        <author>
            <name>kh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327187221"/>
        <updated>2024-02-27T16:09:34.120Z</updated>
        <summary>-</summary>
        <content type="html">Copying over from the discussion here: https://chromium-review.googlesource.com/c/chromium/src/+/5318099/comment/e0aca860_9d1d1a33/. pagereveal should be dispatched for iframes that are restored from BFCache.

This means that this logic needs to traverse the frame tree: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/exported/web_view_impl.cc;l=2569;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090</content>
    </entry>
    <entry>
        <id>327033775</id>
        <title>CHECK failure: false. ADDRESS:LayoutText #text in element_inner_text.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327033775"/>
        <updated>2024-02-27T15:37:34.536Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5077338659684352

Fuzzer: inferno_twister
Job Type: linux_lsan_chrome_mp
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  false. ADDRESS:LayoutText #text in element_inner_text.cc
  
Sanitizer: address (ASAN)

Crash Revision: https://clusterfuzz.com/revisions?job=linux_lsan_chrome_mp&amp;revision=1264944

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5077338659684352

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.


************************* UNREPRODUCIBLE *************************
Note: This crash might not be reproducible with the provided testcase. That said, for the past 14 days, we've been seeing this crash frequently.

It may be possible to reproduce by trying the following options:
- Run testcase multiple times for a longer duration.
- Run fuzzing without testcase argument to hit the same crash signature.

If it still does not reproduce, try a speculative fix based on the crash stacktrace and verify if it works by looking at the crash statistics in the report. We will auto-close the bug if the crash is not seen for 14 days.
******************************************************************</content>
    </entry>
    <entry>
        <id>327033774</id>
        <title>tint_wgsl_fuzzer: Ill in tint::fuzz::wgsl::TintInternalCompilerErrorReporter</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327033774"/>
        <updated>2024-02-27T15:34:08.497Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4608196790910976

Fuzzing Engine: libFuzzer
Fuzz Target: tint_wgsl_fuzzer
Job Type: libfuzzer_chrome_msan
Platform Id: linux

Crash Type: Ill
Crash Address: 0x5c86fcecc1fa
Crash State:
  tint::fuzz::wgsl::TintInternalCompilerErrorReporter
  tint::InternalCompilerError::~InternalCompilerError
  tint::wgsl::IRRoundtripFuzzer
  
Sanitizer: memory (MSAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_msan&amp;range=1228430:1228437

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4608196790910976

Issue filed automatically.

See https://www.chromium.org/developers/testing/memorysanitizer#TOC-Reproducing-ClusterFuzz-Bugs for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>326980484</id>
        <title>[WebView] More Robust UI Styling and Themes </title>
        <author>
            <name>wb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980484"/>
        <updated>2024-02-27T15:23:42.257Z</updated>
        <summary>-</summary>
        <content type="html">Currently WebView is quite limited in the ability to inherit UI styles and themes from the embedding application. We should design and implement a system to handle this. The system should do the following:

1. Inherit set styles and themes from the embedding application where applicable (e.g. Dialog text size &amp; color).
2. Fallback to default Android styling (using AOSP attributes) if the application hasn't set all needed attributes.</content>
    </entry>
    <entry>
        <id>327112547</id>
        <title>Chrome tab crashes after updating to Version 122.0.6261.69 if video conference meeting is run</title>
        <author>
            <name>ga...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327112547"/>
        <updated>2024-02-27T15:22:49.699Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Start a meeting in meeting.zoho.com
2. Set virtual background and keep audio unmuted
3. Leave the session running for 20 to 30 minutes. Tab crashes automatically

# Problem Description
Tab crashes with "Aw snap error". Different users get different codes. The codes received so far are - code: 5 or 11 or out of memory

# Summary
Chrome tab crashes after updating to Version 122.0.6261.69 if video conference meeting is run

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326987169</id>
        <title>Some soft LCP entries have a startTime and renderTime of 0</title>
        <author>
            <name>br...@googlemail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326987169"/>
        <updated>2024-02-27T15:02:54.613Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://www.fressnapf.de/, which is a single-page application with the Soft Navigation Heuristics Origin Trial enabled.
2. Enter this script from [https://developer.chrome.com/docs/web-platform/soft-navigations-experiment#how_can_i_measure_soft_navigations](https://developer.chrome.com/docs/web-platform/soft-navigations-experiment#how_can_i_measure_soft_navigations) into the console in DevTools:

```js
new PerformanceObserver((entryList) =&gt; {
  for (const entry of entryList.getEntries()) {
    const softNavEntry =
      performance.getEntriesByType('soft-navigation').filter(
        (navEntry) =&gt; navEntry.navigationId === entry.navigationId
      )[0];
    const hardNavEntry = performance.getEntriesByType('navigation')[0];
    const navEntry = softNavEntry || hardNavEntry;
    const startTime = navEntry?.startTime;
    console.log('LCP time:', entry.startTime - startTime);
  }
}).observe({type: 'largest-contentful-paint', buffered: true, includeSoftNavigationObservations: true});

```

3. Click on product tiles or content boxes to trigger soft navigations.

# Problem Description
# Current Results

* After some soft navigations, an LCP candidate ("LCP#1", which is a loading indicator) with a positive `startTime` and positive `renderTime` LCP candidates are logged to console followed by a second LCP ("LCP#2", which can be a hero product image) candidate with a `renderTime` and a `startTime` of 0; both LCP#1 und LCP#2 have the same `navigationId` as the soft navigation (see "screenshot-1.png" attached).
* LCP#2 is requested from the network (see "screenshot-2.png").
* If we send LCP#2 to analytics, we end up with negative LCP times if subtracting its `startTime` from the soft navigation `startTime`. 
* The `element` in the LCP#2 entry is null.

# Expected Results

* When multiple soft LCP candidates are registered and share the same `navigationID` and one candidate has a non-zero `startTime` or `renderTime`, any subsequent candidate should probably have a non-zero a non-zero `startTime` or `renderTime` as well.

# Additional Comments
I can also reproduce the issue on another SPA site, https://www.interflora.fr/ (see "screenshot-3.png" attached). There I have also seen LCP entries with a `startTime` and `renderTime` of 0 and a null `element` even when there is only a single LCP entry with the same `navigationId` as the soft navigation `navigationId`.

It looks like https://issues.chromium.org/u/1/issues/41489896 is a related issue.

# Summary
Some soft LCP entries have a startTime and renderTime of 0

# Custom Questions
#### Which component does this fall under?
Blink&gt;PerformanceAPIs

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327173874</id>
        <title>Add First Run Recency 3 days in experimental settings</title>
        <author>
            <name>sc...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327173874"/>
        <updated>2024-02-27T14:59:13.324Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327112546</id>
        <title>Add support for Sony Camera IMX175 chipset</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327112546"/>
        <updated>2024-02-27T14:46:54.230Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. turn on
2. open camera
3. no image

# Problem Description
camera chipset has no drivers in Chrome OS Flex

# Summary
Add support for Sony Camera IMX175 chipset

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327026311</id>
        <title>Add device support in Chrome OS Flex for OMNIVISION OV2722 camera</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026311"/>
        <updated>2024-02-27T14:45:29.668Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. turn on
2. open camera
3. doesn't work

# Problem Description
Chrome OS Flex doesn't support this camera chipset.

# Summary
Add device support in Chrome OS Flex for OMNIVISION OV2722 camera

# Custom Questions
#### Does this work in other browsers?

Not sure - I don't know

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>327027611</id>
        <title>Microsoft SSO not properly working on Chromium-based browsers, Constant authentication required.</title>
        <author>
            <name>Go...@matthewsluberski.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027611"/>
        <updated>2024-02-27T14:41:30.883Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Sign into Company M365 account
2. go to myapplications.microsoft.com and authenticate
3. click on any myapplications tile. The tile should automatically authenticate since you have authenticated before.  
4. Instead, username/password and MFA code is needed each time that you open a tile.
5. 50% of the time, the webpage does not load and you need to reload it 4-5 times.

Troubleshooting done:
1. reset all browser data (all time)
2. Full re-install of Chrome (including all local data, and removing all Google related folders on the C drive and sub-directories)
3. Tried on VPN and non VPN

# Problem Description
The problem consists of multiple authentications to Microsoft and browser running at a slow pace.  In a normal scenario, you would only have to authenticate one time at the beginning of an 8-hour period as it would cache your login.  Each subsequent SSO application that you navigated should automatically log you in and authenticate you.  Instead, what is happening, is that each time you open another SSO application, you must enter your username/password/MFA code again each time you open the same or different applications.  Nothing has changed in our MS tenant that would cause this to break, as it works fine on Firefox, Brave, and other non-chromium based browsers.  Using Edge (which is chromium based) helps the issue slightly, but it still does not work.  the speed issues are also an issue, it takes 1+ minute to load some of the SSO applications when it would take 10 seconds before, this does not happen with the same applications on a non-Chromium browser. 

# Additional Comments
We use Microsoft M365 Subscriptions for our users and have not had this problem in the past

# Summary
Microsoft SSO not properly working on Chromium-based browsers, Constant authentication required.

# Custom Questions
#### Example URL: 
anything Microsoft SSO

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327135987</id>
        <title>Weird Star like Objects appear in place of rectangular or circular elements in websites</title>
        <author>
            <name>ar...@outlook.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327135987"/>
        <updated>2024-02-27T14:35:57.394Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. visit any website with rectangular or round elements, say, github.com or google.com.
2. look for rectangular and round elements, and notice their shape, like on github profile pictures appears as star shape and in google, search result icons, gen ai button, google lens icon etc looks like star shape.

# Problem Description
On visiting any website having rectangular or round elements, those elements appears as weird star shape (checked on Stable 122.0.6261.64 and canary 124.0.6323.0) it just seems to behave fine in other browsers

# Summary
Weird Star like Objects appear in place of rectangular or circular elements in websites

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327165712</id>
        <title>Please give Dart EngProd access to logs in chromecompute project</title>
        <author>
            <name>wh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327165712"/>
        <updated>2024-02-27T14:23:23.982Z</updated>
        <summary>-</summary>
        <content type="html">The startup logs for Windows VMs in Dart's LUCI swarming pool, in the dart-internal GCP project, are being sent to the chromecompute project, according to information from a chat.

We would like the dart-engprod group to be given log read access to the chromecompute project so we can see the startup logs.</content>
    </entry>
    <entry>
        <id>327166055</id>
        <title>Lazily Initialize Tab Helpers That Aren't Needed At Startup</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327166055"/>
        <updated>2024-02-27T14:19:41.670Z</updated>
        <summary>-</summary>
        <content type="html">Currently, all tab helpers are attached when a WebState is created which can lead to longer startup times especially for users with a high amount of tabs. To address this, we plan to create a new template class LazyWebStateUserData which will be used to replace WebStateUserData. Additionally, we will need to refactor tab helpers to use this new class.</content>
    </entry>
    <entry>
        <id>327123596</id>
        <title>Trouble sharing a single non-chrome window</title>
        <author>
            <name>lu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327123596"/>
        <updated>2024-02-27T13:56:34.482Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version:
```
Google Chrome	122.0.6261.69 (Official Build) (64-bit) 
Revision	81bc525b6a36d91ed7fe98a4b53c6f53c79adbb2-refs/branch-heads/6261_57@{#3}
OS	Linux
JavaScript	V8 12.2.281.16
User Agent	Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36
Command Line	/usr/bin/google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland --flag-switches-begin --flag-switches-end --desktop-startup-id=5ba9b31b99eb86ad6eb38bc00868e141
```

What steps will reproduce the problem?
(1) join a google meet meeting
(2) click the present button
(3) try to share a window
(4) Attempt to share a non-browser window in google meet (ideally my terminal, alacritty)


What is the expected result?
I can share the terminal

What happens instead?
I tried sway, gnome 3 and kde plasma

### Sway
* After selecting "window", no preview will display.
* If you click in the area where the preview would normally display, it shows a preview of the entire screen.
* the "choose a different window" button does not allow anything else but the entire screen appear.
* note: this does actually allow me to share the entire screen. I just can't select a single window.

### Gnome 3
* After selecting "window", no preview will display.
* If you click in the area where the preview would normally display, nothing ever happens
* If you select the blank preview window and try to share, it does not share anything

### KDE Plasma
My screen recording messed up so I will redo this step with more details. From memory:
* This actually works. The window pops up after selecting "window" with actual previews of separate windows.
* This did allow me to share, but something went wrong. The CPU usage looked so high I couldn't move the mouse cursor for several seconds. This might have messed up the screen recording.

I've attached dbus logs for each of these sessions. I have screen recordings in a drive folder. Please let me know if those are desired.</content>
    </entry>
    <entry>
        <id>326980481</id>
        <title>Randomized-response calculations crash on maximal sources</title>
        <author>
            <name>ap...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980481"/>
        <updated>2024-02-27T13:51:16.493Z</updated>
        <summary>-</summary>
        <content type="html">On sufficiently large output states (the maximal case being a source with 20 reports, 32 trigger data values, and 5 report windows), a [multiplication in the `BinomialCoefficient` function](https://source.chromium.org/chromium/chromium/src/+/main:content/browser/attribution_reporting/privacy_math.cc;l=296;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090) overflows an `int64_t`, causing a crash.

In other words, this function crashes when called as `BinomialCoefficient(180, 20)`.</content>
    </entry>
    <entry>
        <id>327022941</id>
        <title>Omnibox height is too large</title>
        <author>
            <name>ha...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327022941"/>
        <updated>2024-02-27T13:24:27.648Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Update Chrome from 114 to 115 or higher.
2. See this stupid new omnibox design that wastes so much vertical space!
3. Return it to the normal size before 2023 UI refresh.

# Problem Description
The problem is that Chrome designers make stupid decisions about UI.

After Chroe 2023 UI refresh omnibox height increased once again! Now it wastes even more vertical space. i mean, THERE ARE MARGINS ABOVE AND UNDER THE TABS! WHY? JUST WHY? What is the purpose of this new design? Maybe it works okay for people using 32 inch monitors, but for others it looks like a very dumb change. Maybe think about people who use laptops? No? Please!

At lease make a switch to return the omnibox height to the same size (or smaller) it was before the UI refresh.

# Summary
Omnibox height is too large

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
</feed>