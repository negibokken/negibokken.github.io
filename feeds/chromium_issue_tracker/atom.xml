<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-24T08:06:40.390Z</updated>
    <entry>
        <id>326517413</id>
        <title>[Chrome Perf Accessibility Sheriff]: 8 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326517413"/>
        <updated>2024-02-24T08:06:40.390Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264443:1264454:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=39a86052-f750-411c-b983-a7f4b71c8c62

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=39a86052-f750-411c-b983-a7f4b71c8c62

Top 8 regressions (out of 9, with 1 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    31338.31%: 2.079 -&gt; 653.6025 ms
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    14921.95%: 2.403 -&gt; 360.9775 ms
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     6034.79%: 0.631 -&gt; 38.710499999999996 ms
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-deep-tree.html
     3370.93%: 3.874 -&gt; 134.464 ms
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-focusable-containers.html
     3341.89%: 3.944 -&gt; 135.748 ms
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-display-none.html
      431.65%: 25.394 -&gt; 135.008 ms
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/build-table.html
       95.66%: 439.966 -&gt; 860.837 ms
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.accessibility/BrowserAccessibilityManager::OnAccessibilityEvents_sum/focus-links.html
       25.53%: 20.076 -&gt; 25.201 ms

Top 3 affected measurements in android-pixel2_webview-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    31338.31%: 2.079 -&gt; 653.6025 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    14921.95%: 2.403 -&gt; 360.9775 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     6034.79%: 0.631 -&gt; 38.710499999999996 ms


Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.accessibility/BrowserAccessibilityManager::OnAccessibilityEvents_sum/focus-links.html
       25.53%: 20.076 -&gt; 25.201 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1264401..1264490
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/c582ec924d4ac7a1b09c604f1cdff508881d311e..c582ec924d4ac7a1b09c604f1cdff508881d311e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e166dec0a9f143140377af113ba66fbf0e052b01..e166dec0a9f143140377af113ba66fbf0e052b01</content>
    </entry>
    <entry>
        <id>326578841</id>
        <title>add jpeg xl support.</title>
        <author>
            <name>si...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578841"/>
        <updated>2024-02-24T07:56:00.286Z</updated>
        <summary>-</summary>
        <content type="html">jpeg xl is a open source image file format that is all-rounder has more features and is superior than AVIF and WebP in almost every aspect.
https://cloudinary.com/blog/how_jpeg_xl_compares_to_other_image_codecs

jpeg xl was removed from chromium due to "There is not enough interest from the entire ecosystem to continue experimenting with JPEG XL" but now it has been adopted by whole Apple ecosystem. adobe, and Samsung on android, and even coming to windows.

I don't see it any reasons not to jpeg xl (JXL) to chromium project.

</content>
    </entry>
    <entry>
        <id>326503108</id>
        <title>xorg-server primary selection contains unwanted text from html table with style user-select: none</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503108"/>
        <updated>2024-02-24T07:44:28.377Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. open a page with a table with hidden text
2. select one line and press Ctrl+C = copy to clipboard
3. select the same line again = copy to xorg-server primary selection
4. compare the two clipboards

the order of steps 2 and 3 is important, because Ctrl+C would override the primary selection

# Problem Description
example:
copy-paste of github diff over xorg primary selection includes U+FFFC "object replacement character"

on the github diff page https://github.com/chromium/chromium/commit/3710916e2d5113fa975ab07b604a83d0c98510d3

when i copy the first line "Diagnostics:"

then i get these two clipboards

$ echo primary; xclip -sel p -o | hexdump -C; echo clipboard; xclip -sel c -o | hexdump -C
primary
00000000  44 69 61 67 6e 6f 73 74  69 63 73 3a 0a ef bf bc  |Diagnostics:....|
00000010
clipboard
00000000  44 69 61 67 6e 6f 73 74  69 63 73 3a 0a           |Diagnostics:.|
0000000d

note the extra "ef bf bc" in the primary selection
expected: the extra "ef bf bc" should not be there

"ef bf bc" = efbfbc = 0xefbfbc = U+FFFC = object replacement character
https://www.fileformat.info/info/unicode/char/fffc/index.htm
used as placeholder in text for an otherwise unspecified object

the extra "ef bf bc" always comes
after the linefeed character = \n = 0a = 0x0a
so there is always the byte sequence "0a ef bf bc"

the github diff view is implemented with an html table
where the left column has the style { user-select: none; }
so the left column is not part of the text selection

trying a minimal reproducer

&lt;table&gt;&lt;tr&gt;
&lt;td style="user-select: none;"&gt;dont select me&lt;/td&gt;
&lt;td&gt;select me&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

$ echo primary; xclip -sel p -o | hexdump -C; echo clipboard; xclip -sel c -o | hexdump -C; 
primary
00000000  64 6f 6e 74 20 73 65 6c  65 63 74 20 6d 65 09 73  |dont select me.s|
00000010  65 6c 65 63 74 20 6d 65                           |elect me|
00000018
clipboard
00000000  73 65 6c 65 63 74 20 6d  65                       |select me|
00000009

hmm. the extra "ef bf bc" is missing
but "dont select me" should not be in the primary selection

this seems to be an issue with html table
here it works as expected

&lt;span style="user-select: none;"&gt;dont select me&lt;/span&gt;
&lt;span&gt;select me&lt;/span&gt;

# Summary
xorg-server primary selection contains unwanted text from html table with style user-select: none

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326521455</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326521455"/>
        <updated>2024-02-24T07:35:41.461Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264643:1264682:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b1048408-6290-406a-9f4a-4a6e44d5320d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b1048408-6290-406a-9f4a-4a6e44d5320d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/extra_large_texture_uploads
        3.98%: 61.51865 -&gt; 63.9657 

Top 1 affected measurements in android-pixel6-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/extra_large_texture_uploads
        3.98%: 61.51865 -&gt; 63.9657 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326639457</id>
        <title>UI&amp;gt;Browser&amp;gt;LookalikeChecks</title>
        <author>
            <name>hr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326639457"/>
        <updated>2024-02-24T07:11:12.565Z</updated>
        <summary>-</summary>
        <content type="html">hi,
when i am accessing my website that was recently launched, google chrome is throwing fake website alert. not sure why is that happening that way. please mark my website as safe in your system

hriconic.com

this is SaaS B2B recruitment product related website. Please do it asap. I am very concerned about this and is severely impacting my sales pitch</content>
    </entry>
    <entry>
        <id>326578840</id>
        <title>Automate testing of touchscreen with Chromebook - GSOC (QUESTIONS)</title>
        <author>
            <name>kk...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578840"/>
        <updated>2024-02-24T06:35:57.305Z</updated>
        <summary>-</summary>
        <content type="html">Project Description

This project aims to automate the testing of touchscreens with Chromebook using a human motion robot (HMR). Currently, touchscreens or any other touchpad-related test cases take much longer time and are more expensive when going through lab testing. Developing and conducting these tests via a HMR saves half the cost and accelerate the testing time from 13 hours to 15 minutes.
The objectives of this project include evaluating and assessing the pass/fail of touchscreen test cases, developing automation scripts in tast/go for onboarding the Human Motion Robots (HMR), and implementing the HMR’s testing lifecycle to run and evaluate test results.
This work will be phase 2 of HMR based on eng prod regression. Phase1 was launched this year for HMR based stylus regression. That work was also done with the help of GSoC intern and it was a great experience for the candidate to learn handson go, taste.

Project Size &amp; Length: Large &amp; 22 weeks
Mentors:  torsha@google.com, hbarnor@google.com
Starter bugs: b/326134151, b/326133810
Skills Required: python, C++

Hello mentors

I hope this message finds you well. I'm reaching out to express my sincere interest in your project and my enthusiasm to learn more about it. While I'm relatively new to this field, I come with a solid foundation in C++ and Python, and I'm thrilled about the opportunity to contribute and grow alongside your team.

Could you kindly recommend some resources that would help me expand my knowledge and skill set? I'm fully dedicated to learning and eager to make meaningful contributions to the project.

Additionally, I have a question regarding the starter bugs listed: b/326134151 and b/326133810. I'm having trouble understanding them. Could you please provide some clarification?

Thank you for considering me for this exciting opportunity to learn and develop with your team.

Regards
Kamakshi Ojha
kkamakshiojha@gmail.com
</content>
    </entry>
    <entry>
        <id>326584519</id>
        <title>[Chromium GSoC] Request for clarifications (sanitize-safety)</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326584519"/>
        <updated>2024-02-24T06:23:17.322Z</updated>
        <summary>-</summary>
        <content type="html">Greetings, 

I hope this find you well. I found this project really interesting to work on but am not sure about my awareness of qualifications needed to complete it. so, I hope we could discuss this.

 If I'm understanding project idea correctly, you need to change the method that erase user-data to make it NIST certified by using one of its well-known methods like sanitize command. Also need that method to be eligible to work while erasing device when reset to developer mode and add a feature to it to make it report to user about deleted device. Is that the whole thing or am I missing something?

 Also, I did some research about NIST 800-88, media sanitization, power-washing (reset), and sanitize command which require understand basic Linux commands, because it's likely operating in Linux environment (not sure if that accurate or not). I have good understanding of C++ and have some hand-on experience using it, but unfortunately, I'm not familiar with most of above concepts. So, am not sure what should I do in that situation? am I eligible to work on that idea or I need some improvement? your advice would be super helpful. 

I tried to reach the starter bug by search for it in "Search Chromium issues" but did not find it, so if you could provide me a way to reach it (if I'm eligible to work on it), I would really appreciate that.

Thank you for the time and effort.

Sincerely 
Mohammed 
</content>
    </entry>
    <entry>
        <id>326607005</id>
        <title>Figure out how to re-enable GTEST_HAS_ABSL (which requires integrating absl flags)</title>
        <author>
            <name>dc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326607005"/>
        <updated>2024-02-24T06:21:30.609Z</updated>
        <summary>-</summary>
        <content type="html">Currently, the Googletest roll has been blocked for an extended period of time: see issue 40889371.

In order to unblock it, we are disabling abseil support in Googletest for now. Some of the background that led to this decision is discussed in
https://docs.google.com/document/d/1IfaG0ris5Wj0AW4VPoi5CbVN9n3c5mbGbdC2rk75DMU/edit?usp=sharing.

However, GoogleTest may eventually make Abseil a non-optional dependency, and at that point, Chrome will need to find an alternate solution. Most likely, this means tweaking the build to make Abseil flags usable in tests, but not elsewhere. The doc above discusses a hybrid approach that has some promise (and will hopefully be usable for fuzztests as well).</content>
    </entry>
    <entry>
        <id>326654926</id>
        <title>[Desktop Power Perf Sheriff]: 3 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326654926"/>
        <updated>2024-02-24T05:47:16.900Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262890:1263084:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4fe32281-6c15-404c-b957-f3e331700e2a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4fe32281-6c15-404c-b957-f3e331700e2a

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_cnn_2020
       15.76%: 0.311 -&gt; 0.36 n%
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_amazon_2018
       11.01%: 0.327 -&gt; 0.363 n%
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_desktop_2020
       10.39%: 0.356 -&gt; 0.393 n%

Top 3 affected measurements in lacros-x86-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_cnn_2020
       15.76%: 0.311 -&gt; 0.36 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_amazon_2018
       11.01%: 0.327 -&gt; 0.363 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_desktop_2020
       10.39%: 0.356 -&gt; 0.393 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/91496b5989a1786a13b079e4e0863e2e378cae65..944b6505c43e1438235348dc6a1b4b2aaaa39777
  Chromium Commit Position: https://crrev.com/1262889..1263084
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a86e1971579f4165123467fa6ad378e552536b43..a86e1971579f4165123467fa6ad378e552536b43
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e..2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e</content>
    </entry>
    <entry>
        <id>326564997</id>
        <title>noserene </title>
        <author>
            <name>no...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326564997"/>
        <updated>2024-02-24T05:04:29.753Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Enable billing 
2. Enable firebase
3. Release app

# Problem Description
Can't enable billing 

# Summary
noserene 

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Dev \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326578836</id>
        <title>[Chromium GSoC] General request to Admins</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578836"/>
        <updated>2024-02-24T04:34:25.894Z</updated>
        <summary>-</summary>
        <content type="html">*Delete this and the below paragraphs and ask your question here, recall that there is lots of material for routine questions. Please go through the [project list](https://docs.google.com/presentation/d/15tLikPVkKrkz53RVG1ncY-8PpWA4dgZU0-5kl-uB4dg/edit#slide=id.ge956d2a9e5_0_661), if you are interested get started on the starter bugs / starter milestone listed on the project doc of each project.*

*If you want a head start or interested in contributing to chromium you can check out the “[Life of a Chromium Developer](https://groups.google.com/a/chromium.org/g/chromium-dev/c/ybLzH8-FoTc/m/YhTe2g9L7CUJ)”, “[contributing](https://chromium.googlesource.com/chromium/src/+/master/docs/contributing.md)”, or “[getting involved](https://www.chromium.org/getting-involved)” for information about getting the code and general flow of making a change to the code base.*

*Please use our [template for a proposal](https://docs.google.com/document/d/1IOj4hSdPl8h1-8zYK_Gt3OxA0R44SLbmr-ZH3f9yDXM/edit?usp=sharing)*

*But we also encourage you to read GSoC's [writing a proposal](https://google.github.io/gsocguides/student/writing-a-proposal) and [example proposal](https://google.github.io/gsocguides/student/proposal-example-1). We suggest you reach out early engage with the starter bug of your project, and submit a proposal soon after you have a handle on the problem.*
</content>
    </entry>
    <entry>
        <id>326607003</id>
        <title>All/BlockedSchemeNavigationBrowserTest.PDF_* failing on fuchsia-code-coverage</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326607003"/>
        <updated>2024-02-24T04:27:05.207Z</updated>
        <summary>-</summary>
        <content type="html">https://crrev.com/1263442 landed recently, as Fuchsia no longer needs Chromium PDF Viewer. After that, the fchsia-code-coverage bot started getting failures in BlockedSchemeNavigationBrowserTest. e.g. https://ci.chromium.org/ui/p/chromium/builders/ci/fuchsia-code-coverage/2895

We need to get that bot green again.</content>
    </entry>
    <entry>
        <id>326678907</id>
        <title>`chrome.tabs.Tab.lastAccessed` gives incorrect result after the tab is moved</title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326678907"/>
        <updated>2024-02-24T03:50:53.051Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
This also happens in Version 123.0.6312.4 (Official Build) beta (64-bit)

1.  Create and load an extension something like this

    background.js:

    ```javascript
    async function f() {
      const tabs = await chrome.tabs.query({currentWindow: true});
      console.log('tabs =', tabs);
      for (let i = 0; i &lt; 2; ++i) {
        if (tabs[i].index == 1) {
          await chrome.tabs.move(tabs[i].id!, { index: 0 });
        }
      }
    }

    chrome.action.onClicked.addListener(() =&gt; {
      f();
    });
    ```

2.  Open two tabs.

3.  Click the extension icon. Go to the Extension setting page and click
    "Inspect views service worker" on the extension. The console log shows

    ```
    tabs =
      0:
        id: 12345
        lastAccessed: 1708745107023.334
        index: 0
      1:
        id: 67890
        lastAccessed: 1708745463493.528
        index: 1
    ```

4.  Click the extension icon **again**. The console log shows

    ```
    tabs =
      0:
        id: 12345
        lastAccessed: 1708745107023.528
        index: 1
      1:
        id: 67890
        lastAccessed: 1708745107023.334
        index: 0
    ```

# Problem Description
It shows that the `lastAccessed` time is bind with tab index, but not tab id,
which I don't think it is correct.

Expected behavior:
In step 4., the correct output should be

```
tabs =
  0:
    id: 12345
    lastAccessed: 1708745107023.334
    index: 1
  1:
    id: 67890
    lastAccessed: 1708745107023.528
    index: 0
```

# Summary
`chrome.tabs.Tab.lastAccessed` gives incorrect result after the tab is moved

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326674688</id>
        <title>Auto Tab Group not working for websites related to shopping</title>
        <author>
            <name>th...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326674688"/>
        <updated>2024-02-24T02:46:14.458Z</updated>
        <summary>-</summary>
        <content type="html">[Chrome Desktop Tab Groups Save and Sync] - Auto Tab Groups feature is not creating a group for websites related to shopping.  

OS:  gLinux Debian &amp; MacOS
Chrome Version:  123.0.6276.0 (Official Build) dev-lacros (64-bit) 

Steps to reproduce:
1)  Login to gLinux (http://go/crd-cloudtop)
2)  Install 124.0.6315.2 (Official Build) dev (64-bit) on gLinux Debian
3)  Launch Chrome (Ver. 124.0.6315.2)
4)  Login to the test account (we used crgenai01@gmail.com)
5)  Open news tabs related to shopping (https://www.target.com/, https://www.walmart.com/, https://www.costco.com/, https://zellers.thebay.com/, https://www.croma.com/)
6)  Create group using any of the options (Organize similar tabs, Organize tabs or Organize tabs - i.e. from  TabContextMenu, TabSearchUI or AppMenu)
7)  "Something went wrong" error would show up.

Expected Behavior:  When we launch a group of shopping websites, Auto Tag Group needs to suggest a group name and allow the user to create the group.

Actual Behavior: Error:  "Something went wrong" error would show up when we try to create a group for the following websites:  https://www.target.com/, https://www.walmart.com/, https://www.costco.com/, https://zellers.thebay.com/, https://www.croma.com/

Screencast:
gLinix Debian:  https://screencast.googleplex.com/cast/NjIwNjAxMTM1MzMzMzc2MHxlZWIyYjQ2OS1mNw
MacOS Catalina:  https://screencast.googleplex.com/cast/NDk4ODA3ODczNjI3NzUwNHwwMTM0OTY5Mi1mNA
CrOS:  https://screencast.googleplex.com/cast/NTExMjQyNTI4NzI1NDAxNnxlZTIwOTJkYS01NA

Listnr:  MacOS Catalina 10.15.7
#crgenaipleaseignore 24Feb2024 - ATG not working for shopping on Mac and gLinux

</content>
    </entry>
    <entry>
        <id>326623548</id>
        <title>dev tool issue delete</title>
        <author>
            <name>pa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326623548"/>
        <updated>2024-02-24T02:39:31.978Z</updated>
        <summary>-</summary>
        <content type="html">remove dev tool from mobile and computer</content>
    </entry>
    <entry>
        <id>326670071</id>
        <title>Set per-process Heap Profiler feature parameters on the client</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326670071"/>
        <updated>2024-02-24T01:35:08.409Z</updated>
        <summary>-</summary>
        <content type="html">HeapProfilerReporting has a Feature parameter for each process type, and each parameter is a JSON-encoded dictionary containing all the settings for that process. So it's possible to set per-process parameters from an experiment config.

But on the client side each of the Feature params have the same default, so if we change the default value of one of the JSON-encoded settings it applies to all  processes. There should be a separate default for each process.

The first implementation of this, https://crrev.com/c/5186976, was reverted because it caused the wrong parameters to be used in the network and GPU processes on Mac stable. The next try should be more careful:

* Find out what was missing in the test coverage of https://crrev.com/c/5186976 before making any changes.
* Don't try to be fancy and merge parameters from different sources. Just repeat the default values for each process param.
* Add hard-coded max probabilities so that if there's another error, the damage is capped.</content>
    </entry>
    <entry>
        <id>326668359</id>
        <title>Remove append arrows from query tiles when reusing the rich entity UI</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326668359"/>
        <updated>2024-02-24T01:14:55.831Z</updated>
        <summary>-</summary>
        <content type="html">Can we please remove append arrows from query tiles when reusing the rich entity UI. This will allow us to have a more apples to apples comparison between the other treatments using the carousel UI. Also, the append arrows may not add much value since the the QT topics are very general. </content>
    </entry>
    <entry>
        <id>326578834</id>
        <title>Mac arm64 devices flakily producing truncated images</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578834"/>
        <updated>2024-02-24T01:12:54.427Z</updated>
        <summary>-</summary>
        <content type="html">Both the M1 and M2 GPU testers are flakily producing images that are mostly truncated past the first few columns on the left. As an example, [this](https://chrome-gold.skia.org/img/images/069192562ac0cf76a6ae75e4606f31d3.png) is a sample bad image from the M2 tester, while [this](https://chrome-gold.skia.org/img/images/cf69bb78dda1402d745fe48673d3ee0e.png) is what the image is supposed to look like. [Sample failed test](https://ci.chromium.org/ui/p/chromium/builders/ci/Mac%20FYI%20Retina%20Release%20(Apple%20M2)/7489/test-results?q=ExactID%3Aninja%3A%2F%2Fchrome%2Ftest%3Atelemetry_gpu_integration_test%2Fgpu_tests.pixel_integration_test.PixelIntegrationTest.Pixel_Canvas2DTabSwitch_SoftwareCompositing+VHash%3A683a6270689279ee).

This appears to have been going on for a very long time - I went back to the start of November 2023 still saw this. It might not be possible to track down a reasonable regression range.

This does not appear to be limited to specific tests. Some tests that this has happened in:

```
Pixel_Canvas2DTabSwitch_SoftwareCompositing
Pixel_GpuRasterization_BlueBox
Pixel_OffscreenCanvasTransferAfterStyleResize
Pixel_OffscreenCanvasUnaccelerated2DWorker
Pixel_WebGLGreenTriangle_NonChromiumImage_AA_Alpha
Pixel_WebGL_PremultipliedAlpha_False_NoOverlays
Pixel_WebGPUCachedSwapBufferInvalidatedShouldBeBlank
Pixel_WebGPUCanvasFormatReinterpretation
Pixel_WebGPUCanvasOneCopyCapture
Pixel_WebGPUCopyExternalImageWebGPUCanvas
```

However, there does seem to be higher-than-average repro in `Pixel_Canvas2DTabSwitch_SoftwareCompositing`, at least on the M2 devices.

The truncation seems to consistently happen after 24 pixels. This happens on both GL and Metal as well as ganesh and graphite.</content>
    </entry>
    <entry>
        <id>326623546</id>
        <title>Get rid of base::AdoptRef().</title>
        <author>
            <name>dc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326623546"/>
        <updated>2024-02-24T00:58:04.601Z</updated>
        <summary>-</summary>
        <content type="html">It should be possible to convert anything that uses `base::AdoptRef(new T(...))` to use `base::MakeRefCounted&lt;T&gt;(...)` instead.

The main complexity here is that code tends to use `base::AdoptRef()` when the constructor for `T` is private; to make it work with `base::MakeRefCounted&lt;T&gt;(...)`, the code will need to be updated to use the passkey pattern: https://chromium.googlesource.com/chromium/src/+/HEAD/base/types/pass_key.h</content>
    </entry>
    <entry>
        <id>326665110</id>
        <title>Chromium stops prompting for media permissions after repeated denials</title>
        <author>
            <name>va...@doxy.me</name>
        </author>
        <link href="https://issues.chromium.org/issues/326665110"/>
        <updated>2024-02-24T00:45:00.390Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Launch Chromium
2. Trigger permission prompts multiple times, denying access each time until the browser stops asking for permission
3. Attempt to reset permissions
4. Notice that even after attempting to reset permissions, the browser still does not prompt for permission

# Problem Description
After a certain number of denied permission prompts in Chromium, the browser stops asking for permission. Previously, it was possible to reset this behavior; however, currently, even attempting to reset permissions does not resolve the issue. Browser restarting doesn't help as well.

Expected Behavior:
Users should have the ability to reset the permission prompt behavior, allowing the browser to ask for permission again, regardless of the number of previous denials.

Dummy sandbox: https://codesandbox.io/p/sandbox/sparkling-framework-rxn2np

# Summary
Chromium stops prompting for media permissions after repeated denials

# Custom Questions
#### Which component does this fall under?
Blink&gt;Media

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326514297</id>
        <title>n</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326514297"/>
        <updated>2024-02-24T00:38:12.089Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>326623545</id>
        <title>Gozando </title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326623545"/>
        <updated>2024-02-24T00:19:40.146Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 
2. Ggz
3. 

# Problem Description
Idklkk

# Summary
Gozando 

# Custom Questions
#### Does the problem occur on multiple sites?
No - Just that one URL

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326659366</id>
        <title>Tests are failing: legacymetrics_client_unittest.cc(74): Value of: expect_ack_dropped_\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326659366"/>
        <updated>2024-02-23T23:56:30.107Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
legacymetrics_client_unittest.cc(74): Value of: expect_ack_dropped_\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://components:components_unittests/LegacyMetricsClientTest.ReconnectDelayNeverExceedsMax


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c57ad8aebcc0ebfd6272ca9e54371c34

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326606998</id>
        <title>UI text is invisible in non-official builds when default font has variations</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326606998"/>
        <updated>2024-02-23T23:44:58.976Z</updated>
        <summary>-</summary>
        <content type="html">Repro:
* Build chrome with dcheck_always_on=true.  A regular debug or release build will do, but an official build will not.
* Use a font with variations.  For example, Cantarell -- I'm using Cantarell-VF.otf from Arch Linux's cantarell-fonts [1].
* Set Cantarell to be you default font in GTK or QT settings.
* Launch Chrome and see that all text is missing from the UI.

[1] https://archlinux.org/packages/extra/any/cantarell-fonts/</content>
    </entry>
    <entry>
        <id>326658589</id>
        <title>ipc_tests failed on fuchsia-x64 for 124.0.6318.0 official-desktop builders</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326658589"/>
        <updated>2024-02-23T23:39:57.337Z</updated>
        <summary>-</summary>
        <content type="html">Build URl:
https://ci.chromium.org/ui/p/chrome/builders/official/fuchsia-x64/5970/overview

Error-Log URL:
https://logs.chromium.org/logs/chrome/buildbucket/cr-buildbucket/8755287334466674865/+/u/ipc_tests_on_Ubuntu-22.04/stdout


</content>
    </entry>
    <entry>
        <id>326564995</id>
        <title>SavedTabGroupServiceFactory is not registered properly</title>
        <author>
            <name>cl...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326564995"/>
        <updated>2024-02-23T23:27:42.089Z</updated>
        <summary>-</summary>
        <content type="html">Got the following warning when running browser_tests:
[59356:45684:0223/101544.788:WARNING:dependency_manager.cc(64)] Trying to register KeyedService Factory: `SavedTabGroupKeyedService` after the call to the main registration function `ChromeBrowserMainExtraPartsProfiles::EnsureBrowserContextKeyedServiceFactoriesBuilt()`. Please add a call your factory `KeyedServiceFactory::GetInstance()` in the previous method or to the appropriate `EnsureBrowserContextKeyedServiceFactoriesBuilt()` function to properly register your factory.</content>
    </entry>
    <entry>
        <id>326656173</id>
        <title>Rename AutofillDeleteCreditCardConfirmationDialog class</title>
        <author>
            <name>av...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326656173"/>
        <updated>2024-02-23T23:19:37.766Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326505381</id>
        <title>10
</title>
        <author>
            <name>kr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505381"/>
        <updated>2024-02-23T23:13:05.860Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 
2. 88
3. 

# Problem Description
88

# Additional Comments
IJjziz

# Summary
10

# Additional Data
Category: Network / Downloading \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326505380</id>
        <title>11
</title>
        <author>
            <name>kr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505380"/>
        <updated>2024-02-23T23:11:27.735Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1999
2. 
3. 

# Problem Description
5000

# Summary
11

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326513541</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326513541"/>
        <updated>2024-02-23T23:07:08.720Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264469:1264505:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=545c4ffe-703a-4703-9028-8b9d260fa72a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=545c4ffe-703a-4703-9028-8b9d260fa72a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.parser/url-parser/url-parser.html
        3.04%: 56.8589 -&gt; 55.1283 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.parser/url-parser/url-parser.html
        3.04%: 56.8589 -&gt; 55.1283 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326649269</id>
        <title>Don't compute texture size befire paint</title>
        <author>
            <name>kh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326649269"/>
        <updated>2024-02-23T23:00:57.040Z</updated>
        <summary>-</summary>
        <content type="html">ViewTransition currently computes the size of the painted content of an element before paint. The primary reason for this is [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/layout/layout_view_transition_content.cc;l=50;drc=540910934956991f97fe6fda287eba974d853be7).

We need to know what the size of the image is so it can be mapped to where the replaced content of the view-transition-old/new pseudos draws.

But the problem is that we're computing this size after pre-paint but before paint. And trying to predict what the paint algorithm will size an element's contents to. This misses cases like [this](https://chromium-review.googlesource.com/c/chromium/src/+/5322398). Even with the linked fix, we're missing the expansion done to mask layers for clips for anti-aliasing [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/graphics/compositing/paint_artifact_compositor.cc;drc=d2b5c17eff35da6ebff8ba20c99688b87e1bc752;l=660).

The ideal thing would be to rely on the size known after paint. But I'm not sure if that's doable or how trick. xianzhu, would we be able to tell the size of the painted layers for an element at this [call-site](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/layout/layout_view_transition_content.cc;l=57;drc=540910934956991f97fe6fda287eba974d853be7).

The other catch is that the element's render surface is clipped by CC if its larger than max texture size. We currently manage that by computing the size after pre-paint and adding a clip node if needed [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/view_transition/view_transition_style_tracker.cc;l=1386;drc=20308e5e9b46054dc027bb4f25d9c49053226300). But paint can take care of this clipping too.</content>
    </entry>
    <entry>
        <id>326649067</id>
        <title>Add localization-help@ as issue admin of component UI &amp;gt; Localization, componentid: 1456895</title>
        <author>
            <name>ma...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326649067"/>
        <updated>2024-02-23T22:24:45.140Z</updated>
        <summary>-</summary>
        <content type="html">
Requested Action: [Modify]

Justification (Why do you need this component):
L10n team needs to update bugs under UI &gt; Localization component 

Component Name:
UI &gt; Localization

Component ID: (only if modifying or archiving)
1456895
https://g-issues.chromium.org/components/1456895

Parent Component: (Please provide full path or component ID)
https://g-issues.chromium.org/components/1457123

Issue Admins: 
Add localization-help@google.com as issue admin
</content>
    </entry>
    <entry>
        <id>326578832</id>
        <title>Experiment with initializing a spare renderer per profile in WebView</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578832"/>
        <updated>2024-02-23T22:18:35.412Z</updated>
        <summary>-</summary>
        <content type="html">Android WebView calls ChildProcessLauncherHelper.warmUp [1] on startup to create a child process. However the renderer initialization doesn't run, which is slow on Android. It takes around 200 ms [2] to launch and initialize a renderer. From local testing with a Pixel 2, Renderer.BrowserLaunchToRunLoopStart is only 10% faster when [1] ran than when it didn't.

I think we should experiment with creating the spare renderer eagerly when a BrowserContext is created so that by the time navigation happens the process is more likely to be ready. There are some tradeoffs:
-the private dirty memory of the renderer increases by about 3.3 MB
-for apps that muse multiple profiles, we might waste work by launching and initializing a renderer that will be thrown out later

[1] https://source.chromium.org/chromium/chromium/src/+/main:android_webview/java/src/org/chromium/android_webview/AwBrowserProcess.java#:~:text=ChildProcessLauncherHelper.warmUp
[2] https://uma.googleplex.com/p/chrome/timeline_v2?sid=f1f9c8ddb1a2c79cf5687407e0da337c</content>
    </entry>
    <entry>
        <id>326646909</id>
        <title>W3CImportExpectations should support allowlisted exceptions</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326646909"/>
        <updated>2024-02-23T22:12:41.234Z</updated>
        <summary>-</summary>
        <content type="html">[This WPT import][0] added `external/wpt/css/CSS2/syntax/character-encoding-041-ref.xht` as a reference for `external/wpt/css/CSS2/cascade-import/cascade-import-001.xht`, but `external/wpt/css/CSS2/syntax` is currently blocklisted by [`W3CImportExpectations`](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/W3CImportExpectations;l=61;drc=8f58baeeff46e31370145374178e71cee85f0342;bpv=0;bpt=0).

Ideally, we would be able to specify exceptions like:

```
external/wpt/css/CSS2/syntax [ Skip ]
# Overrides the line above to import this file
external/wpt/css/CSS2/syntax/character-encoding-041-ref.xht [ Pass ]
```

as we do for regular `TestExpectations`, but it doesn't look like the [test copier](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/tools/blinkpy/w3c/test_copier.py;l=101-107;drc=7eac4395491c98bdc0c57603972db124ac7ed928;bpv=0;bpt=0) respects the longest-name rule. The copier naively stops traversing skipped directories.

[0]: https://chromium-review.googlesource.com/c/chromium/src/+/5321480/2?checksPatchset=2&amp;tab=checks</content>
    </entry>
    <entry>
        <id>326578831</id>
        <title>Layout proto merge to M123</title>
        <author>
            <name>el...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578831"/>
        <updated>2024-02-23T21:35:06.477Z</updated>
        <summary>-</summary>
        <content type="html">Multiple layout changes made this a bit messy so creating this bug to request merge to M123 for the following CLs: 

1. https://chromium-review.googlesource.com/c/chromium/src/+/5262990
2. https://chromium-review.googlesource.com/c/chromium/src/+/5315003 (Bug number is incorrect so was not properly linked to a bug)

Both these CLs missed the branch date by a few days.</content>
    </entry>
    <entry>
        <id>326640224</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testMayLaunchUrlAddsClientDataHeader </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326640224"/>
        <updated>2024-02-23T21:24:25.592Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testMayLaunchUrlAddsClientDataHeader would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testMayLaunchUrlAddsClientDataHeader
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testMayLaunchUrlAddsClientDataHeader
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testMayLaunchUrlAddsClientDataHeader

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>326640187</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.NavigateTest#testNavigateBackWithTabSwitcher_BackPressRefactor </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326640187"/>
        <updated>2024-02-23T21:24:21.861Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.NavigateTest#testNavigateBackWithTabSwitcher_BackPressRefactor is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.NavigateTest%23testNavigateBackWithTabSwitcher_BackPressRefactor
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.NavigateTest%23testNavigateBackWithTabSwitcher_BackPressRefactor
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.NavigateTest%23testNavigateBackWithTabSwitcher_BackPressRefactor

</content>
    </entry>
    <entry>
        <id>326503102</id>
        <title>setTransform and resetTransform are broken inside layers</title>
        <author>
            <name>jp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503102"/>
        <updated>2024-02-23T21:07:50.270Z</updated>
        <summary>-</summary>
        <content type="html">The canvas 2d layer implementation has recently been updated to use a side recording to store the layer content until it's closed. This is required to be able to present the canvas while a layer is opened. With a side recording, we can flush everything that was drawn up until the first `beginLayer` and keep the layer content to be flushed when the layer is finally closed.

This change however broke the `setTransform` and `resetTransform` APIs. That's because the side recording is inserted into the main recording using a `DrawRecordOp`, which gives the drawn recording it's own matrix transform root. That is, if the drawn recording contains a SetMatrixOp, that metrix will be applied over the transform the canvas had when `DrawRecordOp` was called. This is not how `setTranform` is expected to work, as it should modify the global canvas matrix.

One way to fix this is to add a `local_ctm` parameter in `DrawRecordOp`, specifying whether the drawn recording should have a local matrix stack or whether it should act on the parent recording stack.</content>
    </entry>
    <entry>
        <id>326509145</id>
        <title>Google Version API frequently missing releases</title>
        <author>
            <name>aa...@heyaaron.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509145"/>
        <updated>2024-02-23T20:54:28.555Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://versionhistory.googleapis.com/v1/chrome/platforms/win64/channels/stable/versions
2. Note the current latest version shown is 122.0.6261.69
3. Go download the Chrome installer from the website and install it
4. Note the version installed is 122.0.6261.70
5. Note that version 122.0.6261.70 is NOT listed in https://versionhistory.googleapis.com/v1/chrome/platforms/win64/channels/stable/versions

# Problem Description
I apologize if this isn't the correct place to report this problem, but I've been digging all over Google and talking to various support reps to no avail.

One of my tasks is to ensure software updates and compliance on corporate systems and to generate reports about non-compliance.
A while back, we attempted to automate some of this by grabbing the latest version from the Version History API and then comparing the installed version on every machine.
Often the version reported by the API is correct, and if a machine is running an older version of Chrome, firing off the Chrome installer will bring it into compliance.  But from time to time, it appears a version of Chrome is released that doesn't get added to the History API, and when we find a machine that is out of compliance and fire off the installer, a newer version of Chrome gets installed that isn't in the History API.

The tools we are using to audit and ensure compliance ask "what version of Chrome should be on a machine?" and then attempt to ensure that version is installed by firing off the Chrome Installer....and then it checks to say "does the version match what's in the History API"?  And frequently the answer in "no" because a newer version was installed.

Normally I would attribute it to something like a caching delay, but I have noticed several times in the past some version numbers will *never* get published to the API.

Why isn't 122.0.6261.70 (for example) not listed in the API and is there a way I can actually find out the latest version without parsing through the human-readable Chrome Blog?

# Summary
Google Version API frequently missing releases

# Custom Questions
#### Please select a label to classify your issue:
Type-Feature - Request for new or improved features

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326509144</id>
        <title>Chrome Beta Slow Opening bookmarked sites from dropdown tab</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509144"/>
        <updated>2024-02-23T20:51:00.464Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Click hidden bookmarks button
2. Click a bookmark
3. Problem

# Problem Description
When I click any bookmark after using hidden bookmarks dropdown, chrome is slow and it seems like it wont load but then the site finally loads after a minute or 2. This doesn't happen clicking any other bookmark on the bar only on the drop down. This does not happen in regular chrome only beta. Yes I have extensions running but nothing new

# Summary
Chrome Beta Slow Opening bookmarked sites from dropdown tab

# Custom Questions
#### Example URL: 
N/A

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326503101</id>
        <title>[Chromium GSoC] Request for Feedback (analysis-tool)</title>
        <author>
            <name>pa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503101"/>
        <updated>2024-02-23T20:49:56.698Z</updated>
        <summary>-</summary>
        <content type="html">Hello, I really like the idea behind this project!
I started studying about Chrome Extensions as a first approach, but I would like to ask a few questions to better understand the context and how this tool should look like, for example:
- should it run as an extension? (not sure, but I don't think it's technically possible)
- should it be part of DevTools?
- should it be an external tool (like a CLI)?

This will help me to start thinking about and writing my proposal, thanks in advance!</content>
    </entry>
    <entry>
        <id>326635785</id>
        <title>Certain characters cause omnibox to exit site search</title>
        <author>
            <name>cs...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326635785"/>
        <updated>2024-02-23T20:46:50.878Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Have a site-search shortcut set up (for me, "cs" to "https://cs.corp.google.com/#search/&amp;q=%s&amp;ct=os&amp;sq=USE_DEFAULT_STORED_QUERY")
2. In the omnibox, type "cs" followed by "space" to engage site-search
3. Type the character "e", "g", "l", "m", or "o".

I can reproduce repeatedly right now with the above strings, but not for my other site searches.
It appears to only be the lead search character that matters.  "cs fg" does not exhibit any issue.

# Problem Description
After step 3, Chrome has visibly left site search mode and shifted to thinking I just typed that single character.
1) backspacing does not restore "cs" or go back to a site-search mode
2) hitting Enter, or continuing to type then hitting Enter, resolves as if I had never typed the initial "cs ".  "cs example.com" brings up example.com, "cs excellent" performs a Google search for "excellent".

Expected behavior: UI both stays in site search mode and executes the search against my expected shortcut.

# Summary
Certain characters cause omnibox to exit site search

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326498391</id>
        <title>DIY webapk install dialog has duplicated name</title>
        <author>
            <name>ei...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498391"/>
        <updated>2024-02-23T20:20:54.755Z</updated>
        <summary>-</summary>
        <content type="html">see https://screenshot.googleplex.com/8cStWa7TCi7VhMC</content>
    </entry>
    <entry>
        <id>326526725</id>
        <title>referrerPolicy property does not reflect all valid values</title>
        <author>
            <name>mc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326526725"/>
        <updated>2024-02-23T20:17:57.098Z</updated>
        <summary>-</summary>
        <content type="html">Consider the following:
```
var a = document.createElement('a');
a.referrerPolicy = 'origin';
console.assert(a.referrerPolicy == 'origin');
a.referrerPolicy = 'strict-origin';
console.assert(a.referrerPolicy == 'strict-origin');
```
In Chrome 122, the second assert fails. In Firefox 115, both asserts pass.

It looks like the IDL definition doesn't list all valid values:
https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/html/html_anchor_element.idl;drc=79f17bef6b4a52b19999b62254d8dfb30ae22883;l=34

Likewise for other cases like HTMLIFrameElement's referrerPolicy property.</content>
    </entry>
    <entry>
        <id>326629253</id>
        <title>Confusing icons/labels if Chrome is default .pdf handler on Windows 11</title>
        <author>
            <name>ba...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326629253"/>
        <updated>2024-02-23T20:00:58.668Z</updated>
        <summary>-</summary>
        <content type="html">If you configure Chrome as the default handler for PDF files on Windows 11
- All icons of PDF files are Chrome icons
- The files are described to the user as "Chrome HTML Documents"

Both of these are confusing to users.

Would it be possible to 
- display an icon that suggests that a file is a PDF file
- not call the files not a "Chrome HTML Document" but "PDF Document"?</content>
    </entry>
    <entry>
        <id>326554286</id>
        <title>Debugger.getScriptSource freezes with large scripts</title>
        <author>
            <name>co...@peet.io</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554286"/>
        <updated>2024-02-23T19:50:29.630Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Enter this code in your REPL `new Function('\n'.repeat(1024 * 1024 * 10) + 'return 1\n' + '//# sourceURL=big.js'); debugger;`
2. Open big.js from the Sources view, if it is not opened for you
3. Notice it takes an inordinately long time to respond with the script content

# Problem Description
I got an issue in VS Code (https://github.com/microsoft/vscode-js-debug/issues/1948) about freezing when we retrieve a script's source, which is required in order to compute source map renames. I was surprised to see such slow responses on relatively small files, in this case the user's file was only 1.3MB, which should be fast enough to serialize and send over the wire.

# Summary
Debugger.getScriptSource freezes with large scripts

# Additional Data
Category: Developer Tools \
Chrome Channel: Dev \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326505378</id>
        <title>Interest group bid latency reporting is inconsistent.</title>
        <author>
            <name>mm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505378"/>
        <updated>2024-02-23T19:38:15.532Z</updated>
        <summary>-</summary>
        <content type="html">When Private Audience buyer worklets generate a bit, we may run the generateBid() script twice, while enforcing k-anonymity.  When we run the script twice, we report the runtime only a single execution of the script took to scoreAd(), but we report the runtime of both script executions to aggregate reporting.  This seems likely to result in confusion of consumers.  I think it's better to be consistent (I'd say always report the time for either the single execution that generated the bid, or the longer run of the two, to avoid increasing reported times for groups with ads that aren't yet k-anonymous, but we could report their sum instead).</content>
    </entry>
    <entry>
        <id>326584510</id>
        <title>reclient ignores `inputs` on C targets in GN</title>
        <author>
            <name>da...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326584510"/>
        <updated>2024-02-23T19:32:48.599Z</updated>
        <summary>-</summary>
        <content type="html">1. Put a .txt file in `inputs` in an executable target.
2. Try to open that .txt file from a clang plugin

Expected:
The file was uploaded to the RBE backend since it's in inputs

Actual:
The file is not there. Compilation falls back to local.

Since the file is in `inputs` it's in the ninja build graph, and to verify that, editing the file does cause re-compilation of the executable.

```
$ gn desc out_desktop/Release base:base_unittests
Target //base:base_unittests
type: executable
toolchain: //build/toolchain/linux:clang_x64

visibility
  *

metadata
  {

  }

testonly
  true

check_includes
  true

allow_circular_includes_from

sources
  //base/allocator/dispatcher/dispatcher_unittest.cc
  //base/allocator/dispatcher/initializer_unittest.cc
  ...

public
  [All headers listed in the sources are public.]

inputs
  //build/config/unsafe_buffers_paths.txt

...
```
</content>
    </entry>
    <entry>
        <id>326624914</id>
        <title>Detect legacy best revision failure</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326624914"/>
        <updated>2024-02-23T19:29:54.917Z</updated>
        <summary>-</summary>
        <content type="html">See https://ci.chromium.org/ui/p/chrome/builders/official.infra/chrome-best-revision-continuous/5534/overview

The Legacy best revision has been failing for days but we did not receive any alerts on it.
This could be problematic for canary release. For example if rel-ready also fails during weekend and no gardeners can fix the test, chrome-branch will fail. See o/248763096.</content>
    </entry>
    <entry>
        <id>326509143</id>
        <title>My website keeps saying "did you mean dum-f.uk?"</title>
        <author>
            <name>ne...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509143"/>
        <updated>2024-02-23T19:17:59.876Z</updated>
        <summary>-</summary>
        <content type="html">I have a website called "dumb-f.uk" and someone else has "dum-f.uk" and my website keeps directing people to "dum-f.uk".</content>
    </entry>
</feed>