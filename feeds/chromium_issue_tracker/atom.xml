<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:32.678Z</updated>
    <entry>
        <id>333423706</id>
        <title>[css-anchor-position] AnchorResults ignores position-anchor/inset-area</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423706"/>
        <updated>1970-01-01T00:28:32.678Z</updated>
        <summary>-</summary>
        <content type="html">The anchor query API (AnchorEvaluator+AnchorScope) allows evaluation of queries using a specified position-anchor and inset-area, but the accompanying cache (AnchorResults) ignores the position-anchor and inset-area part. This is fragile, because we're completely reliant on very careful use of the API, like queries happening in a specific order, in order to get the correct behavior.

I don't *think* we have any web-observable bugs currently, but I'd still like to fix it so it's a little more robust for the future.</content>
    </entry>
    <entry>
        <id>333541049</id>
        <title>Tests are failing: ninja://chrome/test:browser_tests/HistoryEmbeddingsBrowserTest.SearchFindsResultWithSourcePassage</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333541049"/>
        <updated>1970-01-01T00:28:32.678Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:browser_tests/HistoryEmbeddingsBrowserTest.SearchFindsResultWithSourcePassage

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f41a4caa4ded7486a453a47dc70cbfa3

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333445552</id>
        <title>Pictograms to illustrate list of downloads</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445552"/>
        <updated>1970-01-01T00:28:32.677Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  What if you replace icons/symbols with pictograms to illustrate list of downloads
2.  Take picture of website when starting download  ---&gt;  transform it into little pictogram
3. 

# Problem Description

Maybe making pictures of websites and creating pictograms isn't technically feasible yet.   /idk

# Summary
Pictograms to illustrate list of downloads

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333420623</id>
        <title>Autohide or remove X symbol from tabstrip as websites cannot close themselves and to save space</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420623"/>
        <updated>1970-01-01T00:28:32.677Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  Autohide or remove X symbol from tabstrip as website cannot close themselves and to save vertical space
2.  Autohide or remove X symbol from the end of tab
3. 

# Problem Description
X symbol in the end of tab doesn't make sense as websites can't close themselves.
They can make sound  (speaker symbol) but not close themselves.

X symbol could autohide.

# Summary
Autohide or remove X symbol from tabstrip as websites cannot close themselves and to save space

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333423705</id>
        <title>100000</title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423705"/>
        <updated>1970-01-01T00:28:32.677Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 00000
2. 00000
3. 00000

# Problem Description
Nose

# Summary
100000

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333538609</id>
        <title>Synchronous platforms APIs which invoke JS callbacks (i.e. MutationObserver or web components), don't show UI feedback about why this call was scheduled in Tracing</title>
        <author>
            <name>mm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333538609"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html">There are many platform APIs which invoke JS callbacks.

For apis which are "asynchronous" or event based, there is a macrotask which is scheduled when the events trigger, and then the callback is invoked within that macrotask.  For example, addEventListener or XHR progress events.

But for synchronous apis, for example MutationObserver observe() callback or Web component instantiation, these are scheduled as a microtask that is included in an existing macrotask (i.e. perhaps a timer, or an input).  From the context of the macrotask flame graph-- its entirely unclear why this JS "FunctionCall" was invoked in the middle of microtask dispatch.

See one example screenshot.  Perfetto UI has the same issue.</content>
    </entry>
    <entry>
        <id>333537213</id>
        <title>Add help center link to Safety Check page</title>
        <author>
            <name>ai...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333537213"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html">Add an icon button to SH page that opens https://support.google.com/chrome/answer/10468685.</content>
    </entry>
    <entry>
        <id>333537012</id>
        <title>Add creation screen tests</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333537012"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333420621</id>
        <title>Pixel_OffscreenCanvasWebGLDefault via "pixel_skia_gold_metal_passthrough_graphite_test on AMD GPU on Mac Retina on Mac-13.5" failing on builder "chromium/ci/Mac Retina Debug (AMD)"</title>
        <author>
            <name>se...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420621"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html">Step "pixel_skia_gold_metal_passthrough_graphite_test on AMD GPU on Mac Retina on Mac-13.5" failing on builder "chromium/ci/Mac Retina Debug (AMD)"

List of failed builders:

Builder: Mac Retina Debug (AMD)
https://ci.chromium.org/p/chromium/builders/ci/Mac%20Retina%20Debug%20%28AMD%29
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/Mac%20Retina%20Debug%20%28AMD%29/b8751133841232281921
</content>
    </entry>
    <entry>
        <id>333424911</id>
        <title>favicons very slow to load</title>
        <author>
            <name>el...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424911"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html">On today's canary (125.0.6407.0), favicons are very slow to load - it took over a minute for favicons to appear for my first three tabs (screenshot attached). I did not notice this with yesterday's canary.</content>
    </entry>
    <entry>
        <id>333535290</id>
        <title>Fix moving pinned tabs to group directly</title>
        <author>
            <name>ga...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333535290"/>
        <updated>1970-01-01T00:28:32.675Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333533025</id>
        <title>CSS animation does not complete when the animation-duration is short (&amp;lt;100ms)</title>
        <author>
            <name>la...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333533025"/>
        <updated>1970-01-01T00:28:32.674Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: v122_0_6261_57
OS: 14.4.1

What steps will reproduce the problem?
(2) With an animation for 1 repetition and duration is short:

```
'animation-timing-function': 'step-start',
'animation-duration': '1ms',
'animation-iteration-count': '1',
'animation-delay': '0ms',
'animation-name': 'checkmark-expand',
```

Applied to scale and rotate an element:

```
  @-webkit-keyframes checkmark-expand {
    0% {
      /* rtl:ignore */
      -webkit-transform: scale(0, 0) rotate(45deg);
    }
    100% {
      /* rtl:ignore */
      -webkit-transform: scale(1, 1) rotate(45deg);
    }
  }
```

What is the expected result?
As previous versions of Chrome (&lt;122), transition would finish in the end state of `-webkit-transform: scale(1, 1) rotate(45deg);`.

What happens instead?
Transition may ends with end state or not, the bigger `animation-duration` is, the most likely the end-state is reached.
</content>
    </entry>
    <entry>
        <id>333530854</id>
        <title>Reject when multiple IDPs used in button mode</title>
        <author>
            <name>np...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333530854"/>
        <updated>1970-01-01T00:28:32.672Z</updated>
        <summary>-</summary>
        <content type="html">The multi IDP OT will not support button mode. So its best to reject early if we see that button mode is being attempted with multiple IDPs.</content>
    </entry>
    <entry>
        <id>333529236</id>
        <title>[ios] Don't use external urls as form action destination in test forms</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333529236"/>
        <updated>1970-01-01T00:28:32.672Z</updated>
        <summary>-</summary>
        <content type="html">Using external urls as destination in test forms is subject to flakes

A local destination can be used to handle that</content>
    </entry>
    <entry>
        <id>333423703</id>
        <title>Vertical-based grid areas aren't rendered properly when using subgrid.</title>
        <author>
            <name>ea...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423703"/>
        <updated>1970-01-01T00:28:32.672Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Navigate to: https://codepen.io/etsisk/pen/oNOdzbJ

# Problem Description
Seems like grid areas that span columns work properly but not grid areas that span rows.

# Additional Comments
While not the same issue, the could be a common thread with this issue: https://issues.chromium.org/issues/332589869

# Summary
Vertical-based grid areas aren't rendered properly when using subgrid.

# Custom Questions
#### Which component does this fall under?
Blink&gt;Layout

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Canary \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333508729</id>
        <title>[CSC] Cover MediaStreamManager::SetCapturedSurfaceActive()</title>
        <author>
            <name>el...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333508729"/>
        <updated>1970-01-01T00:28:32.672Z</updated>
        <summary>-</summary>
        <content type="html">Increase test coverage.</content>
    </entry>
    <entry>
        <id>333528825</id>
        <title>Title gray box is collapsed for unnamed groups, it should be as tall as a group with a name: https://screenshot.googleplex.com/8JzXWoTnwrR5zri</title>
        <author>
            <name>im...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333528825"/>
        <updated>1970-01-01T00:28:32.672Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333414300</id>
        <title>Scrollable elements lose scroll position in RTL (right-to-left)</title>
        <author>
            <name>dl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333414300"/>
        <updated>1970-01-01T00:28:32.671Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
There are a few ways to reproduce this, but this is the simplest:
1. Create a DIV with 'dir="rtl"', hidden overflow, a preset size (e.g. 200px) and whose contents are larger than that size (e.g. 500px)
2. Within the DIV, position a focusable element (e.g. a button) to the far edge so that it's initially not visible
3. Tab to the button

# Problem Description
When tabbing to an element within a scrollable container, the browser should automatically scroll that container such that the element becomes visible. This is true in the above example if the containing element has a LTR direction and also in both LTR/RTL on Chrome 124. However, on Chrome 125 in RTL, the button doesn't scroll into view.
Digging deeper, you can scroll the container to within 1px of its edge successfully, and it's only when scrolled right up to the edge that the position gets reset back to the start.

# Additional Comments
I've attached a sample HTML document that further describes the scenario and provides a few ways to reproduce it and visually see what's happening.

# Summary
Scrollable elements lose scroll position in RTL (right-to-left)

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Canary \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333418175</id>
        <title>Lỗi về cấu hình </title>
        <author>
            <name>th...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418175"/>
        <updated>1970-01-01T00:28:32.671Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Khởi động lại 
2. Bị chậm
3. 

# Problem Description
Máy xử lý chậm, và hay lỗi

# Summary
Lỗi về cấu hình 

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333527785</id>
        <title>Add a way to bring back a group after closing, or prevent accidental closings</title>
        <author>
            <name>im...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333527785"/>
        <updated>1970-01-01T00:28:32.671Z</updated>
        <summary>-</summary>
        <content type="html">Feature request, not bug. Assigning this to Carolina for future updates</content>
    </entry>
    <entry>
        <id>333508728</id>
        <title>Update CONTEXT_OMNIBOX_PRIMARY comment with tab-sharing use</title>
        <author>
            <name>to...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333508728"/>
        <updated>1970-01-01T00:28:32.671Z</updated>
        <summary>-</summary>
        <content type="html">https://chromium-review.googlesource.com/c/chromium/src/+/5438233/comment/5a0b5a84_13b8b60b/</content>
    </entry>
    <entry>
        <id>333527070</id>
        <title>Extra space at the top of tab grid when inactive tabs are available: </title>
        <author>
            <name>im...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333527070"/>
        <updated>1970-01-01T00:28:32.671Z</updated>
        <summary>-</summary>
        <content type="html">Screenshot: https://screenshot.googleplex.com/6mpacpa37RtsSbm
</content>
    </entry>
    <entry>
        <id>333414298</id>
        <title>webgl_conformance_validating_tests frequently fail on "Android FYI Release (Samsung S23)"</title>
        <author>
            <name>yn...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333414298"/>
        <updated>1970-01-01T00:28:32.669Z</updated>
        <summary>-</summary>
        <content type="html">61 failures in last 200 builds:
https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Samsung%20S23)?limit=200&amp;cursor=id%3E8751138732379210737

Per https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Samsung%20S23)/301/overview
https://chromium-swarm.appspot.com/task?id=68daa80dd2989c10
the failure is:
telemetry.internal.browser.browser_finder_exceptions.BrowserFinderException: Cannot find browser of type android-chromium. 

"Available browsers" list is empty.

I think we need to figure out what goes wrong here before we call the NPI complete.
Brian, would you be able to take a look?</content>
    </entry>
    <entry>
        <id>333424130</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424130"/>
        <updated>1970-01-01T00:28:32.668Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284118:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cce956d1-1b73-4788-ae46-f312c7a053a1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cce956d1-1b73-4788-ae46-f312c7a053a1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.parser/query-selector-all-first/query-selector-all-first.html
        3.96%: 34765.965 -&gt; 33390.777 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.parser/query-selector-all-first/query-selector-all-first.html
        3.96%: 34765.965 -&gt; 33390.777 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333521103</id>
        <title>[Tab Group Parity]  Failing TabSwitcherLayoutTest#testTabGroupCreation_acceptNullTitle</title>
        <author>
            <name>iz...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333521103"/>
        <updated>1970-01-01T00:28:32.668Z</updated>
        <summary>-</summary>
        <content type="html">Failing test: org.chromium.chrome.browser.tasks.tab_management.TabSwitcherLayoutTest#testTabGroupCreation_acceptNullTitle

Problem: androidx.test.espresso.PerformException: Error performing 'single click - At Coordinates: 895, 1156 and precision: 16, 16' on view 'with id: org.chromium.chrome.tests:id/positive_button'.

The flakiness started yesterday, but got more intense today.
First build with the flakiness has tabs mentioned in the blamelist: https://ci.chromium.org/ui/p/chromium/builders/ci/android-pie-arm64-rel/22672/blamelist

The test is now 38% flaky on average: https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flak[…]bSwitcherLayoutTest%23testTabGroupCreation_acceptNullTitle


Conclusion after investigation:
Culprit CL was https://crrev.com/c/5419812, decided to land a fix. If the fix doesn't work it needs to be reverted.

Explanation of the fix:
The CL enabled autofocusing on the text input field as soon as the dialog to input the tab group name shows up and it was showing soft keyboard. That made the test flaky because sometimes the keyboard was late enough so it was possible to click on the positive button on the dialog and sometimes the keyboard was shown before Espresso click so Espresso could not find the positive button, even though it was on the screen.
As explained here https://yaqs.corp.google.com/eng/q/8966007151117991936, the soft keyboard needs to be dismissed before clicking, using https://source.corp.google.com/piper///depot/google3/java/com/google/android/libraries/y[…]er/testing/actions/SystemActions.java;rcl=368774995;l=552</content>
    </entry>
    <entry>
        <id>333435024</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333435024"/>
        <updated>1970-01-01T00:28:32.668Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284111:1284127:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f589a804-b053-4ca8-84dc-62bf1468a2d7

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f589a804-b053-4ca8-84dc-62bf1468a2d7

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_shopping/browse_shopping_amazon_2019
       25.70%: 14.754 -&gt; 18.54647 

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_shopping/browse_shopping_amazon_2019
       25.70%: 14.754 -&gt; 18.54647 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333520714</id>
        <title>Build developer-mode profile switcher</title>
        <author>
            <name>fe...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333520714"/>
        <updated>1970-01-01T00:28:32.667Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333520272</id>
        <title>Improve types for chai asserts</title>
        <author>
            <name>bm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333520272"/>
        <updated>1970-01-01T00:28:32.667Z</updated>
        <summary>-</summary>
        <content type="html">Context: [Doc](https://docs.google.com/document/d/1rHhTO-px7wyaiNLlZK3CtfiuU630SFAaQ6HfRWi64Zk/edit#bookmark=id.w153u6awpm39)

We currently have a bunch of test helpers whose only purpose is to add TypeScript `asserts` to silence later tsc warnings. A famous example of this is `assertElement`, which does nothing but calling `assert.instanceOf` but has more precise types.

Instead of growing our own set of helpers on top of so many chai-provided functions, we should just upstream our type improvements to [`chai/index.d.ts` in `DefinitelyTyped/DefinitelyTyped`](http://DefinitelyTyped/DefinitelyTyped).</content>
    </entry>
    <entry>
        <id>333445546</id>
        <title>mac-m1_mini_2020-perf jobs sluggish and failing with NO_RESOURCE</title>
        <author>
            <name>ol...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445546"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">Currently all my pinpoint jobs with this machine are either not executed at all, or fail with State: NO_RESOURCE.

Examples:
* https://pinpoint-dot-chromeperf.appspot.com/job/146491fcbe0000
* https://pinpoint-dot-chromeperf.appspot.com/job/11c357dabe0000
* https://pinpoint-dot-chromeperf.appspot.com/job/1555d4d2be0000
</content>
    </entry>
    <entry>
        <id>333425973</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333425973"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284082:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=83af5d4f-fa73-469e-b8a2-a08fff96300d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=83af5d4f-fa73-469e-b8a2-a08fff96300d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.25%: 18.8441 -&gt; 18.23085 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.25%: 18.8441 -&gt; 18.23085 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333435023</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333435023"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284118:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=53350947-6670-4f87-a81e-98de25587943

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=53350947-6670-4f87-a81e-98de25587943

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.parser/query-selector-all-id-deep/query-selector-all-id-deep.html
        3.96%: 34765.965 -&gt; 33390.777 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.parser/query-selector-all-id-deep/query-selector-all-id-deep.html
        3.96%: 34765.965 -&gt; 33390.777 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333420614</id>
        <title>Prefer capture timestamp in Breakout Box</title>
        <author>
            <name>gu...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420614"/>
        <updated>1970-01-01T00:28:32.665Z</updated>
        <summary>-</summary>
        <content type="html">Prefer the capture timestamp as the main timestamp in BreakoutBox-exposed frames if available.
This would provide consistency with the audio case.</content>
    </entry>
    <entry>
        <id>333460773</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333460773"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284118:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f8326119-7c80-4296-bdc7-154608dc78f0

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f8326119-7c80-4296-bdc7-154608dc78f0

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.parser/query-selector-all-id-first/query-selector-all-id-first.html
        3.96%: 34765.965 -&gt; 33390.777 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.parser/query-selector-all-id-first/query-selector-all-id-first.html
        3.96%: 34765.965 -&gt; 33390.777 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333424128</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424128"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283988:1284082:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a3df13ff-fee9-4a47-8cb3-4bbfa1b63867

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a3df13ff-fee9-4a47-8cb3-4bbfa1b63867

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.25%: 18.8441 -&gt; 18.23085 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.25%: 18.8441 -&gt; 18.23085 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333418145</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418145"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=503899e2-b95f-44d6-8ce9-78c0c90b3dcc

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=503899e2-b95f-44d6-8ce9-78c0c90b3dcc

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/sequence-conversion-custom-iterator/sequence-conversion-custom-iterator.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333418144</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418144"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284117:1284140:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c0b9666c-3aa2-490d-929d-4dcb3d68e5f8

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c0b9666c-3aa2-490d-929d-4dcb3d68e5f8

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute_max/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333414295</id>
        <title>Dangling pointer in ProofVerifierChromium detected during local run</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333414295"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: built from refs/heads/main@{#1283729}
OS: Linux

What steps will reproduce the problem?
(1) I was randomly running a local Release build (augmented with debug prints, but no changes in business logic)
(2) I navigated to https://docs.google.com/document/d/19xTAM4A75tz0xUq_velMzGA4JHEgXpyflUxXTcuNiyE/edit
(3) Pressed Ctrl-c to close the browser

I got these logs printed out:

[904461:904469:0409/140708.030106:ERROR:partition_alloc_support.cc(620)] Detected dangling raw_ptr with id=0x000001b000134178:
[DanglingSignature]	net::ProofVerifierChromium::Job::~Job()	No active task	net::CoalescingCertVerifier::Request::~Request()	No active task

The memory was freed at:
#0 0x56177b5b8f92 base::debug::CollectStackTrace()
#1 0x56177b5a1d22 base::debug::StackTrace::StackTrace()
#2 0x56177b5bf225 base::allocator::(anonymous namespace)::DanglingRawPtrDetected()
#3 0x56177b6687db allocator_shim::internal::PartitionFree()
#4 0x56177ad60f4e base::allocator::dispatcher::internal::DispatcherImpl&lt;&gt;::FreeFn()
#5 0x56177bb21787 net::ProofVerifierChromium::Job::~Job()
#6 0x56177bb2432f std::__Cr::__tree&lt;&gt;::destroy()
#7 0x56177bb23e5f net::ProofVerifierChromium::~ProofVerifierChromium()
#8 0x56177bb23e9e net::ProofVerifierChromium::~ProofVerifierChromium()
#9 0x56177bc747fb quic::QuicCryptoClientConfig::~QuicCryptoClientConfig()
#10 0x56177bb13f7d net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner()
#11 0x56177bb1c3f3 std::__Cr::__list_imp&lt;&gt;::clear()
#12 0x56177bb1539c net::QuicSessionPool::~QuicSessionPool()
#13 0x56177ba7a36c net::HttpNetworkSession::~HttpNetworkSession()
#14 0x56177bbce09a net::URLRequestContext::~URLRequestContext()
#15 0x56177da5aae3 network::URLRequestContextOwner::~URLRequestContextOwner()
#16 0x56177d92f14c network::NetworkContext::~NetworkContext()
#17 0x56177d92f2ae network::NetworkContext::~NetworkContext()
#18 0x56177d917359 network::NetworkService::OnNetworkContextConnectionClosed()
#19 0x561774cb5088 base::OnceCallback&lt;&gt;::Run()
#20 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#21 0x56177bdee0ef mojo::InterfaceEndpointClient::NotifyError()
#22 0x56177bdfca36 mojo::internal::MultiplexRouter::ProcessNotifyErrorTask()
#23 0x56177bdf8c62 mojo::internal::MultiplexRouter::ProcessTasks()
#24 0x56177bdf77ca mojo::internal::MultiplexRouter::OnPipeConnectionError()
#25 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#26 0x56177bde7663 mojo::Connector::HandleError()
#27 0x56177bde8377 mojo::Connector::OnWatcherHandleReady()
#28 0x5617756f059f base::RepeatingCallback&lt;&gt;::Run()
#29 0x561774d4c11d base::RepeatingCallback&lt;&gt;::Run()
#30 0x56177be1a6f8 mojo::SimpleWatcher::OnHandleReady()
#31 0x56177be1a894 mojo::SimpleWatcher::Context::Notify()
#32 0x56177be19880 mojo::SimpleWatcher::Context::CallNotify()
#33 0x561774da1805 mojo::core::ipcz_driver::MojoTrap::DispatchEvent()
#34 0x561774da04f1 mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent()
#35 0x561774da11fd mojo::core::ipcz_driver::MojoTrap::HandleEvent()
#36 0x561774da0f2d mojo::core::ipcz_driver::MojoTrap::TrapEventHandler()
#37 0x561774dfd366 ipcz::TrapEventDispatcher::~TrapEventDispatcher()
#38 0x561774df2e1d ipcz::Router::AcceptRouteClosureFrom()
#39 0x561774de463b ipcz::NodeLink::OnRouteClosed()
#40 0x561774debedc ipcz::msg::NodeMessageListener::OnTransportMessage()
#41 0x561774dd15c1 ipcz::(anonymous namespace)::NotifyTransport()
#42 0x561774da775b mojo::core::ipcz_driver::Transport::OnChannelMessage()
#43 0x561774d83256 mojo::core::Channel::TryDispatchMessage()
#44 0x561774d82ec8 mojo::core::Channel::OnReadComplete()
#45 0x561774dc6bec mojo::core::ChannelPosix::OnFileCanReadWithoutBlocking()
#46 0x56177b5caa45 base::MessagePumpLibevent::FdWatchController::OnFdReadable()
#47 0x56177b5d0593 base::MessagePumpEpoll::HandleEvent()
#48 0x56177b5cfa18 base::MessagePumpEpoll::OnEpollEvent()
#49 0x56177b5cf213 base::MessagePumpEpoll::WaitForEpollEvents()
#50 0x56177b5cecd8 base::MessagePumpEpoll::Run()
#51 0x56177b53f54f base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run()
#52 0x56177b4e193c base::RunLoop::Run()
#53 0x56177b57b28d base::Thread::Run()
#54 0x56177f63e5d0 content::(anonymous namespace)::ChildIOThread::Run()
#55 0x56177b57b683 base::Thread::ThreadMain()
#56 0x56177b595ea3 base::(anonymous namespace)::ThreadFunc()
#57 0x7f29658f645c (/usr/lib/x86_64-linux-gnu/libc.so.6+0x8845b)
#58 0x7f2965976ae0 __clone

Task trace:
No active task.
The dangling raw_ptr was released at:
#0 0x56177b5b8f92 base::debug::CollectStackTrace()
#1 0x56177b5a1d22 base::debug::StackTrace::StackTrace()
#2 0x56177b5bf316 base::allocator::(anonymous namespace)::DanglingRawPtrReleased&lt;&gt;()
#3 0x56177b607c35 base::internal::RawPtrBackupRefImpl&lt;&gt;::ReleaseInternal()
#4 0x56177b99ab2f net::CoalescingCertVerifier::Request::~Request()
#5 0x56177b99abce net::CoalescingCertVerifier::Request::~Request()
#6 0x56177bb21899 net::ProofVerifierChromium::Job::~Job()
#7 0x56177bb2432f std::__Cr::__tree&lt;&gt;::destroy()
#8 0x56177bb23e5f net::ProofVerifierChromium::~ProofVerifierChromium()
#9 0x56177bb23e9e net::ProofVerifierChromium::~ProofVerifierChromium()
#10 0x56177bc747fb quic::QuicCryptoClientConfig::~QuicCryptoClientConfig()
#11 0x56177bb13f7d net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner()
#12 0x56177bb1c3f3 std::__Cr::__list_imp&lt;&gt;::clear()
#13 0x56177bb1539c net::QuicSessionPool::~QuicSessionPool()
#14 0x56177ba7a36c net::HttpNetworkSession::~HttpNetworkSession()
#15 0x56177bbce09a net::URLRequestContext::~URLRequestContext()
#16 0x56177da5aae3 network::URLRequestContextOwner::~URLRequestContextOwner()
#17 0x56177d92f14c network::NetworkContext::~NetworkContext()
#18 0x56177d92f2ae network::NetworkContext::~NetworkContext()
#19 0x56177d917359 network::NetworkService::OnNetworkContextConnectionClosed()
#20 0x561774cb5088 base::OnceCallback&lt;&gt;::Run()
#21 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#22 0x56177bdee0ef mojo::InterfaceEndpointClient::NotifyError()
#23 0x56177bdfca36 mojo::internal::MultiplexRouter::ProcessNotifyErrorTask()
#24 0x56177bdf8c62 mojo::internal::MultiplexRouter::ProcessTasks()
#25 0x56177bdf77ca mojo::internal::MultiplexRouter::OnPipeConnectionError()
#26 0x561774cb6f60 base::OnceCallback&lt;&gt;::Run()
#27 0x56177bde7663 mojo::Connector::HandleError()
#28 0x56177bde8377 mojo::Connector::OnWatcherHandleReady()
#29 0x5617756f059f base::RepeatingCallback&lt;&gt;::Run()
#30 0x561774d4c11d base::RepeatingCallback&lt;&gt;::Run()
#31 0x56177be1a6f8 mojo::SimpleWatcher::OnHandleReady()
#32 0x56177be1a894 mojo::SimpleWatcher::Context::Notify()
#33 0x56177be19880 mojo::SimpleWatcher::Context::CallNotify()
#34 0x561774da1805 mojo::core::ipcz_driver::MojoTrap::DispatchEvent()
#35 0x561774da04f1 mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent()
#36 0x561774da11fd mojo::core::ipcz_driver::MojoTrap::HandleEvent()
#37 0x561774da0f2d mojo::core::ipcz_driver::MojoTrap::TrapEventHandler()
#38 0x561774dfd366 ipcz::TrapEventDispatcher::~TrapEventDispatcher()
#39 0x561774df2e1d ipcz::Router::AcceptRouteClosureFrom()
#40 0x561774de463b ipcz::NodeLink::OnRouteClosed()
#41 0x561774debedc ipcz::msg::NodeMessageListener::OnTransportMessage()
#42 0x561774dd15c1 ipcz::(anonymous namespace)::NotifyTransport()
#43 0x561774da775b mojo::core::ipcz_driver::Transport::OnChannelMessage()
#44 0x561774d83256 mojo::core::Channel::TryDispatchMessage()
#45 0x561774d82ec8 mojo::core::Channel::OnReadComplete()
#46 0x561774dc6bec mojo::core::ChannelPosix::OnFileCanReadWithoutBlocking()
#47 0x56177b5caa45 base::MessagePumpLibevent::FdWatchController::OnFdReadable()
#48 0x56177b5d0593 base::MessagePumpEpoll::HandleEvent()
#49 0x56177b5cfa18 base::MessagePumpEpoll::OnEpollEvent()
#50 0x56177b5cf213 base::MessagePumpEpoll::WaitForEpollEvents()
#51 0x56177b5cecd8 base::MessagePumpEpoll::Run()
#52 0x56177b53f54f base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run()
#53 0x56177b4e193c base::RunLoop::Run()
#54 0x56177b57b28d base::Thread::Run()
#55 0x56177f63e5d0 content::(anonymous namespace)::ChildIOThread::Run()
#56 0x56177b57b683 base::Thread::ThreadMain()
#57 0x56177b595ea3 base::(anonymous namespace)::ThreadFunc()
#58 0x7f29658f645c (/usr/lib/x86_64-linux-gnu/libc.so.6+0x8845b)
#59 0x7f2965976ae0 __clone

Task trace:
No active task.

This is not reproducible, I just saw this once.</content>
    </entry>
    <entry>
        <id>333425971</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333425971"/>
        <updated>1970-01-01T00:28:32.664Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=0c16b4b7-facb-4873-ba3e-8f69fcce1dec

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0c16b4b7-facb-4873-ba3e-8f69fcce1dec

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/indexed-getter/indexed-getter.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/indexed-getter/indexed-getter.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333487750</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333487750"/>
        <updated>1970-01-01T00:28:32.663Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283957:1284043:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e1ef0978-7b21-4d41-be3b-e9a53f3b485a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e1ef0978-7b21-4d41-be3b-e9a53f3b485a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.26%: 458.4436 -&gt; 443.50104 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
        3.26%: 458.4436 -&gt; 443.50104 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333445544</id>
        <title>components_browsertests fails to find setupHeaderFooterTemplate</title>
        <author>
            <name>ms...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445544"/>
        <updated>1970-01-01T00:28:32.662Z</updated>
        <summary>-</summary>
        <content type="html">I get a console error when printing from PrintRenderFrameHelperTest: "Uncaught ReferenceError: setupHeaderFooterTemplate is not defined", meaning that no headers and footers will be generated.

Here's a test that I believe should pass:

```cxx
TEST_F(MAYBE_PrintRenderFrameHelperTest, HeaderAndFooter) {
  LoadHTML(R"HTML(
    &lt;style&gt;
      @page {
        size: 7in;
        margin: 1in;
      }
    &lt;/style&gt;
    &lt;div&gt;&lt;/div&gt;
  )HTML");

  mojom::PrintParams&amp; params = printer()-&gt;Params();
  printer()-&gt;set_should_generate_page_images(true);
  params.display_header_footer = true;
  params.header_template =
      u"&lt;div style='width:9pt; height:9pt; border-left:9pt solid blue;'&gt;&lt;/div&gt;";

  OnPrintPages();

  const MockPrinterPage* page = printer()-&gt;GetPrinterPage(0);
  ASSERT_TRUE(page);
  const Image&amp; image = page-&gt;image();
  ASSERT_EQ(image.size(), gfx::Size(7*72, 7*72));
  // There should be some blue here (note that there may be some
  // subpixel stuff to sort out, though):
  unsigned nonwhite_count = 0;
  for (int y = 0; y &lt; 72; y++) {
    for (int x = 0; x &lt; 7*72; x++) {
      if (image.pixel_at(x, y) != 0xffffffU) {
        nonwhite_count++;
      }
    }
  }
  EXPECT_GE(nonwhite_count, 81u);
}
```

However:
```
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from PrintRenderFrameHelperTest
[ RUN      ] PrintRenderFrameHelperTest.HeaderAndFooter
../../components/printing/test/print_render_frame_helper_browsertest.cc:1297: Failure
Expected: (nonwhite_count) &gt;= (81u), actual: 0 vs 81
Stack trace:
#0 0x558c7a6551c9 printing::PrintRenderFrameHelperTest_HeaderAndFooter_Test::TestBody()

[  FAILED  ] PrintRenderFrameHelperTest.HeaderAndFooter (2761 ms)
[----------] 1 test from PrintRenderFrameHelperTest (2771 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (2771 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] PrintRenderFrameHelperTest.HeaderAndFooter
```

Not surprising, since setupHeaderFooterTemplate doesn't exist. How do we fix this?</content>
    </entry>
    <entry>
        <id>333413839</id>
        <title>[Android System Health Rotation Memory]: 2 regressions in system_health.memory_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413839"/>
        <updated>1970-01-01T00:28:32.662Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284244:1284248:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a06b51cc-572c-4acb-8994-b0efcf75795b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a06b51cc-572c-4acb-8994-b0efcf75795b

Top 2 regressions (out of 6, with 4 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_allocated_size_avg/load_news
       15.69%: 33323261.0 -&gt; 38551698.5 sizeInBytes
  - ChromiumPerf/android-pixel4_webview-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_committed_size_avg/load_news
       13.06%: 42589662.0 -&gt; 48151808.0 sizeInBytes

Top 2 affected measurements in android-pixel4_webview-perf:
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_allocated_size_avg/load_news
       15.69%: 33323261.0 -&gt; 38551698.5 sizeInBytes
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_committed_size_avg/load_news
       13.06%: 42589662.0 -&gt; 48151808.0 sizeInBytes

Regressions grouped by system_health.memory_mobile includes data from the following benchmarks with listed owners:
  system_health.memory_mobile: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/cd3f12d62067f82140f510153aac019455f7c875..d4f8d6bd9c808f0dfe7e2e8be2763eb8a0f81a9e
  Chromium Commit Position: https://crrev.com/1284243..1284248
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/594a3295d4d26508634492b03582a8f76738a379..594a3295d4d26508634492b03582a8f76738a379
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5a6ab45d351d23c17feca2b6d1961e5f7d4eec5..e5a6ab45d351d23c17feca2b6d1961e5f7d4eec5</content>
    </entry>
    <entry>
        <id>333420613</id>
        <title>Missing of consideration of a CSS specification with ':nth-child( of &amp;lt;selector&amp;gt;)' syntax</title>
        <author>
            <name>ka...@googlemail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420613"/>
        <updated>1970-01-01T00:28:32.662Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. download html file from https://drive.google.com/file/d/1SH5Ld8qOWdajNI4C-JmCXY6HU_ewDZvV/view?usp=drive_link
2. open file in chrome
3. 

# Problem Description
If any class-dependent rule exists in the CSS rules, rules that use the ':nth-child( of &lt;selector&gt;)' syntax, where &lt;selector&gt; itself is a class-dependent rule, will not be taken into account after DOM modifications.

A class-dependent rule can be e.g.
			[class*="any_class_name"] &gt; * {
			}
If this rule is removed from the style information, everything works correctly.
To demonstrate the error, I have included the well-known table with zebra stripes in three versions below.

In each table, row number 3 is initially hidden and is displayed after 2 seconds.
	table 1 - row no. 3 hidden with style="display:none" 
	table 2 - row no. 3 hidden with hidden attribute
	table 3 - row no. 3 hidden with class="hide-it" (style spec .hide-it { display: none; })
	
After 2 seconds the following values are set
	table 1 - row no. 3 is shown / style="" 
	table 2 - row no. 3 is shown / hidden attribute removed
	table 3 - row no. 3 is shown / class="" 

Tables 1 and 2 work correctly and the zebra stripes change as expected. Only in Table 3 the zebra stripes are not updated after changing a class value.
I checked the error in Windows (Chrome 123.06312.106), macOS (Chrome 123.06312.107) and Android (Chrome 123.06312.99).

In the Firefox 124.0.2 (Windows) and Safari 17.4.1 (macOS) browsers, all tables display correctly and as expected.

# Summary
Missing of consideration of a CSS specification with ':nth-child( of &lt;selector&gt;)' syntax

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333423696</id>
        <title>Re-implement GC on page navigation</title>
        <author>
            <name>ml...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423696"/>
        <updated>1970-01-01T00:28:32.660Z</updated>
        <summary>-</summary>
        <content type="html">Find a way to reclaim some memory on page navigation. GC time needs to be bounded here or otherwise we'd cause jank on same-site navigations by eating away CPU cycles for GC.</content>
    </entry>
    <entry>
        <id>333413837</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413837"/>
        <updated>1970-01-01T00:28:32.660Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284117:1284140:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ceb4576f-e129-483a-bcf4-cf44526c02bb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ceb4576f-e129-483a-bcf4-cf44526c02bb

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute/browse_shopping/browse_shopping_amazon_2019
       21.43%: 15.274 -&gt; 18.54647 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333508726</id>
        <title>ActiveText, LinkText and VisitedText CSS system colours can share the same value</title>
        <author>
            <name>lw...@igalia.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333508726"/>
        <updated>1970-01-01T00:28:32.659Z</updated>
        <summary>-</summary>
        <content type="html">Due to how the system colors system provider is wired up, these three system colours (ActiveText, LinkText and VisitedText) end up sharing a value (the one expected for LinkText). This is because Windows' themes have a single "SystemColorHotlightColor" value for hyperlinks. However, in general use where forced-colors mode isn't enabled and where the web browser is in use, these three values should be separated like they are on platforms that don't use a system provider (e.g. Android).

This also seems to impact macOS too where there isn't even a system color for links.</content>
    </entry>
    <entry>
        <id>333424904</id>
        <title>calculation wrong </title>
        <author>
            <name>ku...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424904"/>
        <updated>1970-01-01T00:28:32.658Z</updated>
        <summary>-</summary>
        <content type="html">Hi team, 
I found the issue in google sheet when we do the sum in sheet it showing the wrong value because of comma.
When we sum the values with Comma it given wrong answer 
without we try to sum it shows the correct value 
In Microsoft excel if you try to sum the values with comma or without comma answer will be correct 
so need to change the condition in Google sheets with or without comma value should be correct.

For reference check the screenshot also
</content>
    </entry>
    <entry>
        <id>333424903</id>
        <title>Problema de error en Chrome </title>
        <author>
            <name>se...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424903"/>
        <updated>1970-01-01T00:28:32.657Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: &lt;From about:version: Google Chrome x.x.x.x&gt;
Chrome OS Version: &lt;From about:version: Platform x.x.x.x&gt;
Chrome OS Platform: &lt;Make/model of computer running Chrome OS&gt;
Lacros Version (if applicable): &lt;From about:version: Google Chrome x.x.x.x&gt;
Network info: &lt;network, encryption type, router model (if known)&gt;

Please specify Cr-* of the system to which this bug/feature applies (add the label below).

Steps To Reproduce:
(1)
(2)
(3)

Expected Result:

Actual Result:

How frequently does this problem reproduce? (Always, sometimes, hard to reproduce?)

What is the impact to the user, and is there a workaround? If so, what is it?

Please provide any additional information below. Attach a screen shot or log if possible.

For graphics-related bugs, please copy/paste the contents of the about:gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>333504586</id>
        <title>ExtendedDragSourceTest.HandlesMouseMoveBeforeExtendedDragStart started to fail</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333504586"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html">The test started to fail recently and I couldn't pinpoint the culprit
The gardener is going to disable the test
Please reroute the bug as appropriate.
</content>
    </entry>
    <entry>
        <id>333423692</id>
        <title>text input inputs spill into parent details&amp;gt;summary when space is pressed (closing and opening them)</title>
        <author>
            <name>ga...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423692"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. create an HTML structure like this Emmet abbreviation `details&gt;(summary&gt;input){lorem ipsum}` or open this codepen https://codepen.io/gabrielesilinic/pen/ExJLjOP
2. focus the input.
3. type in the input something that has a space in it. like "lorem ipsum", you will notice the focus "spills out" and closes the details&gt;summary

# Problem Description
The space keydown is not properly contained inside the text input, pressing space while typing affects elements outside the input like the summary and details the input is contained into in this case, making it hard to deal with setups like forms with expandable sections (see steps to reproduce).
 
Unfortunately there aren't many other browser engines I have access to, but as far as Firefox is concerned, they keep all inputs inside the input element making it easier to deal with complex components, so I guess its a bug in chromium.

HTML structure

```html
&lt;details&gt;
  &lt;summary&gt;Try to type &lt;input type="text" id="inputInsideSummary"/&gt;&lt;/summary&gt;
  &lt;p&gt;when you hit space while using the text input this should not open, but currently it does on chromium v123&lt;/p&gt;
&lt;/details&gt;
```

# Additional Comments
Bug found on both google chrome and microsoft edge (chromium), firefox developer edition 125.0b9 is the only one who behaves correctly, I have no idea about webkit.

# Summary
text input inputs spill into parent details&gt;summary when space is pressed (closing and opening them)

# Custom Questions
#### Which component does this fall under?
Blink&gt;INPUT

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333443437</id>
        <title>Change classification into single-slot spans</title>
        <author>
            <name>ba...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333443437"/>
        <updated>1970-01-01T00:28:32.656Z</updated>
        <summary>-</summary>
        <content type="html">In PartitionAlloc we have 3 types of slot spans (see also [PartitionAlloc glossary](https://source.chromium.org/chromium/chromium/src/+/main:base/allocator/partition_allocator/glossary.md)):
1. "small buckets" - a slot span which hosts N&gt;=1 slots (yes, N can be 1)
2. "single-slot span" - a slot span which hosts exactly 1 slot (because it's a guarantee, we can treat these slot spans differently)
3. "direct map" - an artificial slot span for allocations over kMaxBucketed (900kB-ish)

The heuristic that selects these is simple. If slot size `&lt;= 16*SytemPageSize()` we choose type #1, if `&gt; kMaxBucketed` we choose type #3, otherwise type #2. `16*SytemPageSize()` was chosen as a selector, because it's the maximum size of type #1 slot span, out of convenience, not out of necessity. As a result, any slot size `&gt; 6*SytemPageSize() &amp;&amp; &lt;= 16*SytemPageSize()` (and probably not only) will fall into type #1 slot span with N=1. We might as well assign them to type #2, and take advantage of the special treatment.

This will enable the following scenarios:
- (A) When 64kB system pages are used, type #2 becomes non-existent, which causes failures on tests that specifically test this type of a span. With the new approach, type #2 will show up on the map again.
- (B) Requested allocation size will be saved out-of-line for more allocations. This means we'll need less bits of inline metadata if we ever decide to save requested size for all allocations (e.g. for crbug.com/41496184).
- (C) This will increase number of cases where in-slot ref-count can be avoided (see crbug.com/330589224)

Having said all that, we need to evaluate performance of the new approach. The difference in treatment of type #1 and type #2 spans may change perf and memory usage in an unknown direction.
</content>
    </entry>
</feed>