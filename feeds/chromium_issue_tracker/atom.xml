<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-28T00:53:04.048Z</updated>
    <entry>
        <id>327279536</id>
        <title>Update in content not conveyed by screen reader in chrome://accessibility</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327279536"/>
        <updated>2024-02-28T00:53:04.048Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. When Copy accessibility tree button is activated, the label of the button changes to "Copied accessibility tree" but this update in content is not conveyed or announced by screen reader to users

2. Screencast: https://drive.google.com/file/d/1Q1Y_5QDd2XlsQ6HC1-BzBHH41812_Wm4/view?usp=sharing

EXPECTED RESULTS:

- Any dynamic update in content should be announced or conveyed by screen reader as confirmation to users that the action was successful

STEPS TO REPRODUCE:

0. Enable screen reader
1. Navigate to chrome://accessibility
2. Navigate to any of the Copy accessibility tree buttons
3. Activate the button
4. Observe announcement


ENVIRONMENT DETAILS:

Windows:

- Device(s) (brand, OS version, test key or release key): Windows 11 23H2
- Screen reader name and version: NVDA 2023.3.3
- Browser name and version: Version 122.0.6261.94 (Official Build) (64-bit)</content>
    </entry>
    <entry>
        <id>327270274</id>
        <title>Provide alternatives to postMessage() for PDF viewer</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327270274"/>
        <updated>2024-02-28T00:34:43.596Z</updated>
        <summary>-</summary>
        <content type="html">Chrome PDF viewer currently supports 3 postMessage() endpoints [1]: getSelectedText(), print(), and selectAll(). These were added in r311218. Callers normally can postMessage() directly to the embed. However, after r1262001, the embed is intentionally hidden by shadow DOM. (Bug 40796466 is also related.)

For example:
1. Open a PDF (e.g. https://www.pdf995.com/samples/pdf.pdf).
2. Open DevTools in the top-most frame.
2. In DevTools, run document.getElementsByTagName("embed")[0].postMessage({type: 'selectAll'}, '*').

GuestView PDF will receive the message and select all text. OOPIF PDF does not receive the message.

Bug 41133007 lists some use cases for postMessage().

window.getSelection() is one possible approach for a postMessage() alternative for a full page PDF viewer, so that callers can still select text and select all text. Firefox allows this behavior.

[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/resources/pdf/pdf_viewer.ts;l=726-743;drc=e7eadcdae649dba6ed0991a0da90257acfd635ac;bpv=0;bpt=0</content>
    </entry>
    <entry>
        <id>327244267</id>
        <title>Generate tasks traces for single-process Mojo usage in tests</title>
        <author>
            <name>re...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327244267"/>
        <updated>2024-02-28T00:34:21.309Z</updated>
        <summary>-</summary>
        <content type="html">As a stop-gap before we have full support for tracing Mojo calls between processes it would be helpful to at least have a solution for the single-process case which is often encountered in tests. It seems like this could be implemented similar to the existing `TaskTrace` infrastructure since making an in-process Mojo calls is semantically equivalent to a `PostTask()` call anyways.</content>
    </entry>
    <entry>
        <id>327276521</id>
        <title>Migrate existing New Badge</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327276521"/>
        <updated>2024-02-28T00:27:17.856Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327277386</id>
        <title>Add New Badge Controller to Browser</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327277386"/>
        <updated>2024-02-28T00:26:34.338Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327276979</id>
        <title>New Badge Controller</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327276979"/>
        <updated>2024-02-28T00:25:24.174Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327245889</id>
        <title>Crash when interacting with MIDI</title>
        <author>
            <name>pa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245889"/>
        <updated>2024-02-28T00:21:56.641Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
- Follow instructures at https://github.com/lozjackson/plawright-midi-test that contains a self-contained repro

# Problem Description
Crash Info:

Status: Uploaded
Uploaded Crash Report ID: f9170907b88fc07a
Upload Time: Tuesday, February 27, 2024 at 10:53:40 AM

# Summary
Crash when interacting with MIDI

# Custom Questions
#### Which component does this fall under?
Blink&gt;Media

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327245888</id>
        <title>Profiler doesn't always capture JS frame info</title>
        <author>
            <name>je...@salesforce.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245888"/>
        <updated>2024-02-28T00:14:11.378Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Visit https://app.slack.com/client while signed in
2. Open DevTools and take a ~30sec performance trace while using Slack
3. View the "Bottom Up" tab

# Problem Description
The top item in the Bottom-Up tab is labelled "Function Call". Which function?? The main callers of the mystery function are "Animation Frame Fired" and "Timer Fired". But there's no indication of what is actually running on the CPU.

# Additional Comments
In this screenshot: what code was running???

# Summary
Profiler doesn't always capture JS frame info

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327270272</id>
        <title>Enterprise enrollment not blocked when enrollment token is empty</title>
        <author>
            <name>mi...@pwc.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327270272"/>
        <updated>2024-02-28T00:08:14.916Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. set CloudManagementEnrollmentMandatory to 1
2. Do not set an Enrollment token
3. Ensure no DM token exists
4. Launch Chrome

Expected Behaviour:
Setting CloudManagementEnrollmentMandatory to True (1) should block Chrome from launching if enrollment fails for any reason. This should include when the enrollment token is not present.

Actual Behaviour:
Chrome launches with no issues.

# Problem Description
Due to the nature of our business, we have a very complicated Local Policy Management system. As we have over 140 distinct Enrollment tokens.
The Enrollment token is set on our machine via a script during device build.

We would like to make use of CloudManagementEnrollmentMandatory as a static GPO setting across our fleet, to ensure that all browsers are managed. We were expecting that CloudManagementEnrollmentMandatory would catch any machines where the script setting the enrollment token failed - however this is not what is happening.

Relevant Chrome source code appears to be here
https://source.chromium.org/chromium/chromium/src/+/main:components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc;l=106;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090

# Summary
Enterprise enrollment not blocked when enrollment token is empty

# Additional Data
Category: Enterprise \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>327274751</id>
        <title>[E2E] Coordinate ReadAloud with BottomControls Toolbar</title>
        <author>
            <name>do...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327274751"/>
        <updated>2024-02-28T00:03:04.066Z</updated>
        <summary>-</summary>
        <content type="html">When ReadAloud is active it uses the BottomControls Toolbar, but that's also used by the Bottom Tab Switcher. With EdgeToEdge different pages may cause a different bottom inset which need to be handled by whichever is closest to the bottom. This means ReadAloud when it's active, but the TabSwitcher when ReadAloud is not active.</content>
    </entry>
    <entry>
        <id>327244952</id>
        <title>[V8 JetStream2 Perf Sheriff]: 1 regressions in jetstream2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327244952"/>
        <updated>2024-02-27T23:47:35.524Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1265555:1265591:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1be28a92-912e-411f-9fba-c84d202f7082

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1be28a92-912e-411f-9fba-c84d202f7082

Top 1 regressions (out of 5, with 4 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/jetstream2/octane-code-load.Worst/JetStream2
       16.67%: 1000.0 -&gt; 833.3333 unitless

Top 1 affected measurements in android-pixel6-perf:
  - jetstream2/octane-code-load.Worst/JetStream2
       16.67%: 1000.0 -&gt; 833.3333 unitless

Regressions grouped by jetstream2 includes data from the following benchmarks with listed owners:
  jetstream2: cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/955f0dd5b6100964fb0cc038bd5e1c44d04db409..8b2c0117b087c8d450e783a5c06eb5811877717d
  Chromium Commit Position: https://crrev.com/1265554..1265591
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/1c76d6f5551bbec3ffb4d9173829a2c66802d0bb..1c76d6f5551bbec3ffb4d9173829a2c66802d0bb
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/91ebd5fd12a3fad3e632ec52a51946e492ffaad9..91ebd5fd12a3fad3e632ec52a51946e492ffaad9</content>
    </entry>
    <entry>
        <id>327244265</id>
        <title>"dragend" is not fired on source window when dropping data onto something other than another window</title>
        <author>
            <name>al...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327244265"/>
        <updated>2024-02-27T23:35:33.384Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. drag an anchor element (or a draggable element that attaches native data) from a page and drop the anchor on the URL bar on another instance of Chrome (or dropped on any other application)
2. a "dragend" event is not fired on the source document

- Reproduction code: https://codesandbox.io/s/no-dragend-when-dropping-externally-outside-of-a-window-for-chrome-bug-jx8dyv?file=/index.html
- Reproduction URL: https://jx8dyv.csb.app/

# Problem Description
According to the [drag and drop spec](https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model) the source node for a drag and drop operation should always get a `"dragend"` event, regardless of where the element is dropped (including being dropped in other applications)

The bug does not occur when dragging into another Chrome window (the source node gets a `"dragend"` event).

Other browsers do not have this bug:

- ✅ Firefox@123.0
- ✅ Safari@17.3.1

# Summary
"dragend" is not fired on source window when dropping data onto something other than another window

# Custom Questions
#### Which component does this fall under?
Blink&gt;DataTransfer

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327270664</id>
        <title>Custom search engines, history and apps lost after graceful restart due to sync bug</title>
        <author>
            <name>ws...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327270664"/>
        <updated>2024-02-27T23:30:06.371Z</updated>
        <summary>-</summary>
        <content type="html">**OS**: Linux

**Chrome build number**: 122.0.6261.69 (Official Build) (64-bit)

```
Tue Feb 27 2024 15:25:37 GMT-0800 (Pacific Standard Time)
======
Status
======
{
  "actionable_error": [
    {
      "stat_name": "Error Type",
      "stat_status": "uninitialized",
      "stat_value": "Uninitialized"
    },
    {
      "stat_name": "Action",
      "stat_status": "uninitialized",
      "stat_value": "Uninitialized"
    },
    {
      "stat_name": "Error Description",
      "stat_status": "uninitialized",
      "stat_value": "Uninitialized"
    }
  ],
  "actionable_error_detected": false,
  "details": [
    {
      "data": [
        {
          "stat_name": "Transport State",
          "stat_status": "",
          "stat_value": "Active"
        },
        {
          "stat_name": "User Actionable Error",
          "stat_status": "",
          "stat_value": "None"
        },
        {
          "stat_name": "Disable Reasons",
          "stat_status": "",
          "stat_value": "None"
        },
        {
          "stat_name": "Sync Feature Enabled",
          "stat_status": "",
          "stat_value": true
        },
        {
          "stat_name": "Setup In Progress",
          "stat_status": "",
          "stat_value": true
        },
        {
          "stat_name": "Auth Error",
          "stat_status": "",
          "stat_value": "OK since 2024-02-27 01:44:56 -08"
        }
      ],
      "is_sensitive": false,
      "title": "Summary"
    },
    {
      "data": [
        {
          "stat_name": "Client Version",
          "stat_status": "",
          "stat_value": "Google Chrome Linux 122.0.6261.69 (81bc525b6a36d91ed7fe98a4b53c6f53c79adbb2-refs/branch-heads/6261_57@{#3})"
        },
        {
          "stat_name": "Server URL",
          "stat_status": "",
          "stat_value": "https://clients4.google.com/chrome-sync"
        }
      ],
      "is_sensitive": false,
      "title": "Version Info"
    },
    {
      "data": [
        {
          "stat_name": "Requested Token",
          "stat_status": "",
          "stat_value": "2024-02-27 01:45:03 -08"
        },
        {
          "stat_name": "Received Token Response",
          "stat_status": "",
          "stat_value": "2024-02-27 01:45:03 -08"
        },
        {
          "stat_name": "Last Token Request Result",
          "stat_status": "",
          "stat_value": "OK"
        },
        {
          "stat_name": "Has Token",
          "stat_status": "",
          "stat_value": true
        },
        {
          "stat_name": "Next Token Request",
          "stat_status": "",
          "stat_value": "not scheduled"
        }
      ],
      "is_sensitive": false,
      "title": "Credentials"
    },
    {
      "data": [
        {
          "stat_name": "Server Connection",
          "stat_status": "",
          "stat_value": "OK since 2024-02-27 01:45:56 -08"
        },
        {
          "stat_name": "Last Synced",
          "stat_status": "",
          "stat_value": "1:38 ago"
        },
        {
          "stat_name": "Sync First-Time Setup Complete",
          "stat_status": "",
          "stat_value": true
        },
        {
          "stat_name": "Sync Cycle Ongoing",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Local Sync Backend Enabled",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Local Backend Path",
          "stat_status": "uninitialized",
          "stat_value": "Uninitialized"
        }
      ],
      "is_sensitive": false,
      "title": "Local State"
    },
    {
      "data": [
        {
          "stat_name": "Throttled or Backoff",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Retry Time",
          "stat_status": "",
          "stat_value": "Scheduler is not in backoff or throttled"
        },
        {
          "stat_name": "Notifications Enabled",
          "stat_status": "",
          "stat_value": true
        }
      ],
      "is_sensitive": false,
      "title": "Network"
    },
    {
      "data": [
        {
          "stat_name": "Explicit Passphrase",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Passphrase Required",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Cryptographer Ready To Encrypt",
          "stat_status": "",
          "stat_value": true
        },
        {
          "stat_name": "Cryptographer Has Pending Keys",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Encrypted Types",
          "stat_status": "",
          "stat_value": "Passwords, Autofill Wallet Credential, Wifi Configurations"
        },
        {
          "stat_name": "Has Keystore Key",
          "stat_status": "",
          "stat_value": true
        },
        {
          "stat_name": "Keystore Migration Time",
          "stat_status": "",
          "stat_value": "2016-09-06 09:05:04 -07"
        },
        {
          "stat_name": "Passphrase Type",
          "stat_status": "",
          "stat_value": "PassphraseType::kKeystorePassphrase"
        },
        {
          "stat_name": "Explicit passphrase Time",
          "stat_status": "",
          "stat_value": "n/a"
        },
        {
          "stat_name": "Trusted Vault Migration Time",
          "stat_status": "uninitialized",
          "stat_value": "Uninitialized"
        },
        {
          "stat_name": "Trusted Vault Version/Epoch",
          "stat_status": "uninitialized",
          "stat_value": 0
        }
      ],
      "is_sensitive": false,
      "title": "Encryption"
    },
    {
      "data": [
        {
          "stat_name": "Sync Source",
          "stat_status": "",
          "stat_value": "PERIODIC"
        },
        {
          "stat_name": "GetKey Step Failed",
          "stat_status": "",
          "stat_value": false
        },
        {
          "stat_name": "Download Step Result",
          "stat_status": "",
          "stat_value": "Success"
        },
        {
          "stat_name": "Commit Step Result",
          "stat_status": "",
          "stat_value": "Success"
        }
      ],
      "is_sensitive": false,
      "title": "Status from Last Completed Session"
    },
    {
      "data": [
        {
          "stat_name": "Notifications Received",
          "stat_status": "",
          "stat_value": 0
        },
        {
          "stat_name": "Updates Downloaded",
          "stat_status": "",
          "stat_value": 11
        },
        {
          "stat_name": "Tombstone Updates",
          "stat_status": "",
          "stat_value": 0
        },
        {
          "stat_name": "Successful Commits",
          "stat_status": "",
          "stat_value": 11
        }
      ],
      "is_sensitive": false,
      "title": "Running Totals"
    },
    {
      "data": [
        {
          "stat_name": "Server Conflicts",
          "stat_status": "",
          "stat_value": 0
        },
        {
          "stat_name": "Committed Items",
          "stat_status": "",
          "stat_value": 0
        }
      ],
      "is_sensitive": false,
      "title": "Transient Counters (this cycle)"
    },
    {
      "data": [
        {
          "stat_name": "Updates Downloaded",
          "stat_status": "",
          "stat_value": 5
        },
        {
          "stat_name": "Committed Count",
          "stat_status": "",
          "stat_value": 0
        }
      ],
      "is_sensitive": false,
      "title": "Transient Counters (last cycle of last completed session)"
    }
  ],
  "type_status": [
    {
      "message": "Message",
      "name": "Model Type",
      "num_entries": "Total Entries",
      "num_live": "Live Entries",
      "state": "State",
      "status": "header"
    },
    {
      "message": "",
      "name": "Bookmarks",
      "state": "Running",
      "status": "ok",
      "num_entries": 301,
      "num_live": 301
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Preferences",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: PasswordSyncBridge@components/password_manager/core/browser/sync/password_sync_bridge.cc:330, datatype error was encountered: Password metadata store isn't available.",
      "name": "Passwords",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: LoadMetadata@components/autofill/core/browser/webdata/addresses/autofill_profile_sync_bridge.cc:267, datatype error was encountered: Failed to load AutofillWebDatabase.",
      "name": "Autofill Profiles",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: LoadMetadata@components/autofill/core/browser/webdata/autocomplete/autocomplete_sync_bridge.cc:486, datatype error was encountered: Failed to load AutofillWebDatabase.",
      "name": "Autofill",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: LoadMetadata@components/autofill/core/browser/webdata/payments/autofill_wallet_sync_bridge.cc:479, datatype error was encountered: Failed to load AutofillWebDatabase.",
      "name": "Autofill Wallet",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: LoadDataCacheAndMetadata@components/autofill/core/browser/webdata/payments/autofill_wallet_metadata_sync_bridge.cc:464, datatype error was encountered: Failed to load AutofillWebDatabase.",
      "name": "Autofill Wallet Metadata",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: LoadAutofillOfferMetadata@components/autofill/core/browser/webdata/payments/autofill_wallet_offer_sync_bridge.cc:223, datatype error was encountered: Failed to load Autofill table.",
      "name": "Autofill Wallet Offer",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Themes",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Extensions",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Search Engines",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Sessions",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Apps",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "App settings",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Extension settings",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "History Delete Directives",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Dictionary",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Device Info",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Priority Preferences",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Datatype preconditions not met.",
      "name": "Managed User Settings",
      "state": "Not Running",
      "status": "severity_info",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: StoreLoaded@components/reading_list/core/reading_list_model_impl.cc:694, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Reading List",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "User Events",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "User Consents",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Send Tab To Self",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Security Events",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "Web Apps",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "",
      "name": "Sharing Message",
      "state": "Running",
      "status": "ok",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConfigurationCompleted@components/sync/service/data_type_manager_impl.cc:532, datatype error was encountered: Backend failed to download and configure type.",
      "name": "History",
      "state": "Stopping",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Datatype preconditions not met.",
      "name": "Contact Info",
      "state": "Not Running",
      "status": "severity_info",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "",
      "name": "Saved Tab Group",
      "state": "Not Running",
      "status": "severity_info",
      "num_entries": 0,
      "num_live": 0
    },
    {
      "message": "Error: ConstructModelTypeStoreOnFrontendSequence@components/sync/model/model_type_store_service_impl.cc:87, datatype error was encountered: ModelTypeStore backend initialization failed",
      "name": "WebAuthn Credentials",
      "state": "Failed",
      "status": "severity_error",
      "num_entries": 0,
      "num_live": 0
    }
  ],
  "unrecoverable_error_detected": false
}
```

REPRO STEPS
None known.

ACTUAL RESULTS
Lost all custom search engines, history and apps when I restarted Chrome (normally). Bookmarks still present and extensions still installed.

EXPECTED RESULTS
I expected my custom search engines, history and apps to still be there.

ADDITIONAL INFO
* https://www.google.com/tools/feedback/reports/91589295831
* https://www.google.com/tools/feedback/reports/91589295831
* https://groups.google.com/a/google.com/g/chrome-discuss/c/f2tMWb-7CZo</content>
    </entry>
    <entry>
        <id>327270127</id>
        <title>Utility for reading .gclient config</title>
        <author>
            <name>ss...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327270127"/>
        <updated>2024-02-27T23:25:22.212Z</updated>
        <summary>-</summary>
        <content type="html">It looks like there's utilities to generate .gclient files but we need to be able to read a user's current .gclient file and interpret what custom_vars, target_os, custom_deps etc they currently have. This is forcing us to exec() the .gclient file which isn't ideal. We're hoping to get some utility for reading these files, either a recipe module or git cl command eg something like `git cl get-config custom_vars`</content>
    </entry>
    <entry>
        <id>327265991</id>
        <title>Search shortcuts show incorrect 'number of hits' in chrome://omnibox</title>
        <author>
            <name>ma...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327265991"/>
        <updated>2024-02-27T23:22:47.736Z</updated>
        <summary>-</summary>
        <content type="html">1) Select the omnibox
2) Type 'my query'
3) Press &lt;alt+enter&gt; 20 times. This will create a shortcut with 20 hits.
4) Go to chrome://omnibox, type 'my query', and check the shortcut suggestion

Expected: 'number of hits' in the 'Additional Info' shows 20.

Actual: It shows 1.

Checking the shortcut DB, I see 20 duplicate shortcuts, each with 1 hit. 
They have slightly different URLs because of the 'gs_lcrp' query param. But they're correctly deduped in the shortcuts provider; i.e. the provider suggests 1 shortcut, not 20, and it scores it correctly as if it had 20 hits, not 1 hit.

So the fix would be either to:
a) Dedupe before storing to shortcut DB instead of when reading from it
b) OR display the aggregate hits in chrome://omnibox, like we already do for scoring the shortcuts.</content>
    </entry>
    <entry>
        <id>327270271</id>
        <title>Dev tools</title>
        <author>
            <name>sa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327270271"/>
        <updated>2024-02-27T23:21:46.226Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?
whenever I open the site it is returning internet connect error in chrome. And I open the dev tools the network tab is sending all failures with provisional header.

What is the expected result?
Should execute the page without failure

What happens instead?
Sending all 400 error messages

You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>327269053</id>
        <title>Hook video visibility updates to AutoPip tab helper</title>
        <author>
            <name>bk...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327269053"/>
        <updated>2024-02-27T23:20:44.048Z</updated>
        <summary>-</summary>
        <content type="html">Once MediaSession supports video visibility notifications, update AutoPip tab helper to listen for those notifications and take action as needed.</content>
    </entry>
    <entry>
        <id>327269048</id>
        <title>Focus is lost after clearing search field in chrome://flags</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327269048"/>
        <updated>2024-02-27T23:18:00.170Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. The focus is lost after clearing the search field in chrome://flags page which causes the screen reader to be silent after performing the action

2. Screencast: https://drive.google.com/file/d/18bh-lguRK5Jw7fU-Ur9cR-C7hHvWcYHe/view?usp=sharing

EXPECTED RESULTS:

- Focus should return to the search field

STEPS TO REPRODUCE:

0. Enable screen reader
1. Navigate to chrome://flags
2. Enter something on the search field
3. Activate the clear button
4. Observe focus and announcement


ENVIRONMENT DETAILS:

Windows:

- Device(s) (brand, OS version, test key or release key): Windows 11 23H2
- Screen reader name and version: NVDA 2023.3.3
- Browser name and version: Version 122.0.6261.94 (Official Build) (64-bit)</content>
    </entry>
    <entry>
        <id>327267675</id>
        <title>Notify of video visibility changes through media session</title>
        <author>
            <name>bk...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327267675"/>
        <updated>2024-02-27T23:14:40.834Z</updated>
        <summary>-</summary>
        <content type="html">Plumb video visibility changes notifications through MediaSession.</content>
    </entry>
    <entry>
        <id>327267673</id>
        <title>Focus order not proper in chrome://flags</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327267673"/>
        <updated>2024-02-27T23:14:31.414Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. The Beta channel link comes after the tablist in focus order in chrome://flags page which is not logical

2. Screencast: https://drive.google.com/file/d/1U3QO_VKlRdxzNLUUMs3ys9KGYodGg_An/view?usp=sharing

EXPECTED RESULTS:

- beta channel link should receive focus first before the tabs

STEPS TO REPRODUCE:

1. Navigate to chrome://flags
2. Tab through the page and observe


ENVIRONMENT DETAILS:

Windows:

- Device(s) (brand, OS version, test key or release key): Windows 11 23H2
- Screen reader name and version: NVDA 2023.3.3
- Browser name and version: Version 122.0.6261.94 (Official Build) (64-bit)

</content>
    </entry>
    <entry>
        <id>327245324</id>
        <title>cr-tab-box lacks some ARIA attributes</title>
        <author>
            <name>ap...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245324"/>
        <updated>2024-02-27T22:20:50.997Z</updated>
        <summary>-</summary>
        <content type="html">Per the example at https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role#example, ideally `cr-tab-box` would:

- Use `role=tablist` on the [`#tablist`](https://source.chromium.org/chromium/chromium/src/+/main:ui/webui/resources/cr_elements/cr_tab_box/cr_tab_box.html;l=85;drc=ff6132dbaa160d5e5d799b7889746ae9c85d6e07).
- Use `role=tab` on each of the `tab` slots.
- Use `role=tabpanel` on each of the `panel` slots.
- Use `aria-controls` to associate each tab with each panel.
- Perhaps [encourage the use of `button` for the tabs](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role#best_practices).
- Perhaps set `aria-labelledby` on each panel with the ID of the corresponding tab.

I'm not totally sure how this interacts with the `&lt;slot&gt;`s used by this component, though.</content>
    </entry>
    <entry>
        <id>327254040</id>
        <title>Write fuzz target(s) for  cc/PaintOpReader</title>
        <author>
            <name>ti...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327254040"/>
        <updated>2024-02-27T22:16:43.727Z</updated>
        <summary>-</summary>
        <content type="html">Write fuzz target(s) for CC/PaintOpReader. There is not much coverage in paint_op_reader:

| Path               | Line                | Branch          |
|--------------------|---------------------|-----------------|
| ...                | ...                 | ...             |
| TOTALS             | 14% (1.7K/11.7K)    | 8% (487/5.9K)   |
| paint_op_reader.cc | 22% (274/1.2K)      | 19% (86/448)    |
| paint_op_reader.h  | 54% (35/64)         | 33% (2/6)       |

Based on experiments and intuition both crbug.com/40059662 and crbug.com/327183408 should have been easily fuzzable. Interestingly they are both within the search-space of gpu_raster_fuzzer, but as we've seen with other fuzzers that have too large of a search space they often don't make it deep enough to reach these. Let's target `PaintOpReader` directly with a large rss_limi_mb.


https://analysis.chromium.org/coverage/p/chromium/dir?host=chromium.googlesource.com&amp;project=chromium/src&amp;ref=refs/heads/main&amp;revision=dc54bc1f3d034a9561e7f8161d5a011971c3f2e0&amp;path=//cc/paint/&amp;platform=fuzz&amp;test_suite_type=any&amp;modifier_id=0</content>
    </entry>
    <entry>
        <id>327245450</id>
        <title>Performance panel occassionally excludes functions from the call stack</title>
        <author>
            <name>he...@imkev.dev</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245450"/>
        <updated>2024-02-27T22:02:30.156Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open https://rocky-grizzly-advantage.glitch.me/
2. Open DevTools Performance Panel and start recording a trace
3. Input the character "a" in the search field
4. Stop the trace.

# Problem Description
Please observe the trace: https://trace.cafe/t/2txx6zoGTp

The Performance Panel correctly shows the three interactions (I input three characters in the search field) and the call stack for each task. However the call stack sometimes appears incomplete. For example, the function `sort` is called on each `keyup` event, but in the trace it only shows in the third interaction, while the first two do not include this function in the call stack.

From a user's perspective, the page behaves as expected.

Note that the demo periodically yields to the main thread using the technique described here: https://web.dev/articles/optimize-long-tasks#use_asyncawait_to_create_yield_points

# Summary
Performance panel occassionally excludes functions from the call stack

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327254039</id>
        <title>Clusterfuzz filing P0 non-security issues</title>
        <author>
            <name>ti...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327254039"/>
        <updated>2024-02-27T22:01:09.282Z</updated>
        <summary>-</summary>
        <content type="html">Clusterfuzz is filing many (all?) non-security issues as P0/S4 on buganizer. crbug.com/325318448, crbug.com/327033774, [etc](https://issues.chromium.org/issues?q=hotlistid:5432475%20priority:p0)
</content>
    </entry>
    <entry>
        <id>327252876</id>
        <title>HechoAT+ AT+EGMR=1,7"355665333527910", </title>
        <author>
            <name>oa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327252876"/>
        <updated>2024-02-27T21:57:12.022Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. “&gt;/dev/pttycmd1”355665333527910
2. 
3. 

# Problem Description
Sin red

# Summary
HechoAT+ AT+EGMR=1,7"355665333527910", 

# Additional Data
Category: Network / Downloading \
Chrome Channel: Dev \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327244264</id>
        <title>OK to use ATTACH?</title>
        <author>
            <name>es...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327244264"/>
        <updated>2024-02-27T21:46:33.382Z</updated>
        <summary>-</summary>
        <content type="html">`//base/sql` docs suggest that `ATTACH` [should be banned](https://source.chromium.org/chromium/chromium/src/+/main:sql/README.md;l=622-629;drc=563a50c49209e98846f91f038ff79d4e28df88b3)

However, there is only one client that uses ATTACH (outside of //sql), and that's the [history backend](https://source.chromium.org/chromium/chromium/src/+/main:components/history/core/browser/in_memory_database.h;bpv=1;bpt=1), which uses ATTACH to help create an in-memory database acting as a UI-thread cache of data stored on disk. This seems legitimate.

Therefore we should not assume that ATTACH is associated with multiple disk databases. Also, we haven't effectively banned ATTACH by hiding the C++ wrapper methods because any client can execute arbitrary SQL.</content>
    </entry>
    <entry>
        <id>327254915</id>
        <title>Ensure all relevant forms are being sent to browser</title>
        <author>
            <name>tm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327254915"/>
        <updated>2024-02-27T21:41:16.199Z</updated>
        <summary>-</summary>
        <content type="html">There are a lot of assumptions made in the JS code about which forms we want to send back to the browser, which need to be updated to deal with forms containing only iframes.

IsFormInteresting needs to be updated – and at the same time we should probably just remove the numFieldsRequired param to simplify our lives.

Additionally we need to sweep for early returns in several functions in autofill_controller.js and fill.ts where we check the length of a list of fields/elements.</content>
    </entry>
    <entry>
        <id>327256043</id>
        <title>Tests are failing: startup_browser_creator_browsertest.cc(2153): Failed\nRunLoop::Run() timed out. Timeout set at ProxyRunTestOnMainThreadLoop@content\\public\\test\\...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327256043"/>
        <updated>2024-02-27T21:41:06.685Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
startup_browser_creator_browsertest.cc(2153): Failed\nRunLoop::Run() timed out. Timeout set at ProxyRunTestOnMainThreadLoop@content\\public\\test\\browser_test_base.cc:851.

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/StartupBrowserWithWebAppTest.LastUsedProfilesWithWebApp


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e3b5d9e1b7b28d45af43bd4e6d805d43

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327254037</id>
        <title>[Issue Tracker Feedback] Email truncation makes issue conversations hard to follow</title>
        <author>
            <name>st...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327254037"/>
        <updated>2024-02-27T21:25:04.762Z</updated>
        <summary>-</summary>
        <content type="html">As a public user, nearly all email addresses on Issue Tracker appear truncated to me, whereas on Monorail most @google.com and @chromium.org users as well as bot accounts had their emails visible. The truncation makes it harder to differentiate between issue participants and follow the conversation, especially when participants sometimes refer to each other by name.

If it isn't possible to make email addresses visible to public Issue Tracker users, perhaps it would be possible to allow users to set a display name that is shown alongside their truncated email address?</content>
    </entry>
    <entry>
        <id>327253035</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.offlinepages.OfflinePageAutoFetchTest#testAutoFetchRequestRetainedOnOtherTabClosed </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327253035"/>
        <updated>2024-02-27T21:24:12.414Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.offlinepages.OfflinePageAutoFetchTest#testAutoFetchRequestRetainedOnOtherTabClosed would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.offlinepages.OfflinePageAutoFetchTest%23testAutoFetchRequestRetainedOnOtherTabClosed
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.offlinepages.OfflinePageAutoFetchTest%23testAutoFetchRequestRetainedOnOtherTabClosed
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.offlinepages.OfflinePageAutoFetchTest%23testAutoFetchRequestRetainedOnOtherTabClosed

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>327253475</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.contextualsearch.ContextualSearchTriggerTest#testTapGestureFollowedByNonTextTap </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327253475"/>
        <updated>2024-02-27T21:24:08.274Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.contextualsearch.ContextualSearchTriggerTest#testTapGestureFollowedByNonTextTap is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.contextualsearch.ContextualSearchTriggerTest%23testTapGestureFollowedByNonTextTap
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.contextualsearch.ContextualSearchTriggerTest%23testTapGestureFollowedByNonTextTap
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.contextualsearch.ContextualSearchTriggerTest%23testTapGestureFollowedByNonTextTap

</content>
    </entry>
    <entry>
        <id>327247047</id>
        <title>FillLayout includes the host's insets when doing preferred size calculations</title>
        <author>
            <name>ky...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247047"/>
        <updated>2024-02-27T21:20:48.403Z</updated>
        <summary>-</summary>
        <content type="html">This is different from the default fill layout on View, which doesn't include the insets. Determine if FIllLayout should include the insets when doing size calculations.</content>
    </entry>
    <entry>
        <id>327251756</id>
        <title>Cleanup cloud token code since the feature was never launched</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327251756"/>
        <updated>2024-02-27T21:15:50.167Z</updated>
        <summary>-</summary>
        <content type="html">Comment from @smcgruer:

https://source.chromium.org/chromium/chromium/src/+/main:components/autofill/core/browser/webdata/payments/payments_autofill_table.cc;l=1210;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090

And thus this entire class - components/autofill/core/browser/data_model/credit_card_cloud_token_data.h
Cleaning this up will also require database migration work I assume (to drop the database + thus clean up the data), if data was being written to the table
</content>
    </entry>
    <entry>
        <id>327250058</id>
        <title>Investigate UE2 MessageShown metric discrepancy vs Control</title>
        <author>
            <name>mi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327250058"/>
        <updated>2024-02-27T21:08:30.353Z</updated>
        <summary>-</summary>
        <content type="html">There seems to be more messages shown on the experiment arm 

https://uma.googleplex.com/p/chrome/variations?sid=25a97a1e59b6994048ea08f83a8d13f9
https://uma.googleplex.com/p/chrome/variations?sid=78b523e513249351a0eaab0f315ee593</content>
    </entry>
    <entry>
        <id>327249948</id>
        <title>Update Side Panel IPH string</title>
        <author>
            <name>mi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327249948"/>
        <updated>2024-02-27T21:04:43.836Z</updated>
        <summary>-</summary>
        <content type="html">Generic Side Panel Menu IPH needs new text

New string: “You can open bookmarks, reading mode, and more from the Chrome menu”</content>
    </entry>
    <entry>
        <id>327234282</id>
        <title>Flag expired : passpoint-arc-support is expired in M121</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327234282"/>
        <updated>2024-02-27T20:58:11.269Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "passpoint-arc-support" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M121 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M121 branch you're all set; if you do it after the M121 branch you'll need to merge that CL to the M121 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327247551</id>
        <title>Flag expired : panel-self-refresh-2 is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247551"/>
        <updated>2024-02-27T20:58:08.340Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "panel-self-refresh-2" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327244947</id>
        <title>Flag expired : os-settings-app-badging-toggle is expired in M116</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327244947"/>
        <updated>2024-02-27T20:58:04.725Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "os-settings-app-badging-toggle" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M116 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M116 branch you're all set; if you do it after the M116 branch you'll need to merge that CL to the M116 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327248853</id>
        <title>Flag expired : ntp-modules-header-icon is expired in M122</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327248853"/>
        <updated>2024-02-27T20:57:55.996Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "ntp-modules-header-icon" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M122 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M122 branch you're all set; if you do it after the M122 branch you'll need to merge that CL to the M122 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327248852</id>
        <title>Flag expired : force-resync-drive is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327248852"/>
        <updated>2024-02-27T20:57:51.546Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "force-resync-drive" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327248851</id>
        <title>Flag expired : enable-pip-tuck is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327248851"/>
        <updated>2024-02-27T20:57:48.419Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "enable-pip-tuck" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327243986</id>
        <title>Flag expired : enable-pip-tilt is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327243986"/>
        <updated>2024-02-27T20:57:45.220Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "enable-pip-tilt" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327248849</id>
        <title>Flag expired : campbell-key is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327248849"/>
        <updated>2024-02-27T20:57:37.182Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "campbell-key" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327248848</id>
        <title>Flag expired : campbell-glyph is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327248848"/>
        <updated>2024-02-27T20:57:33.038Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "campbell-glyph" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1266043}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327245883</id>
        <title>BackgroundTabHoverCardContentsHaveCorrectDimensions is flaky</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245883"/>
        <updated>2024-02-27T20:49:23.068Z</updated>
        <summary>-</summary>
        <content type="html">This flakes 10% of https://ci.chromium.org/ui/p/chrome/builders/ci/win-rel-ready/ bots now, e.g. see https://ci.chromium.org/ui/p/chrome/builders/ci/win-rel-ready?limit=200

The first flake I see is https://ci.chromium.org/ui/p/chrome/builders/ci/win-rel-ready/13310/overview

tab_hover_card_controller_interactive_uitest.cc(782): Expected equality of these values:
  hover_card_size.height()
    Which is: 245
  total_children_height
    Which is: 244</content>
    </entry>
    <entry>
        <id>327246125</id>
        <title>Rename upstream, downstream ios16-* devices to ios18-*</title>
        <author>
            <name>ad...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327246125"/>
        <updated>2024-02-27T20:48:27.058Z</updated>
        <summary>-</summary>
        <content type="html">Rename all ios16-* devices to ios18-* both upstream and downstream builders</content>
    </entry>
    <entry>
        <id>327247046</id>
        <title>Stack overflow in PGO'd Edge in blink_perf.css/CustomPropertiesVarAlias.html</title>
        <author>
            <name>kb...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247046"/>
        <updated>2024-02-27T20:47:21.653Z</updated>
        <summary>-</summary>
        <content type="html">The Microsoft Edge team has seen cases where PGO will make inlining changes that lead to stack overflows in the following recursive cycle:

msedge!blink::StyleCascade::ResolveVariableData+0x1de
msedge!blink::StyleCascade::Resolve+0x225
msedge!blink::StyleCascade::LookupAndApply+0x1a5
msedge!blink::StyleCascade::ResolveVarInto+0x109
msedge!blink::StyleCascade::ResolveTokensInto+0x1d9
msedge!blink::StyleCascade::ResolveVariableData+0x1de
msedge!blink::StyleCascade::Resolve+0x225
msedge!blink::StyleCascade::LookupAndApply+0x1a5
msedge!blink::StyleCascade::ResolveVarInto+0x109
msedge!blink::StyleCascade::ResolveTokensInto+0x1d9
msedge!blink::StyleCascade::ResolveVariableData+0x1de
msedge!blink::StyleCascade::Resolve+0x225
msedge!blink::StyleCascade::LookupAndApply+0x1a5
msedge!blink::StyleCascade::ResolveVarInto+0x109
msedge!blink::StyleCascade::ResolveTokensInto+0x1d9
msedge!blink::StyleCascade::ResolveVariableData+0x1de
</content>
    </entry>
    <entry>
        <id>327244230</id>
        <title>Voice Search is not working in Vision Pro</title>
        <author>
            <name>ru...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327244230"/>
        <updated>2024-02-27T20:44:15.827Z</updated>
        <summary>-</summary>
        <content type="html">App Version:123.0.6312.16 beta
OS Version: 1.0.3
Device:Apple Vision Pro
URL: 


Prerequisites:
Install chrome to Vision Pro

Steps to reproduce:
  1. Launch Chrome in Apple Vision Pro
  2. Open NTP
  3. Focus your eyes on Voice search Icon
  4. Pinch on Voice Search and speak 

Observed results: Voice search result is not displayed,, only white screen is displayed 

Expected results: Voice search results should be displayed 

Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: NA
Bug reproducible on current stable build (App Version, iOS Version): NA New Implementation 
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes M123



Link to video/image: https://drive.google.com/file/d/1P9LjCF0iwFJrdsMqgLbphKX2CObbrbjY/view?resourcekey=0-POJ_sK3d5GvQllCF2QX1Gg</content>
    </entry>
    <entry>
        <id>327245176</id>
        <title>Somewhere, NSKeyedUnarchiver is decoding a string where we did not tell it to expect strings</title>
        <author>
            <name>no...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245176"/>
        <updated>2024-02-27T20:43:25.069Z</updated>
        <summary>-</summary>
        <content type="html">Discovered in the logs of my partner's Mac, Omaha 4 (124.0.6315.0) caused an error log from `NSKeyedUnarchiver` warning that it decoded an `NSString` as part of a larger data structure, even though `NSString` was not included as one of the types it could decode. The message did _not_ give any trace information about where the decode was happening, but it did list that its complete decoding allowlist at that point was

* KSPathExistenceChecker
* NSDictionary
* NSSet
* NSURL
* KSSpotlightExistenceChecker
* KSLaunchServicesExistenceChecker
* KSTicket
* NSArray

I therefore infer this is somewhere in the logic where we try to read Keystone's ticket store to migrate or check if there's anything new to re-migrate.

The error message specifies that the decoding succeeded because Apple figures that `NSString*` is a "safe class" so it should decode it even if not told to do so in a `decodeObjectOfClasses:` call or similar, so this would not currently have any visible symptoms other than the error message. But we should clean it up; Apple is implying they'll stop being so lenient in this decoding someday, although they've implied that for years. We should clean it up because it's a bug we don't need to have, even though I don't think Apple will enforce the type limit against NSString any time soon.

I don't have the exact wording of macOS' error message on hand because I couldn't copy it out of Console because the Mac was too busy crashing (which is why I was looking through error logs in the first place). The Mac crash does not appear related to the updater in any way, I just noticed this error message on the way to it.</content>
    </entry>
    <entry>
        <id>327245449</id>
        <title>Internals tabs do not have tab index</title>
        <author>
            <name>ap...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245449"/>
        <updated>2024-02-27T20:38:13.776Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
</feed>