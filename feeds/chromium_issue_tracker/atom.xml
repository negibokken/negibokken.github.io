<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.543Z</updated>
    <entry>
        <id>335782514</id>
        <title>Listen to onSurveyCompleted events and record histogram</title>
        <author>
            <name>ra...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335782514"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335850106</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.Init</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335850106"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.Init

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/b15bf8ba6f4c865a398ce2ab0e6f6e41

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335829864</id>
        <title>WebView fails to invalidate first frame when client doesn't request BeginFrames</title>
        <author>
            <name>va...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829864"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">WebView needs to decide if we will be drawing this frame at the BeginFrame time, meaning that BeginFrame events needs to flow if there is any undrawn frames. Normally this isn't an issue, because clients actively submitting frames subscribe to them. 

When it's not the case, webview temporary subscribes to BeginFrame when we receive new CompositorFrame  that is embedded in the last drawn frame. Unfortunately this isn't quite correct for the first frame, because the surface might be not embedded yet.</content>
    </entry>
    <entry>
        <id>335818071</id>
        <title>NO SOUND, unless I choose the internal speakers of my mac pro 6.1</title>
        <author>
            <name>an...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818071"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 124.0.0.0
OS Version           : OS X 10.15.7
URLs (if applicable) :
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you
have tested this issue:
     Safari:OK
    Firefox:OK
       Edge:ok

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead of that?


Please provide any additional information below. Attach a screenshot if
possible.

UserAgentString: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36


For graphics-related bugs, please copy/paste the contents of the about:gpu
page at the end of this report.
</content>
    </entry>
    <entry>
        <id>335744350</id>
        <title>theme changes are syncing despite theme syncing being turned off</title>
        <author>
            <name>bu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335744350"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. sign in and enable syncing in at least two profiles
2. in each profile under "manage what you sync" enabled only (bookmarks, extensions, settings)
3. switch the theme in one profile
4. for me it syncs and switches on other profiles

# Problem Description
Theme syncing was enabled at one point. I disabled it in each profile, but theme changes are still syncing.

# Summary
theme changes are syncing despite theme syncing being turned off

# Additional Data
Category: Sync \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335846685</id>
        <title>"Cannot tap on the left part of Omnibox after some scrolling" test case coverage needed in Earl Grey or unittests for issue 334891575</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335846685"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">nicolasmacbeth@, do we have automation coverage for this bug to prevent future regressions?

Requesting you to provide the automation status / tests links.</content>
    </entry>
    <entry>
        <id>335744349</id>
        <title>Decide on SwiftShader Ã— {Chrome, new Headless, chrome-headless-shell, Chrome for Testing}</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335744349"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">Doc: [go/chrome-for-testing:swiftshader](http://go/chrome-for-testing:swiftshader)</content>
    </entry>
    <entry>
        <id>335846088</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.FocusingToDateCell</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335846088"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.FocusingToDateCell

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/1693b2e76b1d5ced712bfbd0fd1c0e02

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335763886</id>
        <title>[V8 Perf Sheriff]: 5 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335763886"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289421:1289454:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=867d7a3d-708d-4e47-ad76-16cb8947d703

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=867d7a3d-708d-4e47-ad76-16cb8947d703

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_media/browse_media_facebook_photos_2019
      453.56%: 0.1615 -&gt; 0.894 ms

Top 3 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_media/browse_media_facebook_photos_2019
      453.56%: 0.1615 -&gt; 0.894 ms

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: cbruni@chromium.org, leszeks@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289420..1289454
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/37e4bb8df182b508cc2df84abd7ef2bd64a5749e..37e4bb8df182b508cc2df84abd7ef2bd64a5749e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/56e63097498d0ad6fe2eca779b7df173cc6a0fca..56e63097498d0ad6fe2eca779b7df173cc6a0fca</content>
    </entry>
    <entry>
        <id>335774296</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335774296"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289718:1289758:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ad58e8fe-2faa-4a28-8fe9-7885e23ae0aa

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=ad58e8fe-2faa-4a28-8fe9-7885e23ae0aa
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ad58e8fe-2faa-4a28-8fe9-7885e23ae0aa

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cwv:first_contentful_paint_avg/load_games/load_games_alphabetty_2018
      105.23%: 4003.0 -&gt; 8215.5 ms

Top 1 affected measurements in win-10-perf:
  - system_health.common_desktop/cwv:first_contentful_paint_avg/load_games/load_games_alphabetty_2018
      105.23%: 4003.0 -&gt; 8215.5 ms

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: charliea@chromium.org, chrome-speed-metrics-dev@chromium.org, sullivan@chromium.org, tdresser@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289717..1289758
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3..ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/ff54aee9ab3d5fc5ea6f9d12fb05c582115b736d..ff54aee9ab3d5fc5ea6f9d12fb05c582115b736d</content>
    </entry>
    <entry>
        <id>335842582</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextView_WhenEventListHasClosedWithoutScrolling</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335842582"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextView_WhenEventListHasClosedWithoutScrolling

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c63b521ba4aa2b655d33b8924217410a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335764810</id>
        <title>Abrt in v8::internal::__RT_impl_Runtime_Abort</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335764810"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4839160910118912

Fuzzer: None
Job Type: linux_asan_d8_v8_arm64_dbg
Platform Id: linux

Crash Type: Abrt
Crash Address: 0x053900016068
Crash State:
  v8::internal::__RT_impl_Runtime_Abort
  v8::internal::Runtime_Abort
  v8::internal::Simulator::DoRuntimeCall
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_d8_v8_arm64_dbg&amp;range=93416:93417

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4839160910118912

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335797528</id>
        <title>Stringify bools consistently</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335797528"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">Hundreds of files try to convert `bool`s to strings: https://source.chromium.org/search?q=%5C%20%5C%3F%5C%20%5C%22(true%5C%22%5C%20%5C:%5C%20%5C%22false%7Cyes%5C%22%5C%20%5C:%5C%20%5C%22no%7Con%5C%22%5C%20%5C:%5C%20%5C%22off%7C1%5C%22%5C%20%5C:%5C%20%5C%220)%5C%22%20lang:c%2B%2B%20(-f:third_party%20OR%20f:third_party%2Fblink)&amp;ss=chromium%2Fchromium%2Fsrc

Some of them even define bespoke helpers just to do this: https://source.chromium.org/search?q=(string%7Cchar%5C*)%5C%20BoolTo%20(-f:third_party%20OR%20f:third_party%2Fblink)%20lang:c%2B%2B%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc

After some discussion on #base, I think we should do the following:
* [P1] Convert `base::ToString()` to stringify `bool`s as "true"/"false" instead of the current "1"/"0". This is more human-readable and better matches `std::format()`.
* [P3] Audit sites above that use a different pair of strings, and where possible, change them to "true"/"false". (Claim: we should do this for anything that wouldn't break automated parsing in a way we can't trivially fix.)
* [P2] Convert sites that manually stringify as "true"/"false" to use `base::ToString()`. More useful than the bullet above, but listed after it to imply that anything it covers would then come under this too.

For posterity, it is possible to add configurability to how `ToString()` stringifies bools:
```
// Using an enum class forces casts to compose the values, and an enum without
// the struct exposes the member names namespace-wide.
struct Fmt {
  enum Flags {
    kNone = 0,
    kBoolYN = 1 &lt;&lt; 0,
    // Add more as needed
  };
};

template &lt;uint32_t Options = Fmt::kNone, typename... Ts&gt;
std::string ToString(const Ts&amp;... values) {
  std::ostringstream ss;
  ss.setf(std::ios_base::boolalpha);

  if constexpr (Options &amp; Fmt::kBoolYN) {
    struct BoolYN : std::numpunct&lt;char&gt; {
      using std::numpunct&lt;char&gt;::numpunct;
      std::string do_truename() const { return "yes"; }
      std::string do_falsename() const { return "no"; }
    };
    static auto* const bool_yn = new BoolYN(1);  // Would use NoDestructor
    ss.imbue(std::locale(ss.getloc(), bool_yn));
  }

  (...,
   internal::ToStringHelper&lt;std::remove_cvref_t&lt;decltype(values)&gt;&gt;::Stringify(
       values, ss));
  return ss.str();
}
```

I don't think this is worth doing. Making the API configurable has downsides that don't seem to really outweigh the upsides.</content>
    </entry>
    <entry>
        <id>335840076</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.GivenUpNextIsShown_WhenNewEventsMoreThanTwoHoursAwayAreFetched_UpNextViewShouldStillBeShown</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335840076"/>
        <updated>1970-01-01T00:28:33.540Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.GivenUpNextIsShown_WhenNewEventsMoreThanTwoHoursAwayAreFetched_UpNextViewShouldStillBeShown

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/187a2660e1cfcbceb29e92a02379d512

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335797527</id>
        <title>No Chrome audio playback when my Universal Audio Apollo audio interfaces set for system sound output</title>
        <author>
            <name>dy...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335797527"/>
        <updated>1970-01-01T00:28:33.540Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.Connect Universal Audio Apollo x8 audio interface to Macbook Pro
2. Select UAD Apollo x8 as sound output device in Mac OS Audio/MIDI settings application
3. Visit YouTube and playback a video. No sound is passed through the Apollo x8 audio interface.
3. 

# Problem Description
Chrome will not output audio to my Universal Audio Apollo x8 and Apollo 8 audio interfaces. Safari works fine.

# Summary
No Chrome audio playback when my Universal Audio Apollo audio interfaces set for system sound output

# Custom Questions
#### Does this work in other browsers?

Yes - This is just a Chromium problem

#### Contents of chrome://gpu: 

Graphics Feature Status
=======================
*   Canvas: Software only, hardware acceleration unavailable
*   Canvas out-of-process rasterization: Disabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Software only. Hardware acceleration disabled
*   Multiple Raster Threads: Enabled
*   OpenGL: Disabled
*   Rasterization: Software only. Hardware acceleration disabled
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Video Decode: Software only. Hardware acceleration disabled
*   Video Encode: Software only. Hardware acceleration disabled
*   WebGL: Software only, hardware acceleration unavailable
*   WebGL2: Software only, hardware acceleration unavailable
*   WebGPU: Software only, hardware acceleration unavailable
*   WebNN: Disabled

Problems Detected
=================
*   WebGPU has been disabled via blocklist or the command line.
    Disabled Features: webgpu

*   WebGL2 has been disabled via blocklist or the command line.
    Disabled Features: webgl2

*   Accelerated rasterization has been disabled, either via blocklist, about:flags or the command line.
    Disabled Features: rasterization

*   Accelerated video encode has been disabled, either via blocklist, about:flags or the command line.
    Disabled Features: video_encode

*   Accelerated video decode has been disabled, either via blocklist, about:flags or the command line.
    Disabled Features: video_decode

*   WebGL has been disabled via blocklist or the command line.
    Disabled Features: webgl

*   Gpu compositing has been disabled, either via blocklist, about:flags or the command line. The browser will fall back to software compositing and hardware acceleration will be unavailable.
    Disabled Features: gpu_compositing

*   Accelerated 2D canvas is unavailable: either disabled via blocklist or the command line.
    Disabled Features: 2d_canvas

ANGLE Features
==============
*   allowCompressedFormats (Frontend workarounds): Enabled
    condition: true
    Allow compressed formats

*   alwaysRunLinkSubJobsThreaded (Frontend features) (http://anglebug.com/8417): Enabled
    condition: true
    If true, sub tasks of the link job are always threaded, regardless of
    GL_KHR_parallel_shader_compile

*   cacheCompiledShader (Frontend features) (http://anglebug.com/7036): Enabled
    condition: true
    Enable to cache compiled shaders

*   compileJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Enabled
    condition: true
    If false, parts of the compile job cannot be parallelized

*   disableAnisotropicFiltering (Frontend workarounds): Disabled
    Disable support for anisotropic filtering

*   disableDrawBuffersIndexed (Frontend features) (http://anglebug.com/7724): Disabled
    Disable support for OES_draw_buffers_indexed and EXT_draw_buffers_indexed

*   disableProgramBinary (Frontend features) (http://anglebug.com/5007): Disabled
    Disable support for GL_OES_get_program_binary

*   disableProgramCaching (Frontend features) (http://anglebug.com/1423136): Disabled
    Disables saving programs to the cache

*   disableProgramCachingForTransformFeedback (Frontend workarounds): Disabled
    On some GPUs, program binaries don't contain transform feedback varyings

*   dumpShaderSource (Frontend features) (http://anglebug.com/7760): Disabled
    Write shader source to temp directory

*   dumpTranslatedShaders (Frontend features) (http://anglebug.com/8280): Disabled
    Write translated shaders to temp directory

*   emulatePixelLocalStorage (Frontend features) (http://anglebug.com/7279): Enabled
    condition: true
    Emulate ANGLE_shader_pixel_local_storage using shader images

*   enableCaptureLimits (Frontend features) (http://anglebug.com/5750): Disabled
    Set the context limits like frame capturing was enabled

*   enableProgramBinaryForCapture (Frontend features) (http://anglebug.com/5658): Disabled
    Even if FrameCapture is enabled, enable GL_OES_get_program_binary

*   enableShaderSubstitution (Frontend workarounds) (http://anglebug.com/7761): Disabled
    Check the filesystem for shaders to use instead of those provided through
    glShaderSource

*   enableTranslatedShaderSubstitution (Frontend workarounds) (http://anglebug.com/8280): Disabled
    Check the filesystem for translated shaders to use instead of the shader
    translator's

*   forceDepthAttachmentInitOnClear (Frontend workarounds) (https://anglebug.com/7246): Disabled
    Force depth attachment initialization on clear ops

*   forceGlErrorChecking (Frontend features) (https://issuetracker.google.com/220069903): Disabled
    condition: (IsAndroid() &amp;&amp; isSwiftShader)
    Force GL error checking (i.e. prevent applications from disabling error
    checking

*   forceInitShaderVariables (Frontend features): Disabled
    Force-enable shader variable initialization

*   forceMinimumMaxVertexAttributes (Frontend features): Disabled
    condition: false
    Force the minimum GL_MAX_VERTEX_ATTRIBS that the context's client version
    allows.

*   forceRobustResourceInit (Frontend features) (http://anglebug.com/6041): Disabled
    Force-enable robust resource init

*   linkJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Enabled
    condition: true
    If false, parts of the link job cannot be parallelized

*   loseContextOnOutOfMemory (Frontend workarounds): Enabled
    condition: true
    Some users rely on a lost context notification if a GL_OUT_OF_MEMORY error
    occurs

*   singleThreadedTextureDecompression (Frontend workarounds): Disabled
    Disables multi-threaded decompression of compressed texture formats

*   uncurrentEglSurfaceUponSurfaceDestroy (Frontend workarounds) (https://issuetracker.google.com/292285899): Enabled
    condition: true
    Make egl surface uncurrent when calling eglDestroySurface(), if the
    surface is still bound by the context of current render thread

*   adjustClearColorPrecision (Vulkan workarounds) (https://issuetracker.google.com/292282210): Disabled
    condition: IsAndroid() &amp;&amp; mFeatures.supportsLegacyDithering.enabled &amp;&amp; isARM
    Adjust normalized clear color precision based on framebuffer color channel
    bits count

*   allocateNonZeroMemory (Vulkan features) (http://anglebug.com/4384): Disabled
    condition: false
    Fill new allocations with non-zero values to flush out errors.

*   allowGenerateMipmapWithCompute (Vulkan features) (http://anglebug.com/4551): Disabled
    condition: supportsSubgroupQuadOpsInComputeShader &amp;&amp; mSubgroupExtendedTypesFeatures.shaderSubgroupExtendedTypes &amp;&amp; maxComputeWorkGroupInvocations &gt;= 256 &amp;&amp; ((isAMD &amp;&amp; !IsWindows()) || isNvidia || isSamsung)
    Use the compute path to generate mipmaps on devices that meet the minimum
    requirements, and the performance is better.

*   allowHostImageCopyDespiteNonIdenticalLayout (Vulkan features): Disabled
    condition: false
    When using VK_EXT_host_image_copy, allow
    VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT even ifperf query indicates only
    optimalDeviceAccess, but not identicalMemoryLayout

*   allowMultisampledRenderToTextureEmulation (Vulkan workarounds) (http://anglebug.com/8291): Disabled
    condition: isTileBasedRenderer || isSamsung
    Allow emulation of EXT_multisampled_render_to_texture

*   appendAliasedMemoryDecorations (Vulkan workarounds) (b/266235549): Enabled
    condition: true
    Append aliased memory decoration to ssbo and image in SpirV if they are
    not declared with restrict memory qualifier in GLSL

*   asyncCommandBufferReset (Vulkan features) (https://issuetracker.google.com/255411748): Enabled
    condition: true
    Reset command buffer in async thread.

*   asyncCommandQueue (Vulkan features) (http://anglebug.com/4324): Disabled
    condition: false
    Use CommandQueue worker thread to dispatch work to GPU.

*   avoidOpSelectWithMismatchingRelaxedPrecision (Vulkan workarounds) (http://anglebug.com/8503): Disabled
    condition: isNvidia &amp;&amp; (nvidiaVersion.major &gt;= 535 &amp;&amp; nvidiaVersion.major &lt;= 551)
    On some drivers, the OpSelect SPIR-V instruction with arguments with
    mismatching RelaxedPrecision decoration causes a crash

*   bottomLeftOriginPresentRegionRectangles (Vulkan workarounds): Disabled
    condition: IsAndroid()
    On some platforms present region rectangles are expected to have a
    bottom-left origin, instead of top-left origin as from spec

*   bresenhamLineRasterization (Vulkan features): Enabled
    condition: mLineRasterizationFeatures.bresenhamLines == 1U
    Enable Bresenham line rasterization via VK_EXT_line_rasterization
    extension

*   clDumpVkSpirv (Vulkan features): Disabled
    Enable SPIR-V dumping at runtime for OpenCL programs compiled with clspv

*   clampFragDepth (Vulkan workarounds) (http://anglebug.com/3970): Disabled
    condition: isNvidia &amp;&amp; !mFeatures.supportsDepthClampZeroOne.enabled
    gl_FragDepth is not clamped when rendering to a floating point depth
    buffer without VK_EXT_depth_clamp_zero_one

*   clampPointSize (Vulkan workarounds) (http://anglebug.com/2970): Disabled
    condition: isNvidia &amp;&amp; nvidiaVersion.major &lt; uint32_t(IsWindows() ? 430 : 421)
    The point size range reported from the API is inconsistent with the actual
    behavior

*   compressVertexData (Vulkan workarounds): Disabled
    Compress vertex data to smaller data types when possible. Using this
    feature makes ANGLE non-conformant.

*   deferFlushUntilEndRenderPass (Vulkan workarounds) (https://issuetracker.google.com/issues/166475273): Enabled
    condition: !isQualcommProprietary
    Allow glFlush to be deferred until renderpass ends

*   disableFlippingBlitWithCommand (Vulkan workarounds) (http://anglebug.com/3498): Disabled
    condition: IsAndroid() &amp;&amp; isQualcommProprietary
    vkCmdBlitImage with flipped coordinates blits incorrectly.

*   disablePipelineCacheLoadForTesting (Vulkan workarounds) (https://anglebug.com/8417): Disabled
    Disable loading the pipeline cache from the blob cache for testing

*   disableSeparateShaderObjects (Vulkan app workarounds) (https://issuetracker.google.com/309028728): Disabled
    Disable GL_EXT_separate_shader_objects and cap core ES version to 3.0

*   disallowMixedDepthStencilLoadOpNoneAndLoad (Vulkan workarounds) (http://anglebug.com/7370): Disabled
    condition: isARM &amp;&amp; armDriverVersion &lt; ARMDriverVersion(38, 1, 0)
    Disallow use of LOAD_OP_NONE for only one of the depth or stencil aspects
    of a depth/stencil attachment

*   doubleDepthBiasConstantFactor (Vulkan workarounds): Disabled
    condition: (isIntel &amp;&amp; !IsWindows()) || isRADV || isNvidia
    Due to a Vulkan spec ambiguity, some drivers interpret
    depthBiasConstantFactor as half the expected value

*   eglColorspaceAttributePassthrough (Vulkan features) (https://anglebug.com/7319): Disabled
    condition: IsAndroid() &amp;&amp; isSamsung
    Support passthrough of EGL colorspace attribute values

*   emulateAdvancedBlendEquations (Vulkan features) (http://anglebug.com/3586): Disabled
    condition: !mFeatures.supportsBlendOperationAdvanced.enabled &amp;&amp; (isVenus || !isIntel)
    Emulate GL_KHR_blend_equation_advanced

*   emulateDithering (Vulkan features) (http://anglebug.com/6755): Disabled
    condition: IsAndroid() &amp;&amp; !mFeatures.supportsLegacyDithering.enabled
    Emulate OpenGL dithering

*   emulateR32fImageAtomicExchange (Vulkan workarounds) (http://anglebug.com/5535): Enabled
    condition: true
    Emulate r32f images with r32ui to support imageAtomicExchange.

*   emulateTransformFeedback (Vulkan features) (http://anglebug.com/3205): Enabled
    condition: !mFeatures.supportsTransformFeedbackExtension.enabled &amp;&amp; vk::CanSupportTransformFeedbackEmulation(mPhysicalDeviceFeatures)
    Emulate transform feedback as the VK_EXT_transform_feedback is not
    present.

*   emulatedPrerotation180 (Vulkan features) (http://anglebug.com/4901): Disabled
    Emulate 180-degree prerotation.

*   emulatedPrerotation270 (Vulkan features) (http://anglebug.com/4901): Disabled
    Emulate 270-degree prerotation.

*   emulatedPrerotation90 (Vulkan features) (http://anglebug.com/4901): Disabled
    Emulate 90-degree prerotation.

*   enableAdditionalBlendFactorsForDithering (Vulkan app workarounds) (https://issuetracker.google.com/328837151): Disabled
    Dithering darkens or brightens pixels depending on coordinates and when
    repeated sufficient numbers of times this effect becomes visible to users.
    Conditionally enable additional blend factors for dithering

*   enableAsyncPipelineCacheCompression (Vulkan workarounds) (http://anglebug.com/4722): Enabled
    condition: true
    Enable compressing pipeline cache in a thread.

*   enableMultisampledRenderToTexture (Vulkan workarounds) (http://anglebug.com/4937): Disabled
    condition: mFeatures.supportsMultisampledRenderToSingleSampled.enabled || mFeatures.supportsMultisampledRenderToSingleSampledGOOGLEX.enabled || (supportsIndependentDepthStencilResolve &amp;&amp; mFeatures.allowMultisampledRenderToTextureEmulation.enabled)
    Expose EXT_multisampled_render_to_texture

*   enableParallelCompileAndLink (Vulkan features) (http://anglebug.com/8297): Disabled
    Expose the GL_KHR_parallel_shader_compile extension

*   enablePipelineCacheDataCompression (Vulkan features) (https://issuetracker.google.com/258207403): Enabled
    condition: true
    enable pipeline cache data compression.

*   enablePortabilityEnumeration (Vulkan workarounds) (http://anglebug.com/8229): Enabled
    condition: mFeatures.supportsPortabilityEnumeration.enabled &amp;&amp; IsApple()
    Enable use of VK_KHR_portability_enumeration extension

*   enablePreRotateSurfaces (Vulkan features) (http://anglebug.com/3502): Disabled
    condition: IsAndroid()
    Enable Android pre-rotation for landscape applications

*   enablePrecisionQualifiers (Vulkan features) (http://anglebug.com/3078): Enabled
    condition: !(IsPixel2(mPhysicalDeviceProperties.vendorID, mPhysicalDeviceProperties.deviceID) &amp;&amp; (mPhysicalDeviceProperties.driverVersion &lt; kPixel2DriverWithRelaxedPrecision)) &amp;&amp; !IsPixel4(mPhysicalDeviceProperties.vendorID, mPhysicalDeviceProperties.deviceID)
    Enable precision qualifiers in shaders

*   explicitlyCastMediumpFloatTo16Bit (Vulkan workarounds) (https://issuetracker.google.com/274859104): Disabled
    condition: isARM
    Explicitly cast mediump floating point values to 16 bit

*   explicitlyEnablePerSampleShading (Vulkan workarounds) (http://anglebug.com/6876): Disabled
    condition: isARM
    Explicitly enable per-sample shading if the fragment shader contains the
    sample qualifier

*   exposeNonConformantExtensionsAndVersions (Vulkan workarounds) (http://anglebug.com/5375): Disabled
    condition: kExposeNonConformantExtensionsAndVersions &amp;&amp; !isVenus
    Expose GLES versions and extensions that are not conformant.

*   forceContinuousRefreshOnSharedPresent (Vulkan features) (https://issuetracker.google.com/229267970): Disabled
    condition: false
    Force to create vulkan swapchain with continuous refresh on shared present

*   forceD16TexFilter (Vulkan workarounds) (http://anglebug.com/3452): Disabled
    condition: IsAndroid() &amp;&amp; isQualcommProprietary
    VK_FORMAT_D16_UNORM does not support
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT, which prevents
    OES_depth_texture from being supported.

*   forceDisableFullScreenExclusive (Vulkan workarounds) (http://anglebug.com/8215): Disabled
    Device needs VK_EXT_full_screen_exclusive explicitly disabled

*   forceFallbackFormat (Vulkan workarounds): Disabled
    Force a fallback format for angle_end2end_tests

*   forceFragmentShaderPrecisionHighpToMediump (Vulkan workarounds) (https://issuetracker.google.com/184850002): Disabled
    condition: false
    Forces highp precision in fragment shader to mediump.

*   forceMaxUniformBufferSize16KB (Vulkan workarounds) (https://issuetracker.google.com/161903006): Disabled
    condition: isQualcommProprietary &amp;&amp; isAdreno540
    Force max uniform buffer size to 16K on some device due to bug

*   forceNearestFiltering (Vulkan workarounds): Disabled
    Force nearest filtering when sampling.

*   forceNearestMipFiltering (Vulkan workarounds): Disabled
    Force nearest mip filtering when sampling.

*   forceSampleUsageForAhbBackedImages (Vulkan app workarounds) (https://issuetracker.google.com/155487768): Disabled
    Force enable VK_IMAGE_USAGE_SAMPLED_BIT usage for all AHB images

*   forceSubmitImmutableTextureUpdates (Vulkan app workarounds) (http://anglebug.com/6929): Disabled
    Force submit updates to immutable textures

*   forceTextureLodOffset1 (Vulkan workarounds): Disabled
    Increase the minimum texture level-of-detail by 1 when sampling.

*   forceTextureLodOffset2 (Vulkan workarounds): Disabled
    Increase the minimum texture level-of-detail by 2 when sampling.

*   forceTextureLodOffset3 (Vulkan workarounds): Disabled
    Increase the minimum texture level-of-detail by 3 when sampling.

*   forceTextureLodOffset4 (Vulkan workarounds): Disabled
    Increase the minimum texture level-of-detail by 4 when sampling.

*   forceWaitForSubmissionToCompleteForQueryResult (Vulkan workarounds) (https://issuetracker.google.com/253522366): Disabled
    condition: isARM || (isNvidia &amp;&amp; nvidiaVersion.major &lt; 470u)
    Force wait for submission to complete before calling getQueryResult(wait).

*   hasEffectivePipelineCacheSerialization (Vulkan features) (https://anglebug.com/7369): Disabled
    condition: !isSwiftShader &amp;&amp; !nvVersionLessThan520
    Whether the implementation serializes the Vulkan pipeline cache
    effectively. On some implementations, pipeline cache serialization returns
    no data, so there is no benefit to serializing it

*   limitSampleCountTo2 (Vulkan workarounds) (http://anglebug.com/8162): Disabled
    Limit sample count to 2 to save memory on low end devices.

*   logMemoryReportCallbacks (Vulkan features): Disabled
    condition: false
    Log each callback from VK_EXT_device_memory_report

*   logMemoryReportStats (Vulkan features): Disabled
    condition: false
    Log stats from VK_EXT_device_memory_report each swap

*   mapUnspecifiedColorSpaceToPassThrough (Vulkan features): Disabled
    condition: ExtensionFound("VK_EXT_swapchain_colorspace", mEnabledInstanceExtensions)
    Use VK_COLOR_SPACE_PASS_THROUGH_EXT for EGL_NONE or unspecifed color
    spaces

*   mergeProgramPipelineCachesToGlobalCache (Vulkan workarounds) (https://anglebug.com/7369): Enabled
    condition: !mFeatures.supportsGraphicsPipelineLibrary.enabled || (mFeatures.preferMonolithicPipelinesOverLibraries.enabled &amp;&amp; libraryBlobsAreReusedByMonolithicPipelines)
    Whether it's beneficial to merge the pipeline cache for the shaders subset
    of the pipeline into the monolithic pipeline cache.  Only useful on
    platforms where monolithic pipelines can reuse blobs from partial
    pipelines

*   mutableMipmapTextureUpload (Vulkan features) (https://anglebug.com/7308): Enabled
    condition: canPreferDeviceLocalMemoryHostVisible(mPhysicalDeviceProperties.deviceType)
    Enable uploading the previously defined mutable mipmap texture.

*   overrideSurfaceFormatRGB8ToRGBA8 (Vulkan workarounds) (http://anglebug.com/6651): Enabled
    condition: true
    Override surface format GL_RGB8 to GL_RGBA8

*   padBuffersToMaxVertexAttribStride (Vulkan workarounds) (http://anglebug.com/4428): Disabled
    condition: isAMD || isSamsung
    Vulkan considers vertex attribute accesses to count up to the last
    multiple of the stride. This additional access supports AMD's robust
    buffer access implementation. AMDVLK in particular will return incorrect
    values when the vertex access extends into the range that would be the
    stride padding and the buffer is too small. This workaround limits
    GL_MAX_VERTEX_ATTRIB_STRIDE to a maximum value and pads up every buffer
    allocation size to be a multiple of the maximum stride.

*   perFrameWindowSizeQuery (Vulkan workarounds) (http://anglebug.com/3623, http://anglebug.com/3624, http://anglebug.com/3625): Disabled
    condition: IsAndroid() || isIntel || (IsWindows() &amp;&amp; isAMD) || IsFuchsia() || isSamsung || nativeWindowSystem == angle::NativeWindowSystem::Wayland
    Vulkan swapchain is not returning VK_ERROR_OUT_OF_DATE when window
    resizing

*   permanentlySwitchToFramebufferFetchMode (Vulkan features): Disabled
    condition: isTileBasedRenderer
    Whether the context should permanently switch to framebuffer fetch mode on
    first encounter

*   persistentlyMappedBuffers (Vulkan features) (http://anglebug.com/2162): Enabled
    condition: true
    Persistently map buffer memory to reduce map/unmap IOCTL overhead.

*   preferAggregateBarrierCalls (Vulkan workarounds) (http://anglebug.com/4633): Enabled
    condition: isImmediateModeRenderer
    Single barrier call is preferred over multiple calls with fine grained
    pipeline stage dependency information

*   preferCPUForBufferSubData (Vulkan features) (http://issuetracker.google.com/200067929): Disabled
    condition: isMaliJobManagerBasedGPU
    Prefer use CPU to do bufferSubData instead of staged update.

*   preferDeviceLocalMemoryHostVisible (Vulkan features) (http://anglebug.com/7047): Enabled
    condition: canPreferDeviceLocalMemoryHostVisible(mPhysicalDeviceProperties.deviceType)
    Prefer adding HOST_VISIBLE flag for DEVICE_LOCAL memory when picking
    memory types

*   preferDrawClearOverVkCmdClearAttachments (Vulkan workarounds) (https://issuetracker.google.com/166809097): Disabled
    condition: isQualcommProprietary
    On some hardware, clear using a draw call instead of vkCmdClearAttachments
    in the middle of render pass due to bugs

*   preferDriverUniformOverSpecConst (Vulkan features) (http://anglebug.com/7406): Enabled
    condition: (isQualcommProprietary &amp;&amp; mPhysicalDeviceProperties.driverVersion &lt; kPixel4DriverWithWorkingSpecConstSupport) || isARM || isPowerVR || isSwiftShader
    Prefer using driver uniforms instead of specialization constants.

*   preferHostCachedForNonStaticBufferUsage (Vulkan features) (https://issuetracker.google.com/288119108): Disabled
    prefer host cached memory for non static buffer usage

*   preferLinearFilterForYUV (Vulkan features) (https://anglebug.com/7382): Disabled
    condition: isVenus
    Prefer to use VK_FILTER_LINEAR for VkSamplerYcbcrConversion

*   preferMonolithicPipelinesOverLibraries (Vulkan workarounds) (https://anglebug.com/7369): Enabled
    condition: !mGraphicsPipelineLibraryProperties.graphicsPipelineLibraryFastLinking || isSwiftShader
    Whether monolithic pipelines perform significantly better than libraries

*   preferSkippingInvalidateForEmulatedFormats (Vulkan workarounds) (http://anglebug.com/6860): Enabled
    condition: isImmediateModeRenderer
    Skipping invalidate is preferred for emulated formats that have extra
    channels over re-clearing the image

*   preferSubmitAtFBOBoundary (Vulkan workarounds) (https://issuetracker.google.com/187425444): Enabled
    condition: isARM || isSwiftShader
    Submit commands to driver at each FBO boundary for performance
    improvements.

*   preferSubmitOnAnySamplesPassedQueryEnd (Vulkan workarounds) (https://issuetracker.google.com/250706693): Disabled
    condition: isTileBasedRenderer
    Submit commands to driver when last GL_ANY_SAMPLES_PASSED query is made
    for performance improvements.

*   provokingVertex (Vulkan features): Enabled
    condition: mProvokingVertexFeatures.provokingVertexLast == 1U
    Enable provoking vertex mode via VK_EXT_provoking_vertex extension

*   requireCachedBitForStagingBuffer (Vulkan workarounds) (https://issuetracker.google.com/315836169): Enabled
    condition: !isARM
    use cached bit as required bit instead of preferred bit for staging
    buffers

*   retainSPIRVDebugInfo (Vulkan features) (http://anglebug.com/5901): Disabled
    condition: getEnableValidationLayers()
    Retain debug info in SPIR-V blob.

*   roundOutputAfterDithering (Vulkan workarounds) (http://anglebug.com/6953): Disabled
    condition: isQualcomm
    Round output after dithering to workaround a driver bug that rounds the
    output up

*   slowAsyncCommandQueueForTesting (Vulkan workarounds) (https://anglebug.com/6574): Disabled
    Artificially slow down async command queue for threading testing

*   slowDownMonolithicPipelineCreationForTesting (Vulkan workarounds) (https://anglebug.com/7369): Disabled
    Artificially slow down async monolithic pipeline creation for threading
    testing

*   supportsAndroidHardwareBuffer (Vulkan features): Disabled
    VkDevice supports the VK_ANDROID_external_memory_android_hardware_buffer
    extension

*   supportsAndroidNativeFenceSync (Vulkan features) (http://anglebug.com/2517): Disabled
    VkDevice supports the EGL_ANDROID_native_fence_sync extension

*   supportsBindMemory2 (Vulkan features) (https://anglebug.com/4966): Enabled
    condition: true
    VkDevice supports the VK_KHR_bind_memory2 extension

*   supportsBlendOperationAdvanced (Vulkan features) (http://anglebug.com/3586): Enabled
    condition: ExtensionFound("VK_EXT_blend_operation_advanced", deviceExtensionNames)
    VkDevice supports VK_EXT_blend_operation_advanced extension.

*   supportsColorWriteEnable (Vulkan features) (https://anglebug.com/7161): Disabled
    VkDevice supports VK_EXT_color_write_enable extension

*   supportsComputeTranscodeEtcToBc (Vulkan features): Disabled
    condition: !mPhysicalDeviceFeatures.textureCompressionETC2 &amp;&amp; kSupportTranscodeEtcToBc &amp;&amp; (mSubgroupProperties.supportedOperations &amp; kRequiredSubgroupOp) == kRequiredSubgroupOp &amp;&amp; (limitsVk.maxTexelBufferElements &gt;= kMaxTexelBufferSize)
    supports compute shader transcode etc format to bc format

*   supportsCustomBorderColor (Vulkan features) (http://anglebug.com/3577): Enabled
    condition: mCustomBorderColorFeatures.customBorderColors == 1U &amp;&amp; mCustomBorderColorFeatures.customBorderColorWithoutFormat == 1U
    VkDevice supports the VK_EXT_custom_border_color extension

*   supportsDepthClampZeroOne (Vulkan features) (http://anglebug.com/3970): Disabled
    condition: mDepthClampZeroOneFeatures.depthClampZeroOne == 1U
    VkDevice supports the VK_EXT_depth_clamp_zero_one extension

*   supportsDepthClipControl (Vulkan features) (http://anglebug.com/5421): Enabled
    condition: mDepthClipControlFeatures.depthClipControl == 1U
    VkDevice supports VK_EXT_depth_clip_control extension.

*   supportsDepthClipEnable (Vulkan features) (http://anglebug.com/3970): Enabled
    condition: mDepthClipEnableFeatures.depthClipEnable == 1U
    VkDevice supports the VK_EXT_depth_clip_enable extension.

*   supportsDepthStencilResolve (Vulkan features) (http://anglebug.com/4836): Enabled
    condition: mFeatures.supportsRenderpass2.enabled &amp;&amp; mDepthStencilResolveProperties.supportedDepthResolveModes != 0
    VkDevice supports the VK_KHR_depth_stencil_resolve extension with the
    independentResolveNone feature

*   supportsExtendedDynamicState (Vulkan features) (http://anglebug.com/5906): Enabled
    condition: mExtendedDynamicStateFeatures.extendedDynamicState == 1U &amp;&amp; !isArm44OrLess
    VkDevice supports VK_EXT_extended_dynamic_state extension

*   supportsExtendedDynamicState2 (Vulkan features) (http://anglebug.com/5906): Disabled
    condition: mExtendedDynamicState2Features.extendedDynamicState2 == 1U &amp;&amp; !isArm44OrLess
    VkDevice supports VK_EXT_extended_dynamic_state2 extension

*   supportsExternalFenceCapabilities (Vulkan features): Enabled
    condition: true
    VkInstance supports the VK_KHR_external_fence_capabilities extension

*   supportsExternalFenceFd (Vulkan features) (http://anglebug.com/2517): Disabled
    condition: ExtensionFound("VK_KHR_external_fence_fd", deviceExtensionNames)
    VkDevice supports the VK_KHR_external_fence_fd extension

*   supportsExternalFormatResolve (Vulkan features): Disabled
    condition: false
    VkDevice supports the VK_ANDROID_external_format_resolve extension

*   supportsExternalMemoryDmaBufAndModifiers (Vulkan features) (http://anglebug.com/6248): Disabled
    condition: ExtensionFound("VK_EXT_external_memory_dma_buf", deviceExtensionNames) &amp;&amp; ExtensionFound("VK_EXT_image_drm_format_modifier", deviceExtensionNames)
    VkDevice supports the VK_EXT_external_memory_dma_buf and
    VK_EXT_image_drm_format_modifier extensions

*   supportsExternalMemoryFd (Vulkan features): Enabled
    condition: ExtensionFound("VK_KHR_external_memory_fd", deviceExtensionNames)
    VkDevice supports the VK_KHR_external_memory_fd extension

*   supportsExternalMemoryFuchsia (Vulkan features): Disabled
    condition: ExtensionFound("VK_FUCHSIA_external_memory", deviceExtensionNames)
    VkDevice supports the VK_FUCHSIA_external_memory extension

*   supportsExternalMemoryHost (Vulkan features): Disabled
    VkDevice supports the VK_EXT_external_memory_host extension

*   supportsExternalSemaphoreCapabilities (Vulkan features): Enabled
    condition: true
    VkInstance supports the VK_KHR_external_semaphore_capabilities extension

*   supportsExternalSemaphoreFd (Vulkan features): Disabled
    condition: ExtensionFound("VK_KHR_external_semaphore_fd", deviceExtensionNames)
    VkDevice supports the VK_KHR_external_semaphore_fd extension

*   supportsExternalSemaphoreFuchsia (Vulkan features): Disabled
    condition: ExtensionFound("VK_FUCHSIA_external_semaphore", deviceExtensionNames)
    VkDevice supports the VK_FUCHSIA_external_semaphore extension

*   supportsFormatFeatureFlags2 (Vulkan features): Enabled
    condition: ExtensionFound("VK_KHR_format_feature_flags2", deviceExtensionNames)
    VkDevice supports the VK_KHR_format_feature_flags2 extension

*   supportsFoveatedRendering (Vulkan features) (http://anglebug.com/8484): Disabled
    condition: mFeatures.supportsImagelessFramebuffer.enabled &amp;&amp; mFeatures.supportsRenderPassLoadStoreOpNone.enabled &amp;&amp; mFeatures.supportsFragmentShadingRate.enabled &amp;&amp; canSupportFoveatedRendering()
    Use VK_KHR_fragment_shading_rate extension to implement QCOM foveated
    rendering extensions

*   supportsFragmentShaderPixelInterlock (Vulkan features): Disabled
    condition: mFragmentShaderInterlockFeatures.fragmentShaderPixelInterlock == 1U
    VkDevice supports the VK_EXT_fragment_shader_interlock extension and has
    the fragmentShaderPixelInterlock feature

*   supportsFragmentShadingRate (Vulkan features) (http://anglebug.com/7172): Disabled
    condition: canSupportFragmentShadingRate()
    VkDevice supports VK_KHR_fragment_shading_rate extension

*   supportsFullScreenExclusive (Vulkan features) (http://anglebug.com/8215): Disabled
    VkDevice supports the VK_EXT_full_screen_exclusive extension

*   supportsGGPFrameToken (Vulkan features): Disabled
    VkDevice supports the VK_GGP_frame_token extension

*   supportsGeometryStreamsCapability (Vulkan features) (http://anglebug.com/3206): Disabled
    condition: mFeatures.supportsTransformFeedbackExtension.enabled &amp;&amp; mTransformFeedbackFeatures.geometryStreams == 1U
    Implementation supports the GeometryStreams SPIR-V capability.

*   supportsGetMemoryRequirements2 (Vulkan features) (https://anglebug.com/4830): Enabled
    condition: true
    VkDevice supports the VK_KHR_get_memory_requirements2 extension

*   supportsGraphicsPipelineLibrary (Vulkan features) (https://anglebug.com/7369): Enabled
    condition: mGraphicsPipelineLibraryFeatures.graphicsPipelineLibrary == 1U &amp;&amp; (!isNvidia || nvidiaVersion.major &gt;= 531) &amp;&amp; !isRADV
    VkDevice supports the VK_EXT_graphics_pipeline_library extension

*   supportsHostImageCopy (Vulkan features): Enabled
    condition: mHostImageCopyFeatures.hostImageCopy == 1U &amp;&amp; mHostImageCopyProperties.identicalMemoryTypeRequirements &amp;&amp; !IsFuchsia()
    VkDevice supports the VK_EXT_host_image_copy extension

*   supportsHostQueryReset (Vulkan features) (http://anglebug.com/6692): Enabled
    condition: mHostQueryResetFeatures.hostQueryReset == 1U
    VkDevice supports VK_EXT_host_query_reset extension

*   supportsImage2dViewOf3d (Vulkan features) (https://anglebug.com/7320): Disabled
    condition: mImage2dViewOf3dFeatures.image2DViewOf3D == 1U
    VkDevice supports VK_EXT_image_2d_view_of_3d

*   supportsImageCubeArray (Vulkan features) (http://anglebug.com/3584): Enabled
    condition: mPhysicalDeviceFeatures.imageCubeArray == 1U
    VkDevice supports the imageCubeArray feature properly

*   supportsImageFormatList (Vulkan features) (http://anglebug.com/5281): Enabled
    condition: ExtensionFound("VK_KHR_image_format_list", deviceExtensionNames)
    Enable VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT by default for ICDs that support
    VK_KHR_image_format_list

*   supportsImagelessFramebuffer (Vulkan features) (http://anglebug.com/7553): Enabled
    condition: mImagelessFramebufferFeatures.imagelessFramebuffer == 1U &amp;&amp; !isSamsungDriverWithImagelessFramebufferBug
    VkDevice supports VK_KHR_imageless_framebuffer extension

*   supportsIncrementalPresent (Vulkan features): Disabled
    condition: ExtensionFound("VK_KHR_incremental_present", deviceExtensionNames)
    VkDevice supports the VK_KHR_incremental_present extension

*   supportsIndexTypeUint8 (Vulkan features) (http://anglebug.com/4405): Disabled
    condition: mIndexTypeUint8Features.indexTypeUint8 == 1U
    VkDevice supports the VK_EXT_index_type_uint8 extension

*   supportsLegacyDithering (Vulkan features) (https://issuetracker.google.com/284462263): Disabled
    condition: mDitheringFeatures.legacyDithering == 1U
    VkDevice supports the VK_EXT_legacy_dithering extension

*   supportsLockSurfaceExtension (Vulkan features): Disabled
    condition: IsAndroid()
    Surface supports the EGL_KHR_lock_surface3 extension

*   supportsLogicOpDynamicState (Vulkan features) (http://anglebug.com/3862): Disabled
    condition: mFeatures.supportsExtendedDynamicState2.enabled &amp;&amp; mExtendedDynamicState2Features.extendedDynamicState2LogicOp == 1U &amp;&amp; !(IsLinux() &amp;&amp; isIntel &amp;&amp; isMesaLessThan22_2) &amp;&amp; !(IsAndroid() &amp;&amp; isGalaxyS23)
    VkDevice supports the logicOp feature of VK_EXT_extended_dynamic_state2
    extension

*   supportsMemoryBudget (Vulkan features): Disabled
    condition: ExtensionFound("VK_EXT_memory_budget", deviceExtensionNames)
    VkDevice supports the VK_EXT_memory_budget extension.

*   supportsMixedReadWriteDepthStencilLayouts (Vulkan features) (https://anglebug.com/7899): Enabled
    condition: true
    VkDevice supports the mixed read and write depth/stencil layouts
    introduced by VK_KHR_maintenance2

*   supportsMultiDrawIndirect (Vulkan features) (http://anglebug.com/6439): Enabled
    condition: mPhysicalDeviceFeatures.multiDrawIndirect == 1U
    VkDevice supports the multiDrawIndirect extension

*   supportsMultisampledRenderToSingleSampled (Vulkan features) (http://anglebug.com/4836): Disabled
    condition: mFeatures.supportsRenderpass2.enabled &amp;&amp; mFeatures.supportsDepthStencilResolve.enabled &amp;&amp; mMultisampledRenderToSingleSampledFeatures.multisampledRenderToSingleSampled == 1U
    VkDevice supports the VK_EXT_multisampled_render_to_single_sampled
    extension

*   supportsMultisampledRenderToSingleSampledGOOGLEX (Vulkan features) (http://anglebug.com/4836): Disabled
    condition: !mFeatures.supportsMultisampledRenderToSingleSampled.enabled &amp;&amp; mFeatures.supportsRenderpass2.enabled &amp;&amp; mFeatures.supportsDepthStencilResolve.enabled &amp;&amp; mMultisampledRenderToSingleSampledFeaturesGOOGLEX.multisampledRenderToSingleSampled == 1U
    VkDevice supports the VK_GOOGLEX_multisampled_render_to_single_sampled
    extension

*   supportsMultiview (Vulkan features) (http://anglebug.com/6048): Enabled
    condition: mMultiviewFeatures.multiview == 1U
    VkDevice supports the VK_KHR_multiview extension

*   supportsPipelineCreationFeedback (Vulkan features) (http://anglebug.com/5881): Enabled
    condition: ExtensionFound("VK_EXT_pipeline_creation_feedback", deviceExtensionNames)
    VkDevice supports VK_EXT_pipeline_creation_feedback extension

*   supportsPipelineProtectedAccess (Vulkan features) (https://anglebug.com/7714): Disabled
    condition: mPipelineProtectedAccessFeatures.pipelineProtectedAccess == 1U &amp;&amp; mProtectedMemoryFeatures.protectedMemory == 1U
    VkDevice supports the VK_EXT_pipeline_protected_access extension

*   supportsPipelineRobustness (Vulkan features) (https://anglebug.com/5845): Enabled
    condition: mPipelineRobustnessFeatures.pipelineRobustness == 1U &amp;&amp; mPhysicalDeviceFeatures.robustBufferAccess
    VkDevice supports VK_EXT_pipeline_robustness extension

*   supportsPipelineStatisticsQuery (Vulkan features) (http://anglebug.com/5430): Disabled
    condition: mPhysicalDeviceFeatures.pipelineStatisticsQuery == 1U
    VkDevice supports the pipelineStatisticsQuery feature

*   supportsPortabilityEnumeration (Vulkan features) (http://anglebug.com/8229): Enabled
    condition: ExtensionFound("VK_KHR_portability_enumeration", instanceExtensionNames)
    Vulkan supports VK_KHR_portability_enumeration extension

*   supportsPresentation (Vulkan features): Enabled
    condition: nativeWindowSystem != angle::NativeWindowSystem::Gbm
    VkDisplay supports presentation through a present family queue

*   supportsPrimitiveTopologyListRestart (Vulkan features) (http://anglebug.com/3832): Enabled
    condition: mPrimitiveTopologyListRestartFeatures.primitiveTopologyListRestart == 1U
    VkDevice supports VK_EXT_primitive_topology_list_restart extension.

*   supportsPrimitivesGeneratedQuery (Vulkan features) (http://anglebug.com/5430): Disabled
    condition: mFeatures.supportsTransformFeedbackExtension.enabled &amp;&amp; mPrimitivesGeneratedQueryFeatures.primitivesGeneratedQuery == 1U
    VkDevice supports VK_EXT_primitives_generated_query extension

*   supportsProtectedMemory (Vulkan features) (http://anglebug.com/3965): Disabled
    condition: mProtectedMemoryFeatures.protectedMemory == 1U &amp;&amp; (!isARM || mPipelineProtectedAccessFeatures.pipelineProtectedAccess == 1U)
    VkDevice supports protected memory

*   supportsRasterizationOrderAttachmentAccess (Vulkan features) (https://anglebug.com/7604): Enabled
    condition: !isQualcomm &amp;&amp; mRasterizationOrderAttachmentAccessFeatures.rasterizationOrderColorAttachmentAccess == 1U
    VkDevice supports VK_EXT_rasterization_order_attachment_access extension

*   supportsRenderPassLoadStoreOpNone (Vulkan features) (http://anglebug.com/5371): Enabled
    condition: ExtensionFound("VK_EXT_load_store_op_none", deviceExtensionNames)
    VkDevice supports VK_EXT_load_store_op_none extension.

*   supportsRenderPassStoreOpNone (Vulkan features) (http://anglebug.com/5055): Disabled
    condition: !mFeatures.supportsRenderPassLoadStoreOpNone.enabled &amp;&amp; ExtensionFound("VK_QCOM_render_pass_store_ops", deviceExtensionNames)
    VkDevice supports VK_QCOM_render_pass_store_ops extension.

*   supportsRenderpass2 (Vulkan features): Enabled
    condition: ExtensionFound("VK_KHR_create_renderpass2", deviceExtensionNames)
    VkDevice supports the VK_KHR_create_renderpass2 extension

*   supportsSampler2dViewOf3d (Vulkan features) (https://anglebug.com/7320): Disabled
    condition: mFeatures.supportsImage2dViewOf3d.enabled &amp;&amp; mImage2dViewOf3dFeatures.sampler2DViewOf3D == 1U
    VkDevice supports the sampler2DViewOf3D feature of
    VK_EXT_image_2d_view_of_3d

*   supportsSamplerMirrorClampToEdge (Vulkan features): Enabled
    condition: ExtensionFound("VK_KHR_sampler_mirror_clamp_to_edge", deviceExtensionNames)
    VkDevice supports the VK_KHR_sampler_mirror_clamp_to_edge extension

*   supportsShaderFloat16 (Vulkan features) (http://anglebug.com/4551): Disabled
    condition: mShaderFloat16Int8Features.shaderFloat16 == 1U
    VkDevice supports the VK_KHR_shader_float16_int8 extension and has the
    shaderFloat16 feature

*   supportsShaderFramebufferFetch (Vulkan features): Enabled
    condition: (IsAndroid() &amp;&amp; isARM) || mFeatures.supportsRasterizationOrderAttachmentAccess.enabled
    Whether the Vulkan backend supports coherent framebuffer fetch

*   supportsShaderFramebufferFetchNonCoherent (Vulkan features): Enabled
    condition: (IsAndroid() &amp;&amp; !(isARM || isQualcomm)) || isSwiftShader
    Whether the Vulkan backend supports non-coherent framebuffer fetch

*   supportsShaderStencilExport (Vulkan features): Enabled
    condition: ExtensionFound("VK_EXT_shader_stencil_export", deviceExtensionNames)
    VkDevice supports the VK_EXT_shader_stencil_export extension

*   supportsSharedPresentableImageExtension (Vulkan features): Disabled
    condition: ExtensionFound("VK_KHR_shared_presentable_image", deviceExtensionNames)
    VkSurface supports the VK_KHR_shared_presentable_images extension

*   supportsSurfaceCapabilities2Extension (Vulkan features): Enabled
    condition: ExtensionFound("VK_KHR_get_surface_capabilities2", instanceExtensionNames) &amp;&amp; useVulkanSwapchain == UseVulkanSwapchain::Yes
    VkInstance supports the VK_KHR_get_surface_capabilities2 extension

*   supportsSurfaceProtectedCapabilitiesExtension (Vulkan features): Disabled
    condition: ExtensionFound("VK_KHR_surface_protected_capabilities", instanceExtensionNames) &amp;&amp; useVulkanSwapchain == UseVulkanSwapchain::Yes
    VkInstance supports the VK_KHR_surface_protected_capabilities extension

*   supportsSurfaceProtectedSwapchains (Vulkan features): Disabled
    condition: IsAndroid()
    VkSurface supportsProtected for protected swapchains

*   supportsSurfacelessQueryExtension (Vulkan features): Disabled
    condition: ExtensionFound("VK_GOOGLE_surfaceless_query", instanceExtensionNames) &amp;&amp; useVulkanSwapchain == UseVulkanSwapchain::Yes &amp;&amp; !isMockICDEnabled() &amp;&amp; !IsXclipse()
    VkInstance supports the VK_GOOGLE_surfaceless_query extension

*   supportsSwapchainMaintenance1 (Vulkan features) (https://anglebug.com/7847): Enabled
    condition: mSwapchainMaintenance1Features.swapchainMaintenance1 == 1U &amp;&amp; useVulkanSwapchain == UseVulkanSwapchain::Yes
    VkDevice supports the VK_EXT_surface_maintenance1 and
    VK_EXT_swapchain_maintenance1 extensions

*   supportsTimelineSemaphore (Vulkan features): Enabled
    condition: mTimelineSemaphoreFeatures.timelineSemaphore == 1U
    VkDevice supports the VK_KHR_timeline_semaphore extension

*   supportsTimestampSurfaceAttribute (Vulkan features) (https://anglebug.com/7489): Disabled
    condition: IsAndroid() &amp;&amp; ExtensionFound("VK_GOOGLE_display_timing", deviceExtensionNames)
    Platform supports setting frame timestamp surface attribute

*   supportsTransformFeedbackExtension (Vulkan features) (http://anglebug.com/3206): Disabled
    condition: vk::CanSupportTransformFeedbackExtension(mTransformFeedbackFeatures)
    Transform feedback uses the VK_EXT_transform_feedback extension.

*   supportsVertexInputDynamicState (Vulkan features) (https://anglebug.com/7162): Enabled
    condition: mVertexInputDynamicStateFeatures.vertexInputDynamicState == 1U &amp;&amp; !(IsWindows() &amp;&amp; isIntel)
    VkDevice supports VK_EXT_vertex_input_dynamic_state extension

*   supportsYUVSamplerConversion (Vulkan features): Enabled
    condition: mSamplerYcbcrConversionFeatures.samplerYcbcrConversion != 0U
    VkDevice supports the VK_KHR_sampler_ycbcr_conversion extension

*   supportsYuvTarget (Vulkan features): Disabled
    VkDevice supports VK_ANDROID_render_to_external_format and
    VK_EXT_ycbcr_attachment

*   swapbuffersOnFlushOrFinishWithSingleBuffer (Vulkan features) (http://anglebug.com/6878): Disabled
    condition: IsAndroid()
    Bypass deferredFlush with calling swapbuffers on flush or finish when in
    Shared Present mode

*   syncMonolithicPipelinesToBlobCache (Vulkan workarounds) (https://anglebug.com/7369): Disabled
    condition: mFeatures.hasEffectivePipelineCacheSerialization.enabled &amp;&amp; (hasNoPipelineWarmUp || canSyncLargeMonolithicCache)
    Whether it's beneficial to store monolithic pipelines in the blob cache
    when VK_EXT_graphics_pipeline_library is in use.  Otherwise the libraries
    are stored only, and monolithic pipelines are recreated on every run

*   useCullModeDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled &amp;&amp; !isArm44OrLess
    Use the Cull Mode dynamic state from VK_EXT_extended_dynamic_state

*   useDepthBiasEnableDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Disabled
    condition: mFeatures.supportsExtendedDynamicState2.enabled
    Use the Depth Bias Enable dynamic state from
    VK_EXT_extended_dynamic_state2

*   useDepthCompareOpDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled
    Use the Depth Compare Op dynamic state from VK_EXT_extended_dynamic_state

*   useDepthTestEnableDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled
    Use the Depth Test Enable dynamic state from VK_EXT_extended_dynamic_state

*   useDepthWriteEnableDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled &amp;&amp; !isArm44OrLess
    Use the Depth Write Enable dynamic state from
    VK_EXT_extended_dynamic_state

*   useFrontFaceDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled
    Use the Front Face dynamic state from VK_EXT_extended_dynamic_state

*   useMultipleDescriptorsForExternalFormats (Vulkan workarounds) (http://anglebug.com/6141): Enabled
    condition: true
    Return a default descriptor count for external formats.

*   useNonZeroStencilWriteMaskStaticState (Vulkan workarounds) (http://anglebug.com/7556): Disabled
    condition: isARM &amp;&amp; armDriverVersion &lt; ARMDriverVersion(43, 0, 0)
    Work around a driver bug where 0 in stencil write mask static state would
    make the corresponding dynamic state malfunction in the presence of
    discard or alpha to coverage

*   usePrimitiveRestartEnableDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Disabled
    condition: mFeatures.supportsExtendedDynamicState2.enabled &amp;&amp; !isArm44OrLess
    Use the Primitive Restart Enable dynamic state from
    VK_EXT_extended_dynamic_state2

*   useRasterizerDiscardEnableDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Disabled
    condition: mFeatures.supportsExtendedDynamicState2.enabled
    Use the Rasterizer Discard Enable dynamic state from
    VK_EXT_extended_dynamic_state2

*   useResetCommandBufferBitForSecondaryPools (Vulkan workarounds): Disabled
    condition: isARM
    Use VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT for initializing
    SecondaryCommandPools when using VulkanSecondaryCommandBuffer. 

*   useStencilOpDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled
    Use the Stencil Op dynamic state from VK_EXT_extended_dynamic_state

*   useStencilTestEnableDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Enabled
    condition: mFeatures.supportsExtendedDynamicState.enabled
    Use the Stencil Test Enable dynamic state from
    VK_EXT_extended_dynamic_state

*   useVertexInputBindingStrideDynamicState (Vulkan workarounds) (http://anglebug.com/5906): Disabled
    condition: mFeatures.supportsExtendedDynamicState.enabled &amp;&amp; !mFeatures.supportsVertexInputDynamicState.enabled &amp;&amp; !isArm44OrLess &amp;&amp; !isVertexInputBindingStrideBuggy
    Use the Vertex Input Bininding Stride dynamic state from
    VK_EXT_extended_dynamic_state

*   useVmaForImageSuballocation (Vulkan features): Enabled
    condition: true
    Utilize VMA for image memory suballocation.

*   varyingsRequireMatchingPrecisionInSpirv (Vulkan workarounds) (http://anglebug.com/7488): Disabled
    condition: isPowerVR
    Add additional SPIRV instructions to make sure precision between shader
    stages match with each other

*   waitIdleBeforeSwapchainRecreation (Vulkan workarounds) (http://anglebug.com/5061): Disabled
    condition: IsAndroid() &amp;&amp; isARM
    Before passing an oldSwapchain to VkSwapchainCreateInfoKHR, wait for queue
    to be idle. Works around a bug on platforms which destroy oldSwapchain in
    vkCreateSwapchainKHR.

*   warmUpPipelineCacheAtLink (Vulkan features) (http://anglebug.com/5881): Enabled
    condition: libraryBlobsAreReusedByMonolithicPipelines &amp;&amp; !isQualcommProprietary &amp;&amp; !(IsLinux() &amp;&amp; isIntel) &amp;&amp; !(IsChromeOS() &amp;&amp; isSwiftShader)
    Warm up the Vulkan pipeline cache at link time

Dawn Info
=========

&lt;Integrated GPU&gt;  Metal backend - Intel(R) HD Graphics 630
----------------------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   msaa-render-to-single-sampled
*   norm16texture-formats
*   multi-planar-format-p010
*   multi-planar-render-targets
*   adapter-properties-memory-heaps
*   shared-texture-memory-io-surface
*   shared-fence-mtl-shared-event

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   metal_use_shared_mode_for_counter_sample_buffer: 
    (https://crbug.com/dawn/434):
    The query set on Metal need to create MTLCounterSampleBuffer which storage
    mode must be either MTLStorageModeShared or MTLStorageModePrivate. But the
    private mode does not work properly on Intel platforms. The workaround is
    use shared mode instead.

*   metal_enable_vertex_pulling: 
    (https://crbug.com/dawn/480):
    Uses vertex pulling to protect out-of-bounds reads on Metal

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   metal_render_r8_rg8_unorm_small_mip_to_temp_texture: 
    (https://crbug.com/dawn/1071):
    Metal Intel devices have issues with r8unorm and rg8unorm textures where
    rendering to small mips (level &gt;= 2) doesn't work correctly. Workaround
    this issue by detecting this case and rendering to a temporary texture
    instead (with copies before and after if needed).

*   apply_clear_big_integer_color_value_with_draw: 
    (https://crbug.com/dawn/537):
    Apply the clear value of the color attachment with a draw call when load
    op is 'clear'. This toggle is enabled by default on D3D12 backends when we
    set large integer values (&gt; 2^24 or &lt; -2^24 for signed integer formats) as
    the clear value of a color attachment with 32-bit integer or unsigned
    integer formats because D3D12 APIs only support using float numbers as
    clear values, while a float number cannot always precisely represent an
    integer that is greater than 2^24 or smaller than -2^24). This toggle is
    also enabled on Intel GPUs on Metal backend due to a driver issue on Intel
    Metal driver.

*   metal_use_mock_blit_encoder_for_write_timestamp: 
    (https://crbug.com/dawn/1473):
    Add mock blit command to blit encoder when encoding writeTimestamp as
    workaround on Metal.This toggle is enabled by default on Metal backend
    where GPU counters cannot be stored tosampleBufferAttachments on empty
    blit encoder.

*   metal_use_combined_depth_stencil_format_for_stencil8: 
    (https://crbug.com/dawn/1389):
    Use a combined depth stencil format instead of stencil8. Works around an
    issue where the stencil8 format alone does not work correctly. This toggle
    also causes depth stencil attachments using a stencil8 format to also set
    the depth attachment in the Metal render pass. This works around another
    issue where Metal fails to set the stencil attachment correctly for a
    combined depth stencil format if the depth attachment is not also set.

*   metal_use_both_depth_and_stencil_attachments_for_combined_depth_stencil_formats: 
    (https://crbug.com/dawn/1389):
    In Metal, depth and stencil attachments are set separately. Setting just
    one without the other does not work correctly for combined depth stencil
    formats on some Metal drivers. This workarounds ensures that both are set.
    This situation arises during lazy clears, or for stencil8 formats if
    metal_use_combined_depth_stencil_format_for_stencil8 is also enabled.

*   metal_keep_multisubresource_depth_stencil_textures_initialized: 
    (https://crbug.com/dawn/838):
    Some platforms have bugs where the wrong depth stencil subresource is
    read/written. To avoid reads of uninitialized data, ensure that depth
    stencil textures with more than one subresource are completely
    initialized, and StoreOp::Discard is always translated as a Store.

*   use_blit_for_buffer_to_depth_texture_copy: 
    (https://crbug.com/dawn/1389):
    Use a blit instead of a copy command to copy buffer data to the depth
    aspect of a texture. Works around an issue where depth writes by copy
    commands are not visible to a render or compute pass.

*   use_blit_for_buffer_to_stencil_texture_copy: 
    (https://crbug.com/dawn/1389):
    Use a blit instead of a copy command to copy buffer data to the stencil
    aspect of a texture. Works around an issue where stencil writes by copy
    commands are not visible to a render or compute pass.

*   use_blit_for_depth_texture_to_texture_copy_to_nonzero_subresource: 
    (https://crbug.com/dawn/1083):
    Use a blit to copy from a depth texture to the nonzero subresource of a
    depth texture. Works around an issue where nonzero layers are not written.

*   no_workaround_sample_mask_becomes_zero_for_all_but_last_color_target: 
    (https://crbug.com/dawn/1462):
    MacOS 12.0+ Intel has a bug where the sample mask is only applied for the
    last color target. If there are multiple color targets, all but the last
    one will use a sample mask of zero.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

&lt;Discrete GPU&gt;  Metal backend - AMD Radeon Pro 560
--------------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   msaa-render-to-single-sampled
*   norm16texture-formats
*   multi-planar-format-p010
*   multi-planar-render-targets
*   adapter-properties-memory-heaps
*   shared-texture-memory-io-surface
*   shared-fence-mtl-shared-event

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   metal_enable_vertex_pulling: 
    (https://crbug.com/dawn/480):
    Uses vertex pulling to protect out-of-bounds reads on Metal

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   metal_use_mock_blit_encoder_for_write_timestamp: 
    (https://crbug.com/dawn/1473):
    Add mock blit command to blit encoder when encoding writeTimestamp as
    workaround on Metal.This toggle is enabled by default on Metal backend
    where GPU counters cannot be stored tosampleBufferAttachments on empty
    blit encoder.

*   metal_use_combined_depth_stencil_format_for_stencil8: 
    (https://crbug.com/dawn/1389):
    Use a combined depth stencil format instead of stencil8. Works around an
    issue where the stencil8 format alone does not work correctly. This toggle
    also causes depth stencil attachments using a stencil8 format to also set
    the depth attachment in the Metal render pass. This works around another
    issue where Metal fails to set the stencil attachment correctly for a
    combined depth stencil format if the depth attachment is not also set.

*   metal_keep_multisubresource_depth_stencil_textures_initialized: 
    (https://crbug.com/dawn/838):
    Some platforms have bugs where the wrong depth stencil subresource is
    read/written. To avoid reads of uninitialized data, ensure that depth
    stencil textures with more than one subresource are completely
    initialized, and StoreOp::Discard is always translated as a Store.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

&lt;CPU&gt;  Vulkan backend - SwiftShader Device (Subzero)
----------------------------------------------------

[WebGPU Status]
---------------
*   Blocklisted

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   adapter-properties-memory-heaps
*   adapter-properties-vk
*   shared-texture-memory-opaque-fd

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Version Information
===================
Data exported              : 2024-04-19T15:21:39.531Z
Chrome version             : Chrome/124.0.6367.60
Operating system           : Mac OS X 13.6.6
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/8771130bd84f76d855ae42fbe02752b03e352f17/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/8771130bd84f76d855ae42fbe02752b03e352f17/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : c884489868f9
2D graphics backend        : Skia/124 e7bf161ff959268a2a2f37530a6ea61c27019d33
Command Line               : /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --flag-switches-begin --flag-switches-end --restore-last-session

Driver Information
==================
Initialization time             : 2110
In-process GPU                  : false
Passthrough Command Decoder     : true
Sandboxed                       : true
GPU0                            : VENDOR= 0xffff [Google Inc. (Google)], DEVICE=0xffff [ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver-5.0.0)], DRIVER_VENDOR=SwANGLE, DRIVER_VERSION=5.0.0 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
GPU CUDA compute capability major version: 0
Pixel shader version            : 1.00
Vertex shader version           : 1.00
Max. MSAA samples               : 4
Machine model name              : MacBookPro
Machine model version           : 14.3
GL implementation parts         : (gl=egl-angle,angle=swiftshader)
Display type                    : ANGLE_SWIFTSHADER
GL_VENDOR                       : Google Inc. (Google)
GL_RENDERER                     : ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver-5.0.0)
GL_VERSION                      : OpenGL ES 2.0.0 (ANGLE 2.1.22782 git hash: c884489868f9)
GL_EXTENSIONS                   : GL_AMD_performance_monitor GL_ANGLE_base_vertex_base_instance GL_ANGLE_base_vertex_base_instance_shader_builtin GL_ANGLE_client_arrays GL_ANGLE_compressed_texture_etc GL_ANGLE_depth_texture GL_ANGLE_framebuffer_blit GL_ANGLE_framebuffer_multisample GL_ANGLE_get_image GL_ANGLE_get_serialized_context_string GL_ANGLE_get_tex_level_parameter GL_ANGLE_instanced_arrays GL_ANGLE_memory_object_flags GL_ANGLE_memory_size GL_ANGLE_multi_draw GL_ANGLE_pack_reverse_row_order GL_ANGLE_polygon_mode GL_ANGLE_program_cache_control GL_ANGLE_read_only_depth_stencil_feedback_loops GL_ANGLE_relaxed_vertex_attribute_type GL_ANGLE_request_extension GL_ANGLE_rgbx_internal_format GL_ANGLE_robust_client_memory GL_ANGLE_robust_fragment_shader_output GL_ANGLE_robust_resource_initialization GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 GL_ANGLE_texture_usage GL_ANGLE_translated_shader_source GL_ANGLE_vulkan_image GL_APPLE_clip_distance GL_ARM_shader_framebuffer_fetch GL_CHROMIUM_bind_generates_resource GL_CHROMIUM_bind_uniform_location GL_CHROMIUM_color_buffer_float_rgb GL_CHROMIUM_color_buffer_float_rgba GL_CHROMIUM_copy_compressed_texture GL_CHROMIUM_copy_texture GL_CHROMIUM_lose_context GL_EXT_EGL_image_external_wrap_modes GL_EXT_base_instance GL_EXT_blend_minmax GL_EXT_buffer_storage GL_EXT_clip_control GL_EXT_color_buffer_half_float GL_EXT_compressed_ETC1_RGB8_sub_texture GL_EXT_copy_image GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_depth_clamp GL_EXT_discard_framebuffer GL_EXT_disjoint_timer_query GL_EXT_draw_buffers GL_EXT_draw_elements_base_vertex GL_EXT_float_blend GL_EXT_frag_depth GL_EXT_instanced_arrays GL_EXT_map_buffer_range GL_EXT_memory_object GL_EXT_memory_object_fd GL_EXT_multi_draw_indirect GL_EXT_occlusion_query_boolean GL_EXT_polygon_offset_clamp GL_EXT_read_format_bgra GL_EXT_robustness GL_EXT_sRGB GL_EXT_sRGB_write_control GL_EXT_semaphore GL_EXT_separate_shader_objects GL_EXT_shader_framebuffer_fetch GL_EXT_shader_framebuffer_fetch_non_coherent GL_EXT_shader_non_constant_global_initializers GL_EXT_shader_texture_lod GL_EXT_shadow_samplers GL_EXT_texture_border_clamp GL_EXT_texture_compression_bptc GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc_srgb GL_EXT_texture_filter_anisotropic GL_EXT_texture_format_BGRA8888 GL_EXT_texture_mirror_clamp_to_edge GL_EXT_texture_norm16 GL_EXT_texture_rg GL_EXT_texture_sRGB_decode GL_EXT_texture_storage GL_EXT_texture_type_2_10_10_10_REV GL_EXT_unpack_subimage GL_KHR_blend_equation_advanced GL_KHR_debug GL_KHR_robust_buffer_access_behavior GL_KHR_texture_compression_astc_ldr GL_NV_depth_buffer_float2 GL_NV_fence GL_NV_framebuffer_blit GL_NV_pack_subimage GL_NV_pixel_buffer_object GL_NV_polygon_mode GL_NV_read_depth GL_NV_read_depth_stencil GL_NV_read_stencil GL_OES_EGL_image GL_OES_EGL_image_external GL_OES_EGL_sync GL_OES_compressed_EAC_R11_signed_texture GL_OES_compressed_EAC_R11_unsigned_texture GL_OES_compressed_EAC_RG11_signed_texture GL_OES_compressed_EAC_RG11_unsigned_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_compressed_ETC2_RGB8_texture GL_OES_compressed_ETC2_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture GL_OES_compressed_ETC2_sRGB8_alpha8_texture GL_OES_compressed_ETC2_sRGB8_texture GL_OES_depth24 GL_OES_depth32 GL_OES_depth_texture GL_OES_depth_texture_cube_map GL_OES_draw_elements_base_vertex GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_get_program_binary GL_OES_mapbuffer GL_OES_packed_depth_stencil GL_OES_primitive_bounding_box GL_OES_rgb8_rgba8 GL_OES_sample_shading GL_OES_standard_derivatives GL_OES_surfaceless_context GL_OES_texture_3D GL_OES_texture_border_clamp GL_OES_texture_float GL_OES_texture_float_linear GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_array_object GL_OES_vertex_half_float
Disabled Extensions             : 
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x8252
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Compositor Information
======================
Tile Update Mode: Zero-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
R_16              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_88             : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_1616           : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGR_565           : Software only
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRA_1010102      : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_1010102      : Software only
BGRA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_F16          : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YVU_420           : Software only
YUV_420_BIPLANAR  : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YUVA_420_TRIPLANAR: GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
P010              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING

Display(s) Information
======================
Info                          : Display[2077750265] bounds=[0,0 1680x1050], workarea=[0,25 1680x993], scale=2, rotation=0, panel_rotation=0 internal detected
Color space (all)             : {r:[0.6797, 0.3203], g:[0.2650, 0.6901], b:[0.1504, 0.3203], w:[0.3127, 0.3290]}, transfer:{0.0777*x + 0.0000 if abs(x) &lt; 0.0450 else sign(x)*((0.9495*abs(x) + 0.0495)**2.3955 + 0.0003)}, matrix:RGB, range:FULL}
Buffer format (all)           : BGRA_8888
Color volume                  : {r:[0.6797, 0.3203], g:[0.2650, 0.6901], b:[0.1504, 0.3203], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24
Refresh Rate in Hz            : 60.000877380371094

Video Acceleration Information
==============================
Decoding: 
Encoding:

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============
[732:259:0419/081046.341186:ERROR:gl_utils.cc(424)] : [.WebGL-0x13406b60000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels
[732:259:0419/081048.612147:ERROR:gl_utils.cc(424)] : [.WebGL-0x13406b60000]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels
[732:259:0419/081051.013871:ERROR:gl_utils.cc(424)] : [.WebGL-0x11c0051bf00]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels
[732:259:0419/081052.556816:ERROR:gl_utils.cc(424)] : [.WebGL-0x11c0051d400]GL Driver Message (OpenGL, Performance, GL_CLOSE_PATH_NV, High): GPU stall due to ReadPixels (this message will no longer repeat)

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335838014</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldFocusEventListCloseButton_WhenFocusMovedFromTodayButton</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335838014"/>
        <updated>1970-01-01T00:28:33.539Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldFocusEventListCloseButton_WhenFocusMovedFromTodayButton

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/baa2dae09bf2f6dfccd768141f8add26

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335818069</id>
        <title>Whenever a dialog box appears it crashes Chromium.</title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818069"/>
        <updated>1970-01-01T00:28:33.539Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to Chrome web store
2. Click on install extension
3. Chromium starts having a seizure

# Problem Description
Deleting bookmarks / reinstalling the browser doesn't work

# Summary
Whenever a dialog box appears it crashes Chromium.

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335782512</id>
        <title>Refactor parts of UserAgentUtilsTest given UA reduction</title>
        <author>
            <name>mi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335782512"/>
        <updated>1970-01-01T00:28:33.539Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834959</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.InitDec</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834959"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.InitDec

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bf2e6e840033d55e7f878ea31187ef28

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335834598</id>
        <title>Submit first PECP spec draft to WICG repo</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834598"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835345</id>
        <title>Address internal feedback.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835345"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834632</id>
        <title>Send first spec draft for internal feedback.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834632"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835283</id>
        <title>Write first spec draft</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835283"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835327</id>
        <title>Define the overall skeleton of the spec. Decided which sections will exist and what they should contain.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835327"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834831</id>
        <title>Deliver PEPC spec</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834831"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835263</id>
        <title>Familiarize self with usage of PEPC in regards to HTML/JS/CSS</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835263"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834657</id>
        <title>Read through PEPC explainer</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834657"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835364</id>
        <title>Read through Fenced Frame spec</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835364"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834907</id>
        <title>Read through Portals spec</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834907"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834361</id>
        <title>Decide on writing tool (bikeshed vs ReSpec)</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834361"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834712</id>
        <title>Pre spec-writing prep work</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834712"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834260</id>
        <title>Re-organize and redefine spec-writing work based on meeting notes.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834260"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834536</id>
        <title>Hold meeting with johannhof@ and domenic@.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834536"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834562</id>
        <title>Define agenda for a meeting with our spec experts</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834562"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834796</id>
        <title>Brainstorm set of initial questions that we have about the process.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834796"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835025</id>
        <title>Read through Domenics presentation on web specs.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835025"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835123</id>
        <title>Read through https://dlaliberte.github.io/bikeshed-intro/index.html</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835123"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834752</id>
        <title>Reach out and setup meeting with johannhof@ and domenic@.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834752"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834698</id>
        <title>Define initial expectations</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834698"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834889</id>
        <title>Deliver PEPC spec draft</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834889"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834943</id>
        <title>Request Trial Creation</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834943"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835083</id>
        <title>Move through Chrome launch process</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835083"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335833962</id>
        <title>Move Chrome Status feature to OT stage</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335833962"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834459</id>
        <title>OT Launch Process</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834459"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835013</id>
        <title>Remove `text-align` support</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835013"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835011</id>
        <title>Devise alternative support for padding</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835011"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834794</id>
        <title>Ensure user options/settings for accessibility purposes do not affect validation</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834794"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834696</id>
        <title>Ensure RTL languages work correctly for the primary element</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834696"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834808</id>
        <title>Implement CSS restrictions and checks</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834808"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834653</id>
        <title>Design and implement a kill-switch</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834653"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
</feed>