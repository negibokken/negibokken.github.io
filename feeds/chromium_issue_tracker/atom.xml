<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.325Z</updated>
    <entry>
        <id>335353373</id>
        <title>[FedCM] Disable Button mode OT on Android</title>
        <author>
            <name>yi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335353373"/>
        <updated>1970-01-01T00:28:33.325Z</updated>
        <summary>-</summary>
        <content type="html">OT  was accidentally enabled on Android. We should add origin_trial_os: ["win", "mac", "linux", "chromeos"], to the OT config file</content>
    </entry>
    <entry>
        <id>335341858</id>
        <title>[Blink CSS]: 1 regressions in blink_perf.css</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335341858"/>
        <updated>1970-01-01T00:28:33.324Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1288208:1288266:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=96631cd1-79e4-4a83-84f5-5d56df2df104

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=96631cd1-79e4-4a83-84f5-5d56df2df104

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.css/CustomPropertiesPendingSubstitution/CustomPropertiesPendingSubstitution.html
       10.99%: 25.740000000000002 -&gt; 28.57 ms

Top 1 affected measurements in mac-laptop_low_end-perf:
  - blink_perf.css/CustomPropertiesPendingSubstitution/CustomPropertiesPendingSubstitution.html
       10.99%: 25.740000000000002 -&gt; 28.57 ms

Regressions grouped by blink_perf.css includes data from the following benchmarks with listed owners:
  blink_perf.css: andruud@chromium.org, futhark@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1288207..1288266
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/15b9756484d5bda98ba273ae13f8db58200db4db..27b55da372e6580537fd0bdd20c49e19a5351f1e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/fb61154da1f42a01d10cbb67f226df6e9e6c6bf7..de7e4ad1b1cb9b6d15cac281820399a613d6d971</content>
    </entry>
    <entry>
        <id>335317426</id>
        <title>Fatal error in Type representation error: node CallWithArrayLike (input @2 = Float64Divide) typ</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335317426"/>
        <updated>1970-01-01T00:28:33.324Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5119409833050112

Fuzzer: None
Job Type: linux_asan_d8_dbg
Platform Id: linux

Crash Type: Fatal error
Crash Address: 
Crash State:
  Type representation error: node CallWithArrayLike (input @2 = Float64Divide) typ
  v8::internal::maglev::CheckValueInputIs
  v8::internal::maglev::CallWithArrayLike::VerifyInputs
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_d8_dbg&amp;range=93400:93401

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5119409833050112

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335328447</id>
        <title>scroll-padding causes unwanted scroll on sticky elements</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335328447"/>
        <updated>1970-01-01T00:28:33.324Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open the pen: https://codepen.io/bakura10/pen/QWPVYEE
2. Scroll lower into the page.
3. Focus one of the link in the sticky bar, and you will see that the page will scroll up automatically. This only happens for sticky element. If the positioning is changed to fixed, it works as expected.

# Problem Description
Hi,

A common way to have the anchor scroll works well with sticky element is to add a scroll-padding-top on the HTML to account for the sticky elements. Unfortunately, on Safari and Chrome (Firefox works as expected), this cause an unwanted scroll when using a sticky element.

Please see the attached video for more details. This issue has been cross-posted on Safari bug tracker as well (https://bugs.webkit.org/show_bug.cgi?id=272799).

# Summary
scroll-padding causes unwanted scroll on sticky elements

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335333630</id>
        <title>CHECK failure: false. DOMException should not be thrown in range.h</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335333630"/>
        <updated>1970-01-01T00:28:33.319Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5175350003695616

Fuzzer: b0ring_webidl_fuzzer
Job Type: linux_debug_chrome
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  false. DOMException should not be thrown in range.h
  blink::NonThrowableExceptionState::ComplainAbout
  blink::NonThrowableExceptionState::DoThrowDOMException
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_debug_chrome&amp;range=1222101:1222103

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5175350003695616

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335324882</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335324882"/>
        <updated>1970-01-01T00:28:33.318Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287147:1287160:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f348ade6-5dad-42eb-b786-6ca515e0f305

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f348ade6-5dad-42eb-b786-6ca515e0f305

Top 1 regressions (out of 2, with 1 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/v8.browsing_desktop/memory:chrome:renderer_processes:reported_by_chrome:blink_gc:allocated_objects_size_avg/browse_social/browse_social_twitter_2018
       21.72%: 14900039.0 -&gt; 18136493.0 sizeInBytes

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - v8.browsing_desktop/memory:chrome:renderer_processes:reported_by_chrome:blink_gc:allocated_objects_size_avg/browse_social/browse_social_twitter_2018
       21.72%: 14900039.0 -&gt; 18136493.0 sizeInBytes

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: almuthanna@chromium.org, cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1287151..1287204
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/15b9756484d5bda98ba273ae13f8db58200db4db..15b9756484d5bda98ba273ae13f8db58200db4db
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/352bfe3c44c3baf1f16a18f912b8b162ca581c54..1261863f87ff0f6c7910a039012d3469ee8ee2fb</content>
    </entry>
    <entry>
        <id>335341857</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335341857"/>
        <updated>1970-01-01T00:28:33.318Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287195:1287430:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=6dc6787f-38a9-4512-a27b-dffb0e9a5942

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=6dc6787f-38a9-4512-a27b-dffb0e9a5942

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/espn_2018
     1030.92%: 13.0128 -&gt; 147.1648 unitless

Top 1 affected measurements in android-pixel4-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/espn_2018
     1030.92%: 13.0128 -&gt; 147.1648 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/08d6c0ec805461ea7fdffd7377c867501a1d89e3..be4c38b9a2ba935f92e2e355a3d2b75f95c5e5c3
  Chromium Commit Position: https://crrev.com/1287194..1287430
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/15b9756484d5bda98ba273ae13f8db58200db4db..15b9756484d5bda98ba273ae13f8db58200db4db
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1261863f87ff0f6c7910a039012d3469ee8ee2fb..f29d297523b8fe01d4e990cf89479999611857bf</content>
    </entry>
    <entry>
        <id>335340201</id>
        <title>Tests are failing: java.lang.AssertionError: Height change animations are implemented for fully shown controls only!</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335340201"/>
        <updated>1970-01-01T00:28:33.318Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
java.lang.AssertionError: Height change animations are implemented for fully shown controls only!

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.media.ui.FullscreenVideoPictureInPictureControllerTest#testExitPipWhenDeviceLocked
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.media.ui.FullscreenVideoPictureInPictureControllerTest#testEnterPip
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.media.ui.FullscreenVideoPictureInPictureControllerTest#testExitPipOnNavigation


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/080ad9483ad8af2cc6aac24beb07d9da

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335331239</id>
        <title>335279176</title>
        <author>
            <name>ob...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335331239"/>
        <updated>1970-01-01T00:28:33.317Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. {
  "objectType": "merchant",
  "id": "1587",
  "type": "gateway",
  "created": "2022-09-26T13:20:03+00:00",
  "updated": "2022-09-26T13:20:03+00:00",
  "firstName": "Jane",
  "lastName": "Doe",
  "company": "ACME, Inc.",
  "email": "someone@example.com",
  "phone": "555-555-5555",
  "fax": "123-456-7890",
  "url": "",
  "address1": "123 Fake St.",
  "address2": "Unit 101",
  "city": "Chicago",
  "state": "IL",
  "zip": "60601",
  "country": "US",
  "timezone": "America/Chicago",
  "costPlan": null,
  "status": "pending",
  "externalIdentifier": "A Company That Makes Everything",
  "lastTransactionDate": null,
  "parentAffiliateId": "1",
  "accountInfo": {
    "checkAba": "123123123",
    "checkAccount": "*****3123",
    "accountType": "checking",
    "accountHolderType": "business"
  },
  "features": {
    "forceTos": true,
    "forceBillingAuth": true,
    "allowBlindCredits": false,
    "allowBlindCheckCredits": false,
    "advancedTransactionRouting": false,
    "sendBillingEmail": false,
    "braspag": {
      "advancedTransactionRouting": false
    },
    "verifi": {
      "enabled": false
    },
    "viewBillingStatement": false,
    "litle": {
      "reportGroup": false,
      "prePaidIndicator": false,
      "affluentIndicator": false,
      "recycleAdvice": false,
      "campaign": false,
      "affiliate": false,
      "merchantGroupId": false
    },
    "allowEmptyCcExp": false,
    "pastDue": false,
    "apiReceipt": false,
    "batchReceipt": false,
    "delinquent": false,
    "commercialCardIndicator": false,
    "customDescriptor": false,
    "apiAllowOnlyUsername": false,
    "orderIdDuplicateCheck": false,
    "cardLevelResult": false,
    "pmsalem": {
      "ignoreAmexCvv": false,
      "allowNovusVerify": false,
      "idInMdf11": false
    },
    "credorax": {
      "bankNet": false,
      "z5Risk": false
    },
    "vantiv": {
      "remainingBalance": false
    },
    "prosa": {
      "deferredPayment": false
    },
    "cronopay": {
      "customerId": false
    },
    "captureHigher": false,
    "moneris": {
      "orderId": false
    },
    "extendedFileBatchResponse": false,
    "credov3": {
      "ignoreAmexCvv": false
    },
    "enforceRequiredFieldsForSwiped": false,
    "preventDuplicateCvRecords": false,
    "preventConfiguringSurcharge": false,
    "tsys": {
      "paymentFacilitatorFields": false,
      "allowCustomReport": false,
      "alternativePosData": false
    },
    "requireProcessorFieldOnVt": false,
    "isCardTesting": false,
    "allowTipOnVtKeyedTransactions": false,
    "transitForceAcceptance": false,
    "level3": {
      "autoLoadTemplate": false
    },
    "emvPartialApprovals": false,
    "allowOfflineAuths": false,
    "supportsGooglePay": false,
    "supportsApplePay": false,
    "isApplePayEnabled": false,
    "useDeviceRecognition": false
  },
  "needsPendingServicesActivated": true,
  "payFacBillingPeriod": "monthly",
  "rejectedCertificates": "0"
}0xc5b7EcB421d88174D76fF03a2919A487bbee5fb10xe4efdd2eb216a4620cfa55c5cc67bd09dc64ff24https://t.me/Cryptocom_DeFiWallet/236016{
  "objectType": "merchant",
  "id": "1587",
  "type": "gateway",
  "created": "2022-09-26T13:20:03+00:00",
  "updated": "2022-09-26T13:20:03+00:00",
  "firstName": "Jane",
  "lastName": "Doe",
  "company": "ACME, Inc.",
  "email": "someone@example.com",
  "phone": "555-555-5555",
  "fax": "123-456-7890",
  "url": "",
  "address1": "123 Fake St.",
  "address2": "Unit 101",
  "city": "Chicago",
  "state": "IL",
  "zip": "60601",
  "country": "US",
  "timezone": "America/Chicago",
  "costPlan": null,
  "status": "pending",
  "externalIdentifier": "A Company That Makes Everything",
  "lastTransactionDate": null,
  "parentAffiliateId": "1",
  "accountInfo": {
    "checkAba": "123123123",
    "checkAccount": "*****3123",
    "accountType": "checking",
    "accountHolderType": "business"
  },
  "features": {
    "forceTos": true,
    "forceBillingAuth": true,
    "allowBlindCredits": false,
    "allowBlindCheckCredits": false,
    "advancedTransactionRouting": false,
    "sendBillingEmail": false,
    "braspag": {
      "advancedTransactionRouting": false
    },
    "verifi": {
      "enabled": false
    },
    "viewBillingStatement": false,
    "litle": {
      "reportGroup": false,
      "prePaidIndicator": false,
      "affluentIndicator": false,
      "recycleAdvice": false,
      "campaign": false,
      "affiliate": false,
      "merchantGroupId": false
    },
    "allowEmptyCcExp": false,
    "pastDue": false,
    "apiReceipt": false,
    "batchReceipt": false,
    "delinquent": false,
    "commercialCardIndicator": false,
    "customDescriptor": false,
    "apiAllowOnlyUsername": false,
    "orderIdDuplicateCheck": false,
    "cardLevelResult": false,
    "pmsalem": {
      "ignoreAmexCvv": false,
      "allowNovusVerify": false,
      "idInMdf11": false
    },
    "credorax": {
      "bankNet": false,
      "z5Risk": false
    },
    "vantiv": {
      "remainingBalan
2. 
3. 

# Problem Description
{"SPDXID":"SPDXRef-DOCUMENT","spdxVersion":"SPDX-2.3","creationInfo":{"created":"202403-05T10:18:00Z","creators":["Tool: GitHub.com-DependencyGraph"]},"name":"com.github.okorye/codespaces-express","dataLicense":"CC01.0","documentDescribes":["SPDXRef-com.github.okorye-codespacesexpress"],"documentNamespace":"https://github.com/okorye/codespaces-
express/dependency_graph/sbom-ce3fd3ce36630cb4","packages":[{"SPDXID":"SPDXRefcom.github.okorye-codespaces-express","name":"com.github.okorye/codespacesexpress","versionInfo":"","downloadLocation":"git+
https://github.com/okorye/codespaces-express
","filesAnalyzed":false,"supplier":"NOASSERTION","externalRefs":[{"referenceCategory": "PACKAGE0AA6866E276D04F90000018C7A80C960E13F{
  "status": "0",
  "message": "NOTOK",
  "result": "Error! Invalid contract address format"
}0xcd9088a113fc7dbb73b627d845fb558550ec5283AKEkzZ5U9heEhm7r4RcyKjti9AqmrRC2jP7BpDEvHBXGdevelop&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom"&gt;https://my.coinapp.co/earn

# Summary
335279176

# Custom Questions
#### Which component does this fall under?
Blink&gt;Bindings

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335325877</id>
        <title>got a dangling pointer closing chrome ProofVerifyDetailsChromium</title>
        <author>
            <name>wf...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335325877"/>
        <updated>1970-01-01T00:28:33.315Z</updated>
        <summary>-</summary>
        <content type="html">here is the raw info

```
c:\src\chromium\src&gt;autoninja -C out\Release_x64 chrome[30776:32912:0416/180006.145:ERROR:partition_alloc_support.cc(621)] Detected dangling raw_ptr with id=0x0000104000173f78:
[DanglingSignature]     net::ProofVerifyDetailsChromium::~ProofVerifyDetailsChromium    No active task  net::CoalescingCertVerifier::Request::~Request  No active task

The memory was freed at:
        base::debug::CollectStackTrace [0x00007FFC0AB96EE2+18] (c:\src\chromium\src\base\debug\stack_trace_win.cc:328)
        base::debug::StackTrace::StackTrace [0x00007FFC0ABA6AFD+61] (c:\src\chromium\src\base\debug\stack_trace.cc:231)
        base::allocator::`anonymous namespace'::DanglingRawPtrDetected [0x00007FFC0AB98E2D+989] (c:\src\chromium\src\base\allocator\partition_alloc_support.cc:435)
        allocator_shim::internal::PartitionFree [0x00007FFC0AC9BC58+8488] (c:\src\chromium\src\base\allocator\partition_allocator\src\partition_alloc\shim\allocator_shim_default_dispatch_to_partition_alloc.cc:340)
        base::allocator::dispatcher::internal::DispatcherImpl&lt;base::PoissonAllocationSampler&gt;::FreeFn [0x00007FFC04098F40+80] (c:\src\chromium\src\base\allocator\dispatcher\internal\dispatcher_internal.h:196)
        net::ProofVerifyDetailsChromium::~ProofVerifyDetailsChromium [0x00007FFC103065CA+42] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:39)
        net::ProofVerifierChromium::Job::~Job [0x00007FFC10303804+564] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:199)
        std::__Cr::__tree&lt;std::__Cr::__value_type&lt;net::ProofVerifierChromium::Job *,std::__Cr::unique_ptr&lt;net::ProofVerifierChromium::Job,std::__Cr::default_delete&lt;net::ProofVerifierChromium::Job&gt; &gt; &gt;,std::__Cr::__map_value_compare&lt;net::ProofVerifierChromium::Job [0x00007FFC1030664E+62] (c:\src\chromium\src\third_party\libc++\src\include\__tree:1544)
        net::ProofVerifierChromium::~ProofVerifierChromium [0x00007FFC1030604B+379] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:541)
        net::ProofVerifierChromium::~ProofVerifierChromium [0x00007FFC103065F0+16] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:541)
        quic::QuicCryptoClientConfig::~QuicCryptoClientConfig [0x00007FFC102F2512+290] (c:\src\chromium\src\net\third_party\quiche\src\quiche\quic\core\crypto\quic_crypto_client_config.cc:74)
        net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner [0x00007FFC0E1980B7+295] (c:\src\chromium\src\net\quic\quic_session_pool.cc:396)
        std::__Cr::__list_imp&lt;std::__Cr::pair&lt;net::NetworkAnonymizationKey,std::__Cr::unique_ptr&lt;net::QuicSessionPool::QuicCryptoClientConfigOwner,std::__Cr::default_delete&lt;net::QuicSessionPool::QuicCryptoClientConfigOwner&gt; &gt; &gt;,std::__Cr::allocator&lt;std::__Cr::pai [0x00007FFC0E1A2A13+99] (c:\src\chromium\src\third_party\libc++\src\include\list:634)
        net::QuicSessionPool::~QuicSessionPool [0x00007FFC0E1994CF+1007] (c:\src\chromium\src\net\quic\quic_session_pool.cc:524)
        net::HttpNetworkSession::~HttpNetworkSession [0x00007FFC0C5A66A5+453] (c:\src\chromium\src\net\http\http_network_session.cc:232)
        net::URLRequestContext::~URLRequestContext [0x00007FFC0AD6ADB8+520] (c:\src\chromium\src\net\url_request\url_request_context.cc:97)
        network::URLRequestContextOwner::~URLRequestContextOwner [0x00007FFC0E74A092+34] (c:\src\chromium\src\services\network\url_request_context_owner.cc:21)
        network::NetworkContext::~NetworkContext [0x00007FFC0CE8E75F+2495] (c:\src\chromium\src\services\network\network_context.cc:823)
        network::NetworkContext::~NetworkContext [0x00007FFC0CE9AF50+16] (c:\src\chromium\src\services\network\network_context.cc:764)
        network::NetworkService::OnNetworkContextConnectionClosed [0x00007FFC0B73403B+283] (c:\src\chromium\src\services\network\network_service.cc:1091)
        base::OnceCallback&lt;void (content::WebContents *)&gt;::Run [0x00007FFC04208CCC+92] (c:\src\chromium\src\base\functional\callback.h:156)
        base::OnceCallback&lt;void ()&gt;::Run [0x00007FFC0420AF14+84] (c:\src\chromium\src\base\functional\callback.h:156)
        mojo::InterfaceEndpointClient::NotifyError [0x00007FFC0AF0F012+546] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\interface_endpoint_client.cc:768)
        mojo::internal::MultiplexRouter::ProcessNotifyErrorTask [0x00007FFC0AF07BCC+396] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:1031)
        mojo::internal::MultiplexRouter::ProcessTasks [0x00007FFC0AF039A9+281] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:948)
        mojo::internal::MultiplexRouter::OnPipeConnectionError [0x00007FFC0AF024B6+1846] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:854)
        base::OnceCallback&lt;void ()&gt;::Run [0x00007FFC0420AF14+84] (c:\src\chromium\src\base\functional\callback.h:156)
        mojo::Connector::HandleError [0x00007FFC0AF16022+386] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\connector.cc:683)
        mojo::Connector::OnWatcherHandleReady [0x00007FFC0AF16E91+97] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\connector.cc:410)
        base::RepeatingCallback&lt;void (int)&gt;::Run [0x00007FFC04E22CC7+103] (c:\src\chromium\src\base\functional\callback.h:345)
        base::RepeatingCallback&lt;void (net::MDnsTransaction::Result, const net::RecordParsed *)&gt;::Run [0x00007FFC042ABE43+115] (c:\src\chromium\src\base\functional\callback.h:345)
        mojo::SimpleWatcher::OnHandleReady [0x00007FFC0AF2AD35+293] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:279)
        mojo::SimpleWatcher::Context::Notify [0x00007FFC0AF2AF02+178] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:96)
        mojo::SimpleWatcher::Context::CallNotify [0x00007FFC0AF29CF0+32] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:65)
        mojo::core::ipcz_driver::MojoTrap::DispatchEvent [0x00007FFC04305B7F+111] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:608)
        mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent [0x00007FFC0430485D+333] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:584)
        mojo::core::ipcz_driver::MojoTrap::HandleEvent [0x00007FFC0430551E+654] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:462)
        mojo::core::ipcz_driver::MojoTrap::TrapEventHandler [0x00007FFC04305235+53] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:395)
        ipcz::TrapEventDispatcher::~TrapEventDispatcher [0x00007FFC04365110+176] (c:\src\chromium\src\third_party\ipcz\src\ipcz\trap_event_dispatcher.cc:12)
        ipcz::Router::AcceptRouteClosureFrom [0x00007FFC0435A837+1207] (c:\src\chromium\src\third_party\ipcz\src\ipcz\router.cc:343)
        ipcz::NodeLink::OnRouteClosed [0x00007FFC0434A8DA+218] (c:\src\chromium\src\third_party\ipcz\src\ipcz\node_link.cc:672)
        ipcz::msg::NodeMessageListener::OnTransportMessage [0x00007FFC0435302F+5023] (c:\src\chromium\src\third_party\ipcz\src\ipcz\node_messages_generator.h:687)
        ipcz::`anonymous namespace'::NotifyTransport [0x00007FFC04335316+150] (c:\src\chromium\src\third_party\ipcz\src\ipcz\driver_transport.cc:46)
        mojo::core::ipcz_driver::Transport::OnChannelMessage [0x00007FFC0430C784+564] (c:\src\chromium\src\mojo\core\ipcz_driver\transport.cc:665)
        mojo::core::Channel::TryDispatchMessage [0x00007FFC042E5934+580] (c:\src\chromium\src\mojo\core\channel.cc:993)
        mojo::core::Channel::OnReadComplete [0x00007FFC042E5567+327] (c:\src\chromium\src\mojo\core\channel.cc:941)
        mojo::core::`anonymous namespace'::ChannelWin::OnIOCompleted [0x00007FFC0432F7C4+420] (c:\src\chromium\src\mojo\core\channel_win.cc:242)
        base::MessagePumpForIO::WaitForIOCompletion [0x00007FFC0AB8742E+1438] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:862)
        base::MessagePumpForIO::DoRunLoop [0x00007FFC0AB86B23+579] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:804)
        base::MessagePumpWin::Run [0x00007FFC0AB836F7+247] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:82)
        base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run [0x00007FFC0C4E426D+829] (c:\src\chromium\src\base\task\sequence_manager\thread_controller_with_message_pump_impl.cc:644)
        base::RunLoop::Run [0x00007FFC0ABFABAE+1118] (c:\src\chromium\src\base\run_loop.cc:136)
        base::Thread::Run [0x00007FFC0ABBCF57+103] (c:\src\chromium\src\base\threading\thread.cc:338)
        content::`anonymous namespace'::ChildIOThread::Run [0x00007FFC0BF6A7AD+109] (c:\src\chromium\src\content\child\child_process.cc:58)
        base::Thread::ThreadMain [0x00007FFC0ABBD2D2+674] (c:\src\chromium\src\base\threading\thread.cc:413)
        base::`anonymous namespace'::ThreadFunc [0x00007FFC0AB76784+356] (c:\src\chromium\src\base\threading\platform_thread_win.cc:131)
        BaseThreadInitThunk [0x00007FFCCBC47344+20]
        RtlUserThreadStart [0x00007FFCCD7C26B1+33]

Task trace:
No active task.
The dangling raw_ptr was released at:
        base::debug::CollectStackTrace [0x00007FFC0AB96EE2+18] (c:\src\chromium\src\base\debug\stack_trace_win.cc:328)
        base::debug::StackTrace::StackTrace [0x00007FFC0ABA6AFD+61] (c:\src\chromium\src\base\debug\stack_trace.cc:231)
        base::allocator::`anonymous namespace'::DanglingRawPtrReleased&lt;0,0&gt; [0x00007FFC0AB98EE9+57] (c:\src\chromium\src\base\allocator\partition_alloc_support.cc:593)
        base::internal::RawPtrBackupRefImpl&lt;0,0&gt;::ReleaseInternal [0x00007FFC0AC56E60+4128] (c:\src\chromium\src\base\allocator\partition_allocator\src\partition_alloc\pointers\raw_ptr_backup_ref_impl.cc:53)
        net::CoalescingCertVerifier::Request::~Request [0x00007FFC0C61ED22+306] (c:\src\chromium\src\net\cert\coalescing_cert_verifier.cc:354)
        net::CoalescingCertVerifier::Request::~Request [0x00007FFC0C61F430+16] (c:\src\chromium\src\net\cert\coalescing_cert_verifier.cc:340)
        net::ProofVerifierChromium::Job::~Job [0x00007FFC10303929+857] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:199)
        std::__Cr::__tree&lt;std::__Cr::__value_type&lt;net::ProofVerifierChromium::Job *,std::__Cr::unique_ptr&lt;net::ProofVerifierChromium::Job,std::__Cr::default_delete&lt;net::ProofVerifierChromium::Job&gt; &gt; &gt;,std::__Cr::__map_value_compare&lt;net::ProofVerifierChromium::Job [0x00007FFC1030664E+62] (c:\src\chromium\src\third_party\libc++\src\include\__tree:1544)
        net::ProofVerifierChromium::~ProofVerifierChromium [0x00007FFC1030604B+379] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:541)
        net::ProofVerifierChromium::~ProofVerifierChromium [0x00007FFC103065F0+16] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:541)
        quic::QuicCryptoClientConfig::~QuicCryptoClientConfig [0x00007FFC102F2512+290] (c:\src\chromium\src\net\third_party\quiche\src\quiche\quic\core\crypto\quic_crypto_client_config.cc:74)
        net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner [0x00007FFC0E1980B7+295] (c:\src\chromium\src\net\quic\quic_session_pool.cc:396)
        std::__Cr::__list_imp&lt;std::__Cr::pair&lt;net::NetworkAnonymizationKey,std::__Cr::unique_ptr&lt;net::QuicSessionPool::QuicCryptoClientConfigOwner,std::__Cr::default_delete&lt;net::QuicSessionPool::QuicCryptoClientConfigOwner&gt; &gt; &gt;,std::__Cr::allocator&lt;std::__Cr::pai [0x00007FFC0E1A2A13+99] (c:\src\chromium\src\third_party\libc++\src\include\list:634)
        net::QuicSessionPool::~QuicSessionPool [0x00007FFC0E1994CF+1007] (c:\src\chromium\src\net\quic\quic_session_pool.cc:524)
        net::HttpNetworkSession::~HttpNetworkSession [0x00007FFC0C5A66A5+453] (c:\src\chromium\src\net\http\http_network_session.cc:232)
        net::URLRequestContext::~URLRequestContext [0x00007FFC0AD6ADB8+520] (c:\src\chromium\src\net\url_request\url_request_context.cc:97)
        network::URLRequestContextOwner::~URLRequestContextOwner [0x00007FFC0E74A092+34] (c:\src\chromium\src\services\network\url_request_context_owner.cc:21)
        network::NetworkContext::~NetworkContext [0x00007FFC0CE8E75F+2495] (c:\src\chromium\src\services\network\network_context.cc:823)
        network::NetworkContext::~NetworkContext [0x00007FFC0CE9AF50+16] (c:\src\chromium\src\services\network\network_context.cc:764)
        network::NetworkService::OnNetworkContextConnectionClosed [0x00007FFC0B73403B+283] (c:\src\chromium\src\services\network\network_service.cc:1091)
        base::OnceCallback&lt;void (content::WebContents *)&gt;::Run [0x00007FFC04208CCC+92] (c:\src\chromium\src\base\functional\callback.h:156)
        base::OnceCallback&lt;void ()&gt;::Run [0x00007FFC0420AF14+84] (c:\src\chromium\src\base\functional\callback.h:156)
        mojo::InterfaceEndpointClient::NotifyError [0x00007FFC0AF0F012+546] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\interface_endpoint_client.cc:768)
        mojo::internal::MultiplexRouter::ProcessNotifyErrorTask [0x00007FFC0AF07BCC+396] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:1031)
        mojo::internal::MultiplexRouter::ProcessTasks [0x00007FFC0AF039A9+281] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:948)
        mojo::internal::MultiplexRouter::OnPipeConnectionError [0x00007FFC0AF024B6+1846] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:854)
        base::OnceCallback&lt;void ()&gt;::Run [0x00007FFC0420AF14+84] (c:\src\chromium\src\base\functional\callback.h:156)
        mojo::Connector::HandleError [0x00007FFC0AF16022+386] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\connector.cc:683)
        mojo::Connector::OnWatcherHandleReady [0x00007FFC0AF16E91+97] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\connector.cc:410)
        base::RepeatingCallback&lt;void (int)&gt;::Run [0x00007FFC04E22CC7+103] (c:\src\chromium\src\base\functional\callback.h:345)
        base::RepeatingCallback&lt;void (net::MDnsTransaction::Result, const net::RecordParsed *)&gt;::Run [0x00007FFC042ABE43+115] (c:\src\chromium\src\base\functional\callback.h:345)
        mojo::SimpleWatcher::OnHandleReady [0x00007FFC0AF2AD35+293] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:279)
        mojo::SimpleWatcher::Context::Notify [0x00007FFC0AF2AF02+178] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:96)
        mojo::SimpleWatcher::Context::CallNotify [0x00007FFC0AF29CF0+32] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:65)
        mojo::core::ipcz_driver::MojoTrap::DispatchEvent [0x00007FFC04305B7F+111] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:608)
        mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent [0x00007FFC0430485D+333] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:584)
        mojo::core::ipcz_driver::MojoTrap::HandleEvent [0x00007FFC0430551E+654] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:462)
        mojo::core::ipcz_driver::MojoTrap::TrapEventHandler [0x00007FFC04305235+53] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:395)
        ipcz::TrapEventDispatcher::~TrapEventDispatcher [0x00007FFC04365110+176] (c:\src\chromium\src\third_party\ipcz\src\ipcz\trap_event_dispatcher.cc:12)
        ipcz::Router::AcceptRouteClosureFrom [0x00007FFC0435A837+1207] (c:\src\chromium\src\third_party\ipcz\src\ipcz\router.cc:343)
        ipcz::NodeLink::OnRouteClosed [0x00007FFC0434A8DA+218] (c:\src\chromium\src\third_party\ipcz\src\ipcz\node_link.cc:672)
        ipcz::msg::NodeMessageListener::OnTransportMessage [0x00007FFC0435302F+5023] (c:\src\chromium\src\third_party\ipcz\src\ipcz\node_messages_generator.h:687)
        ipcz::`anonymous namespace'::NotifyTransport [0x00007FFC04335316+150] (c:\src\chromium\src\third_party\ipcz\src\ipcz\driver_transport.cc:46)
        mojo::core::ipcz_driver::Transport::OnChannelMessage [0x00007FFC0430C784+564] (c:\src\chromium\src\mojo\core\ipcz_driver\transport.cc:665)
        mojo::core::Channel::TryDispatchMessage [0x00007FFC042E5934+580] (c:\src\chromium\src\mojo\core\channel.cc:993)
        mojo::core::Channel::OnReadComplete [0x00007FFC042E5567+327] (c:\src\chromium\src\mojo\core\channel.cc:941)
        mojo::core::`anonymous namespace'::ChannelWin::OnIOCompleted [0x00007FFC0432F7C4+420] (c:\src\chromium\src\mojo\core\channel_win.cc:242)
        base::MessagePumpForIO::WaitForIOCompletion [0x00007FFC0AB8742E+1438] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:862)
        base::MessagePumpForIO::DoRunLoop [0x00007FFC0AB86B23+579] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:804)
        base::MessagePumpWin::Run [0x00007FFC0AB836F7+247] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:82)
        base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run [0x00007FFC0C4E426D+829] (c:\src\chromium\src\base\task\sequence_manager\thread_controller_with_message_pump_impl.cc:644)
        base::RunLoop::Run [0x00007FFC0ABFABAE+1118] (c:\src\chromium\src\base\run_loop.cc:136)
        base::Thread::Run [0x00007FFC0ABBCF57+103] (c:\src\chromium\src\base\threading\thread.cc:338)
        content::`anonymous namespace'::ChildIOThread::Run [0x00007FFC0BF6A7AD+109] (c:\src\chromium\src\content\child\child_process.cc:58)
        base::Thread::ThreadMain [0x00007FFC0ABBD2D2+674] (c:\src\chromium\src\base\threading\thread.cc:413)
        base::`anonymous namespace'::ThreadFunc [0x00007FFC0AB76784+356] (c:\src\chromium\src\base\threading\platform_thread_win.cc:131)
        BaseThreadInitThunk [0x00007FFCCBC47344+20]
        RtlUserThreadStart [0x00007FFCCD7C26B1+33]

Task trace:
No active task.

Please check for more information on:
https://chromium.googlesource.com/chromium/src/+/main/docs/dangling_ptr_guide.md

Googlers: Please give us your feedback about the dangling pointer
          detector at:
          http://go/dangling-ptr-cq-survey

Received fatal exception EXCEPTION_BREAKPOINT
        base::allocator::`anonymous namespace'::DanglingRawPtrReleased&lt;0,0&gt; [0x00007FFC0AB99288+984] (c:\src\chromium\src\base\allocator\partition_alloc_support.cc:641)
        base::internal::RawPtrBackupRefImpl&lt;0,0&gt;::ReleaseInternal [0x00007FFC0AC56E60+4128] (c:\src\chromium\src\base\allocator\partition_allocator\src\partition_alloc\pointers\raw_ptr_backup_ref_impl.cc:53)
        net::CoalescingCertVerifier::Request::~Request [0x00007FFC0C61ED22+306] (c:\src\chromium\src\net\cert\coalescing_cert_verifier.cc:354)
        net::CoalescingCertVerifier::Request::~Request [0x00007FFC0C61F430+16] (c:\src\chromium\src\net\cert\coalescing_cert_verifier.cc:340)
        net::ProofVerifierChromium::Job::~Job [0x00007FFC10303929+857] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:199)
        std::__Cr::__tree&lt;std::__Cr::__value_type&lt;net::ProofVerifierChromium::Job *,std::__Cr::unique_ptr&lt;net::ProofVerifierChromium::Job,std::__Cr::default_delete&lt;net::ProofVerifierChromium::Job&gt; &gt; &gt;,std::__Cr::__map_value_compare&lt;net::ProofVerifierChromium::Job [0x00007FFC1030664E+62] (c:\src\chromium\src\third_party\libc++\src\include\__tree:1544)
        net::ProofVerifierChromium::~ProofVerifierChromium [0x00007FFC1030604B+379] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:541)
        net::ProofVerifierChromium::~ProofVerifierChromium [0x00007FFC103065F0+16] (c:\src\chromium\src\net\quic\crypto\proof_verifier_chromium.cc:541)
        quic::QuicCryptoClientConfig::~QuicCryptoClientConfig [0x00007FFC102F2512+290] (c:\src\chromium\src\net\third_party\quiche\src\quiche\quic\core\crypto\quic_crypto_client_config.cc:74)
        net::QuicSessionPool::QuicCryptoClientConfigOwner::~QuicCryptoClientConfigOwner [0x00007FFC0E1980B7+295] (c:\src\chromium\src\net\quic\quic_session_pool.cc:396)
        std::__Cr::__list_imp&lt;std::__Cr::pair&lt;net::NetworkAnonymizationKey,std::__Cr::unique_ptr&lt;net::QuicSessionPool::QuicCryptoClientConfigOwner,std::__Cr::default_delete&lt;net::QuicSessionPool::QuicCryptoClientConfigOwner&gt; &gt; &gt;,std::__Cr::allocator&lt;std::__Cr::pai [0x00007FFC0E1A2A13+99] (c:\src\chromium\src\third_party\libc++\src\include\list:634)
        net::QuicSessionPool::~QuicSessionPool [0x00007FFC0E1994CF+1007] (c:\src\chromium\src\net\quic\quic_session_pool.cc:524)
        net::HttpNetworkSession::~HttpNetworkSession [0x00007FFC0C5A66A5+453] (c:\src\chromium\src\net\http\http_network_session.cc:232)
        net::URLRequestContext::~URLRequestContext [0x00007FFC0AD6ADB8+520] (c:\src\chromium\src\net\url_request\url_request_context.cc:97)
        network::URLRequestContextOwner::~URLRequestContextOwner [0x00007FFC0E74A092+34] (c:\src\chromium\src\services\network\url_request_context_owner.cc:21)
        network::NetworkContext::~NetworkContext [0x00007FFC0CE8E75F+2495] (c:\src\chromium\src\services\network\network_context.cc:823)
        network::NetworkContext::~NetworkContext [0x00007FFC0CE9AF50+16] (c:\src\chromium\src\services\network\network_context.cc:764)
        network::NetworkService::OnNetworkContextConnectionClosed [0x00007FFC0B73403B+283] (c:\src\chromium\src\services\network\network_service.cc:1091)
        base::OnceCallback&lt;void (content::WebContents *)&gt;::Run [0x00007FFC04208CCC+92] (c:\src\chromium\src\base\functional\callback.h:156)
        base::OnceCallback&lt;void ()&gt;::Run [0x00007FFC0420AF14+84] (c:\src\chromium\src\base\functional\callback.h:156)
        mojo::InterfaceEndpointClient::NotifyError [0x00007FFC0AF0F012+546] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\interface_endpoint_client.cc:768)
        mojo::internal::MultiplexRouter::ProcessNotifyErrorTask [0x00007FFC0AF07BCC+396] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:1031)
        mojo::internal::MultiplexRouter::ProcessTasks [0x00007FFC0AF039A9+281] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:948)
        mojo::internal::MultiplexRouter::OnPipeConnectionError [0x00007FFC0AF024B6+1846] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\multiplex_router.cc:854)
        base::OnceCallback&lt;void ()&gt;::Run [0x00007FFC0420AF14+84] (c:\src\chromium\src\base\functional\callback.h:156)
        mojo::Connector::HandleError [0x00007FFC0AF16022+386] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\connector.cc:683)
        mojo::Connector::OnWatcherHandleReady [0x00007FFC0AF16E91+97] (c:\src\chromium\src\mojo\public\cpp\bindings\lib\connector.cc:410)
        base::RepeatingCallback&lt;void (int)&gt;::Run [0x00007FFC04E22CC7+103] (c:\src\chromium\src\base\functional\callback.h:345)
        base::RepeatingCallback&lt;void (net::MDnsTransaction::Result, const net::RecordParsed *)&gt;::Run [0x00007FFC042ABE43+115] (c:\src\chromium\src\base\functional\callback.h:345)
        mojo::SimpleWatcher::OnHandleReady [0x00007FFC0AF2AD35+293] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:279)
        mojo::SimpleWatcher::Context::Notify [0x00007FFC0AF2AF02+178] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:96)
        mojo::SimpleWatcher::Context::CallNotify [0x00007FFC0AF29CF0+32] (c:\src\chromium\src\mojo\public\cpp\system\simple_watcher.cc:65)
        mojo::core::ipcz_driver::MojoTrap::DispatchEvent [0x00007FFC04305B7F+111] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:608)
        mojo::core::ipcz_driver::MojoTrap::DispatchOrQueueEvent [0x00007FFC0430485D+333] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:584)
        mojo::core::ipcz_driver::MojoTrap::HandleEvent [0x00007FFC0430551E+654] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:462)
        mojo::core::ipcz_driver::MojoTrap::TrapEventHandler [0x00007FFC04305235+53] (c:\src\chromium\src\mojo\core\ipcz_driver\mojo_trap.cc:395)
        ipcz::TrapEventDispatcher::~TrapEventDispatcher [0x00007FFC04365110+176] (c:\src\chromium\src\third_party\ipcz\src\ipcz\trap_event_dispatcher.cc:12)
        ipcz::Router::AcceptRouteClosureFrom [0x00007FFC0435A837+1207] (c:\src\chromium\src\third_party\ipcz\src\ipcz\router.cc:343)
        ipcz::NodeLink::OnRouteClosed [0x00007FFC0434A8DA+218] (c:\src\chromium\src\third_party\ipcz\src\ipcz\node_link.cc:672)
        ipcz::msg::NodeMessageListener::OnTransportMessage [0x00007FFC0435302F+5023] (c:\src\chromium\src\third_party\ipcz\src\ipcz\node_messages_generator.h:687)
        ipcz::`anonymous namespace'::NotifyTransport [0x00007FFC04335316+150] (c:\src\chromium\src\third_party\ipcz\src\ipcz\driver_transport.cc:46)
        mojo::core::ipcz_driver::Transport::OnChannelMessage [0x00007FFC0430C784+564] (c:\src\chromium\src\mojo\core\ipcz_driver\transport.cc:665)
        mojo::core::Channel::TryDispatchMessage [0x00007FFC042E5934+580] (c:\src\chromium\src\mojo\core\channel.cc:993)
        mojo::core::Channel::OnReadComplete [0x00007FFC042E5567+327] (c:\src\chromium\src\mojo\core\channel.cc:941)
        mojo::core::`anonymous namespace'::ChannelWin::OnIOCompleted [0x00007FFC0432F7C4+420] (c:\src\chromium\src\mojo\core\channel_win.cc:242)
        base::MessagePumpForIO::WaitForIOCompletion [0x00007FFC0AB8742E+1438] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:862)
        base::MessagePumpForIO::DoRunLoop [0x00007FFC0AB86B23+579] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:804)
        base::MessagePumpWin::Run [0x00007FFC0AB836F7+247] (c:\src\chromium\src\base\message_loop\message_pump_win.cc:82)
        base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run [0x00007FFC0C4E426D+829] (c:\src\chromium\src\base\task\sequence_manager\thread_controller_with_message_pump_impl.cc:644)
        base::RunLoop::Run [0x00007FFC0ABFABAE+1118] (c:\src\chromium\src\base\run_loop.cc:136)
        base::Thread::Run [0x00007FFC0ABBCF57+103] (c:\src\chromium\src\base\threading\thread.cc:338)
        content::`anonymous namespace'::ChildIOThread::Run [0x00007FFC0BF6A7AD+109] (c:\src\chromium\src\content\child\child_process.cc:58)
        base::Thread::ThreadMain [0x00007FFC0ABBD2D2+674] (c:\src\chromium\src\base\threading\thread.cc:413)
        base::`anonymous namespace'::ThreadFunc [0x00007FFC0AB76784+356] (c:\src\chromium\src\base\threading\platform_thread_win.cc:131)
        BaseThreadInitThunk [0x00007FFCCBC47344+20]
        RtlUserThreadStart [0x00007FFCCD7C26B1+33]
```

`commit c29b483607b98c9f3d2c87dafac6dbb199473b47 (origin/main, origin/HEAD)`

```
c:\src\chromium\src&gt;type out\Release_x64\args.gn
#blink_enable_generated_code_formatting = false
#coverage_instrumentation_input_file = "//.code-coverage/files_to_instrument.txt"
dcheck_always_on = true
#enable_resource_allowlist_generation = false
ffmpeg_branding = "Chrome"
is_component_build = false
is_debug = false
proprietary_codecs = true
symbol_level = 2
#use_clang_coverage = true
#use_goma = true
blink_symbol_level = 0
v8_symbol_level = 0
use_siso = true
use_remoteexec=true
is_chrome_branded = true
```</content>
    </entry>
    <entry>
        <id>335328446</id>
        <title>Investigate request-blocking APIs and the interaction with preloading</title>
        <author>
            <name>do...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335328446"/>
        <updated>1970-01-01T00:28:33.314Z</updated>
        <summary>-</summary>
        <content type="html">A sad fact is that some ad-blocking extensions, like uBlock Origin, turn off all preloading, via forcing the value of chrome://settings/performance's "Preload pages" option. This means users using such extensions are not able to see the benefits of preloading.

From what I understand reading issue 40549991, issue 40458266, and issue 41356037, at least at some point in time, some preloading technologies bypassed the network request-blocking APIs that such extensions rely on. Thus, if an extension wants to prevent all connections to https://example.com/, the only way they could do that would be by disabling preloading.

The purpose of this issue is to get a fully up-to-date view of the situation, so that maybe, eventually, we can have some way for these extensions to accomplish their goals without disabling all preloading.

In particular, we need to test:

- Speculation rules prefetch
- Speculation rules prerender
- `&lt;link rel=prerender&gt;`
- `&lt;link rel=prefetch&gt;`
- `&lt;link rel=preload&gt;`
- `&lt;link rel=dns-prefetch&gt;`
- `&lt;link rel=preconnect&gt;`
- `fetch()`

each targeting a:

- same-origin destination
- same-site cross-origin destination
- cross-site destination

against:

- A manifest v2 extension's blocking capabilities
- A manifest v3 extension's blocking capabilities
- No extensions, but "preload pages" setting turned off

and see which of these technologies are blocked by which settings.

(I don't know the details on what blocking abilities manifest v2 and manifest v3 extensions have, so that might generate more test cases if they have more than one.)

The result should be a nice writeup document, containing some info on how the tests were constructed, and a table with all the results.</content>
    </entry>
    <entry>
        <id>335334161</id>
        <title>v8_wasm_compile_simd_fuzzer: Out-of-memory in v8_wasm_compile_simd_fuzzer</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335334161"/>
        <updated>1970-01-01T00:28:33.314Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=6505290888314880

Fuzzing Engine: libFuzzer
Fuzz Target: v8_wasm_compile_simd_fuzzer
Job Type: v8_libfuzzer_asan_linux_arm_sim
Platform Id: linux

Crash Type: Out-of-memory (exceeds 2560 MB)
Crash Address: 
Crash State:
  v8_wasm_compile_simd_fuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=v8_libfuzzer_asan_linux_arm_sim&amp;range=1288218:1288224

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=6505290888314880

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>335333067</id>
        <title>Tests are failing: ninja://chrome/test:browser_tests/AppListWithRecentAppBrowserTest.MouseClickAtRecentApp</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335333067"/>
        <updated>1970-01-01T00:28:33.314Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:browser_tests/AppListWithRecentAppBrowserTest.MouseClickAtRecentApp

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f8399c4b87c10fa68e90aa703d337345

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335325249</id>
        <title>v8_wasm_compile_wasmgc_fuzzer: Out-of-memory in v8_wasm_compile_wasmgc_fuzzer</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335325249"/>
        <updated>1970-01-01T00:28:33.314Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=6254531772874752

Fuzzing Engine: libFuzzer
Fuzz Target: v8_wasm_compile_wasmgc_fuzzer
Job Type: v8_libfuzzer_asan_linux_arm_sim
Platform Id: linux

Crash Type: Out-of-memory (exceeds 2560 MB)
Crash Address: 
Crash State:
  v8_wasm_compile_wasmgc_fuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=v8_libfuzzer_asan_linux_arm_sim&amp;range=1288218:1288224

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=6254531772874752

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>335333629</id>
        <title>Fatal error in Type representation error: node CallWithArrayLike (input @2 = Float64Add) type F</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335333629"/>
        <updated>1970-01-01T00:28:33.314Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=6228437430632448

Fuzzer: ochang_js_fuzzer
Job Type: linux_asan_d8_v8_arm_dbg
Platform Id: linux

Crash Type: Fatal error
Crash Address: 
Crash State:
  Type representation error: node CallWithArrayLike (input @2 = Float64Add) type F
  pthread_create
  v8::base::Thread::Start
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_d8_v8_arm_dbg&amp;range=93400:93401

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=6228437430632448

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335279177</id>
        <title>QuicTestPacketMaker::Reset doesn't really "reset" the maker</title>
        <author>
            <name>dj...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335279177"/>
        <updated>1970-01-01T00:28:33.313Z</updated>
        <summary>-</summary>
        <content type="html">From awillia@ in https://chromium-review.googlesource.com/c/chromium/src/+/5425361/comment/c7e55bae_5b861e11/

I know this currently just does what QuicTestPacketMaker::Reset() used to do, but with a name like Reset I'd think more members of the ConnectionState would be reset. Should it be renamed to ResetStreamOffsets? Should more data be reset? If so, maybe we can add a TODO in this CL at least? Also, a comment above the method in the .h file would be helpful.</content>
    </entry>
    <entry>
        <id>335325875</id>
        <title>Context loss pixel test times out on Windows/UHD 770</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335325875"/>
        <updated>1970-01-01T00:28:33.312Z</updated>
        <summary>-</summary>
        <content type="html">We're in the process of enabling tests on the new Windows/Intel UHD 770 configuration. Most tests are happy at this point, but `Pixel_Video_Context_Loss_MP4` consistently times out, even when run serially or marked as slow.

[Sample failure](https://ci.chromium.org/ui/p/chromium/builders/try/gpu-fyi-try-win10-intel-uhd770-rel/10/test-results?q=ExactID%3Aninja%3A%2F%2Fchrome%2Ftest%3Atelemetry_gpu_integration_test%2Fgpu_tests.pixel_integration_test.PixelIntegrationTest.Pixel_Video_Context_Loss_MP4+VHash%3Abc608a4b007ab50b)

```
Traceback (most recent call last):
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\util\websocket_server.py", line 89, in Receive
    return self.websocket.recv(timeout)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-7ebq96jcbnuiah06s4fmeaa1d0\contents\lib\site-packages\websockets\sync\connection.py", line 196, in recv
    return self.recv_messages.get(timeout)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-7ebq96jcbnuiah06s4fmeaa1d0\contents\lib\site-packages\websockets\sync\messages.py", line 98, in get
    raise TimeoutError(f"timed out in {timeout:.1f}s")
TimeoutError: timed out in 15.0s

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\skia_gold_heartbeat_integration_test_base.py", line 246, in HandleMessageLoop
    response = websocket_server.Receive(self._GetHeartbeatTimeout())
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\util\websocket_server.py", line 91, in Receive
    raise WebsocketReceiveMessageTimeoutError(
TimeoutError: Timed out after 15 seconds waiting for websocket message

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_socket.py", line 81, in recv
    bytes_ = sock.recv(bufsize)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 171, in _Receive
    data = self._socket.recv()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 294, in recv
    opcode, data = self.recv_data()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 311, in recv_data
    opcode, frame = self.recv_data_frame(control_frame)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 324, in recv_data_frame
    frame = self.recv_frame()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 358, in recv_frame
    return self.frame_buffer.recv_frame()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_abnf.py", line 337, in recv_frame
    self.recv_header()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_abnf.py", line 287, in recv_header
    header = self.recv_strict(2)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_abnf.py", line 372, in recv_strict
    bytes_ = self.recv(min(16384, shortage))
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 428, in _recv
    return recv(self.sock, bufsize)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_socket.py", line 84, in recv
    raise WebSocketTimeoutException(message)
websocket._exceptions.WebSocketTimeoutException: timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 903, in _EvaluateJavaScript
    return self._runtime.Evaluate(expression, context_id, timeout,
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_runtime.py", line 53, in Evaluate
    res = self._inspector_websocket.SyncRequest(request, timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 132, in SyncRequest
    res = self._Receive(timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 181, in _Receive
    raise WebSocketException(err) from err
telemetry.internal.backends.chrome_inspector.inspector_websocket.WebSocketException: WebSocketException of type &lt;class 'websocket._exceptions.WebSocketTimeoutException'&gt;. Error message: WebSocketTimeoutException('timed out')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_socket.py", line 81, in recv
    bytes_ = sock.recv(bufsize)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 171, in _Receive
    data = self._socket.recv()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 294, in recv
    opcode, data = self.recv_data()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 311, in recv_data
    opcode, frame = self.recv_data_frame(control_frame)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 324, in recv_data_frame
    frame = self.recv_frame()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 358, in recv_frame
    return self.frame_buffer.recv_frame()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_abnf.py", line 337, in recv_frame
    self.recv_header()
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_abnf.py", line 287, in recv_header
    header = self.recv_strict(2)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_abnf.py", line 372, in recv_strict
    bytes_ = self.recv(min(16384, shortage))
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_core.py", line 428, in _recv
    return recv(self.sock, bufsize)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\third_party\websocket-client\websocket\_socket.py", line 84, in recv
    raise WebSocketTimeoutException(message)
websocket._exceptions.WebSocketTimeoutException: timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 45, in Inner
    return func(inspector_backend, *args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 924, in _EvaluateJavaScript
    self._runtime.CrashRendererProcess(context_id, timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_runtime.py", line 101, in CrashRendererProcess
    res = self._inspector_websocket.SyncRequest(request, timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 132, in SyncRequest
    res = self._Receive(timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 181, in _Receive
    raise WebSocketException(err) from err
telemetry.internal.backends.chrome_inspector.inspector_websocket.WebSocketException: WebSocketException of type &lt;class 'websocket._exceptions.WebSocketTimeoutException'&gt;. Error message: WebSocketTimeoutException('timed out')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\gpu_integration_test.py", line 637, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\pixel_integration_test.py", line 142, in RunActualGpuTest
    action.Run(test_case, tab_data, loop_state, self)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\skia_gold_heartbeat_integration_test_base.py", line 89, in Run
    super().Run(test_case, tab_data, loop_state, test_instance)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\skia_gold_heartbeat_integration_test_base.py", line 72, in Run
    test_instance.HandleMessageLoop(self.timeout, tab_data, loop_state)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\skia_gold_heartbeat_integration_test_base.py", line 283, in HandleMessageLoop
    websocket_utils.HandleWebsocketReceiveTimeoutError(tab, start_time)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\util\websocket_utils.py", line 25, in HandleWebsocketReceiveTimeoutError
    tab.action_runner.EvaluateJavaScript('let somevar = undefined;', timeout=5)
  File "C:\b\s\w\ir\third_party\catapult\common\py_trace_event\py_trace_event\trace_event_impl\decorators.py", line 55, in traced_function
    return func(*args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\actions\action_runner.py", line 265, in EvaluateJavaScript
    return self._tab.EvaluateJavaScript(*args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\common\py_trace_event\py_trace_event\trace_event_impl\decorators.py", line 55, in traced_function
    return func(*args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\browser\web_contents.py", line 220, in EvaluateJavaScript
    return self._inspector_backend.EvaluateJavaScript(*args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\common\py_trace_event\py_trace_event\trace_event_impl\decorators.py", line 55, in traced_function
    return func(*args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 308, in EvaluateJavaScript
    return self._EvaluateJavaScript(expression, context_id, timeout,
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 48, in Inner
    inspector_backend._ConvertExceptionFromInspectorWebsocket(e)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 878, in _ConvertExceptionFromInspectorWebsocket
    six.reraise(type(new_error), new_error, sys.exc_info()[2])
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-7ebq96jcbnuiah06s4fmeaa1d0\contents\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 45, in Inner
    return func(inspector_backend, *args, **kwargs)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_backend.py", line 924, in _EvaluateJavaScript
    self._runtime.CrashRendererProcess(context_id, timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_runtime.py", line 101, in CrashRendererProcess
    res = self._inspector_websocket.SyncRequest(request, timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 132, in SyncRequest
    res = self._Receive(timeout)
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\internal\backends\chrome_inspector\inspector_websocket.py", line 181, in _Receive
    raise WebSocketException(err) from err
```</content>
    </entry>
    <entry>
        <id>335328445</id>
        <title>Cleanup AutoSizeLazyLoadedImages feature flag</title>
        <author>
            <name>tc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335328445"/>
        <updated>1970-01-01T00:28:33.312Z</updated>
        <summary>-</summary>
        <content type="html">Clean up flag after shipping.

Flag checked in:
https://chromium-review.googlesource.com/c/chromium/src/+/5043005
And enabled in:
https://chromium-review.googlesource.com/c/chromium/src/+/5458907

Also move the flag guarded css definitions to html.css
</content>
    </entry>
    <entry>
        <id>335269878</id>
        <title>Ahem font should not be anti-aliased</title>
        <author>
            <name>ks...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335269878"/>
        <updated>1970-01-01T00:28:33.311Z</updated>
        <summary>-</summary>
        <content type="html">Per https://github.com/web-platform-tests/wpt/issues/45750, the current behavior is causing lots of test failures in the WPT harness on Windows. The easiest solution is to disable anti-aliasing on Ahem, which Safari and Firefox are already doing.</content>
    </entry>
    <entry>
        <id>335269877</id>
        <title>"RangeError: Map maximum size exceeded" when map is well below limit</title>
        <author>
            <name>is...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335269877"/>
        <updated>1970-01-01T00:28:33.311Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Create a JavaScript `Map` object
2. Fill it up near to the 2**24 item limit, but not exceeding
3. Repeatedly delete an item and add a new one, staying below the limit
4. Error will be raised when a _total_ of 2**24 items have been added, ignoring the deleted items. Map.size always below 2**24 limit.

# Problem Description
Map object limit should be based on Map size, not total number of items ever added. In other words, deleting items seem to not be taken into account.

```js
const m = new Map()
const MAX = 16_700_000

for (let i = 0; i &lt; MAX; i++) {
  m.set(i, i)
}

for (let i = 0; i &lt; MAX; i++) {
  for (const k of m.keys()) {
    m.delete(k)
    break
  }
  try {
    m.set(i, i)
  } catch (e) {
    console.log(e.message, m.size, i, m.size + i, 2**24)
    break
  }
}
```

Tested in Edge and Safari, and no error is raised.

Observed in node versions back to v16 (v8 version 9.4.146.26-node.26).

# Additional Comments
Causing an issue in node-lru-cache https://github.com/isaacs/node-lru-cache/issues/331

# Summary
"RangeError: Map maximum size exceeded" when map is well below limit

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>335324033</id>
        <title>Reclient and Siso recipe module rbe property can conflict</title>
        <author>
            <name>ss...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335324033"/>
        <updated>1970-01-01T00:28:33.311Z</updated>
        <summary>-</summary>
        <content type="html">It appears the recipe modules for these two module both have a reference to the reclient instance that they should use. It looks like when these mismatch it won't fail however. Specifically it looks like the reclient version is used for "preprocess for reclient.install reclient_cfgs" and the siso version is used for the actual "compile" step when they're not the same values and siso is enabled. I'm not sure what implications this has and it seems to compile successfully but I don't think this is wai</content>
    </entry>
    <entry>
        <id>335320256</id>
        <title>Chrome brand icon update (Desktop - Linux on Cnary)</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335320256"/>
        <updated>1970-01-01T00:28:33.310Z</updated>
        <summary>-</summary>
        <content type="html">This is a follow up request from crbug.com/40211977, where we updated "App icons for Stable, Dev, Beta, Canary, Chromium".

At that time, there was no linux canary release, so the changes did not include canary logos.
See the [packaging](https://source.chromium.org/chromium/chromium/src/+/main:chrome/installer/linux/BUILD.gn?q=product_logo_16_beta).

Release TPM team has decided to create linux release on canary, hence request here for canary logo pictures.</content>
    </entry>
    <entry>
        <id>335319518</id>
        <title>Tests are failing: java.lang.NullPointerException: Attempt to read from field 'org.chromium.chrome.browser.omnibox.UrlBarMediator org.chromium.chrome.browser.omnibox....</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335319518"/>
        <updated>1970-01-01T00:28:33.309Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
java.lang.NullPointerException: Attempt to read from field 'org.chromium.chrome.browser.omnibox.UrlBarMediator org.chromium.chrome.browser.omnibox.UrlBarCoordinator.mMediator' on a null object reference

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.media.ui.FullscreenVideoPictureInPictureControllerTest#testFullscreenVideoDetectedOnlyWhenPlaying
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.media.ui.FullscreenVideoPictureInPictureControllerTest#testFullscreenVideoDetected
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.NavigateTest#testNavigateLandscape
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.jsdialog.JavascriptTabModalDialogTest#testAlertModalDialogMessageFocus
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.app.appmenu.TabbedAppMenuTest#testKeyboardMenuEnterOnTopItemLandscape


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/fa51f76fd1e8c3b3781d8b24fb6ecd98

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335317423</id>
        <title>gpu_raster_passthrough_fuzzer: Out-of-memory in gpu_raster_passthrough_fuzzer</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335317423"/>
        <updated>1970-01-01T00:28:33.308Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5928341287665664

Fuzzing Engine: libFuzzer
Fuzz Target: gpu_raster_passthrough_fuzzer
Job Type: libfuzzer_chrome_asan
Platform Id: linux

Crash Type: Out-of-memory (exceeds 2560 MB)
Crash Address: 
Crash State:
  gpu_raster_passthrough_fuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan&amp;range=1285157:1285242

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5928341287665664

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>335313263</id>
        <title>Tests are failing: simple.cc(61): Check failed: frame.feedback.get() == feedback (0x13fc00e13250 vs. 0x13fc00e133a0)</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335313263"/>
        <updated>1970-01-01T00:28:33.308Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
simple.cc(61): Check failed: frame.feedback.get() == feedback (0x13fc00e13250 vs. 0x13fc00e133a0)

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://components/exo/wayland:wayland_client_perftests/WaylandClientPerfTests.Simple


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/461b67edfb2b7c7696ecea5504331ede

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335309983</id>
        <title>Documentation request: [please give a title for your request]chatsmith@motorola razr plus 2023 - motorola/zeekr_gu/zeekr:13/T2TZS33.18-110-2/a9f19-10097:user/release-keys</title>
        <author>
            <name>ai...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335309983"/>
        <updated>1970-01-01T00:28:33.306Z</updated>
        <summary>-</summary>
        <content type="html">URL: [please tell us the URL of the page you're giving feedback about]

What is wrong or missing in this page?main network browser for Android and IOS app and DIALUP on Web app and internet protocols https and http www.html.delete.com/supercomputer @intel.upload/EPSILON DELTA POWER BY JEFFREY AND GE COMPACTION AI USE as&lt;ANS&gt;[5]
@motorola razr plus 2023 - motorola/zeekr_gu/zeekr:13/T2TZS33.18-110-2/a9f19-10097:user/release-keys.because8-4=5[][4]™®©</content>
    </entry>
    <entry>
        <id>335307851</id>
        <title>chatmith4.0 is a AI Internet browser</title>
        <author>
            <name>ai...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335307851"/>
        <updated>1970-01-01T00:28:33.306Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:

Android OS version:

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")

Application: (package name or Play Store URL)

Application version:

Steps to reproduce:

1.com.google.android.webview.canary (125.0.6421.2/642100233)
2.com.google.android.webview.canarymotorola razr plus 2023 - motorola/zeekr_gu/zeekr:13/T2TZS33.18-110-2/a9f19-10097:user/release-keys
3.
CHATBOT INPUT 🔣🔠 5BITCHATSMITH AI USE as browser for CANARY BY JEFFREY AND google.com 
Expected result:
NICE.com CHATSMITH BROWSER@4495 MAIN St suite 13 7 5 Buffalo NY 14226
Actual result:

Did this work before? (last working WebView version, or N/A)

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>335245514</id>
        <title>[Chrome Perf Accessibility Sheriff]: 33 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245514"/>
        <updated>1970-01-01T00:28:33.305Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287990:1288010:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=6e7f9bb4-ae34-48b1-92f9-e92a0eb1e9aa

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=6e7f9bb4-ae34-48b1-92f9-e92a0eb1e9aa

Top 1 regressions (out of 2, with 1 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-text-changes-deep-inline-subtree.html
       35.50%: 6.1575 -&gt; 8.343499999999999 ms

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-text-changes-deep-inline-subtree.html
       35.50%: 6.1575 -&gt; 8.343499999999999 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/236a5a62f305419289ee89151bf8a15decf22ae6..1521ca6f7c2bbdec7f589b4e97ab104a3afb58dd
  Chromium Commit Position: https://crrev.com/1287994..1288025
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/15b9756484d5bda98ba273ae13f8db58200db4db..15b9756484d5bda98ba273ae13f8db58200db4db
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/501c4f37bfee47b26999ee291c5355ad64554df7..501c4f37bfee47b26999ee291c5355ad64554df7</content>
    </entry>
    <entry>
        <id>335303036</id>
        <title>90063727</title>
        <author>
            <name>ba...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335303036"/>
        <updated>1970-01-01T00:28:33.305Z</updated>
        <summary>-</summary>
        <content type="html">90063727
</content>
    </entry>
    <entry>
        <id>335001236</id>
        <title>SnapGroupDesksTest.CloseAll failing under sanitizers</title>
        <author>
            <name>es...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335001236"/>
        <updated>1970-01-01T00:28:33.305Z</updated>
        <summary>-</summary>
        <content type="html">This test has been failing since it was added under msan/asan etc.

https://ci.chromium.org/ui/test/chromium/ninja%3A%2F%2Fash%3Aash_unittests%2FSnapGroupDesksTest.CloseAll?q=VHASH%3A654e6fd88442ea44</content>
    </entry>
    <entry>
        <id>335299453</id>
        <title>Android's onProgressChange reports 100% even when the page is not fully responsive</title>
        <author>
            <name>sh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335299453"/>
        <updated>1970-01-01T00:28:33.304Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:
Pixel 8

Android OS version:
Android 15

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")
124.0.6367.42

Application: (package name or Play Store URL)
G1

Application version:
Latest from Play (1.200 and above)

Did this work before? (last working WebView version, or N/A)
N/A

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>335279176</id>
        <title>Vertical range inputs have inconsistent direction across different computers</title>
        <author>
            <name>lu...@lukeblaney.co.uk</name>
        </author>
        <link href="https://issues.chromium.org/issues/335279176"/>
        <updated>1970-01-01T00:28:33.304Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Load Chrome 123.0.6312.124 on a computer
2. Visit MDN's documentation on &lt;input type="range"&gt; and look at the demo for "Creating vertical range controls" https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range#creating_vertical_range_controls
3. Look at which way up the input is rendered in the demo
4. Now repeat on a different computer using the same version of chrome

# Problem Description
Which way up the input is rendered is inconsistent across computers - it literally flips upside down.  And there seems to be no way to control which way it'll render as a web developer or an End User.

I've found some discussions about a flag called `FormControlsVerticalWritingModeDirectionSupport`.  But I'm not seeing that listed in chrome://flags
It seems related to https://issues.chromium.org/issues/40263746 though I wasn't sure whether to comment in there as that seems to cover a wider set of changes.

I understand that occasionally CSS behaviour needs to be adjusted where the spec hadn't been fully defined.  However, it's incredibly difficult to debug when a behaviour can't be reproduced across machines running the same version of chrome.
And to be clear, this isn't a minor cometic tweak.  A vertical range has two basic actions to be made on it: sliding it up and sliding it down.  So making rendering it upside-down fundamentally breaks the user's expectations of the how the input will function.

## Related links
* https://developer.chrome.com/blog/vertical-form-controls
* https://groups.google.com/a/chromium.org/g/blink-dev/c/-QOUpwElepo
* https://issues.chromium.org/issues/40263746
* https://github.com/whatwg/html/issues/8413

# Summary
Vertical range inputs have inconsistent direction across different computers

# Custom Questions
#### Which component does this fall under?
Blink&gt;Forms

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335223786</id>
        <title>There is a non-flag-guarded style rule for [popover][anchor] in html.css</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335223786"/>
        <updated>1970-01-01T00:28:33.304Z</updated>
        <summary>-</summary>
        <content type="html">Here:

https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/html/resources/html.css;l=1501;drc=4deac488e8549ac9aea5647ac37b40649f95a534

That should be flag guarded. As-is, it is web exposed and observable.</content>
    </entry>
    <entry>
        <id>335001235</id>
        <title>migrate tab discarding to use RenderFrame destruction</title>
        <author>
            <name>er...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335001235"/>
        <updated>1970-01-01T00:28:33.304Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335253676</id>
        <title>[css-anchor-position][M125] Scroll offset of the anchor mistakenly contributes to adjustment of anchored element</title>
        <author>
            <name>wa...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335253676"/>
        <updated>1970-01-01T00:28:33.304Z</updated>
        <summary>-</summary>
        <content type="html">The bug has been fixed by https://chromium-review.googlesource.com/c/chromium/src/+/5458902 just after the M125 branch. This bug is for tracking the merge process.</content>
    </entry>
    <entry>
        <id>335297693</id>
        <title>الثانوية التأهيلية الشريف الإدريسي</title>
        <author>
            <name>si...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335297693"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>335297647</id>
        <title>Registration API: How to handle no providers registered</title>
        <author>
            <name>cb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335297647"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">When no providers are registered, we need to figure out exactly how to handle this.

* Do we need to delay the callback?
* Can we let the RP know that there were no registered providers?
* Need to decide which metrics to record</content>
    </entry>
    <entry>
        <id>335223785</id>
        <title>Improve ompositor anchor position adjustment for missing adjustment id references</title>
        <author>
            <name>wa...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335223785"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">We have implemented a fail-safe mechanism which also fixes bug 332331854, but it's not perfect (e.g. position of anchored may lag behind composited scrolling). We can improve it by
- ensuring compositor property nodes for all referenced adjustment containers; or
- considering compositor delta for adjustments with existing nodes.</content>
    </entry>
    <entry>
        <id>335253675</id>
        <title>Investors And Victims Of Cryptocurrency Scams Should Contact iBolt Cyber Hacker For Fast Recovery</title>
        <author>
            <name>ba...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335253675"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">You've fallen victim to a cryptocurrency scam and are seeking fast and reliable recovery solutions, look no further than iBolt Cyber Hacker. As someone who experienced the distress of losing funds to a crypto scam, I can attest to the exceptional services provided by iBolt Cyber Hacker. Throughout the recovery process, iBolt Cyber Hacker maintained clear and transparent communication, keeping me updated on progress and providing guidance along the way. Their dedication to client satisfaction and successful outcomes was evident at every stage of the recovery journey.

Thanks to iBolt Cyber Hacker's swift and expert assistance, I was able to recover a significant portion of my lost funds much sooner than expected. I am incredibly grateful for their services and would highly recommend iBolt Cyber Hacker to any investor or victim of a cryptocurrency scam looking for fast and reliable recovery solutions. iBolt Cyber Hacker professionalism, expertise, and proven track record make them the trusted partner you can rely on to navigate the complexities of crypto scam recovery and reclaim your financial assets.

Contact Info:
Email: ibolt @ cyber-wizard . com
WhatsApp: +(39) (350) (929) (0318)
Website: https: //iboltcyber hack. com/
</content>
    </entry>
    <entry>
        <id>335001233</id>
        <title>MS Clipchamp APP crashes on MojoVideoDecoder::OnResetDone()</title>
        <author>
            <name>fr...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335001233"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">What steps will reproduce the problem?
This happens with Edge or Chrome.
All we know is it happens during a video export in MS Clipchamp app (which uses the WebCodecs VideoDecoder API) - there is a web version of the  MS Clipchamp app .

It seems the issue occurs when one webcodecs frame is opened at the same time that another is closed.
Unfortunately, we haven’t been able to reproduce the issue ourselves - we’ve been reaching out to affected users to get crash dumps. Please see the crashing stack below:

0:015&gt; kc6
 # Call Site
00 msedge!base::ImmediateCrash
01 msedge!logging::CheckFailure
02 msedge!base::OnceCallback&lt;void ()&gt;::Run
03 msedge!media::MojoVideoDecoder::OnResetDone
04 msedge!base::OnceCallback&lt;void ()&gt;::Run
05 msedge!network::mojom::NetworkContext_ClearHostCache_ForwardToCallback::Accept
...
0:015&gt; dx -r1 ((msedge!media::MojoVideoDecoder *)0x30d807828fc0)
...
    [+0x0f4] remote_decoder_bound_ : true [Type: bool]
    [+0x0f5] has_connection_error_ : false [Type: bool]  // NOTE: false here =&gt; Stop() has not been called.
...
    [+0x128] overlay_info_requested_ : false [Type: bool]
    [+0x12c] target_color_space_ [Type: gfx::ColorSpace]
    [+0x170] initialized_     : true [Type: bool]
    [+0x171] needs_bitstream_conversion_ : true [Type: bool]
    [+0x172] can_read_without_stalling_ : true [Type: bool]
    [+0x174] decoder_type_    : kD3D11 (11) [Type: media::VideoDecoderType]
...

From the crash dump, it is impossible for MojoVideoDecoder::reset_cb_ to be invalid given the state above. The only exception is that MojoVideoDecoder::MojoVideoDecoder::Reset() provides an invalid reset_cb parameter. On the other hand, MojoVideoDecoder::MojoVideoDecoder::Stop() has the check for valid reset_cb_ prior to run the callback.</content>
    </entry>
    <entry>
        <id>335245351</id>
        <title>tint_ast_msl_writer_fuzzer: Null-dereference READ in tint::sem::detail::FindFirstParentReturn&amp;lt;tint::sem::BlockStatement&amp;gt;::type const*</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245351"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4888599945740288

Fuzzing Engine: libFuzzer
Fuzz Target: tint_ast_msl_writer_fuzzer
Job Type: libfuzzer_chrome_asan_debug
Platform Id: linux

Crash Type: Null-dereference READ
Crash Address: 0x000000000018
Crash State:
  tint::sem::detail::FindFirstParentReturn&lt;tint::sem::BlockStatement&gt;::type const*
  tint::sem::Statement::Block
  std::__Cr::vector&lt;tint::sem::Variable const*, std::__Cr::allocator&lt;tint::sem::Va
  
Sanitizer: address (ASAN)

Crash Revision: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan_debug&amp;revision=1267100

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4888599945740288

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.

************************* UNREPRODUCIBLE *************************
Note: This crash might not be reproducible with the provided testcase. That said, for the past 14 days, we've been seeing this crash frequently.

It may be possible to reproduce by trying the following options:
- Run testcase multiple times for a longer duration.
- Run fuzzing without testcase argument to hit the same crash signature.

If it still does not reproduce, try a speculative fix based on the crash stacktrace and verify if it works by looking at the crash statistics in the report. We will auto-close the bug if the crash is not seen for 14 days.
******************************************************************</content>
    </entry>
    <entry>
        <id>334988077</id>
        <title>URL bar shows the final URL while the initial URL is dangerous in redirects.</title>
        <author>
            <name>xi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334988077"/>
        <updated>1970-01-01T00:28:33.303Z</updated>
        <summary>-</summary>
        <content type="html">Server-side bug: http://b/333430693

Say a.com redirects to b.com, and a.com is dangerous, the URL displayed in the URL bar should be a.com instead of b.com.

This behavior can be confirmed in the [PostCommitInterstitialServerRedirect_OriginIsUnsafe](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/safe_browsing/safe_browsing_blocking_page_test.cc;l=3677;drc=503773789a3b4754afd75acf1d1a48658082846b;bpv=0;bpt=1) test case. Print the following info between `SetupPostCommitInterstitialAndNavigate` and `ClickAndWaitForDetach`:

```
  LOG(ERROR)
      &lt;&lt; "URL bar visible URL: "
      &lt;&lt; browser()-&gt;tab_strip_model()-&gt;GetActiveWebContents()-&gt;GetVisibleURL();
```
It is expected to print out "safe_browsing/redirect_to_malware.html" but printed out "/safe_browsing/malware.html" instead. 

Although the test setup is under async check, this is likely a pre-existing bug before async check is introduced. The root cause is likely due to the fact that SB check doesn't delay redirect. When dangerous verdict is received, Chrome already navigates to the next URL in the redirect chain.</content>
    </entry>
    <entry>
        <id>335279175</id>
        <title>Improve error message when the callback isn't called</title>
        <author>
            <name>cb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335279175"/>
        <updated>1970-01-01T00:28:33.302Z</updated>
        <summary>-</summary>
        <content type="html">dcheng says we can improve this error message (perhaps specifically in the case when mojo::ReportBadMessage was called but the binding was not reset):
```
[3842923:3842923:0416/143121.247002:FATAL:federated_auth_request.mojom.cc(1295)] Check failed: !connected. FederatedAuthRequest::RequestTokenCallback was destroyed without first either being run or its corresponding binding being closed. It is an error to drop response callbacks which still correspond to an open interface pipe.
```


Filing this bug accordingly.</content>
    </entry>
    <entry>
        <id>335283929</id>
        <title>Long tooltips get truncated, making web comics less funny</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335283929"/>
        <updated>1970-01-01T00:28:33.300Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to xkcd.com or qwantz.com or https://codepen.io/calebegg/pen/RwOYYqq
2. Hover over the comic
3. Note the text is truncated

# Problem Description
Note this was previously reported and addressed in 2014/2015

# Summary
Long tooltips get truncated, making web comics less funny

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335282446</id>
        <title>Use base::Time instead of int/double timestamps for browsing history</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335282446"/>
        <updated>1970-01-01T00:28:33.300Z</updated>
        <summary>-</summary>
        <content type="html">Currently, most front-end and back-end for History uses int/double

See comment: https://source.chromium.org/chromium/chromium/src/+/main:components/history/core/browser/browsing_history_service.h;drc=fc164830b8b956d2c2b4e4a4ec14de667951b4ce;l=97

Examples of code:
https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/webui/history/browsing_history_handler.cc;drc=d31d2d07343b6515b61bb4b7f7c4ce32bd7e38d4;l=462
</content>
    </entry>
    <entry>
        <id>335281443</id>
        <title>Use TabRestoreTypes in LiveTabContext</title>
        <author>
            <name>dl...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335281443"/>
        <updated>1970-01-01T00:28:33.299Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>335003908</id>
        <title>Rss/Feeds code should be explicitly disabled to decrease binary size</title>
        <author>
            <name>ch...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335003908"/>
        <updated>1970-01-01T00:28:33.299Z</updated>
        <summary>-</summary>
        <content type="html">The WebUI feed was recently removed. 

https://chromium-review.googlesource.com/c/chromium/src/+/5328827

Yet we are still pulling in /components/feed/core/v2:feed_core_v2

Removing the follow/unfollow context menu handlers and plumbing as well as the feed::FeedServiceFactory::GetInstance(); call reduces the chrome.dll size by 700k.</content>
    </entry>
    <entry>
        <id>335052791</id>
        <title>I want to sell products online for my business </title>
        <author>
            <name>ai...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335052791"/>
        <updated>1970-01-01T00:28:33.299Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. PayPal 
2. Payment 
3. Credit card debit card 

# Problem Description
NFC FIDELITY GOOGLE WALLET DEPOSIT 

# Additional Comments
AI&lt;ANS&gt;

# Summary
I want to sell products online for my business 

# Additional Data
Category: JavaScript \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335277576</id>
        <title>Background timed out navigation rules are no recoverable</title>
        <author>
            <name>ba...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335277576"/>
        <updated>1970-01-01T00:28:33.299Z</updated>
        <summary>-</summary>
        <content type="html">If a page with speculation rules is backgrounded for 180 seconds or more (defined by kTimeToLiveInBackgroundForSpeculationRules) then the speculations are cancelled.

This seems short, but fair enough.

However, if you are using document rules, it is not possible to recover from this and re-speculate the same URL again, after the document has been foregrounded.

This was probably less of an issue with the more static list rules, but with document rules this seems like an unnecessary restriction.

To replicate:
- Visit https://speculative-rules.glitch.me/common-fruits.html
- Hover over (but do not click on Apple link)
- Note the speculation completes in the Application-&gt;Speculative loads-&gt;Speculations panel
- Background the tab for 181 seconds or more.
- Foreground the tab after the 181 seconds and not the speculation has now failed with eror "The initiating page was backgrounded for a long time, so the prerendered page was discarded."
- Hover over Orange and Kiwi to use up the 2 speculation limit.
- Hover over Apple again. Note that it does not prerender. This link has been permanately marked as off limits until the page is reloaded.

What I expect to happen:
- The Apple link can be re-speculated by document rules (or perhaps by a new rule inserting for list rules)

What I expect to happen:
- The Apple link was not able to be re-speculated by document rules.

</content>
    </entry>
    <entry>
        <id>335210401</id>
        <title>macOS presenter overlay for screensharing doesn't work as expected on Chrome</title>
        <author>
            <name>ja...@8x8.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335210401"/>
        <updated>1970-01-01T00:28:33.299Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Start a camera capture on https://webrtc.github.io/samples/src/content/getusermedia/gum/ 
2. Start a screenshare by selecting a window on https://webrtc.github.io/samples/src/content/getusermedia/getdisplaymedia/ and check if screenshare is in progress.
3. Open the presenter overlay settings from the OS menu bar.
4. Select the large presenter overlay option. One would expect the desktop share in the getDisplayMedia sample to be replaced by a composited video stream with the share appearing between the presenter and their background (provided the camera capture is in progress at the time). Instead, the share starts flickering, the frames from the composited stream appear intermittently and then it switches to showing just the screenshare. This works as expected in Safari 17.3.1 on the same macOS version (14.3.1).
5. The small presenter overlay works as expected for only for few seconds and then it stops.

 

# Problem Description
macOS presenter overlay for screensharing doesn't work as expected on Chrome. 

# Additional Comments
This works as expected on Safari 17.3.1 on the same macOS version. Screen recording for the issue attached.

# Summary
macOS presenter overlay for screensharing doesn't work as expected on Chrome

# Custom Questions
#### Which component does this fall under?
Blink&gt;WebRTC

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
</feed>