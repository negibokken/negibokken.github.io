<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-24T00:45:00.390Z</updated>
    <entry>
        <id>326665110</id>
        <title>Chromium stops prompting for media permissions after repeated denials</title>
        <author>
            <name>va...@doxy.me</name>
        </author>
        <link href="https://issues.chromium.org/issues/326665110"/>
        <updated>2024-02-24T00:45:00.390Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Launch Chromium
2. Trigger permission prompts multiple times, denying access each time until the browser stops asking for permission
3. Attempt to reset permissions
4. Notice that even after attempting to reset permissions, the browser still does not prompt for permission

# Problem Description
After a certain number of denied permission prompts in Chromium, the browser stops asking for permission. Previously, it was possible to reset this behavior; however, currently, even attempting to reset permissions does not resolve the issue. Browser restarting doesn't help as well.

Expected Behavior:
Users should have the ability to reset the permission prompt behavior, allowing the browser to ask for permission again, regardless of the number of previous denials.

Dummy sandbox: https://codesandbox.io/p/sandbox/sparkling-framework-rxn2np

# Summary
Chromium stops prompting for media permissions after repeated denials

# Custom Questions
#### Which component does this fall under?
Blink&gt;Media

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326514297</id>
        <title>n</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326514297"/>
        <updated>2024-02-24T00:38:12.089Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>326623545</id>
        <title>Gozando </title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326623545"/>
        <updated>2024-02-24T00:19:40.146Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 
2. Ggz
3. 

# Problem Description
Idklkk

# Summary
Gozando 

# Custom Questions
#### Does the problem occur on multiple sites?
No - Just that one URL

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326659366</id>
        <title>Tests are failing: legacymetrics_client_unittest.cc(74): Value of: expect_ack_dropped_\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326659366"/>
        <updated>2024-02-23T23:56:30.107Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
legacymetrics_client_unittest.cc(74): Value of: expect_ack_dropped_\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://components:components_unittests/LegacyMetricsClientTest.ReconnectDelayNeverExceedsMax


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c57ad8aebcc0ebfd6272ca9e54371c34

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326606998</id>
        <title>UI text is invisible in non-official builds when default font has variations</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326606998"/>
        <updated>2024-02-23T23:44:58.976Z</updated>
        <summary>-</summary>
        <content type="html">Repro:
* Build chrome with dcheck_always_on=true.  A regular debug or release build will do, but an official build will not.
* Use a font with variations.  For example, Cantarell -- I'm using Cantarell-VF.otf from Arch Linux's cantarell-fonts [1].
* Set Cantarell to be you default font in GTK or QT settings.
* Launch Chrome and see that all text is missing from the UI.

[1] https://archlinux.org/packages/extra/any/cantarell-fonts/</content>
    </entry>
    <entry>
        <id>326658589</id>
        <title>ipc_tests failed on fuchsia-x64 for 124.0.6318.0 official-desktop builders</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326658589"/>
        <updated>2024-02-23T23:39:57.337Z</updated>
        <summary>-</summary>
        <content type="html">Build URl:
https://ci.chromium.org/ui/p/chrome/builders/official/fuchsia-x64/5970/overview

Error-Log URL:
https://logs.chromium.org/logs/chrome/buildbucket/cr-buildbucket/8755287334466674865/+/u/ipc_tests_on_Ubuntu-22.04/stdout


</content>
    </entry>
    <entry>
        <id>326564995</id>
        <title>SavedTabGroupServiceFactory is not registered properly</title>
        <author>
            <name>cl...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326564995"/>
        <updated>2024-02-23T23:27:42.089Z</updated>
        <summary>-</summary>
        <content type="html">Got the following warning when running browser_tests:
[59356:45684:0223/101544.788:WARNING:dependency_manager.cc(64)] Trying to register KeyedService Factory: `SavedTabGroupKeyedService` after the call to the main registration function `ChromeBrowserMainExtraPartsProfiles::EnsureBrowserContextKeyedServiceFactoriesBuilt()`. Please add a call your factory `KeyedServiceFactory::GetInstance()` in the previous method or to the appropriate `EnsureBrowserContextKeyedServiceFactoriesBuilt()` function to properly register your factory.</content>
    </entry>
    <entry>
        <id>326656173</id>
        <title>Rename AutofillDeleteCreditCardConfirmationDialog class</title>
        <author>
            <name>av...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326656173"/>
        <updated>2024-02-23T23:19:37.766Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326505381</id>
        <title>10
</title>
        <author>
            <name>kr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505381"/>
        <updated>2024-02-23T23:13:05.860Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 
2. 88
3. 

# Problem Description
88

# Additional Comments
IJjziz

# Summary
10

# Additional Data
Category: Network / Downloading \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326505380</id>
        <title>11
</title>
        <author>
            <name>kr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505380"/>
        <updated>2024-02-23T23:11:27.735Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1999
2. 
3. 

# Problem Description
5000

# Summary
11

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326623686</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326623686"/>
        <updated>2024-02-23T23:07:15.666Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264455:1264470:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=74db51a0-f3b8-4661-8882-b2a028501a9d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=74db51a0-f3b8-4661-8882-b2a028501a9d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/canvas_lines
        7.95%: 10.8154 -&gt; 11.6751 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/canvas_lines
        7.95%: 10.8154 -&gt; 11.6751 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326513541</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326513541"/>
        <updated>2024-02-23T23:07:08.720Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264469:1264505:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=545c4ffe-703a-4703-9028-8b9d260fa72a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=545c4ffe-703a-4703-9028-8b9d260fa72a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/blink_perf.parser/url-parser/url-parser.html
        3.04%: 56.8589 -&gt; 55.1283 

Top 1 affected measurements in android-pixel6-perf:
  - blink_perf.parser/url-parser/url-parser.html
        3.04%: 56.8589 -&gt; 55.1283 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326654923</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326654923"/>
        <updated>2024-02-23T23:06:02.163Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264460:1264479:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f020d92e-541d-4bbf-9319-d931a639eb54

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f020d92e-541d-4bbf-9319-d931a639eb54

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.parser/url-parser/url-parser.html
        2.42%: 56.66595 -&gt; 55.2971 

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.parser/url-parser/url-parser.html
        2.42%: 56.66595 -&gt; 55.2971 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326649269</id>
        <title>Don't compute texture size befire paint</title>
        <author>
            <name>kh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326649269"/>
        <updated>2024-02-23T23:00:57.040Z</updated>
        <summary>-</summary>
        <content type="html">ViewTransition currently computes the size of the painted content of an element before paint. The primary reason for this is [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/layout/layout_view_transition_content.cc;l=50;drc=540910934956991f97fe6fda287eba974d853be7).

We need to know what the size of the image is so it can be mapped to where the replaced content of the view-transition-old/new pseudos draws.

But the problem is that we're computing this size after pre-paint but before paint. And trying to predict what the paint algorithm will size an element's contents to. This misses cases like [this](https://chromium-review.googlesource.com/c/chromium/src/+/5322398). Even with the linked fix, we're missing the expansion done to mask layers for clips for anti-aliasing [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/graphics/compositing/paint_artifact_compositor.cc;drc=d2b5c17eff35da6ebff8ba20c99688b87e1bc752;l=660).

The ideal thing would be to rely on the size known after paint. But I'm not sure if that's doable or how trick. xianzhu, would we be able to tell the size of the painted layers for an element at this [call-site](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/layout/layout_view_transition_content.cc;l=57;drc=540910934956991f97fe6fda287eba974d853be7).

The other catch is that the element's render surface is clipped by CC if its larger than max texture size. We currently manage that by computing the size after pre-paint and adding a clip node if needed [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/view_transition/view_transition_style_tracker.cc;l=1386;drc=20308e5e9b46054dc027bb4f25d9c49053226300). But paint can take care of this clipping too.</content>
    </entry>
    <entry>
        <id>326649067</id>
        <title>Add localization-help@ as issue admin of component UI &amp;gt; Localization, componentid: 1456895</title>
        <author>
            <name>ma...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326649067"/>
        <updated>2024-02-23T22:24:45.140Z</updated>
        <summary>-</summary>
        <content type="html">
Requested Action: [Modify]

Justification (Why do you need this component):
L10n team needs to update bugs under UI &gt; Localization component 

Component Name:
UI &gt; Localization

Component ID: (only if modifying or archiving)
1456895
https://g-issues.chromium.org/components/1456895

Parent Component: (Please provide full path or component ID)
https://g-issues.chromium.org/components/1457123

Issue Admins: 
Add localization-help@google.com as issue admin
</content>
    </entry>
    <entry>
        <id>326578832</id>
        <title>Experiment with initializing a spare renderer per profile in WebView</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578832"/>
        <updated>2024-02-23T22:18:35.412Z</updated>
        <summary>-</summary>
        <content type="html">Android WebView calls ChildProcessLauncherHelper.warmUp [1] on startup to create a child process. However the renderer initialization doesn't run, which is slow on Android. It takes around 200 ms [2] to launch and initialize a renderer. From local testing with a Pixel 2, Renderer.BrowserLaunchToRunLoopStart is only 10% faster when [1] ran than when it didn't.

I think we should experiment with creating the spare renderer eagerly when a BrowserContext is created so that by the time navigation happens the process is more likely to be ready. There are some tradeoffs:
-the private dirty memory of the renderer increases by about 3.3 MB
-for apps that muse multiple profiles, we might waste work by launching and initializing a renderer that will be thrown out later

[1] https://source.chromium.org/chromium/chromium/src/+/main:android_webview/java/src/org/chromium/android_webview/AwBrowserProcess.java#:~:text=ChildProcessLauncherHelper.warmUp
[2] https://uma.googleplex.com/p/chrome/timeline_v2?sid=f1f9c8ddb1a2c79cf5687407e0da337c</content>
    </entry>
    <entry>
        <id>326646909</id>
        <title>W3CImportExpectations should support allowlisted exceptions</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326646909"/>
        <updated>2024-02-23T22:12:41.234Z</updated>
        <summary>-</summary>
        <content type="html">[This WPT import][0] added `external/wpt/css/CSS2/syntax/character-encoding-041-ref.xht` as a reference for `external/wpt/css/CSS2/cascade-import/cascade-import-001.xht`, but `external/wpt/css/CSS2/syntax` is currently blocklisted by [`W3CImportExpectations`](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/W3CImportExpectations;l=61;drc=8f58baeeff46e31370145374178e71cee85f0342;bpv=0;bpt=0).

Ideally, we would be able to specify exceptions like:

```
external/wpt/css/CSS2/syntax [ Skip ]
# Overrides the line above to import this file
external/wpt/css/CSS2/syntax/character-encoding-041-ref.xht [ Pass ]
```

as we do for regular `TestExpectations`, but it doesn't look like the [test copier](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/tools/blinkpy/w3c/test_copier.py;l=101-107;drc=7eac4395491c98bdc0c57603972db124ac7ed928;bpv=0;bpt=0) respects the longest-name rule. The copier naively stops traversing skipped directories.

[0]: https://chromium-review.googlesource.com/c/chromium/src/+/5321480/2?checksPatchset=2&amp;tab=checks</content>
    </entry>
    <entry>
        <id>326578831</id>
        <title>Layout proto merge to M123</title>
        <author>
            <name>el...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578831"/>
        <updated>2024-02-23T21:35:06.477Z</updated>
        <summary>-</summary>
        <content type="html">Multiple layout changes made this a bit messy so creating this bug to request merge to M123 for the following CLs: 

1. https://chromium-review.googlesource.com/c/chromium/src/+/5262990
2. https://chromium-review.googlesource.com/c/chromium/src/+/5315003 (Bug number is incorrect so was not properly linked to a bug)

Both these CLs missed the branch date by a few days.</content>
    </entry>
    <entry>
        <id>326640224</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testMayLaunchUrlAddsClientDataHeader </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326640224"/>
        <updated>2024-02-23T21:24:25.592Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testMayLaunchUrlAddsClientDataHeader would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testMayLaunchUrlAddsClientDataHeader
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testMayLaunchUrlAddsClientDataHeader
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testMayLaunchUrlAddsClientDataHeader

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>326640187</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.NavigateTest#testNavigateBackWithTabSwitcher_BackPressRefactor </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326640187"/>
        <updated>2024-02-23T21:24:21.861Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.NavigateTest#testNavigateBackWithTabSwitcher_BackPressRefactor is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.NavigateTest%23testNavigateBackWithTabSwitcher_BackPressRefactor
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.NavigateTest%23testNavigateBackWithTabSwitcher_BackPressRefactor
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.NavigateTest%23testNavigateBackWithTabSwitcher_BackPressRefactor

</content>
    </entry>
    <entry>
        <id>326503102</id>
        <title>setTransform and resetTransform are broken inside layers</title>
        <author>
            <name>jp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503102"/>
        <updated>2024-02-23T21:07:50.270Z</updated>
        <summary>-</summary>
        <content type="html">The canvas 2d layer implementation has recently been updated to use a side recording to store the layer content until it's closed. This is required to be able to present the canvas while a layer is opened. With a side recording, we can flush everything that was drawn up until the first `beginLayer` and keep the layer content to be flushed when the layer is finally closed.

This change however broke the `setTransform` and `resetTransform` APIs. That's because the side recording is inserted into the main recording using a `DrawRecordOp`, which gives the drawn recording it's own matrix transform root. That is, if the drawn recording contains a SetMatrixOp, that metrix will be applied over the transform the canvas had when `DrawRecordOp` was called. This is not how `setTranform` is expected to work, as it should modify the global canvas matrix.

One way to fix this is to add a `local_ctm` parameter in `DrawRecordOp`, specifying whether the drawn recording should have a local matrix stack or whether it should act on the parent recording stack.</content>
    </entry>
    <entry>
        <id>326509145</id>
        <title>Google Version API frequently missing releases</title>
        <author>
            <name>aa...@heyaaron.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509145"/>
        <updated>2024-02-23T20:54:28.555Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://versionhistory.googleapis.com/v1/chrome/platforms/win64/channels/stable/versions
2. Note the current latest version shown is 122.0.6261.69
3. Go download the Chrome installer from the website and install it
4. Note the version installed is 122.0.6261.70
5. Note that version 122.0.6261.70 is NOT listed in https://versionhistory.googleapis.com/v1/chrome/platforms/win64/channels/stable/versions

# Problem Description
I apologize if this isn't the correct place to report this problem, but I've been digging all over Google and talking to various support reps to no avail.

One of my tasks is to ensure software updates and compliance on corporate systems and to generate reports about non-compliance.
A while back, we attempted to automate some of this by grabbing the latest version from the Version History API and then comparing the installed version on every machine.
Often the version reported by the API is correct, and if a machine is running an older version of Chrome, firing off the Chrome installer will bring it into compliance.  But from time to time, it appears a version of Chrome is released that doesn't get added to the History API, and when we find a machine that is out of compliance and fire off the installer, a newer version of Chrome gets installed that isn't in the History API.

The tools we are using to audit and ensure compliance ask "what version of Chrome should be on a machine?" and then attempt to ensure that version is installed by firing off the Chrome Installer....and then it checks to say "does the version match what's in the History API"?  And frequently the answer in "no" because a newer version was installed.

Normally I would attribute it to something like a caching delay, but I have noticed several times in the past some version numbers will *never* get published to the API.

Why isn't 122.0.6261.70 (for example) not listed in the API and is there a way I can actually find out the latest version without parsing through the human-readable Chrome Blog?

# Summary
Google Version API frequently missing releases

# Custom Questions
#### Please select a label to classify your issue:
Type-Feature - Request for new or improved features

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326509144</id>
        <title>Chrome Beta Slow Opening bookmarked sites from dropdown tab</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509144"/>
        <updated>2024-02-23T20:51:00.464Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Click hidden bookmarks button
2. Click a bookmark
3. Problem

# Problem Description
When I click any bookmark after using hidden bookmarks dropdown, chrome is slow and it seems like it wont load but then the site finally loads after a minute or 2. This doesn't happen clicking any other bookmark on the bar only on the drop down. This does not happen in regular chrome only beta. Yes I have extensions running but nothing new

# Summary
Chrome Beta Slow Opening bookmarked sites from dropdown tab

# Custom Questions
#### Example URL: 
N/A

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326503101</id>
        <title>[Chromium GSoC] Request for Feedback (analysis-tool)</title>
        <author>
            <name>pa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503101"/>
        <updated>2024-02-23T20:49:56.698Z</updated>
        <summary>-</summary>
        <content type="html">Hello, I really like the idea behind this project!
I started studying about Chrome Extensions as a first approach, but I would like to ask a few questions to better understand the context and how this tool should look like, for example:
- should it run as an extension? (not sure, but I don't think it's technically possible)
- should it be part of DevTools?
- should it be an external tool (like a CLI)?

This will help me to start thinking about and writing my proposal, thanks in advance!</content>
    </entry>
    <entry>
        <id>326635785</id>
        <title>Certain characters cause omnibox to exit site search</title>
        <author>
            <name>cs...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326635785"/>
        <updated>2024-02-23T20:46:50.878Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Have a site-search shortcut set up (for me, "cs" to "https://cs.corp.google.com/#search/&amp;q=%s&amp;ct=os&amp;sq=USE_DEFAULT_STORED_QUERY")
2. In the omnibox, type "cs" followed by "space" to engage site-search
3. Type the character "e", "g", "l", "m", or "o".

I can reproduce repeatedly right now with the above strings, but not for my other site searches.
It appears to only be the lead search character that matters.  "cs fg" does not exhibit any issue.

# Problem Description
After step 3, Chrome has visibly left site search mode and shifted to thinking I just typed that single character.
1) backspacing does not restore "cs" or go back to a site-search mode
2) hitting Enter, or continuing to type then hitting Enter, resolves as if I had never typed the initial "cs ".  "cs example.com" brings up example.com, "cs excellent" performs a Google search for "excellent".

Expected behavior: UI both stays in site search mode and executes the search against my expected shortcut.

# Summary
Certain characters cause omnibox to exit site search

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326498391</id>
        <title>DIY webapk install dialog has duplicated name</title>
        <author>
            <name>ei...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498391"/>
        <updated>2024-02-23T20:20:54.755Z</updated>
        <summary>-</summary>
        <content type="html">see https://screenshot.googleplex.com/8cStWa7TCi7VhMC</content>
    </entry>
    <entry>
        <id>326526725</id>
        <title>referrerPolicy property does not reflect all valid values</title>
        <author>
            <name>mc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326526725"/>
        <updated>2024-02-23T20:17:57.098Z</updated>
        <summary>-</summary>
        <content type="html">Consider the following:
```
var a = document.createElement('a');
a.referrerPolicy = 'origin';
console.assert(a.referrerPolicy == 'origin');
a.referrerPolicy = 'strict-origin';
console.assert(a.referrerPolicy == 'strict-origin');
```
In Chrome 122, the second assert fails. In Firefox 115, both asserts pass.

It looks like the IDL definition doesn't list all valid values:
https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/html/html_anchor_element.idl;drc=79f17bef6b4a52b19999b62254d8dfb30ae22883;l=34

Likewise for other cases like HTMLIFrameElement's referrerPolicy property.</content>
    </entry>
    <entry>
        <id>326629253</id>
        <title>Confusing icons/labels if Chrome is default .pdf handler on Windows 11</title>
        <author>
            <name>ba...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326629253"/>
        <updated>2024-02-23T20:00:58.668Z</updated>
        <summary>-</summary>
        <content type="html">If you configure Chrome as the default handler for PDF files on Windows 11
- All icons of PDF files are Chrome icons
- The files are described to the user as "Chrome HTML Documents"

Both of these are confusing to users.

Would it be possible to 
- display an icon that suggests that a file is a PDF file
- not call the files not a "Chrome HTML Document" but "PDF Document"?</content>
    </entry>
    <entry>
        <id>326554286</id>
        <title>Debugger.getScriptSource freezes with large scripts</title>
        <author>
            <name>co...@peet.io</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554286"/>
        <updated>2024-02-23T19:50:29.630Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Enter this code in your REPL `new Function('\n'.repeat(1024 * 1024 * 10) + 'return 1\n' + '//# sourceURL=big.js'); debugger;`
2. Open big.js from the Sources view, if it is not opened for you
3. Notice it takes an inordinately long time to respond with the script content

# Problem Description
I got an issue in VS Code (https://github.com/microsoft/vscode-js-debug/issues/1948) about freezing when we retrieve a script's source, which is required in order to compute source map renames. I was surprised to see such slow responses on relatively small files, in this case the user's file was only 1.3MB, which should be fast enough to serialize and send over the wire.

# Summary
Debugger.getScriptSource freezes with large scripts

# Additional Data
Category: Developer Tools \
Chrome Channel: Dev \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326505378</id>
        <title>Interest group bid latency reporting is inconsistent.</title>
        <author>
            <name>mm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505378"/>
        <updated>2024-02-23T19:38:15.532Z</updated>
        <summary>-</summary>
        <content type="html">When Private Audience buyer worklets generate a bit, we may run the generateBid() script twice, while enforcing k-anonymity.  When we run the script twice, we report the runtime only a single execution of the script took to scoreAd(), but we report the runtime of both script executions to aggregate reporting.  This seems likely to result in confusion of consumers.  I think it's better to be consistent (I'd say always report the time for either the single execution that generated the bid, or the longer run of the two, to avoid increasing reported times for groups with ads that aren't yet k-anonymous, but we could report their sum instead).</content>
    </entry>
    <entry>
        <id>326584510</id>
        <title>reclient ignores `inputs` on C targets in GN</title>
        <author>
            <name>da...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326584510"/>
        <updated>2024-02-23T19:32:48.599Z</updated>
        <summary>-</summary>
        <content type="html">1. Put a .txt file in `inputs` in an executable target.
2. Try to open that .txt file from a clang plugin

Expected:
The file was uploaded to the RBE backend since it's in inputs

Actual:
The file is not there. Compilation falls back to local.

Since the file is in `inputs` it's in the ninja build graph, and to verify that, editing the file does cause re-compilation of the executable.

```
$ gn desc out_desktop/Release base:base_unittests
Target //base:base_unittests
type: executable
toolchain: //build/toolchain/linux:clang_x64

visibility
  *

metadata
  {

  }

testonly
  true

check_includes
  true

allow_circular_includes_from

sources
  //base/allocator/dispatcher/dispatcher_unittest.cc
  //base/allocator/dispatcher/initializer_unittest.cc
  ...

public
  [All headers listed in the sources are public.]

inputs
  //build/config/unsafe_buffers_paths.txt

...
```
</content>
    </entry>
    <entry>
        <id>326624914</id>
        <title>Detect legacy best revision failure</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326624914"/>
        <updated>2024-02-23T19:29:54.917Z</updated>
        <summary>-</summary>
        <content type="html">See https://ci.chromium.org/ui/p/chrome/builders/official.infra/chrome-best-revision-continuous/5534/overview

The Legacy best revision has been failing for days but we did not receive any alerts on it.
This could be problematic for canary release. For example if rel-ready also fails during weekend and no gardeners can fix the test, chrome-branch will fail. See o/248763096.</content>
    </entry>
    <entry>
        <id>326509143</id>
        <title>My website keeps saying "did you mean dum-f.uk?"</title>
        <author>
            <name>ne...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509143"/>
        <updated>2024-02-23T19:17:59.876Z</updated>
        <summary>-</summary>
        <content type="html">I have a website called "dumb-f.uk" and someone else has "dum-f.uk" and my website keeps directing people to "dum-f.uk".</content>
    </entry>
    <entry>
        <id>326606995</id>
        <title>ChromeLite for Home Automation 10.x.x.x 192.16.x.x HTTP browser</title>
        <author>
            <name>de...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326606995"/>
        <updated>2024-02-23T19:17:38.198Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. https://support.stackpath.com/hc/en-us/articles/360040963152-Chrome-Ending-Support-for-HTTP-requests
2. Chrome blocks access to home automation IoT device that only support HTTP (not HTTPS) requests
3. 

# Problem Description
Most microcontroller devices used in Home Automation and IoT do not have the processing capacity to deal with encrypted (certificate managed) traffic on their web servers.  One of the most common interfaces is to provide a web server on the device and browse to it to get status of make changes. So you browse to turn on a light in your garage. These are usually on local networks (10.x.x.x, 192.168.x.x, 172.16.x.x). These are now being blocked by Chrome. Please write a ChromeLite for local networks that is happy with HTTP traffic. Something like dillo.org but with a Chrome familiar interface and settings. Maybe javascript and HTML5 but "less is better" because you'll not get paid with ads or data mining.

# Summary
ChromeLite for Home Automation 10.x.x.x 192.16.x.x HTTP browser

# Additional Data
Category: Network / Downloading \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326621184</id>
        <title>fast/spatial-navigation/snav-container-only-white-space.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326621184"/>
        <updated>2024-02-23T19:12:19.477Z</updated>
        <summary>-</summary>
        <content type="html">fast/spatial-navigation/snav-container-only-white-space.html

Harness Failure on Mac11 tests builder

Test History Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Ffast%2Fspatial-navigation%2Fsnav-container-only-white-space.html?q=VHASH%3A7a1132327b93d186

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Ffast%2Fspatial-navigation%2Fsnav-container-only-white-space.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 6.47% flaky rate in runs mostly on Mac builders</content>
    </entry>
    <entry>
        <id>326503098</id>
        <title>Fix use of HeapPointersOnStacksScope for blink unittests</title>
        <author>
            <name>ni...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503098"/>
        <updated>2024-02-23T19:03:15.537Z</updated>
        <summary>-</summary>
        <content type="html">I'm opening this to discuss and possibly resolve the following issue.
It is related to b/40221845.

The current mechanism for running the blink unittest suite first installs a `HeapPointersOnStacksScope` [1] and then attaches a series of isolates [2], one per test. There's also another similar scope installed here [3].

Installing the `HeapPointersOnStacksScope` once per test, after the isolate has been attached, would probably give us a better design for the blink tests and would also simplify the implementation on the V8 side.

I have made a [first attempt](https://crrev.com/c/5318128) towards a fix. It works locally if we temporarily lift the requirement that `HeapPointersOnStacksScope` objects be stack allocated. I'm not sure how to best work around this.

[1]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/testing/testing_platform_support.cc;drc=3d5440235c126908af20960a528f90458df91ac8;l=246
[2]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/testing/task_environment.cc;drc=82551be317167b59bfe7360eb894d76262ad9e68;l=36
[3]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/controller/tests/thread_state_test_environment.h;drc=d2b5c17eff35da6ebff8ba20c99688b87e1bc752;l=36</content>
    </entry>
    <entry>
        <id>326554282</id>
        <title>Require all code review comments are resolved before submission for Chromium</title>
        <author>
            <name>es...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554282"/>
        <updated>2024-02-23T19:01:58.612Z</updated>
        <summary>-</summary>
        <content type="html">Android switched to disallowing submitting CLs with unresolved comments without issue. We've discussed adding a warning for Chrome because the UX might not be great with CQ, but that comes with maintenance (crbug.com/40258942). If the experience isn't bad, we should consider using the same gerrit-level enforcement.

Here are the `project.config` changes Android made:
```
[submit-requirement "No-Unresolved-Comments"]
  description = Changes that have unresolved comments are not submittable. Unless overridden with "Unresolved-Comment-Reason: &lt;reason&gt;" line in change message.
  overrideIf = message:\"^.*Unresolved-Comment-Reason:.*\"
  applicableIf = has:unresolved
  submittableIf = -has:unresolved
```

Let me start by turning it on for an infra repo first, perhaps `chromium/tools/build`.</content>
    </entry>
    <entry>
        <id>326564991</id>
        <title>No me deja instalar la última versión </title>
        <author>
            <name>aj...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326564991"/>
        <updated>2024-02-23T18:54:54.393Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. No funciona una apps
2. 
3. 

# Problem Description
No funciona bien 

# Summary
No me deja instalar la última versión 

# Additional Data
Category: Network / Downloading \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326554281</id>
        <title>Devtools extension subpanels not discoverable - need a way for extensions to open them</title>
        <author>
            <name>th...@us.ibm.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554281"/>
        <updated>2024-02-23T18:53:07.283Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. For context, see the IBM Equal Access Accessibility Checker (https://chromewebstore.google.com/detail/ibm-equal-access-accessib/lkcagbfjnkomcinoddgooolagloogehp?pli=1)
2. Open the Elements main panel
3. For most users, the extension subpanels are hidden inside the overflow menu

# Problem Description
This has been a significant issue for our users and we have been unable to work around. 

Users are accustomed to looking for extensions as major panels, but they do not think to look for subpanels added to the Elements panel. Our users have no trouble finding our main panel, but rarely discover our Elements subpanel since default sizes and layouts hide the extension subpanels inside an overflow menu. They never find our subpanel unless we manage to have a one-on-one conversation and physically show them. Attempts to educate users through the extension popup and through overlays on the main panel have been unsuccessful since users ignore these types of instructions - they have been trained to ignore them by other extensions that show unnecessary welcome messages.

At one time, when we were a Firebug extension, we were able to open and focus our subpanel programmatically, helping users to find that subpanel. Chrome has never allowed this behavior. From our main panel, we are able to force open the Elements main panel by a call to inspect the element, but we do not have a mechanism to also open up our sidepanel to keep the users in context. Once they know it's there, they have the ability to re-order the tabs themselves, but we haven't been successful in helping them even know to look for it.

I can understand certain limits on forcing open an extension panel. However, if a user is clicking on one extension panel, it seems reasonable to be able to take the user to another panel owned by the same extension.

# Summary
Devtools extension subpanels not discoverable - need a way for extensions to open them

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326618992</id>
        <title>App Menu IPH</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326618992"/>
        <updated>2024-02-23T18:53:05.549Z</updated>
        <summary>-</summary>
        <content type="html">Copy of an internal bug for use with branch merges.</content>
    </entry>
    <entry>
        <id>326619067</id>
        <title>external/wpt/css/css-scroll-snap-2/snapchanging/snapchanging-on-user-root-scroll.tentative.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326619067"/>
        <updated>2024-02-23T18:53:02.092Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/css/css-scroll-snap-2/snapchanging/snapchanging-on-user-root-scroll.tentative.html

Timeout Failure on mac13-arm64-rel-tests builder

Test History Link:
mac13-arm64-rel-tests:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fcss%2Fcss-scroll-snap-2%2Fsnapchanging%2Fsnapchanging-on-user-root-scroll.tentative.html?q=VHASH%3Ad66f84fc0745c58a

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fcss%2Fcss-scroll-snap-2%2Fsnapchanging%2Fsnapchanging-on-user-root-scroll.tentative.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 9.69% flaky rate in runs mostly on Mac builders</content>
    </entry>
    <entry>
        <id>326619066</id>
        <title>Arrow mark is overlapping with Blocking Category</title>
        <author>
            <name>js...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326619066"/>
        <updated>2024-02-23T18:53:00.181Z</updated>
        <summary>-</summary>
        <content type="html">124.0.6317.0 (Official Build) (64-bit) (cohort: M122 Rollout)
fb9d4487c533dc45ed93977168e10db75dc717e8-refs/branch-heads/6317@{#1}

OS : Win(10,11)

Preconditions:
None

Steps to reproduce:

1.Launch Chrome and Open NTP
2.Inspect it
3.Go to Event Listeners tab
4.Click On "All"
5. Select "Blocking"
6.Observe that, Arrow mark is overlapping with Blocking category


Actual Result:Arrow mark is overlapping with Blocking Category
Expected Result: The arrow mark should not overlap with Blocking Category

This is a regression issue broken in M124, and please find the per-revision bisect info below:

Good Build:124.0.6316.0
Bad Build:124.0.6317.0

Change Log: 
https://chromium.googlesource.com/chromium/src.git/+log/be8cd7c4b1c3093d0722a45c198c3e6872b217b7..64a22dee8d3180a73913a234898779f5d96755bd?n=1000&amp;pretty=fuller


We are unable to find the culprit from the above Change log, please help us in assigning it to the right owner.

Please find attached screenshots below:


Notes:
1)This issue unable to repro on Stable #122.0.6261.72, Beta #122.0.6261.6,Dev RC#123.0.6272.2



Thanks..!!</content>
    </entry>
    <entry>
        <id>326509142</id>
        <title>Clicks and keyboard interactions randomly stop working on a page</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509142"/>
        <updated>2024-02-23T18:48:30.725Z</updated>
        <summary>-</summary>
        <content type="html">I don't have a reliable repro for this behavior, but I've been observing it for around 2 weeks now. I run the Dev channel, on a Mac M1. So that's currently 123.0.6300.3.

I see it quite often on chromium code search (https://source.chromium.org/search?q=foobar&amp;sq=&amp;ss=chromium%2Fchromium%2Fsrc), but that's likely just because I spend a lot of time there. I believe I've seen it elsewhere also.

The behavior is:

1. Navigate to a new page
2. Immediately after the load, or at least very shortly thereafter, I am unable to interact with the page. It is rendered correctly, and seems to update correctly if resized for example. But no clicks are registered, the keyboard (e.g. Tab key) does not do anything, and the page appears frozen.
3. It is possible (I haven't verified) that after a very long delay (&gt;1 minute) it registers clicks again.
4. Reloading the "broken" page does *not* seem to fix it.
5. Copy/pasting the URL to a fresh tab usually gives a fully working page.

I wish I had a better repro for you. But it definitely seems bad, so I wanted to report it asap. If I get a better repro or if it happens on another site, I'll update this bug.</content>
    </entry>
    <entry>
        <id>326517412</id>
        <title>webnn_graph_mojolpm_fuzzer: CHECK failure: input_iterator != id_to_layer_input_info_map_.end() in graph_builder.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326517412"/>
        <updated>2024-02-23T18:46:28.853Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5459047026720768

Fuzzing Engine: libFuzzer
Fuzz Target: webnn_graph_mojolpm_fuzzer
Job Type: windows_libfuzzer_chrome_asan
Platform Id: windows

Crash Type: CHECK failure
Crash Address: 
Crash State:
  input_iterator != id_to_layer_input_info_map_.end() in graph_builder.cc
  logging::CheckLogMessage::~CheckLogMessage
  webnn::coreml::GraphBuilder::GetOperandInfo
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=windows_libfuzzer_chrome_asan&amp;range=1258912:1258913

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5459047026720768

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>326617506</id>
        <title>"Missing IPA files for early stable and Beta iOS " test case coverage needed in Earl Grey or unittests for issue 325215897</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326617506"/>
        <updated>2024-02-23T18:42:47.883Z</updated>
        <summary>-</summary>
        <content type="html">morawand@, do we have automation coverage for this bug to prevent future regressions?

Requesting you to provide the automation status / tests links.</content>
    </entry>
    <entry>
        <id>326615836</id>
        <title>Missing "settings" text in https://www.google.com/chrome/whats-new/m123/</title>
        <author>
            <name>xu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326615836"/>
        <updated>2024-02-23T18:30:36.076Z</updated>
        <summary>-</summary>
        <content type="html">Currently step 1 of each module says "In , turn on", we are missing the "settings" text (not link) after "In".

https://www.google.com/chrome/whats-new/m123/</content>
    </entry>
    <entry>
        <id>326509140</id>
        <title>Restore bot name on build pages</title>
        <author>
            <name>bp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509140"/>
        <updated>2024-02-23T18:19:26.890Z</updated>
        <summary>-</summary>
        <content type="html">eg: https://screenshot.googleplex.com/4nNQ2tyMNr3s3p7  
That build on dev lacks the name of the bot that ran the build.  

But on prod, the name is displayed on the build page:  
https://screenshot.googleplex.com/3JMLgBVWp8FArUV

The name is being removed due to some buildbucket migration. And consequently it would take an extra click + an extra tab to view the bot name by clicking into the task link.

However, troopers and folks on chrome-infra pretty often need to determine the bot name that ran a set of builds. eg: It was checked in a number of builds across https://issues.chromium.org/issues/326288628#comment9. It was also checked multiple times in several sets of builds in https://crbug.com/41490921. And there are many more instances where this is done.

Adding an extra click &amp; tab into that flow would make that process more difficult. So please restore the bot name.</content>
    </entry>
    <entry>
        <id>326610082</id>
        <title>Add structured return object to Serialize and deserialize methods for net::CookiePartitionKey</title>
        <author>
            <name>se...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326610082"/>
        <updated>2024-02-23T18:18:46.332Z</updated>
        <summary>-</summary>
        <content type="html">Change net::CookiePartitionKey::Serialize (and deserialize) to have a structured return object from the current implementation that just returns a string.</content>
    </entry>
    <entry>
        <id>326578828</id>
        <title>Restore buildername + buildnumber to task names</title>
        <author>
            <name>bp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578828"/>
        <updated>2024-02-23T18:11:02.343Z</updated>
        <summary>-</summary>
        <content type="html">eg: https://screenshot.googleplex.com/8MVcYVzP2Az5bfq   
That's a bot on chromium-swarm that runs builds. You can see in its task history the names of the builders it ran builds for, and their buildnumbers.

But on dev, the task names are much less helpful: https://screenshot.googleplex.com/3ZFrhmZAbnwpRcn  
If this is something that's going to get rolled to prod, please restore buildername + buildnumber to the task names. It's helpful when viewing a bot that runs builds for multiple builders to see what builds it's recently picked up.
</content>
    </entry>
    <entry>
        <id>326611791</id>
        <title>dPWA Universal Install</title>
        <author>
            <name>dm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326611791"/>
        <updated>2024-02-23T18:03:03.329Z</updated>
        <summary>-</summary>
        <content type="html">Tracking bug for universal install feature.</content>
    </entry>
</feed>