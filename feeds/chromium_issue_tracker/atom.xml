<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-27T04:10:28.502Z</updated>
    <entry>
        <id>327026816</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026816"/>
        <updated>2024-02-27T04:10:28.502Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1265239:1265262:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=128e6104-49d4-4a95-88c7-7950b0faba17

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=128e6104-49d4-4a95-88c7-7950b0faba17

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/simple_text_page
        2.30%: 12840.283 -&gt; 13135.686 

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/EventLatency.GestureScrollUpdate.Touchscreen.TotalLatency/simple_text_page
        2.30%: 12840.283 -&gt; 13135.686 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326987150</id>
        <title>[FedCM] Figure out what to do if developers enable both multi-idp and button mode OT</title>
        <author>
            <name>yi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326987150"/>
        <updated>2024-02-27T03:53:28.998Z</updated>
        <summary>-</summary>
        <content type="html">It's possible that the two OT tokens are embedded on the same website. We should degrade gracefully in this case before the code is ready. Perhaps show some error UI similar to crbug.com/326275666?</content>
    </entry>
    <entry>
        <id>327026294</id>
        <title>[Windows] Unexpected 3D operations in DWM for video overlay with CSS translate transforms</title>
        <author>
            <name>ji...@intel.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026294"/>
        <updated>2024-02-27T03:08:24.196Z</updated>
        <summary>-</summary>
        <content type="html">This CL (https://chromium-review.googlesource.com/c/chromium/src/+/4916596) is introducing possible 3D activity in windows desktop window manager(dwm.exe) when playback video with overlay enabled.

Step to reproduce:
0. Make sure you test on a Windows platform with hardware supports overlay.(For example, Intel devices).
1. With any Chrome at M120 or later,  navigate to https://taste1981.github.io/workspace/overlay/video_css_bug.html. Make sure your display resolution is at least 1080p. Chrome windows is maximized. Make sure the cursor is out of the video window.
2. On Windows, update your display settings. For example, change the scale from 100% to 125%, and/or optionally update the resolution.
3. While the video is visible, open Windows task manager, switch to performance-&gt;GPU tab, and watch the 3D utility.

Expected result:
1. No or minimal 3D activity observed during the video playback.
2. Video should be overlayed.

Actual result:
1. Obvious 3D activity is observed when you change the scale/resolution. There might be a configuration that you don't see the 3D activity.
2. If you start Chrome with --show-dc-layer-debug-borders,  you'll see the video is overlayed.

Is this a regression:
Yes. Looks like to be a regression since M120 with above mentioned CL.</content>
    </entry>
    <entry>
        <id>326980495</id>
        <title>يرجى إصلاح Javascript  اريد بناء موقع على الويب </title>
        <author>
            <name>oa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980495"/>
        <updated>2024-02-27T03:02:24.092Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 
2. يرجى تفعيل Javascript على google chrome 
3. اريد الحصول على واجهة التطبيقات API وترجمه لا تعمل يرجى تفعيل Javascript 

# Problem Description
اريد تفعيل الترجمه Javascript 

# Summary
يرجى إصلاح Javascript  اريد بناء موقع على الويب 

# Additional Data
Category: JavaScript \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327022930</id>
        <title>Someone in charge of my phone has stolen my money. Please. Get me out of this operating system. I don't know how she jumped on my phone. </title>
        <author>
            <name>wa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327022930"/>
        <updated>2024-02-27T02:54:03.552Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: &lt;From about:version: Google Chrome x.x.x.x&gt;
Chrome OS Version: &lt;From about:version: Platform x.x.x.x&gt;
Chrome OS Platform: &lt;Make/model of computer running Chrome OS&gt;
Lacros Version (if applicable): &lt;From about:version: Google Chrome x.x.x.x&gt;
Network info: &lt;network, encryption type, router model (if known)&gt;

Please specify Cr-* of the system to which this bug/feature applies (add the label below).

Steps To Reproduce:
(1)
(2)
(3)

Expected Result:

Actual Result:

How frequently does this problem reproduce? (Always, sometimes, hard to reproduce?)

What is the impact to the user, and is there a workaround? If so, what is it?

Please provide any additional information below. Attach a screen shot or log if possible.

For graphics-related bugs, please copy/paste the contents of the about:gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>327027598</id>
        <title>`background-attachment: fixed` renders incorrectly with `transform: translateX(0%);`</title>
        <author>
            <name>in...@signal.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027598"/>
        <updated>2024-02-27T02:23:39.184Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Following code reproduces the problem (try commenting out transform property in css):

&lt;html&gt;
  &lt;head&gt;
    &lt;style&gt;
      .message {
        background-image: linear-gradient(192deg, rgb(246, 85, 96), rgb(68, 44, 237));
        background-attachment: fixed;
      }

      body {
        transform: translateX(0%);
      }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class="message"&gt;Hidden&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;

# Problem Description
If there is no `translateX` transformation - background is correctly rendered depending on the viewport size. If there is a `translateX` - background is rendered as if the viewport bounds are the same as the element's bounds.

# Summary
`background-attachment: fixed` renders incorrectly with `transform: translateX(0%);`

# Custom Questions
#### Which component does this fall under?
Blink&gt;CSS

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
Reproducible in Firefox

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>327056386</id>
        <title>Tests are failing: ui_test_utils.cc(112): Check failed: !base::Contains(excluded_browsers, new_browser).</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327056386"/>
        <updated>2024-02-27T02:11:13.410Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
ui_test_utils.cc(112): Check failed: !base::Contains(excluded_browsers, new_browser).

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/ProjectorNavigationThrottleTestParameterized.PwaNavigationRedirects/2
- ninja://chrome/test:browser_tests/ProjectorNavigationThrottleTestParameterized.PwaNavigationRedirects/1
- ninja://chrome/test:browser_tests/ProjectorNavigationThrottleTestParameterized.PwaNavigationRedirects/0
- ninja://chrome/test:browser_tests/ProjectorNavigationThrottleTest.AppNavigationRedirectNoBlankTab


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5c195f9fa4c1f5e68b426755cb9ae1a5

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327026293</id>
        <title>Add support for ChromeOS to tflite::GraphImpl</title>
        <author>
            <name>re...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026293"/>
        <updated>2024-02-27T01:48:36.040Z</updated>
        <summary>-</summary>
        <content type="html">`webnn::tflite::GraphImpl` by default uses the copy of TFLite built into Chrome however it could also pass the TFLite flatbuffer model to the ChromeOS ML Service the same way that `blink::MLGraphModelLoader` does. This would eventually allow us to remove the latter class and use the WebNN service on all platforms instead of having a different path on ChromeOS.</content>
    </entry>
    <entry>
        <id>327037815</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327037815"/>
        <updated>2024-02-27T01:35:56.439Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1265255:1265270:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=aea91619-4779-4f49-ad14-bf735f52e1b1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=aea91619-4779-4f49-ad14-bf735f52e1b1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/v8.browsing_mobile/API:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
       14.70%: 28.369500000000002 -&gt; 32.5385 ms

Top 1 affected measurements in android-pixel4_webview-perf:
  - v8.browsing_mobile/API:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
       14.70%: 28.369500000000002 -&gt; 32.5385 ms

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: cbruni@chromium.org, leszeks@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/9e889076d43ce676be0894c406fdb248bb4297d8..9dd367db8634e3c67b818c442c7047652ca9c6a1
  Chromium Commit Position: https://crrev.com/1265254..1265270
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/0bfbdc9e81f8c4f99183cb4cb90adaa3c6867882..9cf20be0f12a3e5785b28205809e233741435bac
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/14613639bfdd2021d531aa13fb9c72ff56f4b786..14613639bfdd2021d531aa13fb9c72ff56f4b786</content>
    </entry>
    <entry>
        <id>327027124</id>
        <title>NetErrorDetails is potential to record more information in network stack</title>
        <author>
            <name>my...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327027124"/>
        <updated>2024-02-27T01:34:31.446Z</updated>
        <summary>-</summary>
        <content type="html">1、NetErrorDetails is potential to record more information
Though NetErrorDetails is created to record QUIC broken status for DomainReliability and Beacon, I think it has the potential to record more error details or important details information in the whole network stack.
The reason is that NetErrorDetails is a good existing structure, which has a fairly complete callback chain throughout the different layers in network stack. And there are more callback paths can be added.
NetErrorDetails can be extended into a more powerful structure to record information in different layer, such as HTTPTransaction layer, HttpStream layer, SocketPool layer, ConnectJob layer, and so on.
These information can include not only error information, but also important information that can help us analyze network activities, or help us do some data reporting.

This CL adds some cache usage information in HTTPTransaction to NetErrorDetails.
HTTPTransaction includes HTTPCache::Transaction and HTTPNetworkTransaction. When HTTPTransaction starts, it begins from HTTPCache::Transaction.
If the HttpCache::Transaction finds cache entry for the request, it reads the cache in its complex state machine.
If the HttpCache::Transaction sees there's no cache entry for the request, it creates an HttpNetworkTransaction and send request.
The added cache usage information is exactly related to the above , such as cache write, cache read, cache validation and so on.
The added information about HttpCache::Transaction is in Struct HTTPCacheTransactionDetails.
Besides, This CL adds a little request information in HTTPNetworkTransaction, such as whether to start a request, the result of initing stream, whether it is a prefetch. The added information about HTTPNetworkTransaction is in Struct HTTPNetworkTransactionDetails.

Both HTTPCacheTransactionDetails and HTTPNetworkTransactionDetails can be extended in the future.

2、NetErrorDetails can be transferred and merged
Upward callback is implemented by PopulateNetErrorDetails, which is called either from HTTPCache::Transaction or HTTPNetworkTransaction. So the added information needs to be transformed between them. This is achieved by the added function SetNetErrorDetails and function GetNetErrorDetails.
Previous NetErrorDetails only records QUIC status in the HttpStream layer. And NetErrorDetails is assigned directly in HttpNetworkTransaction::OnStreamFailed. Now, the NetErrorDetails needs to be merged with the QUIC status.

3、Plumb NetErrorDetails in both successful and failed cases
Since NetErrorDetails is no longer only used to record error information, we need to call PopulateNetErrorDetails in both successful and failed cases in URLLoader::NotifyCompleted.

4、The added information is put into URLLoaderCompletionStatus
The added information is passed from network service to browser, and can be used by browser for analyzing network activities or doing some data reporting. For example, when reading data from cache, whether to skip validation is previously unknown for developers. The variable cache_skip_validation in HTTPCacheTransactionDetails can give developers some hints. Another example is, the variable is_prefetch in HTTPNetworkTransactionDetails can tell developers whether a resource is a prefetch. Developers can use the added information to analyze network activity of a prefetch. Though the way that this CL provides, more details information in different network layers can be known in browser side.</content>
    </entry>
    <entry>
        <id>327026292</id>
        <title>conformance2/glsl3/float-parsing.html failing on Intel w/ Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026292"/>
        <updated>2024-02-27T00:46:38.531Z</updated>
        <summary>-</summary>
        <content type="html">We're starting to qualify Mac OS 14 (specifically 14.3.1) for GPU testing on the Intel-based Mac Minis. `conformance2/glsl3/float-parsing.html` is failing as a result of the OS upgrade on Metal + graphite with the following output:

```
Traceback (most recent call last):
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/gpu_integration_test.py", line 628, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 254, in RunActualGpuTest
    getattr(self, test_name)(test_path, test_args)
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 419, in _RunConformanceTest
    self._CheckTestCompletion()
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 415, in _CheckTestCompletion
    self.fail(self._WebGLTestMessages(self.tab))
  File "/Volumes/Work/s/w/ir/.task_template_vpython_cache/vpython/store/cpython+jbeiavuv8lqgjcttbgv9hc9v9k/contents/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: should be green
at (0, 0) expected: 0,255,0,255 was 0,0,0,255
FAIL should be green
at (0, 0) expected: 0,255,0,255 was 0,0,0,255
should be green
at (0, 0) expected: 0,255,0,255 was 0,0,0,255
FAIL should be green
at (0, 0) expected: 0,255,0,255 was 0,0,0,255
```

[Sample failed build](https://ci.chromium.org/ui/p/chromium/builders/try/gpu-fyi-try-mac-intel-exp/287/overview)</content>
    </entry>
    <entry>
        <id>327026291</id>
        <title>Enable ServiceWorker Static Routing API by default</title>
        <author>
            <name>si...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026291"/>
        <updated>2024-02-27T00:41:32.110Z</updated>
        <summary>-</summary>
        <content type="html">As we're ready to launch the API on M123, update the feature flag enabled by default.

Intent-to-Ship: https://groups.google.com/a/chromium.org/g/blink-dev/c/-SEMMttEqz4/m/ogpF3VZsAAAJ

Explainer
https://github.com/WICG/service-worker-static-routing-api

Specification
https://github.com/w3c/ServiceWorker/pull/1701

Summary
This API allows developers to configure the routing, and allows them to offload simple things ServiceWorkers do.  If the condition matches, the navigation happens without starting ServiceWorkers or executing JavaScript, which allows web pages to avoid performance penalties due to ServiceWorker interceptions.</content>
    </entry>
    <entry>
        <id>327026290</id>
        <title>WebGL 2 gles3/transformfeedback graphite tests failing on Intel w/ Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327026290"/>
        <updated>2024-02-27T00:40:30.230Z</updated>
        <summary>-</summary>
        <content type="html">We're starting to qualify Mac OS 14 (specifically 14.3.1) for GPU testing on the Intel-based Mac Minis. The following gles3 tests are failing as a result of the OS upgrade on Metal + graphite:

```
deqp/functional/gles3/transformfeedback/basic_types_interleaved_points.html
deqp/functional/gles3/transformfeedback/basic_types_separate_points.html
deqp/functional/gles3/transformfeedback/interpolation_centroid.html
deqp/functional/gles3/transformfeedback/interpolation_flat.html
deqp/functional/gles3/transformfeedback/interpolation_smooth.html
deqp/functional/gles3/transformfeedback/point_size.html
deqp/functional/gles3/transformfeedback/random_interleaved_points.html
deqp/functional/gles3/transformfeedback/random_separate_points.html
```

[Sample failed build](https://ci.chromium.org/ui/p/chromium/builders/try/gpu-fyi-try-mac-intel-exp/287/overview)

The tests appear to be failing due to a crash in the GPU process:

```
Thread 0 (crashed)
 0  libsystem_kernel.dylib + 0x87a2
    rax = 0x0000000000000000   rdx = 0x0000000000000000
    rcx = 0x00007ff7b4a1af08   rbx = 0x0000000000000006
    rsi = 0x0000000000000006   rdi = 0x0000000000000103
    rbp = 0x00007ff7b4a1af30   rsp = 0x00007ff7b4a1af08
     r8 = 0x000000000000002e    r9 = 0x000000000000168f
    r10 = 0x0000000000000000   r11 = 0x0000000000000246
    r12 = 0x0000000000000103   r13 = 0xffffffffffffffff
    r14 = 0x00007ff8562887c0   r15 = 0x0000000000000016
    rip = 0x00007ff812c287a2
    Found by: given as instruction pointer in context
 1  libsystem_c.dylib + 0x7fa49
    rbp = 0x00007ff7b4a1af70   rsp = 0x00007ff7b4a1af40
    rip = 0x00007ff812b7fa49
    Found by: previous frame's frame pointer
 2  libsystem_c.dylib + 0x7ed30
    rbp = 0x00007ff7b4a1afb0   rsp = 0x00007ff7b4a1af80
    rip = 0x00007ff812b7ed30
    Found by: previous frame's frame pointer
 3  Metal + 0x186c41
    rbp = 0x00007ff7b4a1afd0   rsp = 0x00007ff7b4a1afc0
    rip = 0x00007ff81d2a3c41
    Found by: previous frame's frame pointer
 4  Metal + 0x162e15
    rbp = 0x00007ff7b4a1b150   rsp = 0x00007ff7b4a1afe0
    rip = 0x00007ff81d27fe15
    Found by: previous frame's frame pointer
 5  Metal + 0x157092
    rbp = 0x00007ff7b4a1b2b0   rsp = 0x00007ff7b4a1b160
    rip = 0x00007ff81d274092
    Found by: previous frame's frame pointer
 6  MetalTools + 0xbd6f7
    rbp = 0x00007ff7b4a1b3b0   rsp = 0x00007ff7b4a1b2c0
    rip = 0x00007ff8134d06f7
    Found by: previous frame's frame pointer
 7  MetalTools + 0xbcba3
    rbp = 0x00007ff7b4a1b460   rsp = 0x00007ff7b4a1b3c0
    rip = 0x00007ff8134cfba3
    Found by: previous frame's frame pointer
 8  MetalTools + 0xbdfd6
    rbp = 0x00007ff7b4a1b4d0   rsp = 0x00007ff7b4a1b470
    rip = 0x00007ff8134d0fd6
    Found by: previous frame's frame pointer
 9  MetalTools + 0xbe183
    rbp = 0x00007ff7b4a1b510   rsp = 0x00007ff7b4a1b4e0
    rip = 0x00007ff8134d1183
    Found by: previous frame's frame pointer
10  libGLESv2.dylib!rx::mtl::RenderCommandEncoder::encodeMetalEncoder() + 0xd33
    rbp = 0x00007ff7b4a1b7e0   rsp = 0x00007ff7b4a1b520
    rip = 0x0000000110433953
    Found by: previous frame's frame pointer
11  libGLESv2.dylib!rx::mtl::RenderCommandEncoder::endEncodingImpl(bool) + 0x1ca
    rbp = 0x00007ff7b4a1bc30   rsp = 0x00007ff7b4a1b7f0
    rip = 0x00000001104328ea
    Found by: previous frame's frame pointer
12  libGLESv2.dylib!rx::ContextMtl::endEncoding(bool) + 0x9d
    rbp = 0x00007ff7b4a1bc60   rsp = 0x00007ff7b4a1bc40
    rip = 0x00000001103e393d
    Found by: previous frame's frame pointer
13  libGLESv2.dylib!rx::TransformFeedbackMtl::end(gl::Context const*) + 0x55
    rbp = 0x00007ff7b4a1bc80   rsp = 0x00007ff7b4a1bc70
    rip = 0x0000000110423315
    Found by: previous frame's frame pointer
14  libGLESv2.dylib!gl::TransformFeedback::end(gl::Context const*) + 0x24
    rbp = 0x00007ff7b4a1bde0   rsp = 0x00007ff7b4a1bc90
    rip = 0x00000001101df374
    Found by: previous frame's frame pointer
15  libGLESv2.dylib!gl::Context::endTransformFeedback() + 0x19
    rbp = 0x00007ff7b4a1be00   rsp = 0x00007ff7b4a1bdf0
    rip = 0x0000000110107719
    Found by: previous frame's frame pointer
16  libGLESv2.dylib!_GL_EndTransformFeedback + 0x6d
    rbp = 0x00007ff7b4a1bf50   rsp = 0x00007ff7b4a1be10
    rip = 0x000000010feb0fcd
    Found by: previous frame's frame pointer
17  Chromium Framework!gl::GLApiBase::glEndTransformFeedbackFn() + 0xbd
    rbp = 0x00007ff7b4a1c0c0   rsp = 0x00007ff7b4a1bf60
    rip = 0x00000001383c498d
    Found by: previous frame's frame pointer
18  Chromium Framework!gpu::gles2::GLES2DecoderPassthroughImpl::DoEndTransformFeedback() + 0x14
    rbp = 0x00007ff7b4a1c0d0   rsp = 0x00007ff7b4a1c0d0
    rip = 0x0000000139502144
    Found by: previous frame's frame pointer
19  Chromium Framework!gpu::gles2::GLES2DecoderPassthroughImpl::HandleEndTransformFeedback(unsigned int, void const volatile*) + 0x3f
    rbp = 0x00007ff7b4a1c130   rsp = 0x00007ff7b4a1c0e0
    rip = 0x0000000139513c5f
    Found by: previous frame's frame pointer
20  Chromium Framework!gpu::error::Error gpu::gles2::GLES2DecoderPassthroughImpl::DoCommandsImpl&lt;false&gt;(unsigned int, void const volatile*, int, int*) + 0xf3
    rbp = 0x00007ff7b4a1c1b0   rsp = 0x00007ff7b4a1c140
    rip = 0x0000000139524273
    Found by: previous frame's frame pointer
21  Chromium Framework!gpu::CommandBufferService::Flush(int, gpu::AsyncAPIInterface*) + 0x26f
    rbp = 0x00007ff7b4a1c380   rsp = 0x00007ff7b4a1c1c0
    rip = 0x00000001395e317f
    Found by: previous frame's frame pointer
22  Chromium Framework!gpu::CommandBufferStub::OnAsyncFlush(int, unsigned int, std::__Cr::vector&lt;gpu::SyncToken, std::__Cr::allocator&lt;gpu::SyncToken&gt;&gt; const&amp;) + 0x439
    rbp = 0x00007ff7b4a1c560   rsp = 0x00007ff7b4a1c390
    rip = 0x00000001395e6859
    Found by: previous frame's frame pointer
```</content>
    </entry>
    <entry>
        <id>327017906</id>
        <title>WebGL 2 gles3/fboinvalidate graphite tests failing on Intel w/ Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327017906"/>
        <updated>2024-02-27T00:37:35.510Z</updated>
        <summary>-</summary>
        <content type="html">We're starting to qualify Mac OS 14 (specifically 14.3.1) for GPU testing on the Intel-based Mac Minis. The following gles3 tests are failing as a result of the OS upgrade on Metal + graphite:

```
deqp/functional/gles3/fboinvalidate/default.html
deqp/functional/gles3/fboinvalidate/whole.html
```

[Sample failed build](https://ci.chromium.org/ui/p/chromium/builders/try/gpu-fyi-try-mac-intel-exp/287/overview)

Sample failure:

```
Traceback (most recent call last):
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/gpu_integration_test.py", line 628, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 254, in RunActualGpuTest
    getattr(self, test_name)(test_path, test_args)
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 419, in _RunConformanceTest
    self._CheckTestCompletion()
  File "/Volumes/Work/s/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 415, in _CheckTestCompletion
    self.fail(self._WebGLTestMessages(self.tab))
  File "/Volumes/Work/s/w/ir/.task_template_vpython_cache/vpython/store/cpython+jbeiavuv8lqgjcttbgv9hc9v9k/contents/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: [test 1] Ran in 0.09999999986030161ms
[test 2] Ran in 1088.9999999997672ms
invalidate.default.render_color: 
Init testcase: invalidate
Init testcase: invalidate.default.render_none
Init testcase: invalidate.default.render_color
FAIL 
[test 3] Ran in 1036ms
Init testcase: invalidate.default.render_depth
[test 4] Ran in 560.5999999996275ms
Init testcase: invalidate.default.render_stencil
[test 5] Ran in 356.79999999981374ms
Init testcase: invalidate.default.render_depth_stencil
[test 6] Ran in 341.5ms
Init testcase: invalidate.default.render_all
[test 7] Ran in 690.3999999999069ms
Init testcase: invalidate.default.bind_color
invalidate.default.bind_color: 
FAIL 
[test 8] Ran in 1709.8999999999069ms
Init testcase: invalidate.default.bind_depth
[test 9] Ran in 1116.6000000000931ms
Init testcase: invalidate.default.bind_stencil
[test 10] Ran in 893.3999999999069ms
Init testcase: invalidate.default.bind_depth_stencil
[test 11] Ran in 734.2999999998137ms
Init testcase: invalidate.default.bind_all
[test 12] Ran in 1056ms
Init testcase: invalidate.default.sub_render_color
[test 13] Ran in 356.20000000018626ms
Init testcase: invalidate.default.sub_render_depth
[test 14] Ran in 336.3000000002794ms
Init testcase: invalidate.default.sub_render_stencil
[test 15] Ran in 442.89999999990687ms
Init testcase: invalidate.default.sub_render_depth_stencil
[test 16] Ran in 398.6999999997206ms
Init testcase: invalidate.default.sub_render_all
[test 17] Ran in 309.39999999990687ms
Init testcase: invalidate.default.sub_bind_color
[test 18] Ran in 661.8999999999069ms
Init testcase: invalidate.default.sub_bind_depth
[test 19] Ran in 625ms
Init testcase: invalidate.default.sub_bind_stencil
[test 20] Ran in 672.3000000002794ms
Init testcase: invalidate.default.sub_bind_depth_stencil
[test 21] Ran in 591.2000000001863ms
Init testcase: invalidate.default.sub_bind_all
[test 22] Ran in 646ms
Init testcase: invalidate.default.draw_framebuffer_color
invalidate.default.draw_framebuffer_color: 
FAIL 
[test 23] Ran in 404.5ms
Init testcase: invalidate.default.draw_framebuffer_all
[test 24] Ran in 436.60000000009313ms
Init testcase: invalidate.default.read_framebuffer_color
invalidate.default.read_framebuffer_color: 
FAIL 
[test 25] Ran in 429.3000000002794ms
Init testcase: invalidate.default.read_framebuffer_all
[test 26] Ran in 417.29999999981374ms
```</content>
    </entry>
    <entry>
        <id>327035052</id>
        <title>Multi Window is not supported in Vision Pro</title>
        <author>
            <name>ru...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327035052"/>
        <updated>2024-02-27T00:23:53.840Z</updated>
        <summary>-</summary>
        <content type="html">App Version:124.0.6323.1
OS: VisionOS 1.0.3
Device: Apple Vision Pro
URL: 



Prerequisites:
Install Chrome app to Vision Pro

Steps to reproduce:
  1. Launch Chrome
  2. Open NTP
  3. Go to 3 dots menu
  4. Focus and pinch on New Window

Observed results: Separate new window is opened 

Expected results: Two window should open on same tab( as multi window)

Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: NA
Bug reproducible on current stable build (App Version, iOS Version): NA 122
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes M123


Link to video/image: https://drive.google.com/file/d/1gyhryy6wMeASSHIujkxp0J8BDNuEAg8a/view?t=26&amp;resourcek</content>
    </entry>
    <entry>
        <id>327037813</id>
        <title>Flag expired : autofill-undo is expired in M124</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327037813"/>
        <updated>2024-02-27T00:02:28.219Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "autofill-undo" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1265538}

This flag has been marked as expiring in M124 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M124 branch you're all set; if you do it after the M124 branch you'll need to merge that CL to the M124 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>327033770</id>
        <title>[Desktop Power Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327033770"/>
        <updated>2024-02-26T23:42:01.542Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1265246:1265268:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=85440b31-bde9-4d3b-aa13-90776f347e2f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=85440b31-bde9-4d3b-aa13-90776f347e2f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_ebay_2018
       12.01%: 0.154 -&gt; 0.1725 n%

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_ebay_2018
       12.01%: 0.154 -&gt; 0.1725 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/ce6cd4395407984604d10e87c6623a7132ab0ce5..35a02ce64844766cbdc45557aeeb7ab9968e1664
  Chromium Commit Position: https://crrev.com/1265245..1265268
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/0bfbdc9e81f8c4f99183cb4cb90adaa3c6867882..9cf20be0f12a3e5785b28205809e233741435bac
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/14613639bfdd2021d531aa13fb9c72ff56f4b786..14613639bfdd2021d531aa13fb9c72ff56f4b786</content>
    </entry>
    <entry>
        <id>327032203</id>
        <title>Tests are failing: Wanted but not invoked:\nmBrowserControlsSizer.setBottomControlsHeight(\n 0,\n 0\n);\n-&amp;gt; at org.chromium.chrome.browser.page_insights.PageInsightsC...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327032203"/>
        <updated>2024-02-26T23:26:50.697Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
Wanted but not invoked:\nmBrowserControlsSizer.setBottomControlsHeight(\n    0,\n    0\n);\n-&gt; at org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest.testResizeContent(PageInsightsCoordinatorTest.java:409)\nActually, there were zero interactions with this mock.\n

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/android:chrome_public_unit_test_apk/org.chromium.chrome.browser.page_insights.PageInsightsCoordinatorTest#testResizeContent


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/0b6a015003d7e74a37e857767c152885

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327030328</id>
        <title>Update feedback to be per-session rather than per-organization</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327030328"/>
        <updated>2024-02-26T23:17:37.138Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>327023427</id>
        <title>Quality dashboard Parent Chain wrongly retrieve data from Comonents instead of team.info</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327023427"/>
        <updated>2024-02-26T22:33:22.186Z</updated>
        <summary>-</summary>
        <content type="html">The respin dashboard and scripts need to be refactored since the parent_chain currently retrieves info from the components , parent_chain data should come from moma team.info:

//depot/google3/chrome/engprod/blink/dashboard/plx/web_platform_quality_dashboard/...
  dashboards/respin_trigger_top_critical_regression_buganizer.dashboard #1 - branch
  scripts/respin_regressions_by_team_quarter_buganizer.sql #1 - branch
  scripts/top_regressions_by_team_quarter_buganizer.sql #2 - edit
  scripts/top_regressions_by_team_year_buganizer.sql #1 - branch</content>
    </entry>
    <entry>
        <id>327024923</id>
        <title>Bug: Extension content scripts aren't be cleared from console. </title>
        <author>
            <name>re...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327024923"/>
        <updated>2024-02-26T22:31:55.044Z</updated>
        <summary>-</summary>
        <content type="html">In DevTool's console, you can change which frame is focused. By default, it's the top frame. Extension developers often change the focus to their extension's content script.

However, if you reload your extension and reload the tab, the old content scripts still remain visible. You have situations where there are 10 content scripts and you don't know which is the real one (it's not ordered). Only workaround is to use a new tab. 

This issue existed on Mac for at least a year.
</content>
    </entry>
    <entry>
        <id>327022706</id>
        <title>Empty commit shouldn't add any watchers</title>
        <author>
            <name>ga...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327022706"/>
        <updated>2024-02-26T22:21:40.391Z</updated>
        <summary>-</summary>
        <content type="html">https://crrev.com/c/5325460: AyeAye sends the following request to the analyzer:

```
analyzer_request {
  files {
    filepath: "/COMMIT_MSG"
    addition_chunks {
      line_start: 1
      col_start: 0
      col_end: 0
      line_content: "Parent:     bc9fe8c2 (Roll recipe dependencies (trivial).)"
      line_content: "Author:     Gavin Mak &lt;gavinmak@google.com&gt;"
      line_content: "AuthorDate: 2024-02-26 22:03:31 +0000"
      line_content: "Commit:     Gavin Mak &lt;gavinmak@google.com&gt;"
      line_content: "CommitDate: 2024-02-26 22:03:31 +0000"
      line_content: ""
      line_content: "empty"
      line_content: ""
      line_content: "Change-Id: I5190a271906f5d3aab117f11e95de96c13c6c2f2"
      line_content: ""
      type: ADDED
    }
    more_chunks: false
    change_type: "ADDED"
    binary: false
    size: 284
    size_delta: 284
  }
  commit_message: "empty\n\nChange-Id: I5190a271906f5d3aab117f11e95de96c13c6c2f2\n"
}
```

The `/COMMIT_MSG` file is interpreted by the analyzer as an actual file which then finds that, based on [this line in depot_tools' WATCHLISTS](https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:WATCHLISTS;l=15;drc=bb27381a20d7c84b98262a0d9ff861d710777b1e) should CC `chops-source-team-auto+depot_tools@google.com`. The analyzer should ignore this file.</content>
    </entry>
    <entry>
        <id>327022925</id>
        <title>Use NSDictionary API rather than CFDictionary API</title>
        <author>
            <name>av...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327022925"/>
        <updated>2024-02-26T22:20:16.648Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326987148</id>
        <title>Dev tools issue</title>
        <author>
            <name>sa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326987148"/>
        <updated>2024-02-26T22:09:36.517Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?
Network call in dev tools

What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>327017901</id>
        <title>Upgrade GPU M2 Macbook Pros to Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327017901"/>
        <updated>2024-02-26T21:51:09.776Z</updated>
        <summary>-</summary>
        <content type="html">We currently test on Mac 13.3.1 for our M2 Macbook Pros, but Mac 14 is available and used by a significant number of people.</content>
    </entry>
    <entry>
        <id>327017900</id>
        <title>Upgrade GPU AMD Macbook Pros to Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327017900"/>
        <updated>2024-02-26T21:50:12.354Z</updated>
        <summary>-</summary>
        <content type="html">We currently test on Mac 13.5 for our AMD Macbook Pros, but Mac 14 is available and used by a significant number of people.</content>
    </entry>
    <entry>
        <id>326904538</id>
        <title>Upgrade GPU Intel Mac Minis to Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326904538"/>
        <updated>2024-02-26T21:49:06.764Z</updated>
        <summary>-</summary>
        <content type="html">We currently test on Mac 13.5 for our Intel Mac Minis, but Mac 14 is available and used by a significant number of people.</content>
    </entry>
    <entry>
        <id>326903576</id>
        <title>Upgrade GPU M1 machines to Mac 14</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326903576"/>
        <updated>2024-02-26T21:47:13.601Z</updated>
        <summary>-</summary>
        <content type="html">We currently test on Mac 13.5.2 for our M1 machines, but Mac 14 is available and used by a significant number of people.</content>
    </entry>
    <entry>
        <id>327016283</id>
        <title>Internal Translation API is blocked by content security policy on iOS/WebView</title>
        <author>
            <name>th...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327016283"/>
        <updated>2024-02-26T21:43:18.897Z</updated>
        <summary>-</summary>
        <content type="html">We are migrating Chrome translation from an API hosted on translate.googleapis.com to one hosted on translate-pa.googleapis.com.

When attempting to roll out out the javascript change to enable this switch, we've run into excessive errors in iOS translations. For at least one site (linkedin.com), this is caused by a limited set of connect-src endpoints in the site's content security policy.

Example page: https://www.linkedin.com/pulse/how-start-your-own-linkedin-newsletter-10-best-andy-crestodina/

Content-Security-Policy: &lt;attached&gt;

We see the error:

Refused to connect to https://translate-pa.googleapis.com/v1/translateHtml because it does not appear in the connect-src directive of the Content Security Policy.

This doesn't happen on Desktop or Android.

In order to reproduce, you'll need a custom build with components/translate/core/browser/translate_script.cc modified:

@@ -114,6 +114,13 @@ GURL TranslateScript::GetTranslateScriptURL() {
   translate_script_url = AddHostLocaleToUrl(translate_script_url);
   translate_script_url = AddApiKeyToUrl(translate_script_url);

+  translate_script_url = net::AppendQueryParameter(
+      translate_script_url, "tha", "1");
</content>
    </entry>
    <entry>
        <id>326904537</id>
        <title>Runtime errors thrown during TabSearchTest.App</title>
        <author>
            <name>dp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326904537"/>
        <updated>2024-02-26T21:28:23.728Z</updated>
        <summary>-</summary>
        <content type="html">See attached screenshot.

The errors don't seem to cause the tests to fail, but they certainly affect what code is executed during the test, and could be masking other problems.

(discovered as part of migrating cr-tabs to Lit, which requires making some changes in these tests)</content>
    </entry>
    <entry>
        <id>326992304</id>
        <title>Chrome doesn't produce EVENT_OBJECT_FOCUS events on changing focused elements</title>
        <author>
            <name>va...@grammarly.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326992304"/>
        <updated>2024-02-26T21:21:30.782Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Launch AccEvent application and set it up to listen only for EVENT_OBJECT_FOCUS and WinEvents (Out of Context)
2. Start Listening in AccEvents
3. Launch new instance of Chrome and open any website
4. Click on different hyperlinks, focus various text fields

Expected Result
Each click on a hyperlink or text field produces EVENT_OBJECT_FOCUS event

Actual Result
Click on a hyperlink or text field doesn't produce EVENT_OBJECT_FOCUS event

# Problem Description
Chrome doesn't produce EVENT_OBJECT_FOCUS events on changing focused elements. That's why there's no way to get an instance of IAccessible of the current focused element.

# Summary
Chrome doesn't produce EVENT_OBJECT_FOCUS events on changing focused elements

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327011755</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.findinpage.FindTest#testBackKeyDismissesFind_BackRefactored </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327011755"/>
        <updated>2024-02-26T21:19:44.172Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.findinpage.FindTest#testBackKeyDismissesFind_BackRefactored would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.findinpage.FindTest%23testBackKeyDismissesFind_BackRefactored
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.findinpage.FindTest%23testBackKeyDismissesFind_BackRefactored
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.findinpage.FindTest%23testBackKeyDismissesFind_BackRefactored

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>327011781</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.AutofillPopupWithKeyboardTest#testShowAutofillPopupAndKeyboardimultaneously </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327011781"/>
        <updated>2024-02-26T21:19:40.214Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.AutofillPopupWithKeyboardTest#testShowAutofillPopupAndKeyboardimultaneously is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.AutofillPopupWithKeyboardTest%23testShowAutofillPopupAndKeyboardimultaneously
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.AutofillPopupWithKeyboardTest%23testShowAutofillPopupAndKeyboardimultaneously
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.AutofillPopupWithKeyboardTest%23testShowAutofillPopupAndKeyboardimultaneously

</content>
    </entry>
    <entry>
        <id>327008602</id>
        <title>Fix Mac returning low VRAM for performance estimator</title>
        <author>
            <name>cd...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327008602"/>
        <updated>2024-02-26T21:11:18.507Z</updated>
        <summary>-</summary>
        <content type="html">For integrated GPUs, VRAM should be at least half of the total system RAM. The data from the field shows this is the case for Windows, but Mac can return too low of a value for VRAM since Dawn is using [recommendedMaxWorkingSetSize](https://developer.apple.com/documentation/metal/mtldevice/2369280-recommendedmaxworkingsetsize) under the hood, which just returns a recommendation and not the total VRAM.</content>
    </entry>
    <entry>
        <id>326917485</id>
        <title>StyledLabel in certain layouts causes thousands of unnecessary layout calculations</title>
        <author>
            <name>me...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326917485"/>
        <updated>2024-02-26T21:05:51.261Z</updated>
        <summary>-</summary>
        <content type="html">Some layouts will repeatedly ask a StyledLabel for its PreferredSize for the same small number of widths. Currently StyledLabel caches its last requested layout, but this still results in sometimes thousands of layout recalculations, resulting in one case a dialog taking several seconds of freezing the UI thread before it shows up.

Perhaps layouts in question could not ask the same question over and over, but it's also pretty simple to cache (a few) more layout sizes for the last several requested widths.</content>
    </entry>
    <entry>
        <id>326953892</id>
        <title>[dPWA][Win] PWA titlebar separator blue in local builds, but black in Canary</title>
        <author>
            <name>li...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326953892"/>
        <updated>2024-02-26T21:05:38.055Z</updated>
        <summary>-</summary>
        <content type="html">In dPWA titlebars, the separator below the titlebar is painting __blue__ in local builds, but __black__ in Chrome Canary. (see attached screenshot for side by side comparison)

Canary version: 124.0.6324.0

Repro steps:
1.  Launch Chrome Canary, navigate to any site ([https://liahiscock.github.io/PWA/MediaControls/App3]() used in attached screenshot), and install it as a PWA. 
    - Observe a black separator below the PWA title bar
2. Build Chromium locally, launch and navigate to any site, and install it as a PWA
    - Observe a blue separator below the PWA title bar</content>
    </entry>
    <entry>
        <id>326987147</id>
        <title>IndexedDB delete button</title>
        <author>
            <name>st...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326987147"/>
        <updated>2024-02-26T21:05:05.485Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version  Version 122.0.6261.57 (Official Build) (64-bit)     : &lt;from chrome://version/&gt;
OS       Linux Ubunto            : &lt;OS version&gt;

What steps will reproduce the problem?
Just open IndexedDB in dev tools 

What is the expected result?
The new delete database button 'trashcan' is too close to the refresh button . Iv'e deleted, accidentally, several DBs which I then have to manually recreate. It is so easy now to absentmindedly click the wrong button and then 'Wallah' another 40 dbs have bitten the dust and because my nerves are shattered I'm now working in Firefox!

What happens instead?
N/A

You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>327007254</id>
        <title>ExternalURLModelTestCase.testCreateEmailFromContextMenu failing on iphone device</title>
        <author>
            <name>th...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327007254"/>
        <updated>2024-02-26T21:03:23.105Z</updated>
        <summary>-</summary>
        <content type="html">https://ci.chromium.org/ui/p/chrome/builders/ci/iphone-device/42609/overview

I think https://chromium-review.googlesource.com/c/chromium/src/+/5307076 is the likely culprit, please verify that this is the case. </content>
    </entry>
    <entry>
        <id>326904536</id>
        <title>Can't find the model on Chromebook Recovery Utility</title>
        <author>
            <name>as...@dpsk12.net</name>
        </author>
        <link href="https://issues.chromium.org/issues/326904536"/>
        <updated>2024-02-26T20:55:28.508Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Updated Windows Chrome and un-installed and re-installed CRU extension
2. Tried using the model of the Chromebook Lenovo 300e Chromebook 2nd Gen on the CRU. Device did not read OS
3. Power wash unable to work

# Problem Description
Could not find this model when inputting in the CRU. TREEYA360XFUXD5BE2AD4DG2DI5CA5G

# Additional Comments
Bug for CRU and trying to create a USB with the appropriate model OS recovery.

# Summary
Can't find the model on Chromebook Recovery Utility

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326980490</id>
        <title>Regression: Canary asks to set as default browser with every relaunch</title>
        <author>
            <name>me...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980490"/>
        <updated>2024-02-26T20:41:32.327Z</updated>
        <summary>-</summary>
        <content type="html">Canary Version 124.0.6324.0 
MacOS 14.3.1

Steps to reproduce:
1.) Set Safari as Default Browser
2.) Start Canary
3.) Quit Canary
4.) Relaunch Canary

Actual: Set Canary as Default Browser appears with every Relaunch. Very annoying :(
Expected: Ask just one time.

A screenshot is attached.</content>
    </entry>
    <entry>
        <id>326999691</id>
        <title>FedCM metrics class is never reset</title>
        <author>
            <name>np...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326999691"/>
        <updated>2024-02-26T20:37:10.561Z</updated>
        <summary>-</summary>
        <content type="html">Our FedCMMetrics class is not reset when a FedCM call finishes, and we only initialize the IDP source and the session ID when the constructor is invoked. This means that we log all IDP-keyed metrics based on the first IDP we see in the page, even for separate get() calls. We should reset the FedCM member in between invocations, so that the session ID is different for different calls within the same page load. This would also help with the IDP key problem in the single IDP calls, but perhaps we can just pass the IDP to each individual method to properly support the multi IDP scenario.</content>
    </entry>
    <entry>
        <id>327000888</id>
        <title>Price Drop: module's layout change after removing all other modules. </title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327000888"/>
        <updated>2024-02-26T20:36:28.637Z</updated>
        <summary>-</summary>
        <content type="html">https://drive.google.com/file/d/10yyto_o2X2Q6maBs0Hf0sbfCghc2tQ89/view?usp=drive_link&amp;resourcekey=0-doKCP1q_2h71OXeIpRPLtg</content>
    </entry>
    <entry>
        <id>326903573</id>
        <title>[Chromium GSoC] How To Get Started On The "Side Panel Sizing Project"</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326903573"/>
        <updated>2024-02-26T20:27:02.056Z</updated>
        <summary>-</summary>
        <content type="html">Hello,

I hope you are doing well. I have just learned about the Google Summer of Code program and I'm interested in learning from you.

I have been taking a look at some of the links provided through your GSoC page and I am interested in the "Side Panel Sizing" project. The thought of working with you is exciting and I really want to learn. However, I am not sure about what I have to do because I've never contributed to an open source project before.

I saw that there are some bugs that I should work on, but how do I go about doing this? Is there a specific part of the Chromium repository on GitHub that I should look at and start reading the code? Are there certain technologies that I should become familiar with first and then fix the bugs?

Apologies if this is an unnecessary question. I know I have to submit proposals for the projects I'm interested in and I want to be able to solve the bugs you have listed, but I'm not familiar with the process. I would really love to work and learn from you and I hope it can happen. I look forward to hearing from you. Thanks.</content>
    </entry>
    <entry>
        <id>326980464</id>
        <title>[Mullet M2] Child popup gets hidden after timeout. Not all profiles are shown.</title>
        <author>
            <name>ti...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980464"/>
        <updated>2024-02-26T20:26:27.469Z</updated>
        <summary>-</summary>
        <content type="html">The capture shows several bugs in the Autofill granular filling popup:

* Child popup is hidden after a timeout.
* Profiles are deduplicated wrongly: the profile with "Aviakonstruktora Antonova" is not shown in the suggestions list.</content>
    </entry>
    <entry>
        <id>326980489</id>
        <title>Chromium should prefer targets that come first in tree-order</title>
        <author>
            <name>aw...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326980489"/>
        <updated>2024-02-26T20:19:15.463Z</updated>
        <summary>-</summary>
        <content type="html">Per step 7 of the agreed upon resolution[1], Chromium should prefer targets that come first in tree order.

[1]https://github.com/w3c/csswg-drafts/issues/9622#issue-2006578282</content>
    </entry>
    <entry>
        <id>326997850</id>
        <title>Annotations extractions issue</title>
        <author>
            <name>ol...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326997850"/>
        <updated>2024-02-26T20:16:03.254Z</updated>
        <summary>-</summary>
        <content type="html">There are 2 issues in the annotation extraction:
- comments node are adding section break
- block elements do not add space before and after.</content>
    </entry>
    <entry>
        <id>326984560</id>
        <title>WebWhatsApp is not working. web.whatsapp.com unexpectedly closed the connection
ERR_CONNECTION_CLOSE</title>
        <author>
            <name>co...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326984560"/>
        <updated>2024-02-26T20:10:32.850Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. try to acces https://web.whatsapp.com/
2. get web.whatsapp.com unexpectedly closed the connection
3. also get ERR_CONNECTION_CLOSE

# Problem Description
This site can’t be reachedweb.whatsapp.com unexpectedly closed the connection.
Try:

Checking the connection
Checking the proxy and the firewall
Running Windows Network Diagnostics
ERR_CONNECTION_CLOSED

# Summary
WebWhatsApp is not working. web.whatsapp.com unexpectedly closed the connection
ERR_CONNECTION_CLOSE

# Custom Questions
#### Does the problem occur on multiple sites?
No - Just that one URL

#### Is it a problem with a plugin?
Not sure - I don't know

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326992622</id>
        <title>Create browser command for link to chrome://settings/safetycheck</title>
        <author>
            <name>xu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326992622"/>
        <updated>2024-02-26T19:47:23.798Z</updated>
        <summary>-</summary>
        <content type="html">Relating to module 2 (revamped safety check)</content>
    </entry>
    <entry>
        <id>326989399</id>
        <title>MobileOmniboxClipboardToURL action is not declared in actions.xml</title>
        <author>
            <name>ga...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326989399"/>
        <updated>2024-02-26T19:41:59.747Z</updated>
        <summary>-</summary>
        <content type="html">MobileOmniboxClipboardToURL is being recorded in here https://source.chromium.org/chromium/chromium/src/+/main:ios/chrome/browser/ui/omnibox/popup/omnibox_popup_view_ios.mm;l=114;bpv=1

but it is declared in actions.xml</content>
    </entry>
    <entry>
        <id>326992301</id>
        <title>MediaQueryList might be out of sync if created before render unblocked</title>
        <author>
            <name>nr...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326992301"/>
        <updated>2024-02-26T19:40:18.973Z</updated>
        <summary>-</summary>
        <content type="html">This came while working on https://chromium-review.googlesource.com/c/chromium/src/+/5290838
We only set the initial size of the frame if one of these happens:
- it's completely loaded and has no render-blocking stylesheets
- something caused the iframe to force-layout
- the parent frame layout took place

If none of these happens, when calling matchMedia(...) the initial size of the frame would be 0, so change events won't fire correctly.

Pending a repro case.</content>
    </entry>
</feed>