<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-20T12:08:54.850Z</updated>
    <entry>
        <id>325834708</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325834708"/>
        <updated>2024-02-20T12:08:54.850Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1252125:1254258:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a5a6a9a4-53f6-4643-9c13-e0245bdfedd0

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a5a6a9a4-53f6-4643-9c13-e0245bdfedd0

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/facebook_2018
      121.79%: 39.0 -&gt; 86.5 unitless

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/facebook_2018
      121.79%: 39.0 -&gt; 86.5 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1252124..1254258
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/aacf1e1b503a77d4c030a42a6f8dd8323e4dcecb..b5bebd647c8186f002c65208936b15baaac2bf2f
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cc70a6d1748cd28a9d62fb234ab3f0b48cbebb1e..62cee88e4b02527385ef89397601fb9649f3bcd5</content>
    </entry>
    <entry>
        <id>325963887</id>
        <title>Extend omnibox API to render a little image in the address bar's drop-down list</title>
        <author>
            <name>ro...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325963887"/>
        <updated>2024-02-20T12:01:50.307Z</updated>
        <summary>-</summary>
        <content type="html">This is a feature request.  
It would be possible to extend the omnibox API to handle a little icon\image like the ones we see when start typing the name of a state or famous person in the address bar?

The "suggest" function of **chrome.omnibox.onInputChanged** event handler (function that the event listener call to supply suggestions for the address bar's drop-down list) receive an array of **omnibox.SuggestResult** objects, one for each suggestion.

The **omnibox.SuggestResult** object should now accept a new property for the image.
The photo image could be a base64 URL and that property could be named "iconImg", "b64Img", "imgUrl" or similar.

My idea is to build an extention with an omnibox feature which generates a filtered list of contacts from my address book (or others sources) with a small photo alongside.
Anyway there could be many other application.</content>
    </entry>
    <entry>
        <id>326032061</id>
        <title>Non-Regression: Unable to see 'Clear cookies and site data when you close all windows" option in chrome://settings/privacy</title>
        <author>
            <name>va...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326032061"/>
        <updated>2024-02-20T11:39:38.879Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: M121 Stable #121.0.6167.188/15699.66.0 -  Osiris(Brya) device

Lacros Version : LaCrOS Dev #123.0.6300.3

OS: Chrome

Issue  Details:
-------------------
1)Accounts: Test account
2)Enterprise Enrolled: No, signed in with test account
3)Devices:
A)Non-Corp devices
Osiris(Brya) - X86/Lacros64
4)Repro on Ash-chrome: Yes, able to repro on Ash
5)Mode: Verified
6)Frequency: Always
7)Enable the following flags from Ash Chrome (legacy)
#lacros-stability = Dev
#lacros-only = Enabled
#lacros-availability-ignore = Enabled

What steps will reproduce the problem?
1. Launch Chrome
2. Go to chrome://settings/privacy
3. Tap on 'Third-party cookies'
     
What is the expected result?
Clear cookies and site data when you close all windows" Toggle button should be disabled by default.
"Preload pages for faster browsing and searching" Toggle button should be enabled by default.

What happens instead?
Instead Unable to see the options 
Clear cookies and site data when you close all windows" Toggle button should be disabled by default.
"Preload pages for faster browsing and searching" Toggle button should be enabled by default.

Note:
1)Issue is able to repro  in ash chrome
2) Issue is seen after recent UI changes in settings page, Not sure it is an intended change or not . Raising it for tracking purpose
3) This Issue non-regression same seen on  M120 #120.0.6099.235/15662.76.0 on Dratini(Hatch) device

Master Test tracker link: https://testtracker.googleplex.com/efforts/testcase/detail/472623867?tp_id=28921&amp;result=&amp;environment=</content>
    </entry>
    <entry>
        <id>325928327</id>
        <title>Incorrect width of an element in a grid layout</title>
        <author>
            <name>ap...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325928327"/>
        <updated>2024-02-20T11:29:49.324Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. See attached html file

# Problem Description
Chrome doesn't resolve width correctly for the element in a grid layout like this:
&gt;outer element (with fixed height, dispaly grid)
 &gt; middle element
   &gt; inner element (with aspect-ratio: 1 and height 100%)

In the attached example, the outer element's height is 40px, so the inner element is 40px by 40px, but the middle is 0px by 40px, when it should be 40x40 as well.

# Summary
Incorrect width of an element in a grid layout

# Custom Questions
#### Which component does this fall under?
Blink&gt;CSS

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325963886</id>
        <title>Set-Cookie header is stripped from Response Headers on WebSocket upgrade request</title>
        <author>
            <name>al...@pwc.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325963886"/>
        <updated>2024-02-20T11:29:11.134Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open DevTools
2. Make a WebSocket connection request to a URL which also adds a Set-Cookie header to the response
3. Observe that if it succeeds (101 Switching Protocols is returned), the Set-Cookie header is stripped from the Response Headers

# Problem Description
After following the steps listed above, the Set-Cookie header does not appear in the list of Response Headers, however the cookie will still be applied correctly. Note that the Cookies tab in DevTools also doesn't appear indicating that a cookie has been set.

# Summary
Set-Cookie header is stripped from Response Headers on WebSocket upgrade request

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325960316</id>
        <title>Selected pixel format in vt_video_decode_accelerator_mac.cc is always video-range.</title>
        <author>
            <name>fa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325960316"/>
        <updated>2024-02-20T10:57:46.907Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
As for discussion in https://issues.chromium.org/issues/41491921

# Problem Description
I have an application that needs to display a full-range h.264 stream.

I decode using webcodecs (hardware acceleration) and paint using webgl2. The videoframe is automatically converted by WebGL into a rgb texture.

When feeding the decoder with a full-range h.264 stream, the rendered decoded frame have incorrect colors.
That does not happen on Windows, and also disabling the MacOS hardware decoder the colors are correct.

My question is: 
* Should the pixel_format be kCVPixelFormatType_420YpCbCr8BiPlanarFullRange when the h.264 stream sps contains full range flag?
* If not, in the related issue it is claimed:

&gt; This works automatically on macOS since we always configure limited range on the VideoToolbox session and it internally detects the full range video and converts it to limited range:

At that point, is WebGL aware that the frame is not full range anymore so a yuv to rgb path conversion should take into account this?

Thanks,
Fabio.

# Summary
Selected pixel format in vt_video_decode_accelerator_mac.cc is always video-range.

# Custom Questions
#### Does this work in other browsers?

Not sure - I don't know

# Additional Data
Category: Audio / Video \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325991355</id>
        <title>i wanna remove itt </title>
        <author>
            <name>em...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325991355"/>
        <updated>2024-02-20T10:54:15.261Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. i wanna rmove it 
2. i wanna remove it 
3. 

# Problem Description
it always popped up it's kinda like a virus

# Summary
i wanna remove itt 

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>325990051</id>
        <title>[css-anchor-position]  Anchor queries should always take fallback for non-OOF</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325990051"/>
        <updated>2024-02-20T10:50:20.760Z</updated>
        <summary>-</summary>
        <content type="html">Our current implementation handles any length with an anchor query as "auto" (or similar) used-value time, for non-OOF styles. This is not correct. We should always take the fallback for any invalid anchor query. https://drafts.csswg.org/css-anchor-position-1/#valid-anchor-function</content>
    </entry>
    <entry>
        <id>325909528</id>
        <title>Network tab refuses to open on the first try</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325909528"/>
        <updated>2024-02-20T10:43:51.233Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?
Clicking on Network from the dorp down does not always open the tab in th efirst try. Drop down closes and it stays where it was. 

What is the expected result?
Open the Network tab in the first try

What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>326026670</id>
        <title>Purge testcase from the clusterfuzz database</title>
        <author>
            <name>ti...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326026670"/>
        <updated>2024-02-20T10:32:43.477Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326026825</id>
        <title>Warn about untrusted inputs in the clusterfuzz upload UI</title>
        <author>
            <name>ti...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326026825"/>
        <updated>2024-02-20T10:31:56.132Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325991354</id>
        <title>Regression :  Tab focus is overalapping with the text .</title>
        <author>
            <name>ro...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325991354"/>
        <updated>2024-02-20T10:28:37.877Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version : 123.0.6311.0 (Official Build) (64-bit)5bfa48a74b59cc24b75d4ee2ff69130f06bbfda2-refs/branch-heads/6311@{#1}

OS: Win(10,11).

Preconditions:
Enable System Dark Mode

Steps to reproduce:
1. Launch Chrome and Open NTP and navigate to the url : https://www.google.com/imghp?hl=en&amp;tab=ri&amp;ogbl
2. Now click on Side panel and select Google search option from side panel .
3. Now click on Search by Image and click on Upload image and  click on Yes option at the bottom of the page .
4. Now hit tab and observe tab focus is overalapping with the text .

Actual Result : Tab focus is overalapping with the text .

Expected Result :  Tab focus should not overlapp with the text .

This option is Introduced from  M-122 , below is the bisect info :

Good Build : 122.0.6223.0

Bad Build :  122.0.6224.0 

Please find the attached screencast below :
http://somup.com/cZnY6opUhp

Bisect info :

Change Log :https://chromium.googlesource.com/chromium/src/+log/122.0.6223.0..122.0.6224.0?pretty=full

@Team we are Unable to find the culprit from the Changelog URL please help us in assigning it to the right owner.


Note:
1. Issue is unable to repro on latest Stable #121.0.6167.185 .
2. Issue is able to repro on Beta #122.0.6261.39 , Dev #123.0.6300.3.
3. Issue is unable to repro to Mac and Linux.

Thank You..!!!</content>
    </entry>
    <entry>
        <id>325836833</id>
        <title>Wrong pixelDeviceRatio under Gnome/Wayland</title>
        <author>
            <name>ca...@hunsicker.de</name>
        </author>
        <link href="https://issues.chromium.org/issues/325836833"/>
        <updated>2024-02-20T10:26:13.672Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 121.0.6167.184 (Official Build) (64-bit)
Is this the most recent version: yes
OS + version: Linux Fedora 38
CPU architecture (32-bit / 64-bit): 64-bit
Window manager: Gnome/Wayland
URLs (if relevant):
Behavior in Linux Firefox: Same as in Chrome
Behavior in Windows Chrome (if you have access to it):

What steps will reproduce the problem?
(1) Use a highDPI monitor under Gnome 44 with the Scale factor set to 200% in the Gnome settings
(2) Make sure Chrome is running on Wayland (see chrome://flags/#ozone-platform-hint, don't use the Relaunch button after changing the backend, manually close and start the browser again)
(3) Browse to https://whatismyviewport.com/

What is the expected result?
The displayed DPR value should be 2.00 (meaning window.devicePixelRatio=2)

What happens instead?
The displayed DPR value is 1.00

(see attached screenshots)
</content>
    </entry>
    <entry>
        <id>326024643</id>
        <title>Sign-out flow changes</title>
        <author>
            <name>ju...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326024643"/>
        <updated>2024-02-20T10:23:23.162Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326024303</id>
        <title>FRE and re-FRE</title>
        <author>
            <name>ju...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326024303"/>
        <updated>2024-02-20T10:17:39.188Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325936438</id>
        <title>UAF in FedCmAccountSelectionView::Show</title>
        <author>
            <name>jt...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325936438"/>
        <updated>2024-02-20T09:58:42.527Z</updated>
        <summary>-</summary>
        <content type="html">VULNERABILITY DETAILS
In function `FedCmAccountSelectionView::Show` if IDP sign-in modal dialog is open, the showing of the accounts dialog would be delayed [1], and once the modal dialog is closed, `show_accounts_dialog_callback_` would be executed to show the accounts dialog [2]. However in this path the code does not check FedCM API settings and if the embargo was triggered, the execution of `show_accounts_dialog_callback_` would destroy the FedCmAccountSelectionView and UAF occurs. Considering the following scenario:
1. website triggers a IDP failure
2. user clicks continue button to sign in, which opens the login page (modal dialog), and the login page triggers a new FedCM UI
3. user dismisses the UI in the login page which triggers embargo
4. The login page can be closed by JS code, and since the modal dialog is closed, `FedCmAccountSelectionView::Show` is called again to show the accounts dialog
5. Since FedCM is embargoed, it goes with `ShowVerifyingSheet -&gt; OnAccountSelected -&gt; CompleteRequestWithError`, which destory the FedCmAccountSelectionView
6. The code will continue access member of FedCmAccountSelectionView which leads to UAF

```c++
void FedCmAccountSelectionView::Show(
    const std::string&amp; top_frame_etld_plus_one,
    const std::optional&lt;std::string&gt;&amp; iframe_etld_plus_one,
    const std::vector&lt;content::IdentityProviderData&gt;&amp;
        identity_provider_data_list,
    Account::SignInMode sign_in_mode,
    blink::mojom::RpMode rp_mode,
    bool show_auto_reauthn_checkbox) {
  if (popup_window_ &amp;&amp; (state_ == State::IDP_SIGNIN_STATUS_MISMATCH ||
                        state_ == State::ACCOUNT_PICKER)) {
    popup_window_state_ =
        PopupWindowResult::kAccountsReceivedAndPopupNotClosedByIdp;
    show_accounts_dialog_callback_ =                                            // ==&gt; [1]
        base::BindOnce(&amp;FedCmAccountSelectionView::Show,
                       weak_ptr_factory_.GetWeakPtr(), top_frame_etld_plus_one,
                       iframe_etld_plus_one, identity_provider_data_list,
                       sign_in_mode, rp_mode, show_auto_reauthn_checkbox);
    return;
  }


void FedCmAccountSelectionView::CloseModalDialog() {
  // ...
  if (show_accounts_dialog_callback_) {
    std::move(show_accounts_dialog_callback_).Run();   // ==&gt; [2]
    if (is_web_contents_visible_) {
      input_protector_-&gt;VisibilityChanged(true);
      GetDialogWidget()-&gt;Show();
    }
```
[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/views/webid/fedcm_account_selection_view_desktop.cc;l=82;drc=51747de656cd4c61e038b7d82e9b7bf20e6d2bb9
[2] https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/views/webid/fedcm_account_selection_view_desktop.cc;l=615;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090

VERSION
Chrome Version: stable 121.0.6167.185 + dev

REPRODUCTION CASE
Tested on: Chrome 123.0.6307.1 asan build 64-bit on Windows 10
1. Create a web server using node.js
   node ./server.js
2. Launch chrome and navigate to http://localhost:8000/poc.html
   out\Asan\chrome.exe http://localhost:8000/poc.html
3. Click continue button, then dismiss the dialog in the new popup page

Please be noted to create a new web server for each test, and clear browser user data is highly recommended. 

FOR CRASHES, PLEASE INCLUDE THE FOLLOWING ADDITIONAL INFORMATION
Type of crash: browser
Crash State: see asan.log for details

== Bisection ==
This was initially introduced in https://chromium.googlesource.com/chromium/src/+/f4863c5e182188465f2511083ee130fd9d4fda15

== Additional Information ==
compromised renderer requirement: no
miracle ptr protected: no
user interaction: yes</content>
    </entry>
    <entry>
        <id>326022018</id>
        <title>Integrate sign-in flows with SignInAndHistorySyncCoordinator</title>
        <author>
            <name>ju...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326022018"/>
        <updated>2024-02-20T09:53:13.926Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326021146</id>
        <title>Tests are failing: tab_drag_controller_interactive_uitest.cc(2564): Value of: attached_tab_strip-&amp;gt;GetDragContext()-&amp;gt;IsDragSessionActive()\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326021146"/>
        <updated>2024-02-20T09:40:34.773Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
tab_drag_controller_interactive_uitest.cc(2564): Value of: attached_tab_strip-&gt;GetDragContext()-&gt;IsDragSessionActive()\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:interactive_ui_tests/DetachToBrowserTabDragControllerTest.DragToSeparateWindowAttemptToSpawnDoubleNestedRunLoop/TabDragging.3
- ninja://chrome/test:interactive_ui_tests/DetachToBrowserTabDragControllerTest.DragToSeparateWindowAttemptToSpawnDoubleNestedRunLoop/TabDragging.1
- ninja://chrome/test:interactive_ui_tests/DetachToBrowserTabDragControllerTest.DragToSeparateWindowAttemptToSpawnDoubleNestedRunLoop/TabDragging.2
- ninja://chrome/test:interactive_ui_tests/DetachToBrowserTabDragControllerTest.DragSingleTabToSeparateWindow/TabDragging.2
- ninja://chrome/test:interactive_ui_tests/DetachToBrowserTabDragControllerTest.DragToSeparateWindowAttemptToSpawnDoubleNestedRunLoop/TabDragging.0


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/ca5d9246273406d4d06d2fd9a50eb926

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326019991</id>
        <title>Implement SignInAndHistorySyncCoordinator</title>
        <author>
            <name>ju...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326019991"/>
        <updated>2024-02-20T09:33:28.930Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325909526</id>
        <title>Regression :  Text  is Invisible after applying theme and enabling dark mode .</title>
        <author>
            <name>ro...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325909526"/>
        <updated>2024-02-20T09:13:04.615Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version : 123.0.6311.0 (Official Build) (64-bit)5bfa48a74b59cc24b75d4ee2ff69130f06bbfda2-refs/branch-heads/6311@{#1}

OS: Win(10,11) , Mac (14.3) .

Preconditions:
Enable System Dark Mode

Steps to reproduce:
1. Launch Chrome and Open NTP and apply theme : https://chromewebstore.google.com/detail/winter-window/ckjkpeglhgpdlfehmadpnmchcncmmhei.
2. Open Ntp and click on Search by image icon .
3. Observe text "Drag an image here or " is Invisible after applying theme and enabling dark mode .

Actual Result :  Text  is Invisible after applying theme and enabling dark mode .

Expected Result : Text should be visible after applying theme and enabling dark mode .

This option is Introduced from  M-123 , below is the bisect info :

Good Build : 123.0.6299.0

Bad Build : 123.0.6300.0

Please find the attached screencast below :
http://somup.com/cZnYQipuRW

Bisect info :

Change Log : https://chromium.googlesource.com/chromium/src/+log/123.0.6299.2..123.0.6300.0?pretty=full

@Team we are Unable to find the culprit from the Changelog URL please help us in assigning it to the right owner.


Note:
1. Issue is unable to repro on latest Stable #121.0.6167.185 , Beta #122.0.6261.39 .
2. Issue is able to repro on Dev #123.0.6300.3.

Thank You..!!!</content>
    </entry>
    <entry>
        <id>325928325</id>
        <title>in_process_fuzzers don't seem to like the 'fork' libfuzzer strategy</title>
        <author>
            <name>ad...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325928325"/>
        <updated>2024-02-20T08:52:41.810Z</updated>
        <summary>-</summary>
        <content type="html">[This crash](https://clusterfuzz.com/testcase-detail/6501357363593216) with this stack:

```
[50823:50823:0218/073328.131215:FATAL:test_utils.cc(349)] Check failed: RunLoop::Run() timed out. Timeout set at ProxyRunTestOnMainThreadLoop@content/public/test/browser_test_base.cc:851..
    #0 0x59abf1ce2976 in ___interceptor_backtrace third_party/llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc:4358:13
    #1 0x7810839dee7a in base::debug::CollectStackTrace(void const**, unsigned long) base/debug/stack_trace_posix.cc:1040:7
    #2 0x781083980b1d in StackTrace base/debug/stack_trace.cc:221:12
    #3 0x781083980b1d in base::debug::StackTrace::StackTrace() base/debug/stack_trace.cc:218:28
    #4 0x7810836487c4 in logging::LogMessage::Flush() base/logging.cc:706:29
    #5 0x781083647ea2 in logging::LogMessage::~LogMessage() base/logging.cc:695:3
    #6 0x59abf7017d3c in base::test::(anonymous namespace)::StandardTimeoutCallback(base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;) base/test/scoped_run_loop_timeout.cc:39:3
    #7 0x59abf70189f3 in Invoke&lt;void (*const &amp;)(const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;), const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;&gt; base/functional/bind_internal.h:685:12
    #8 0x59abf70189f3 in MakeItSo&lt;void (*const &amp;)(const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;), const std::__Cr::tuple&lt;&gt; &amp;, const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;&gt; base/functional/bind_internal.h:922:12
    #9 0x59abf70189f3 in RunImpl&lt;void (*const &amp;)(const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;), const std::__Cr::tuple&lt;&gt; &amp;&gt; base/functional/bind_internal.h:1059:14
    #10 0x59abf70189f3 in base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (*)(base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;)&gt;, base::internal::BindState&lt;false, true, false, void (*)(base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;)&gt;, void (base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;)&gt;::Run(base::internal::BindStateBase*, base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;&amp;&amp;, base::Location const&amp;) base/functional/bind_internal.h:979:12
    #11 0x59abf701830a in base::RepeatingCallback&lt;void (base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;)&gt;::Run(base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;) const &amp; base/functional/callback.h:344:12
    #12 0x59abf7018078 in Invoke&lt;const base::RepeatingCallback&lt;void (const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;)&gt; &amp;, const base::Location &amp;, const base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt; &amp;, const base::Location &amp;&gt; base/functional/bind_internal.h:844:49
    #13 0x59abf7018078 in MakeItSo&lt;const base::RepeatingCallback&lt;void (const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;)&gt; &amp;, const std::__Cr::tuple&lt;base::Location, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt; &gt; &amp;, const base::Location &amp;&gt; base/functional/bind_internal.h:922:12
    #14 0x59abf7018078 in RunImpl&lt;const base::RepeatingCallback&lt;void (const base::Location &amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt;, const base::Location &amp;)&gt; &amp;, const std::__Cr::tuple&lt;base::Location, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; ()&gt; &gt; &amp;, 0UL, 1UL&gt; base/functional/bind_internal.h:1059:14
    #15 0x59abf7018078 in base::internal::Invoker&lt;base::internal::FunctorTraits&lt;base::RepeatingCallback&lt;void (base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;)&gt;, base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt; const&amp;&gt;, base::internal::BindState&lt;false, true, true, base::RepeatingCallback&lt;void (base::Location const&amp;, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;, base::Location const&amp;)&gt;, base::Location, base::RepeatingCallback&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt; ()&gt;&gt;, void (base::Location const&amp;)&gt;::Run(base::internal::BindStateBase*, base::Location const&amp;) base/functional/bind_internal.h:979:12
    #16 0x78108373dd62 in Run base/functional/callback.h:156:12
    #17 0x78108373dd62 in base::(anonymous namespace)::OnRunLoopTimeout(base::RunLoop*, base::Location const&amp;, base::OnceCallback&lt;void (base::Location const&amp;)&gt;) base/run_loop.cc:41:25
    #18 0x781083747c75 in Invoke&lt;void (*)(base::RunLoop *, const base::Location &amp;, base::OnceCallback&lt;void (const base::Location &amp;)&gt;), base::RunLoop *, base::Location, base::RepeatingCallback&lt;void (const base::Location &amp;)&gt; &gt; base/functional/bind_internal.h:685:12
    #19 0x781083747c75 in MakeItSo&lt;void (*)(base::RunLoop *, const base::Location &amp;, base::OnceCallback&lt;void (const base::Location &amp;)&gt;), std::__Cr::tuple&lt;base::internal::UnretainedWrapper&lt;base::RunLoop, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;, base::Location, base::RepeatingCallback&lt;void (const base::Location &amp;)&gt; &gt; &gt; base/functional/bind_internal.h:922:12
    #20 0x781083747c75 in RunImpl&lt;void (*)(base::RunLoop *, const base::Location &amp;, base::OnceCallback&lt;void (const base::Location &amp;)&gt;), std::__Cr::tuple&lt;base::internal::UnretainedWrapper&lt;base::RunLoop, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;, base::Location, base::RepeatingCallback&lt;void (const base::Location &amp;)&gt; &gt;, 0UL, 1UL, 2UL&gt; base/functional/bind_internal.h:1059:14
    #21 0x781083747c75 in base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (*)(base::RunLoop*, base::Location const&amp;, base::OnceCallback&lt;void (base::Location const&amp;)&gt;), base::RunLoop*, base::Location&amp;&amp;, base::RepeatingCallback&lt;void (base::Location const&amp;)&gt;&amp;&amp;&gt;, base::internal::BindState&lt;false, true, false, void (*)(base::RunLoop*, base::Location const&amp;, base::OnceCallback&lt;void (base::Location const&amp;)&gt;), base::internal::UnretainedWrapper&lt;base::RunLoop, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;, base::Location, base::RepeatingCallback&lt;void (base::Location const&amp;)&gt;&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) base/functional/bind_internal.h:972:12
    #22 0x78108374b3a2 in Run base/functional/callback.h:156:12
    #23 0x78108374b3a2 in void base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;::ForwardOnce&lt;&gt;() base/cancelable_callback.h:134:26
    #24 0x78108374b733 in Invoke&lt;void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt;::*)(), const base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt; &gt; &amp;&gt; base/functional/bind_internal.h:752:12
    #25 0x78108374b733 in MakeItSo&lt;void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt;::*)(), std::__Cr::tuple&lt;base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt; &gt; &gt; &gt; base/functional/bind_internal.h:946:5
    #26 0x78108374b733 in void base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;::*&amp;)(), base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;&gt;&amp;&amp;&gt;, base::internal::BindState&lt;true, true, false, void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;::*)(), base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;&gt;&gt;, void ()&gt;::RunImpl&lt;void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;::*)(), std::__Cr::tuple&lt;base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;&gt;&gt;, 0ul&gt;(void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;::*&amp;&amp;)(), std::__Cr::tuple&lt;base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt;&gt;&gt;&gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul&gt;) base/functional/bind_internal.h:1059:14
    #27 0x7810837c6e71 in Run base/functional/callback.h:156:12
    #28 0x7810837c6e71 in base::TaskAnnotator::RunTaskImpl(base::PendingTask&amp;) base/task/common/task_annotator.cc:202:34
    #29 0x781083849b76 in RunTask&lt;(lambda at ../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:475:11)&gt; base/task/common/task_annotator.h:89:5
    #30 0x781083849b76 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::LazyNow*) base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:473:23
    #31 0x781083848532 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:338:41
    #32 0x78108384a8cf in non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:0
    #33 0x781083a3611d in base::MessagePumpGlib::Run(base::MessagePump::Delegate*) base/message_loop/message_pump_glib.cc:691:48
    #34 0x78108384b8a0 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:641:12
    #35 0x78108373cac5 in base::RunLoop::Run(base::Location const&amp;) base/run_loop.cc:134:14
    #36 0x59abff2ed378 in content::LoadStopObserver::Wait() content/public/test/test_utils.cc:349:15
    #37 0x59abff28a224 in WaitForLoadStopWithoutSuccessCheck content/public/test/browser_test_utils.cc:790:24
    #38 0x59abff28a224 in content::WaitForLoadStop(content::WebContents*) content/public/test/browser_test_utils.cc:813:3
    #39 0x59abff4b9bcd in InProcessBrowserTest::PreRunTestOnMainThread() chrome/test/base/in_process_browser_test.cc:948:5
    #40 0x59abff27e242 in content::BrowserTestBase::ProxyRunTestOnMainThreadLoop() content/public/test/browser_test_base.cc:878:5
    #41 0x59abff281c0b in Invoke&lt;void (content::BrowserTestBase::*)(), content::BrowserTestBase *&gt; base/functional/bind_internal.h:752:12
    #42 0x59abff281c0b in MakeItSo&lt;void (content::BrowserTestBase::*)(), std::__Cr::tuple&lt;base::internal::UnretainedWrapper&lt;content::BrowserTestBase, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt; &gt; &gt; base/functional/bind_internal.h:922:12
    #43 0x59abff281c0b in RunImpl&lt;void (content::BrowserTestBase::*)(), std::__Cr::tuple&lt;base::internal::UnretainedWrapper&lt;content::BrowserTestBase, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt; &gt;, 0UL&gt; base/functional/bind_internal.h:1059:14
    #44 0x59abff281c0b in base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (content::BrowserTestBase::*)(), content::BrowserTestBase*&gt;, base::internal::BindState&lt;true, true, false, void (content::BrowserTestBase::*)(), base::internal::UnretainedWrapper&lt;content::BrowserTestBase, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) base/functional/bind_internal.h:972:12
    #45 0x781076fe022f in Run base/functional/callback.h:156:12
    #46 0x781076fe022f in content::BrowserMainLoop::InterceptMainMessageLoopRun() content/browser/browser_main_loop.cc:1067:36
    #47 0x781076fe0458 in content::BrowserMainLoop::RunMainMessageLoop() content/browser/browser_main_loop.cc:1079:7
    #48 0x781076fe929e in content::BrowserMainRunnerImpl::Run() content/browser/browser_main_runner_impl.cc:159:15
    #49 0x781076fd64e4 in content::BrowserMain(content::MainFunctionParams) content/browser/browser_main.cc:34:28
    #50 0x78107a3ca3c4 in content::RunBrowserProcessMain(content::MainFunctionParams, content::ContentMainDelegate*) content/app/content_main_runner_impl.cc:708:10
    #51 0x78107a3ce8ed in content::ContentMainRunnerImpl::RunBrowser(content::MainFunctionParams, bool) content/app/content_main_runner_impl.cc:1299:10
    #52 0x78107a3cdd1a in content::ContentMainRunnerImpl::Run() content/app/content_main_runner_impl.cc:1144:12
    #53 0x78107a3c757b in content::RunContentProcess(content::ContentMainParams, content::ContentMainRunner*) content/app/content_main.cc:335:36
    #54 0x78107a3c77f2 in content::ContentMain(content::ContentMainParams) content/app/content_main.cc:348:10
    #55 0x59abff27c9ad in content::BrowserTestBase::SetUp() content/public/test/browser_test_base.cc:608:3
    #56 0x59abff4b9004 in InProcessBrowserTest::SetUp() chrome/test/base/in_process_browser_test.cc:637:20
    #57 0x59abf7008ce3 in InProcessFuzzer::SetUp() chrome/test/fuzzing/in_process_fuzzer.cc:84:25
    #58 0x59abf700ba2c in Run chrome/test/fuzzing/in_process_fuzzer.cc:112:3
    #59 0x59abf700ba2c in FuzzTestLauncherDelegate::RunTestSuite(int, char**) chrome/test/fuzzing/in_process_fuzzer.cc:133:14
    #60 0x59abff2cfd28 in content::LaunchTestsInternal(content::TestLauncherDelegate*, unsigned long, int, char**) content/public/test/test_launcher.cc:409:31
    #61 0x59abff2d0866 in content::LaunchTests(content::TestLauncherDelegate*, unsigned long, int, char**) content/public/test/test_launcher.cc:504:10
    #62 0x59abf700d7f7 in LaunchChromeTests(unsigned long, content::TestLauncherDelegate*, int, char**) chrome/test/base/chrome_test_launcher.cc:330:10
    #63 0x59abf700b12b in main chrome/test/fuzzing/in_process_fuzzer.cc:259:10
    #64 0x780ffd451083 in __libc_start_main /build/glibc-BHL3KM/glibc-2.31/csu/libc-start.c:308:16
    #65 0x59abf1ca04aa in _start
```

is _possibly_ caused by the use of the `fork` strategy. My evidence is circumstantial, which is that this seems to affect some fuzzing tasks fatally and immediately, and others not at all. That pattern is hard to explain, and last time I saw such a pattern, it seemed to be related to use of the `fork` strategy.</content>
    </entry>
    <entry>
        <id>326013545</id>
        <title>in_process_fuzzers rarely recording new features</title>
        <author>
            <name>ad...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326013545"/>
        <updated>2024-02-20T08:47:47.740Z</updated>
        <summary>-</summary>
        <content type="html">The [fuzzing stats for `js_in_process_fuzzer`](https://clusterfuzz.com/fuzzer-stats?group_by=by-day&amp;date_start=2024-02-13&amp;date_end=2024-02-19&amp;fuzzer=libFuzzer_js_in_process_fuzzer) show it succesfully explored 99000+ new features on one of the past 7 days, but 0 features on all the other days.

Assigning to myself to poke at the logs to work out why, though I won't get to it soon.</content>
    </entry>
    <entry>
        <id>325936436</id>
        <title>Chrome Incognito Mode Accessing Passwords Saved in Normal Mode</title>
        <author>
            <name>mu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325936436"/>
        <updated>2024-02-20T08:42:16.568Z</updated>
        <summary>-</summary>
        <content type="html">Device name:
Samsung A23 Android 

Application version:
Android Chrome : 121.0.6167.178
Windows &amp; Linux  (Latest Version)


Steps to reproduce:
(1) Open Chrome in incognito mode.
(2) Type any social media.Like Facebook
(3) Click email option.Now you  can  see the all credentials like( email ,password)
(4) Note: Remember this is a private browser.

Expected result:  If any user uses a chore browser, Chrome private browser cannot access the save password. 

Actual result:Accessing saved passwords in Chrome's normal mode while browsing in incognito mode.</content>
    </entry>
    <entry>
        <id>326011468</id>
        <title>centipede stats in ClusterFuzz are partial</title>
        <author>
            <name>ad...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326011468"/>
        <updated>2024-02-20T08:39:10.332Z</updated>
        <summary>-</summary>
        <content type="html">The [stats for libfuzzer fuzzers](https://clusterfuzz.com/fuzzer-stats?group_by=by-day&amp;date_start=2024-02-13&amp;date_end=2024-02-19&amp;fuzzer=libFuzzer_js_in_process_fuzzer) are much better than for [centipede fuzzers](https://clusterfuzz.com/fuzzer-stats?group_by=by-day&amp;date_start=2024-02-13&amp;date_end=2024-02-19&amp;fuzzer=centipede_js_in_process_fuzzer).

Given that the libFuzzer team keeps telling us it's deprecated and that we should only be using centipede, we will need to fix this at some point.

I don't know if this is just affecting the display or also affecting fuzzing choices.</content>
    </entry>
    <entry>
        <id>325936435</id>
        <title>Cannot access to some site </title>
        <author>
            <name>tu...@samsung.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325936435"/>
        <updated>2024-02-20T08:11:45.159Z</updated>
        <summary>-</summary>
        <content type="html">Dear Google Team !
I cannot access to some site (
https://developers.google.com/widevine/drm/specification/device-security-levels?hl=en
https://developers.google.com/widevine/drm/specification/robustness-rules?hl=en
https://developers.google.com/widevine/drm/specification/dcsl?hl=en
https://developers.google.com/widevine/drm/specification/provisioning-models?hl=en
https://developers.google.com/widevine/drm/specification/secure-ota?hl=en
https://developers.google.com/widevine/drm/specification/keybox-renewal?hl=en).

Could you please guide me, how to access to its. Thanks !</content>
    </entry>
    <entry>
        <id>326008526</id>
        <title>"GPU failure" heuristic too aggressive</title>
        <author>
            <name>ad...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326008526"/>
        <updated>2024-02-20T08:07:54.320Z</updated>
        <summary>-</summary>
        <content type="html">Looking at the [crashes from js_in_process_fuzzer over the past 7 days](https://clusterfuzz.com/crash-stats?block=day&amp;days=7&amp;end=474546&amp;fuzzer=libFuzzer_js_in_process_fuzzer&amp;group=platform&amp;number=count&amp;sort=total_count), we see:

* A `CHECK` failure in a timeout
* A `GPU failure` in a timeout
* A `GPU failure` related to `FieldTrialList` ([this bug](https://issues.chromium.org/issues/324301746))

Those bugs all individually need addressing, but we should _also_ handle the fact that many of these are misclassified as "GPU failures".

My understanding is that ClusterFuzz's heuristics will claim a bug is a GPU failure if its log includes a phrase along the lines of "GPU process exited unexpectedly". Unfortunately that's often a side effect of crashes elsewhere, e.g. in this case, in the browser process.

[Here's the code](https://github.com/google/clusterfuzz/blob/6f9b8429d05eb0ef8b9d272c2f54f9af600948ce/src/clusterfuzz/stacktraces/__init__.py#L884).

If we can think of a way to weaken that rule, we should.</content>
    </entry>
    <entry>
        <id>326009168</id>
        <title>As part of default-enabling the IWA feature flag, update content::IsolatedWebAppsPolicy::AreIsolatedWebAppsEnabled() to solely rely on the feature flag and not also rely on the presence of the policy</title>
        <author>
            <name>cm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326009168"/>
        <updated>2024-02-20T07:53:40.750Z</updated>
        <summary>-</summary>
        <content type="html">Until now, we enable IWAs when either the feature flag or the policy is present.
After launch, we should rely solely on the feature flag.</content>
    </entry>
    <entry>
        <id>325909523</id>
        <title>Chrome browser will crash two time one day, dmp  and when crash, the browser is exist right now.</title>
        <author>
            <name>li...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325909523"/>
        <updated>2024-02-20T07:19:51.544Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. i use the ubuntu: Ubuntu 20.04.5 LTS
2. nothing can be reproduce, but i decode the dmp file
3. 

# Problem Description
crash is so frequent, i use 119 version, the problem is still exist.

# Summary
Chrome browser will crash two time one day, dmp  and when crash, the browser is exist right now.

# Custom Questions
#### How much crashed? 
The whole browser

#### Is it a problem with a plugin?
No - It's the browser itself

# Additional Data
Category: Crashes \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>325866376</id>
        <title>Regression :  Customize chrome icon is appearing dull when we apply any theme .</title>
        <author>
            <name>ro...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325866376"/>
        <updated>2024-02-20T06:59:50.695Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version : 123.0.6311.0 (Official Build) (64-bit)5bfa48a74b59cc24b75d4ee2ff69130f06bbfda2-refs/branch-heads/6311@{#1}

OS: Win(10) , Mac (14.3) and Linux(40.4)

Preconditions:
None

Steps to reproduce:
1. Launch Chrome and Open NTP and click on Customize chrome icon .
2. Click on change theme option and apply any theme.
3. Now observe the customize chrome icon .
4. Customize chrome icon is appearing dull when we apply any theme .

Actual Result :  Customize chrome icon is appearing dull when we apply any theme .

Expected Result :  Customize chrome icon should not appear dull when we apply any theme .

This option is Introduced from  M-123 , below is the bisect info :

Good Build : 123.0.6306.0 

Bad Build :  123.0.6307.0

Please find the attached screencast below :
http://somup.com/cZnY1LpumB

Bisect info :

Change Log : https://chromium.googlesource.com/chromium/src.git/+log/35a3caf096678936e3f9784dc6aadda1501ae5e8..6ad3f87773e612763884d2c748b749c93aef55c6?n=1000&amp;pretty=fuller

Suspect : https://chromium.googlesource.com/chromium/src.git/+/5e706b92c7bf3e8cb4749bde1aef1110d7ce82ba

@Will Harris : Could you please check whether this is caused with respect to your change, if not please help us in assigning it to the right owner


Note:
1. Issue is unable to repro on latest Stable #121.0.6167.185 , Beta #122.0.6261.39 , Dev #123.0.6300.3.

Thank You..!!!
</content>
    </entry>
    <entry>
        <id>326005022</id>
        <title>Non-TS deps in ts_path_mappings are missing corresponding deps and definitions</title>
        <author>
            <name>ri...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326005022"/>
        <updated>2024-02-20T06:46:38.953Z</updated>
        <summary>-</summary>
        <content type="html">Not explicitly declaring deps breaks remote execution.

For example:

```
❯ gn gen --args="target_os=\"chromeos\" enable_nacl=false is_component_build=true is_debug=true symbol_level=2 use_remoteexec=true use_siso=false" out/cros-ninja

❯ RBE_exec_strategy=remote autoninja -C out/cros-siso chrome/browser/resources/ash/inline_login:build_ts

Proxy started successfully.
 1.62s loading fs state
 2.33s load build.ninja
 7.99s Regenerating ninja files
 2.89s reloading
pre:0 local:0 remote:1 0.1/s fallback:0
FAILED: b404a0a0-4001-4574-bb38-b8aff118cb95 ACTION //chrome/browser/resources/ash/inline_login:build_ts(//build/toolchain/linux:clang_x64)
stdout:
Traceback (most recent call last):
  File "/b/f/w/out/cros-siso/../../tools/typescript/ts_library.py", line 284, in &lt;module&gt;
    main(sys.argv[1:])
  File "/b/f/w/out/cros-siso/../../tools/typescript/ts_library.py", line 246, in main
    node.RunNode([
  File "/b/f/w/third_party/node/node.py", line 34, in RunNode
    raise RuntimeError('Command \'%s\' failed\n%s' % (' '.join(cmd), err))
RuntimeError: Command '/b/f/w/third_party/node/linux/node-linux-x64/bin/node /b/f/w/third_party/node/node_modules/typescript/bin/tsc --project gen/chrome/browser/resources/ash/inline_login/tsconfig_build_ts.json' failed
gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:17:49 - error TS2792: Cannot find module 'chrome://chrome-signin/arc_account_picker/arc_util.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?

17 import {getAccountAdditionOptionsFromJSON} from 'chrome://chrome-signin/arc_account_picker/arc_util.js';
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:18:57 - error TS2792: Cannot find module 'chrome://chrome-signin/gaia_auth_host/authenticator.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?

18 import type {AuthCompletedCredentials, AuthParams} from 'chrome://chrome-signin/gaia_auth_host/authenticator.js';
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:19:29 - error TS2792: Cannot find module 'chrome://chrome-signin/gaia_auth_host/authenticator.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?

19 import {Authenticator} from 'chrome://chrome-signin/gaia_auth_host/authenticator.js';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:236:21 - error TS7006: Parameter 'e' implicitly has an 'any' type.

236         'dropLink', e =&gt; this.onDropLink_(e as CustomEvent&lt;string&gt;));
                        ~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:239:9 - error TS7006: Parameter 'e' implicitly has an 'any' type.

239         e =&gt; this.onNewWindow_(e as CustomEvent&lt;NewWindowProperties&gt;));
            ~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:242:19 - error TS7006: Parameter 'e' implicitly has an 'any' type.

242         'resize', e =&gt; this.onResize_(e as CustomEvent&lt;string&gt;));
                      ~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:245:9 - error TS7006: Parameter 'e' implicitly has an 'any' type.

245         e =&gt; this.onAuthCompleted_(e as CustomEvent&lt;AuthCompletedCredentials&gt;));
            ~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:410:27 - error TS2339: Property 'loadAccounts' does not exist on type 'Element'.

410       arcAccountPickerApp.loadAccounts().then(
                              ~~~~~~~~~~~~

gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_browser_proxy.ts:5:45 - error TS2792: Cannot find module 'chrome://chrome-signin/gaia_auth_host/authenticator.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?

5 import type {AuthCompletedCredentials} from 'chrome://chrome-signin/gaia_auth_host/authenticator.js';
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

gen/chrome/browser/resources/ash/inline_login/preprocessed/welcome_page_app.ts:10:49 - error TS2792: Cannot find module 'chrome://chrome-signin/arc_account_picker/arc_util.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?

10 import {getAccountAdditionOptionsFromJSON} from 'chrome://chrome-signin/arc_account_picker/arc_util.js';
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Found 10 errors in 3 files.

Errors  Files
     8  gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_app.ts:17
     1  gen/chrome/browser/resources/ash/inline_login/preprocessed/inline_login_browser_proxy.ts:5
     1  gen/chrome/browser/resources/ash/inline_login/preprocessed/welcome_page_app.ts:10

build finished: cannot make progress due to previous 1 errors
42.82s Build Failure: 3 done 1 failed 2 remaining - 0.07/s
 cannot make progress due to previous 1 errors
see ./out/cros-siso/siso_output for command line and output
 or ./out/cros-siso/siso.INFO
RBE Stats: down 1.14 KB, up 0 B, 1 non zero exit
```</content>
    </entry>
    <entry>
        <id>326004432</id>
        <title>update_sdk.py always download SDK from GCS</title>
        <author>
            <name>ti...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326004432"/>
        <updated>2024-02-20T06:40:06.248Z</updated>
        <summary>-</summary>
        <content type="html">[This script](https://source.chromium.org/chromium/chromium/src/+/main:build/fuchsia/update_sdk.py) should update manifest.json to avoid re-downloading the same version of SDK which takes  nearly 1 minute in `gclient sync`


```
Running hooks:  31% (68/217) Download Fuchsia SDK from GCS                                              
________ running 'python3 src/build/fuchsia/update_sdk.py --cipd-prefix=fuchsia/sdk/core/ --version=version:18.20240215.1.1' in '/usr/local/google/home/tikuta/chromium'
INFO:root:Downloading SDK from CIPD...                                                                  
Hook 'python3 src/build/fuchsia/update_sdk.py --cipd-prefix=fuchsia/sdk/core/ --version=version:18.20240215.1.1' took 48.77 secs
```
</content>
    </entry>
    <entry>
        <id>325928324</id>
        <title>Investigate why showing a preloaded WebContents is slower than re-showing a cache WebContents</title>
        <author>
            <name>ke...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325928324"/>
        <updated>2024-02-20T06:30:42.850Z</updated>
        <summary>-</summary>
        <content type="html">In a local test I found that 
- show Tab Search without preloading: 240ms
- show with preloading: 200ms
- show with preloading, no reloading: 200ms
- re-show a cached Tab Search, forced reloading: 80ms
- re-show a cached Tab Search: 60ms

The plan was to use preloading to get the initial show time to as close as re-showing time. However, the gap between them seems large. This needs investigation.

My intuition is that this gap is not as significant in p99 case. If our observation of the slow report traces is correct, most of the slow cases are running expensive font loading, which should be offloaded to preloading time, and therefore it will be (no_preload - preload) / (preload - reshow) &gt;&gt; 1. </content>
    </entry>
    <entry>
        <id>325836830</id>
        <title>Allow WebContents to navigate between WebUIs</title>
        <author>
            <name>ke...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325836830"/>
        <updated>2024-02-20T05:33:18.893Z</updated>
        <summary>-</summary>
        <content type="html">Currently a WebContents cannot navigate from one WebUI to another. We want to make this possible and investigate if it is faster than creating a new WebContents. 

Intuitively, this could save us from re-creation of common structs. However, with [RenderDocument](https://docs.google.com/document/d/1C2VKkFRSc0kdmqjKan1G4NlNlxWZqE4Wam41FNMgnmA/edit#heading=h.6kknmf22ixwc) now that even same-site navigations create new RenderFrameHost, so the potential improvement is questionable.</content>
    </entry>
    <entry>
        <id>325996682</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325996682"/>
        <updated>2024-02-20T04:41:42.677Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262294:1262336:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=5fd0397f-1615-4b6b-b7e8-68d67c30e016

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=5fd0397f-1615-4b6b-b7e8-68d67c30e016

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/blink_perf.parser/url-parser/url-parser.html
        8.16%: 20.977 -&gt; 19.2644 

Top 1 affected measurements in android-pixel2-perf:
  - blink_perf.parser/url-parser/url-parser.html
        8.16%: 20.977 -&gt; 19.2644 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325932413</id>
        <title>Hidden "Create QR Code icon" shows up when Sharing Hub is disabled via policy</title>
        <author>
            <name>bg...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325932413"/>
        <updated>2024-02-20T04:18:40.466Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Disable Sharing Hub via policy DesktopSharingHubEnabled: false
2. Start browser
3.  Click on empty space at the end of the URL/address bar (but before any icons at the end, like "Bookmark this tab")

# Problem Description
When Sharing Hub is disabled via policy "DesktopSharingHubEnabled" and you click on empty space at the end of the address bar (but before any icons at the end, like "Bookmark this tab") and then "Create QR Code for this Page" icon shows up.

# Summary
Hidden "Create QR Code icon" shows up when Sharing Hub is disabled via policy

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325992258</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325992258"/>
        <updated>2024-02-20T03:36:39.449Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262368:1262397:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7ae30215-1b75-4156-b1a4-8bb54f435df1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7ae30215-1b75-4156-b1a4-8bb54f435df1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
       15.74%: 227.5716 -&gt; 191.74161 

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
       15.74%: 227.5716 -&gt; 191.74161 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325376706</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325376706"/>
        <updated>2024-02-20T03:32:13.512Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262368:1262397:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b203767b-148e-4469-8256-e60027832d2d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b203767b-148e-4469-8256-e60027832d2d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.bindings/get-element-by-id/get-element-by-id.html
       15.74%: 227.5716 -&gt; 191.74161 

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.bindings/get-element-by-id/get-element-by-id.html
       15.74%: 227.5716 -&gt; 191.74161 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325773371</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325773371"/>
        <updated>2024-02-20T03:31:19.987Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262368:1262397:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=72c5d745-7042-4d57-b684-aef19e226e46

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=72c5d745-7042-4d57-b684-aef19e226e46

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.bindings/id-setter/id-setter.html
       15.74%: 227.5716 -&gt; 191.74161 

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.bindings/id-setter/id-setter.html
       15.74%: 227.5716 -&gt; 191.74161 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325376705</id>
        <title>[WPT] New failures introduced in external/wpt/css/css-view-transitions by import https://crrev.com/c/5308435</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325376705"/>
        <updated>2024-02-20T03:21:30.797Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5308435 introduced new failures in external/wpt/css/css-view-transitions:

List of new failures:
virtual/view-transition/external/wpt/css/css-view-transitions/pseudo-with-classes-mismatch-ident.html [ Failure ]

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/bbc413abeefdbe8de64a08c76a4f5d1315a9dc7d...b31783e518cd5c95f3143027fd31ab5b11f3bb36
Ignore lint error to unblock wpt-importer: https://github.com/web-platform-tests/wpt/commit/b31783e518cd5c95f3143027fd31ab5b11f3bb36
Test Ed25519 with small- and mixed-order points (#43751): https://github.com/web-platform-tests/wpt/commit/0926ff577d9bf675024588efb0925b0f478d299d
WebKit export of https://bugs.webkit.org/show_bug.cgi?id=269673: https://github.com/web-platform-tests/wpt/commit/d643cf9d3ce252516623a45ef07c765b6a84bc2a
Use valid pseudo-element syntax in pseudo-get-computed-style.html (#44643): https://github.com/web-platform-tests/wpt/commit/857a19cf9b386f66a7553ff88f9626f8c4afa00a [affecting this directory]
Remove the popovertarget attribute or set it to an invalid value should clear the explicitly set attr-element.: https://github.com/web-platform-tests/wpt/commit/4926f1d560da036a056fe1fba8a76273e0366d87
Use GlobalTeardownObserver for consistency on workers.: https://github.com/web-platform-tests/wpt/commit/2492b904fb46e077ca00f47bfd411d1aec0598c0
HighlightRegister was renamed to HighlightRegistry (#44631): https://github.com/web-platform-tests/wpt/commit/8ca6fb24b98c51001195e150586ae0274ef62013
Remove user-find, make inert not findable.: https://github.com/web-platform-tests/wpt/commit/8fb5ee7f7fdc0df07e813193eba17cac8466ef4a

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>325823910</id>
        <title>[WPT] New failures introduced in external by import https://crrev.com/c/5308435</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325823910"/>
        <updated>2024-02-20T03:21:30.136Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5308435 introduced new failures in external:

List of new failures:
external/wpt/inert/inert-and-find.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/external/wpt/inert/inert-and-find-expected.txt

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/bbc413abeefdbe8de64a08c76a4f5d1315a9dc7d...b31783e518cd5c95f3143027fd31ab5b11f3bb36
Ignore lint error to unblock wpt-importer: https://github.com/web-platform-tests/wpt/commit/b31783e518cd5c95f3143027fd31ab5b11f3bb36
Test Ed25519 with small- and mixed-order points (#43751): https://github.com/web-platform-tests/wpt/commit/0926ff577d9bf675024588efb0925b0f478d299d
WebKit export of https://bugs.webkit.org/show_bug.cgi?id=269673: https://github.com/web-platform-tests/wpt/commit/d643cf9d3ce252516623a45ef07c765b6a84bc2a
Use valid pseudo-element syntax in pseudo-get-computed-style.html (#44643): https://github.com/web-platform-tests/wpt/commit/857a19cf9b386f66a7553ff88f9626f8c4afa00a
Remove the popovertarget attribute or set it to an invalid value should clear the explicitly set attr-element.: https://github.com/web-platform-tests/wpt/commit/4926f1d560da036a056fe1fba8a76273e0366d87
Use GlobalTeardownObserver for consistency on workers.: https://github.com/web-platform-tests/wpt/commit/2492b904fb46e077ca00f47bfd411d1aec0598c0
HighlightRegister was renamed to HighlightRegistry (#44631): https://github.com/web-platform-tests/wpt/commit/8ca6fb24b98c51001195e150586ae0274ef62013
Remove user-find, make inert not findable.: https://github.com/web-platform-tests/wpt/commit/8fb5ee7f7fdc0df07e813193eba17cac8466ef4a

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>325773370</id>
        <title>[WPT] New failures introduced in external/wpt/html/semantics/popovers by import https://crrev.com/c/5308435</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325773370"/>
        <updated>2024-02-20T03:21:29.568Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5308435 introduced new failures in external/wpt/html/semantics/popovers:

List of new failures:
external/wpt/html/semantics/popovers/popovertarget-reflection.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/external/wpt/html/semantics/popovers/popovertarget-reflection-expected.txt

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/bbc413abeefdbe8de64a08c76a4f5d1315a9dc7d...b31783e518cd5c95f3143027fd31ab5b11f3bb36
Ignore lint error to unblock wpt-importer: https://github.com/web-platform-tests/wpt/commit/b31783e518cd5c95f3143027fd31ab5b11f3bb36
Test Ed25519 with small- and mixed-order points (#43751): https://github.com/web-platform-tests/wpt/commit/0926ff577d9bf675024588efb0925b0f478d299d
WebKit export of https://bugs.webkit.org/show_bug.cgi?id=269673: https://github.com/web-platform-tests/wpt/commit/d643cf9d3ce252516623a45ef07c765b6a84bc2a
Use valid pseudo-element syntax in pseudo-get-computed-style.html (#44643): https://github.com/web-platform-tests/wpt/commit/857a19cf9b386f66a7553ff88f9626f8c4afa00a
Remove the popovertarget attribute or set it to an invalid value should clear the explicitly set attr-element.: https://github.com/web-platform-tests/wpt/commit/4926f1d560da036a056fe1fba8a76273e0366d87 [affecting this directory]
Use GlobalTeardownObserver for consistency on workers.: https://github.com/web-platform-tests/wpt/commit/2492b904fb46e077ca00f47bfd411d1aec0598c0
HighlightRegister was renamed to HighlightRegistry (#44631): https://github.com/web-platform-tests/wpt/commit/8ca6fb24b98c51001195e150586ae0274ef62013
Remove user-find, make inert not findable.: https://github.com/web-platform-tests/wpt/commit/8fb5ee7f7fdc0df07e813193eba17cac8466ef4a

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>325773369</id>
        <title>[WPT] New failures introduced in external/wpt/html by import https://crrev.com/c/5308435</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325773369"/>
        <updated>2024-02-20T03:21:29.092Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5308435 introduced new failures in external/wpt/html:

List of new failures:
[ Linux-chrome ] external/wpt/html/semantics/invokers/invoketarget-button-event-dispatch.tentative.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/platform/linux-chrome/external/wpt/html/semantics/invokers/invoketarget-button-event-dispatch.tentative-expected.txt

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/bbc413abeefdbe8de64a08c76a4f5d1315a9dc7d...b31783e518cd5c95f3143027fd31ab5b11f3bb36
Ignore lint error to unblock wpt-importer: https://github.com/web-platform-tests/wpt/commit/b31783e518cd5c95f3143027fd31ab5b11f3bb36
Test Ed25519 with small- and mixed-order points (#43751): https://github.com/web-platform-tests/wpt/commit/0926ff577d9bf675024588efb0925b0f478d299d
WebKit export of https://bugs.webkit.org/show_bug.cgi?id=269673: https://github.com/web-platform-tests/wpt/commit/d643cf9d3ce252516623a45ef07c765b6a84bc2a [affecting this directory]
Use valid pseudo-element syntax in pseudo-get-computed-style.html (#44643): https://github.com/web-platform-tests/wpt/commit/857a19cf9b386f66a7553ff88f9626f8c4afa00a
Remove the popovertarget attribute or set it to an invalid value should clear the explicitly set attr-element.: https://github.com/web-platform-tests/wpt/commit/4926f1d560da036a056fe1fba8a76273e0366d87 [affecting this directory]
Use GlobalTeardownObserver for consistency on workers.: https://github.com/web-platform-tests/wpt/commit/2492b904fb46e077ca00f47bfd411d1aec0598c0
HighlightRegister was renamed to HighlightRegistry (#44631): https://github.com/web-platform-tests/wpt/commit/8ca6fb24b98c51001195e150586ae0274ef62013
Remove user-find, make inert not findable.: https://github.com/web-platform-tests/wpt/commit/8fb5ee7f7fdc0df07e813193eba17cac8466ef4a

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>325773368</id>
        <title>[WPT] New failures introduced in external/wpt/css by import https://crrev.com/c/5308435</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325773368"/>
        <updated>2024-02-20T03:21:28.445Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5308435 introduced new failures in external/wpt/css:

List of new failures:
[ Linux-chrome ] external/wpt/css/css-highlight-api/HighlightRegistry-maplike-tampered-Map-prototype.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/platform/linux-chrome/external/wpt/css/css-highlight-api/HighlightRegistry-maplike-tampered-Map-prototype-expected.txt

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/bbc413abeefdbe8de64a08c76a4f5d1315a9dc7d...b31783e518cd5c95f3143027fd31ab5b11f3bb36
Ignore lint error to unblock wpt-importer: https://github.com/web-platform-tests/wpt/commit/b31783e518cd5c95f3143027fd31ab5b11f3bb36
Test Ed25519 with small- and mixed-order points (#43751): https://github.com/web-platform-tests/wpt/commit/0926ff577d9bf675024588efb0925b0f478d299d
WebKit export of https://bugs.webkit.org/show_bug.cgi?id=269673: https://github.com/web-platform-tests/wpt/commit/d643cf9d3ce252516623a45ef07c765b6a84bc2a
Use valid pseudo-element syntax in pseudo-get-computed-style.html (#44643): https://github.com/web-platform-tests/wpt/commit/857a19cf9b386f66a7553ff88f9626f8c4afa00a [affecting this directory]
Remove the popovertarget attribute or set it to an invalid value should clear the explicitly set attr-element.: https://github.com/web-platform-tests/wpt/commit/4926f1d560da036a056fe1fba8a76273e0366d87
Use GlobalTeardownObserver for consistency on workers.: https://github.com/web-platform-tests/wpt/commit/2492b904fb46e077ca00f47bfd411d1aec0598c0
HighlightRegister was renamed to HighlightRegistry (#44631): https://github.com/web-platform-tests/wpt/commit/8ca6fb24b98c51001195e150586ae0274ef62013 [affecting this directory]
Remove user-find, make inert not findable.: https://github.com/web-platform-tests/wpt/commit/8fb5ee7f7fdc0df07e813193eba17cac8466ef4a [affecting this directory]

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>325992256</id>
        <title>[WPT] New failures introduced in external/wpt/WebCryptoAPI by import https://crrev.com/c/5308435</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325992256"/>
        <updated>2024-02-20T03:21:27.498Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5308435 introduced new failures in external/wpt/WebCryptoAPI:

List of new failures:
[ Linux-chrome ] external/wpt/WebCryptoAPI/derive_bits_keys/cfrg_curves_bits.https.any.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/platform/linux-chrome/external/wpt/WebCryptoAPI/derive_bits_keys/cfrg_curves_bits.https.any-expected.txt
[ Linux-chrome ] external/wpt/WebCryptoAPI/derive_bits_keys/cfrg_curves_bits.https.any.worker.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/platform/linux-chrome/external/wpt/WebCryptoAPI/derive_bits_keys/cfrg_curves_bits.https.any.worker-expected.txt
external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any-expected.txt
[ Linux-chrome ] external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/platform/linux-chrome/external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any-expected.txt
external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any.worker.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any.worker-expected.txt
[ Linux-chrome ] external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any.worker.html new failing tests: https://crrev.com/c/5308435/4/third_party/blink/web_tests/platform/linux-chrome/external/wpt/WebCryptoAPI/sign_verify/eddsa.https.any.worker-expected.txt

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/bbc413abeefdbe8de64a08c76a4f5d1315a9dc7d...b31783e518cd5c95f3143027fd31ab5b11f3bb36
Ignore lint error to unblock wpt-importer: https://github.com/web-platform-tests/wpt/commit/b31783e518cd5c95f3143027fd31ab5b11f3bb36
Test Ed25519 with small- and mixed-order points (#43751): https://github.com/web-platform-tests/wpt/commit/0926ff577d9bf675024588efb0925b0f478d299d [affecting this directory]
WebKit export of https://bugs.webkit.org/show_bug.cgi?id=269673: https://github.com/web-platform-tests/wpt/commit/d643cf9d3ce252516623a45ef07c765b6a84bc2a
Use valid pseudo-element syntax in pseudo-get-computed-style.html (#44643): https://github.com/web-platform-tests/wpt/commit/857a19cf9b386f66a7553ff88f9626f8c4afa00a
Remove the popovertarget attribute or set it to an invalid value should clear the explicitly set attr-element.: https://github.com/web-platform-tests/wpt/commit/4926f1d560da036a056fe1fba8a76273e0366d87
Use GlobalTeardownObserver for consistency on workers.: https://github.com/web-platform-tests/wpt/commit/2492b904fb46e077ca00f47bfd411d1aec0598c0
HighlightRegister was renamed to HighlightRegistry (#44631): https://github.com/web-platform-tests/wpt/commit/8ca6fb24b98c51001195e150586ae0274ef62013
Remove user-find, make inert not findable.: https://github.com/web-platform-tests/wpt/commit/8fb5ee7f7fdc0df07e813193eba17cac8466ef4a

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>325953354</id>
        <title>Vic ss trf jb k. </title>
        <author>
            <name>sh...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325953354"/>
        <updated>2024-02-20T02:36:14.931Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. D
2. F
3. 

# Problem Description
Experimental webview features please off 

# Additional Comments
Turn off 

# Summary
Vic ss trf jb k. 

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>325981182</id>
        <title>[Meta] Interop 2024 - text-wrap: balance focus area</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325981182"/>
        <updated>2024-02-20T02:33:34.154Z</updated>
        <summary>-</summary>
        <content type="html">Meta issue for Interop 2024 - text-wrap: balance focus area</content>
    </entry>
    <entry>
        <id>325981759</id>
        <title>[Meta] Interop 2024 - Text Directionality focus area</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325981759"/>
        <updated>2024-02-20T02:32:26.431Z</updated>
        <summary>-</summary>
        <content type="html">Meta issue for Interop 2024 - Text Directionality focus area</content>
    </entry>
    <entry>
        <id>325979105</id>
        <title>[Meta] Interop 2024 - Top layer animations focus area</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325979105"/>
        <updated>2024-02-20T02:30:54.114Z</updated>
        <summary>-</summary>
        <content type="html">Meta issue for @starting-style &amp; transition-behavior focus area in Interop 2024</content>
    </entry>
    <entry>
        <id>325975941</id>
        <title>[Meta] Interop 2024 - Scrollbar Styling focus area</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325975941"/>
        <updated>2024-02-20T02:29:34.024Z</updated>
        <summary>-</summary>
        <content type="html">Meta issue for Interop 2024 - Scrollbar Styling focus area</content>
    </entry>
    <entry>
        <id>325979104</id>
        <title>[Meta] Interop 2024 - requestVideoFrameCallback focus area</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325979104"/>
        <updated>2024-02-20T02:27:40.199Z</updated>
        <summary>-</summary>
        <content type="html">Meta issue for Interop 2024 - [requestVideoFrameCallback focus area](https://wpt.fyi/results/video-rvfc?label=master&amp;label=experimental&amp;aligned&amp;view=interop&amp;q=label%3Ainterop-2024-video-rvfc)</content>
    </entry>
</feed>