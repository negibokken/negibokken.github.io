<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-16T00:45:05.576Z</updated>
    <entry>
        <id>325442889</id>
        <title>Unknown links in Play Services and WIPO authorised </title>
        <author>
            <name>ge...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325442889"/>
        <updated>2024-02-16T00:45:05.576Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1) remove the unknown links please 
(2) Applicable laws protocols for their liabilities 
(3)EULA and WIPO authorised for their Tribunals in their own War Crimes

What is the expected result?  Stuck like Chuck in the chomo film affiliates who now met their Tribunals 


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>325359478</id>
        <title>ContaminationDelayBrowserTest failing on MSAN bots</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325359478"/>
        <updated>2024-02-16T00:36:00.077Z</updated>
        <summary>-</summary>
        <content type="html">e.g. https://ci.chromium.org/ui/p/chromium/builders/ci/Linux%20ChromiumOS%20MSan%20Tests/41283/overview

[ RUN      ] ContaminationDelayBrowserTest.IgnoresSameOrigin
2024-02-15T22:02:04.774759Z WARNING content_browsertests[30103:30103]: [field_trial_util.cc(105)] Field trial config study skipped: PrefetchRedirects.Enabled (some of its features are already overridden)
2024-02-15T22:02:04.837159Z WARNING content_browsertests[30103:30103]: [audio_manager_linux.cc(53)] Falling back to ALSA for audio output. PulseAudio is not available or could not be initialized.

DevTools listening on ws://127.0.0.1:33107/devtools/browser/0cef1e14-578d-4c4e-a37a-604b40125c7c
2024-02-15T22:02:05.146888Z WARNING content_browsertests[30288:30288]: [gpu_init.cc(556)] Using passthrough command decoder. NOTE: This log is to help triage feedback reports and does not by itself mean there is an issue.
2024-02-15T22:02:05.168604Z WARNING content_browsertests[30288:30288]: [gpu_memory_buffer_support_x11.cc(49)] dri3 extension not supported.
2024-02-15T22:02:05.222888Z WARNING content_browsertests[30288:30288]: [sandbox_linux.cc(418)] InitializeSandbox() called with multiple threads in process gpu-process.
2024-02-15T22:02:05.579493Z ERROR content_browsertests[30297:30385]: [default_socket.cc(59)] /run/perfetto/ exists but cannot be accessed. Falling back on /tmp/  (errno: 13, Permission denied)
base/test/test_future.h:204: Failure
Failed
RunLoop::Run() timed out. Timeout set at ProxyRunTestOnMainThreadLoop@content/public/test/browser_test_base.cc:851.</content>
    </entry>
    <entry>
        <id>325530075</id>
        <title>Tests are failing: browser_test_utils.cc(2104): Value of: accessibility_waiter.WaitForNotification()\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325530075"/>
        <updated>2024-02-16T00:25:26.913Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
browser_test_utils.cc(2104): Value of: accessibility_waiter.WaitForNotification()\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PDFOCRIntegrationTest.NoOcrResultOnBlankImagePdf/All.1
- ninja://chrome/test:browser_tests/PDFOCRIntegrationTest.HelloWorld/All.1
- ninja://chrome/test:browser_tests/AutofillAccessibilityTest.TestAutocompleteState


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/9b88b28653cfd0cb21857e026e1dee8a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325302202</id>
        <title>ARIA spec update to ignore aria-hidden=true on root document elements (e.g., body/html elements)</title>
        <author>
            <name>sc...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302202"/>
        <updated>2024-02-16T00:23:51.123Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. put an aria-hidden=true attribute on the html or body element of a web page
2. review accessibility tree
3. all non-focusable elements are marked as ignored

# Problem Description
The ARIA spec is updating with a new requirement where user agents must ignore the aria-hidden=true attribute when used on the HTML or BODY element of a web page.

The specific text:

To prevent authors erroneously hiding entire window-rendered documents only to those using assistive technology, user agents MUST NOT expose the hidden state to assistive technologies if it is specified on the root element or the host language element that represents the contents of the primary document in view. For instance, the html or body elements in an HTML document, or the root svg element if it is rendered as its own primary document in the browser window. If authors were to specify aria-hidden="true" on the opening tag for an embedded document, for instance on a math or svg embedded within an HTML document, user agents would still be expected to hide these elements from assistive technologies.

A basic test case, such as, would result in no ignored elements, as the aria-hidden=true on the html element would be ignored.

&lt;html lang=en aria-hidden=true&gt;
  &lt;h1&gt;hello world&lt;/h1&gt;
  &lt;p&gt;my content&lt;/p&gt;
  &lt;a href=#&gt;a hyperlink&lt;/a&gt;
&lt;/html&gt;

ARIA PR 1880 - https://github.com/w3c/aria/pull/1880

# Summary
ARIA spec update to ignore aria-hidden=true on root document elements (e.g., body/html elements)

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325528282</id>
        <title>Step compile failed on mac-arm64-dcheck on official-desktop builders</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325528282"/>
        <updated>2024-02-16T00:09:04.648Z</updated>
        <summary>-</summary>
        <content type="html">Build URL:
https://ci.chromium.org/ui/p/chrome/builders/ci/mac-arm64-dcheck/6467/overview

Error-Log URL:
https://logs.chromium.org/logs/chrome/buildbucket/cr-buildbucket/8755983132139729089/+/u/compile/stdout

Error logs are shown below:
[20153/65319] SOLINK libvk_swiftshader.dylib libvk_swiftshader.dylib.TOC libvk_swiftshader.dylib.dSYM/Contents/Info.plist libvk_swiftshader.dylib.dSYM/Contents/Resources/DWARF/libvk_swiftshader.dylib
FAILED: libvk_swiftshader.dylib libvk_swiftshader.dylib.TOC libvk_swiftshader.dylib.dSYM/Contents/Info.plist libvk_swiftshader.dylib.dSYM/Contents/Resources/DWARF/libvk_swiftshader.dylib
if [ ! -e "./libvk_swiftshader.dylib" -o ! -e "./libvk_swiftshader.dylib.TOC" ] || ../../build/mac_f...(too long)</content>
    </entry>
    <entry>
        <id>325525561</id>
        <title>OneCopyCanvasCapture broken?</title>
        <author>
            <name>ha...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325525561"/>
        <updated>2024-02-16T00:01:52.121Z</updated>
        <summary>-</summary>
        <content type="html">I noticed Meet effects processing causes ARGB readbacks from HTMLCanvasElement::NotifyListenersCanvasChanged, see https://screenshot.googleplex.com/4Hqs6Mqv3WPXdWX and pprof https://screenshot.googleplex.com/6ivxQYrybQoQGDu. It seems one-copy canvas capture isn't happening on my mac.

This was after noticing similar problems on an alderlake i5, following up tomorrow with results from that machine.

Tried Metal/OpenGL backends, same result.

about:gpu: attached.</content>
    </entry>
    <entry>
        <id>325524381</id>
        <title>Test bug for Chromium GSoC component</title>
        <author>
            <name>sr...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325524381"/>
        <updated>2024-02-15T23:37:04.279Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325415944</id>
        <title>Test spin-eventloop-not-longtask.html fails intermittently on Linux</title>
        <author>
            <name>st...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325415944"/>
        <updated>2024-02-15T23:19:22.110Z</updated>
        <summary>-</summary>
        <content type="html">Test external/wpt/longtask-timing/spin-eventloop-not-longtask.html is flaky on Linux and fails intermittently with error:

`This is a testharness.js-based test.
Harness Error. harness_status.status = 1 , harness_status.message = Uncaught TypeError: Assignment to constant variable.
Harness: the test ran to completion.`


Please see: https://ci.chromium.org/ui/test/chromium/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Flongtask-timing%2Fspin-eventloop-not-longtask.html</content>
    </entry>
    <entry>
        <id>325372960</id>
        <title>MacOS: Render artefacts appear, and persist when hovering elements and animating box-shadow.</title>
        <author>
            <name>ti...@immutable.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325372960"/>
        <updated>2024-02-15T23:10:21.087Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. load repro codepen: https://codepen.io/glomotion/pen/BabMzxv?editors=1100
2. hover each of the buttons
3. observe remaining pixel artefacts

# Problem Description
The buttons render correctly when you first load the page. However when hovering, strange pixel dot artefacts appear, at varying levels of brightness, depending on how quickly you hover them.
Can provide screenshots and video of the issue happening if it helps.

# Additional Comments
Cant replicate this inside of Firefox or Safari. 

# Summary
MacOS: Render artefacts appear, and persist when hovering elements and animating box-shadow.

# Custom Questions
#### Which component does this fall under?
Blink&gt;Animation

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>325442888</id>
        <title>Blintz security daily query rule: overactive "security nag" rule/check</title>
        <author>
            <name>am...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325442888"/>
        <updated>2024-02-15T22:55:22.396Z</updated>
        <summary>-</summary>
        <content type="html">The Blintz security_nag_check.py is over-actively pinging on security bugs that were recently updated (e.g. https://issues.chromium.org/u/0/issues/41493884#comment22). 

I know we are looking at this right now, but filing a bug to track in the interim. 

</content>
    </entry>
    <entry>
        <id>325517421</id>
        <title>Capture more types of Exception beyond TravelException for debugging</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325517421"/>
        <updated>2024-02-15T22:40:22.590Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325310963</id>
        <title>ProfilePickerCreationFlowBrowserTest.OpenProfile flaky on macOS</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325310963"/>
        <updated>2024-02-15T22:33:09.892Z</updated>
        <summary>-</summary>
        <content type="html">Step "browser_tests on Mac-11 or Mac-10.16" failing on builder "chromium/ci/Mac11 Tests"

List of failed builders:

Builder: Mac11 Tests
https://ci.chromium.org/p/chromium/builders/ci/Mac11%20Tests
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/Mac11%20Tests/b8755994038141990321
Step "browser_tests on Mac-12" failing on builder "chromium/ci/Mac12 Tests"

List of failed builders:

Builder: Mac12 Tests
https://ci.chromium.org/p/chromium/builders/ci/Mac12%20Tests
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/Mac12%20Tests/b8755994038001097633
Step "browser_tests on Mac-13" failing on builder "chromium/ci/Mac13 Tests"

List of failed builders:

Builder: Mac13 Tests
https://ci.chromium.org/p/chromium/builders/ci/Mac13%20Tests
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/Mac13%20Tests/b8756000517036963553
Step "cr23_browser_tests on Mac-13" failing on builder "chromium/ci/Mac13 Tests"

List of failed builders:

Builder: Mac13 Tests
https://ci.chromium.org/p/chromium/builders/ci/Mac13%20Tests
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/Mac13%20Tests/b8756000517036963553

Sample failure: https://ci.chromium.org/ui/p/chromium/builders/ci/Mac12%20Tests/17072/overview

[ RUN      ] ProfilePickerCreationFlowBrowserTest.OpenProfile
[21283:259:0215/135438.634413:WARNING:chrome_main_delegate.cc(740)] This is Chrome version 123.0.6304.0 (not a warning)
[21283:259:0215/135439.080183:WARNING:field_trial_util.cc(105)] Field trial config study skipped: ForceSigninFlowInProfilePicker.Enabled (some of its features are already overridden)
[21283:259:0215/135439.142845:WARNING:field_trial_util.cc(105)] Field trial config study skipped: PreconnectToSearchDesktop.EnabledWithStartupDelayForegroundOnly (some of its features are already overridden)
[21283:259:0215/135439.299661:ERROR:policy_logger.cc(157)] :components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.
../../chrome/browser/ui/views/profiles/profile_picker_view_browsertest.cc:1935: Failure
Value of: ProfileSwitchPromoHasBeenShown(new_browser)
  Actual: false
Expected: true</content>
    </entry>
    <entry>
        <id>325515168</id>
        <title>Use DESCRIPTION_AS_ID in ViewElements</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325515168"/>
        <updated>2024-02-15T22:26:05.887Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325415943</id>
        <title>Green win11-arm64-rel-tests builder and add to gardening</title>
        <author>
            <name>ku...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325415943"/>
        <updated>2024-02-15T22:24:50.957Z</updated>
        <summary>-</summary>
        <content type="html">We are going to release Chrome stable to win arm64, as a supported platform, we would need a garderned builder to keep track the health of the platform.

The [win-arm64-rel](https://ci.chromium.org/ui/p/chromium/builders/ci/win-arm64-rel) is running good and [win11-arm64-rel-tests](https://ci.chromium.org/ui/p/chromium/builders/ci/win11-arm64-rel-tests) is consistent red.

The failure could be checked in [Generic Flakiness Dashboard](https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=variant_builder:in:win11-arm64-rel-tests&amp;fh=eJwVzL2ugzAMhuF78cxUnaXcQWdGhCIaHGEpP9Sxe4qq3jv26M-P3vkLtMEI59-99hsMEFvWUm2hHvqOTCmFxiG-wlMpb8hm5DzQRT1U7NxWWacD48NDn56U_z20ryw-zcsARbPQhBmjwCisaBGS7BWjjKW90ah_fssFjRsyYQ..&amp;p=selected_status:%22FLAKY%22,%22CONSISTENTLY_UNEXPECTED%22,%22HAS_EXONERATED%22,%22EXPECTEDLY_SKIPPED%22,%22EXPECTED%22,%22HAS_UNEXPECTEDLY_SKIPPED%22,%22HAS_UNEXPECTED_RESULTS%22)


</content>
    </entry>
    <entry>
        <id>325513778</id>
        <title>PPAPI: User agent and related client hints in  trusted bidding signal requests</title>
        <author>
            <name>xx...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325513778"/>
        <updated>2024-02-15T22:14:43.906Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. N/A
2. 
3. 

# Problem Description
There are 2 issues related to user agent and client hints (UA-CH) in trusted bidding signal requests in PPAI (FLEDGE).
1. Android device using Chrome's "Request desktop site" feature would change user agent string in the typical browser renderer network requests but NOT in the trusted bidding signal request in PPAPI (FLEDGE).
2.  The trusted bidding signal requests do not include any user agent client hints as the typical browser renderer network requests. 

# Summary
PPAPI: User agent and related client hints in  trusted bidding signal requests

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>325513637</id>
        <title>Tests are failing: ninja://:blink\\_web\\_tests/%http/tests/misc/resource-timing-navigation-in-restored-iframe-same-to-cross.html%</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325513637"/>
        <updated>2024-02-15T22:10:29.839Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with a test name like: ninja://:blink\\_web\\_tests/%http/tests/misc/resource-timing-navigation-in-restored-iframe-same-to-cross.html%

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/927709bb7b68cb94e7e8edb7ecffdc6c

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325372959</id>
        <title>Make mojo README more discoverable</title>
        <author>
            <name>ya...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325372959"/>
        <updated>2024-02-15T21:57:31.393Z</updated>
        <summary>-</summary>
        <content type="html">The README [1] that overviews much of mojo is not that discoverable. Add pointers to this doc to make it easier to find.</content>
    </entry>
    <entry>
        <id>325316150</id>
        <title>WebUIBubbleManagerBrowserTest.WarmupLevel is flaky</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325316150"/>
        <updated>2024-02-15T21:50:14.839Z</updated>
        <summary>-</summary>
        <content type="html">Step "browser_tests on Ubuntu-22.04" failing on builder "chromium/ci/linux-chromeos-dbg"

List of failed builders:

Builder: linux-chromeos-dbg
https://ci.chromium.org/p/chromium/builders/ci/linux-chromeos-dbg
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/linux-chromeos-dbg/b8756018141217423969


../../chrome/browser/ui/views/bubble/webui_bubble_manager_browsertest.cc:171: Failure
Expected equality of these values:
  bubble_manager()-&gt;bubble_warmup_level()
    Which is: 4-byte object &lt;01-00 00-00&gt;
  WebUIBubbleWarmUpLevel::kNoRenderer
    Which is: 4-byte object &lt;00-00 00-00&gt;</content>
    </entry>
    <entry>
        <id>325410304</id>
        <title>Network panel -&amp;gt; Cookies parsing is not working properly</title>
        <author>
            <name>sh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325410304"/>
        <updated>2024-02-15T21:47:57.032Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 123.0.6299.0 (Official Build) canary (x86_64) 


What steps will reproduce the problem?
1. Navigate to cnn.com
2. Open DevTools Network panel and filter requests with "cookie-domain:.rubiconproject.com cookie-name:khaos cookie-path:/ "
3. Click the request (as shown in the screenshot), and verifies that this request sets two cookies.
4. Open Network Panel -&gt; Cookies

What is the expected result?
Two cookies are listed under Response Cookies

What happens instead?
Three cookies are listed.

You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>325302199</id>
        <title>DCHECK fuzzing crash in auction_worklet::AuctionV8Helper::ScriptTimeoutHelper</title>
        <author>
            <name>ca...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302199"/>
        <updated>2024-02-15T21:46:40.626Z</updated>
        <summary>-</summary>
        <content type="html">Crash log: http://gpaste/5722958994079744

gn args:
# DCHECKS are really useful when getting your fuzzer up and running correctly,
# but will often get in the way when running actual fuzzing, so we will disable
# this later.
dcheck_always_on = true

# Without this flag, our fuzzer target won't exist.
enable_mojom_fuzzer = true

# ASAN is super useful for fuzzing, but in this case we just want it to help us
# debug the inevitable lifetime issues while we get everything set-up correctly!
is_asan = false
is_component_build = true
is_debug = false
optimize_for_fuzzing = true
use_remoteexec = true
use_libfuzzer = true
symbol_level = 2</content>
    </entry>
    <entry>
        <id>325506698</id>
        <title>[Missing Test] Trigger a module when opening a new tab</title>
        <author>
            <name>ha...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325506698"/>
        <updated>2024-02-15T21:44:33.707Z</updated>
        <summary>-</summary>
        <content type="html">Write automated tests for the following:

https://testtracker.googleplex.com/testplans/testcase/detail/7155711?id=35315&amp;revision=150

If we have more module to show when opening a new Tab, add a test.</content>
    </entry>
    <entry>
        <id>325507106</id>
        <title>[Missing Test] Hide one module on tablets.</title>
        <author>
            <name>ha...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325507106"/>
        <updated>2024-02-15T21:41:09.250Z</updated>
        <summary>-</summary>
        <content type="html">Write automated tests for the following:
https://testtracker.googleplex.com/testplans/testcase/detail/7155716?id=35315&amp;revision=150

When there are more modules to show in the magic stack, write a test:
1) show two modules;
2) remove one module;
verify that the remaining module will occupy the entire magic stack.</content>
    </entry>
    <entry>
        <id>325506399</id>
        <title>rustc suggestions use unwieldy_crate_name instead of nice_crate_name</title>
        <author>
            <name>lu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325506399"/>
        <updated>2024-02-15T21:29:35.964Z</updated>
        <summary>-</summary>
        <content type="html">SETUP STEP A: `gn clean &lt;BUILD_DIR&gt;`

SETUP STEP B: `autoninja -C &lt;BUILD_DIR&gt; components/qr_code_generator:qr_code_generator` (this builds a random/arbitrary Rust target to prebuild `std` and `core` crates)

STEP 1: CREATE/EDIT `third_party/blink/renderer/platform/image-decoders/rust_bindings/scoped_refptr.rs`:

    ```
    pub struct ScopedRefPtr&lt;T&gt;(pub core::ptr::NonNull&lt;T&gt;);
    ```

STEP 2: CREATE/EDIT `third_party/blink/renderer/platform/image-decoders/rust_bindings/image_resource_reader.rs`:

    ```
    extern crate third_uparty_sblink_srenderer_splatform_simage_ddecoders_srust_ubindings_cscoped_urefptr as scoped_refptr;  
                                                                                                                         
    fn foo() {                                                                                                               
        let _: ScopedRefPtr&lt;_&gt; = todo!();                                                                                    
    }                                                                                                                        
    ```

STEP 3: Cmdline to build scoped_refptr.rs:
$ ../../third_party/rust-toolchain/bin/rustc --crate-type rlib --edition=2021 --sysroot=local_rustc_sysroot ../../third_party/blink/renderer/platform/image-decoders/rust_bindings/scoped_refptr.rs -o obj/third_party/blink/renderer/platform/image-decoders/rust_bindings/libthird_uparty_sblink_srenderer_splatform_simage_ddecoders_srust_ubindings_cscoped_urefptr.rlib

STEP 4: Cmdline to build image_resource_reader.rs:
$ ../../third_party/rust-toolchain/bin/rustc --crate-type rlib --edition=2021 --sysroot=local_rustc_sysroot ../../third_party/blink/renderer/platform/image-decoders/rust_bindings/image_resource_reader.rs --extern third_uparty_sblink_srenderer_splatform_simage_ddecoders_srust_ubindings_cscoped_urefptr=obj/third_party/blink/renderer/platform/image-decoders/rust_bindings/libthird_uparty_sblink_srenderer_splatform_simage_ddecoders_srust_ubindings_cscoped_urefptr.rlib

ACTUAL BEHAVIOR: The command line above (i.e. step 4) repros the following suggestion:

    ```
    error[E0412]: cannot find type `ScopedRefPtr` in this scope
     --&gt; ../../third_party/blink/renderer/platform/image-decoders/rust_bindings/image_resource_reader.rs:8:12
      |
    8 |     let _: ScopedRefPtr&lt;_&gt; = todo!();
      |            ^^^^^^^^^^^^ not found in this scope
      |
    help: consider importing this struct
      |
    5 + use third_uparty_sblink_srenderer_splatform_simage_ddecoders_srust_ubindings_cscoped_urefptr::ScopedRefPtr;
      |
    ```

EXPECTED BEHAVIOR: The suggestions should have said `use scoped_refptr::ScopedRefPtr` (instead of `use third_uparty_sblink…..`)
</content>
    </entry>
    <entry>
        <id>325504977</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testLocalProfiles_NoSync </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325504977"/>
        <updated>2024-02-15T21:20:29.312Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testLocalProfiles_NoSync would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testLocalProfiles_NoSync
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testLocalProfiles_NoSync
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testLocalProfiles_NoSync

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>325505411</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testAddProfileWithInvalidPhone </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325505411"/>
        <updated>2024-02-15T21:20:26.605Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testAddProfileWithInvalidPhone is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testAddProfileWithInvalidPhone
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testAddProfileWithInvalidPhone
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testAddProfileWithInvalidPhone

</content>
    </entry>
    <entry>
        <id>325503352</id>
        <title>Implement polished multi IDP UI</title>
        <author>
            <name>np...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325503352"/>
        <updated>2024-02-15T21:17:19.068Z</updated>
        <summary>-</summary>
        <content type="html">We currently have some basic multi IDP UI, but once we get approvals from UX we can implement a more polished UI.</content>
    </entry>
    <entry>
        <id>325415940</id>
        <title>Buildbot runs link to b/ for public chrome bugs</title>
        <author>
            <name>pb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325415940"/>
        <updated>2024-02-15T21:01:38.341Z</updated>
        <summary>-</summary>
        <content type="html">https://ci.chromium.org/ui/p/chromium/builders/ci/linux-exp-tsan-fyi-rel/983/overview is linking to b/&lt;bug&gt; instead of issues.chromium.org/&lt;bug&gt; even though it's part of the public tracker

This is bad as the bug should be publicly accessible, but also it's better if the link is accessible for Googlers outside of corp (like on mobile).</content>
    </entry>
    <entry>
        <id>325314723</id>
        <title>Implement Chrome flag for ESB download row promotion</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325314723"/>
        <updated>2024-02-15T20:58:52.998Z</updated>
        <summary>-</summary>
        <content type="html">Let's implement a chrome flag to support manually enabling the ESB download row promotion feature and link it to `EsbDownloadRowPromo`. </content>
    </entry>
    <entry>
        <id>325415939</id>
        <title>Implement feature control for ESB download row promotion</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325415939"/>
        <updated>2024-02-15T20:56:45.979Z</updated>
        <summary>-</summary>
        <content type="html">Let's implement a feature to gate the ESB download row promotion feature. We can call it `EsbDownloadRowPromo`. 

Implement the feature in `components/safe_browsing/core/common/features.{h,cc}`.</content>
    </entry>
    <entry>
        <id>325316149</id>
        <title>Implement ESB Promotion on suspicious/dangerous chrome://downloads items</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325316149"/>
        <updated>2024-02-15T20:50:45.760Z</updated>
        <summary>-</summary>
        <content type="html">We'd like to add some ESB promotions that are shown to users with standard protection at a time where the promotion is relevant to them.

This feature set currently consists of two pieces, where the first part has already been implemented and is going out with M122. The second part is described in item 2 below:

1. an IPH that appears anchored to the download "bubble" after a user has downloaded a file that has been identified as dangerous or suspicious (Implemented in crbug.com/41482174).
2. a new UI promotion that appears as a new row on the first suspicious or dangerous download.

Users that are eligible for these ESB promotions are those that:
1. are currently in standard protection
2. are not using a browser where a policy has specified the safe browsing protection level
3. they have downloaded a file that has been identified as suspicious or dangerous
4. this won't be shown in an incognito window

This download row promotion will stop being shown to eligible users when:
1. the promotion has been shown 7 times, and the user **has not** clicked on the row.
2. the promotion has been shown 3 times and the user **has** clicked on the row.

[Design document](https://docs.google.com/document/d/1umRuC9iyCqlxL5ggQ5GDENt3MN7heN8TzmN7szsWQoU/edit?resourcekey=0-d_BX0R7VqNa1uGImSKntlA&amp;tab=t.0)
</content>
    </entry>
    <entry>
        <id>325449808</id>
        <title>Remove solid color buffers from viz</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325449808"/>
        <updated>2024-02-15T20:44:10.499Z</updated>
        <summary>-</summary>
        <content type="html">Solid color buffers were originally added to viz code to support delegated compositing.
We now have 2 protocols that support native solid color buffers in wayland (one that is upstream and the other that is augmentor protocol) so I dont think we need these buffers anymore.

Assuming only Lacros was every using these solid color buffers the question becomes what is the value in removing them. The only cause that I can think of where we might reintroduce them is if we ever have non-black solid color regions that we want to promote to real overlays (ie on Ash via DRM).

The CL that caused me to think about this (which highlights the code)
https://chromium-review.googlesource.com/c/chromium/src/+/5297928</content>
    </entry>
    <entry>
        <id>325425535</id>
        <title>Tabs cannot be switched (by swiping) when an input field is focused.</title>
        <author>
            <name>sz...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325425535"/>
        <updated>2024-02-15T20:41:18.765Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to a website having an input field
2. Open a new tab, go to another website, having yet another input fields.
3. In the attempt of copying/pasting data from one site to another, go to the first tab, and start working.
4. To go to the second tab, the, title bar (omnibox) has to be swiped to the left. Good, copy some data and then swipe the tile bar to the right to go back to the first site.
5. Now, tap in an input field on the first site. This time switching between tabs becomes disabled, I simply cannot switch to the second tab just by swiping.

# Problem Description
When an input field is focused on a website, the browser's omnibox becomes unresponsive to swiping, therefore tabs cannot be switched easily, as expected.
Imagine, working with translations. Typing, typing, then a word has to be inserted. Swipe to the another tab, copy the text and then swipe back to the initial tab, paste the text. No, this is not working as an input field is focused. This is slowing down the workflow:
- Editing has to be stopped by tapping somewhere outside the input area
- Swipe
- Tap into the input field to be able to copy a text.
- Tap away again to defocus the input tab
- Swipe back to the original tab
- Tap into the input field, look for the text (cursor) position, where I was left.
...
Doing this 15 times makes feel mobile devices practically unusable and counter-productive. Versus, on a PC, copy - alt-tab - paste.

Suggestion: the omnibox should respond to tab switching swipes even if an input field is focused (ie the tab msut be switchable even if the user inputs something).

# Summary
Tabs cannot be switched (by swiping) when an input field is focused.

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>325316148</id>
        <title>Dangling pointer in net\dns\context_host_resolver_unittest.cc</title>
        <author>
            <name>ge...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325316148"/>
        <updated>2024-02-15T20:36:16.067Z</updated>
        <summary>-</summary>
        <content type="html">Dangling pointer in net\dns\context_host_resolver_unittest.cc</content>
    </entry>
    <entry>
        <id>325314722</id>
        <title>Remove unused methods/functionality around ThrottlingURLLoader</title>
        <author>
            <name>hi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325314722"/>
        <updated>2024-02-15T20:33:13.519Z</updated>
        <summary>-</summary>
        <content type="html">To simplify and clarify the loader factories, and help NavigationURLLoaderImpl cleanup that uses ThrottlingURLLoader.</content>
    </entry>
    <entry>
        <id>325415938</id>
        <title>These fricken Developers I started an online bznz helping people troubleshoot their devices.  I with</title>
        <author>
            <name>cw...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325415938"/>
        <updated>2024-02-15T20:26:24.758Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Cricket wireless  
2. Developers 
3. Google

# Problem Description
Online bznz and 2 apps I helped develop and release walked away 15 years ago Big Red Dog security 

# Additional Comments
Online bznz Big Red Dog Security and Anti piracy app and another app . I forgot it's been 15 years 

# Summary
These fricken Developers I started an online bznz helping people troubleshoot their devices.  I with

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325494501</id>
        <title>attribution_os_level_manager_android_unittest.cc are failing</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325494501"/>
        <updated>2024-02-15T20:26:08.685Z</updated>
        <summary>-</summary>
        <content type="html">The attribution_os_level_manager_android_unittest.cc are failing when they are run with API &gt; 14.

When the API is lower, attribution is not supported and the the manager [returns immediately](https://source.chromium.org/chromium/chromium/src/+/main:content/public/android/java/src/org/chromium/content/browser/AttributionOsLevelManager.java;l=245?q=AttributionOs&amp;ss=chromium%2Fchromium%2Fsrc).

With api &gt; 14, the callback is never called and the test timeout.

Looking at java logs, it seems that the issue stems from missing permission: "android.permission.ACCESS_ADSERVICES_ATTRIBUTION"</content>
    </entry>
    <entry>
        <id>325496050</id>
        <title>Check if ViewElement disappeared by spec, not View instance</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325496050"/>
        <updated>2024-02-15T20:21:25.094Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325495335</id>
        <title>Thay đổi nội dung..</title>
        <author>
            <name>na...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325495335"/>
        <updated>2024-02-15T20:15:05.059Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325425533</id>
        <title>Determine whether real-world-identity API should be accessible from &amp;lt;iframe&amp;gt;</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325425533"/>
        <updated>2024-02-15T20:05:32.201Z</updated>
        <summary>-</summary>
        <content type="html">Determine whether real-world-identity API should be accessible from &lt;iframe&gt;</content>
    </entry>
    <entry>
        <id>325491320</id>
        <title>Tests are failing: safe_browsing_blocking_page_test.cc(3703): Expected equality of these values:\n tracker-&amp;gt;PendingCheckersSizeForTesting()\n Which is: 0\n 1u\n Which...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325491320"/>
        <updated>2024-02-15T19:55:58.402Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
safe_browsing_blocking_page_test.cc(3703): Expected equality of these values:\n  tracker-&gt;PendingCheckersSizeForTesting()\n    Which is: 0\n  1u\n    Which is: 1

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/SafeBrowsingBlockingPageAsyncChecksTimingTest.PostCommitInterstitialProceedAfterPreCommitInterstitial/CheckCompleteAfterNavigationFinish.1
- ninja://chrome/test:browser_tests/SafeBrowsingBlockingPageAsyncChecksTimingTest.WarningShownBetweenProcessResponseAndFinishNavigation
- ninja://chrome/test:browser_tests/SafeBrowsingBlockingPageAsyncChecksTimingTest.PostCommitInterstitialProceed/CheckCompleteAfterNavigationFinish.1
- ninja://chrome/test:browser_tests/SafeBrowsingBlockingPageAsyncChecksTimingTest.PostCommitInterstitialDontProceed/CheckCompleteAfterNavigationFinish.1
- ninja://chrome/test:browser_tests/SafeBrowsingBlockingPageAsyncChecksTimingTest.SecurityStateDowngradedForPostCommitInterstitial/CheckCompleteAfterNavigationFinish.0


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/fe9f8e1517c91cf203a53185e96aad70

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325432959</id>
        <title>Opaque Response Blocking (ORB) should be applied to sandboxed iframes</title>
        <author>
            <name>wj...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325432959"/>
        <updated>2024-02-15T19:19:28.941Z</updated>
        <summary>-</summary>
        <content type="html">ORB should be applied to sandboxed iframes. This bug entails either (i) verifying this is already the case (and adding any necessary tests), or (ii) enabling ORB for sandboxed iframes if it isn't already.</content>
    </entry>
    <entry>
        <id>325482201</id>
        <title>MacOS and possible ChromeOS session data isn't accurate</title>
        <author>
            <name>es...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325482201"/>
        <updated>2024-02-15T19:17:29.264Z</updated>
        <summary>-</summary>
        <content type="html">During local testing and looking at session data metrics (https://uma.googleplex.com/p/chrome/timeline_v2?sid=2c5cecdf34f2fdf5affb8abb767b348f), the data looks incorrect for MacOS and ChromeOS. This is being used in UserEducation 2.0 and could cause issues throttling IPHs.</content>
    </entry>
    <entry>
        <id>325410297</id>
        <title>CanAccessDataForOrigin should correctly isolate data from sandboxed iframes</title>
        <author>
            <name>wj...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325410297"/>
        <updated>2024-02-15T19:15:21.979Z</updated>
        <summary>-</summary>
        <content type="html">ChildProcessSecurityPolicy::CanAccessDataForOrigin should prevent a process for a sandboxed iframe from accessing data from an origin, even if the origin matches the document loaded in the sandboxed frame. Once sandboxed, a frame is considered to have an opaque origin, and shouldn't have access to things like cookie, passwords, local storage, postMessage, etc. that are associated with the original origin.</content>
    </entry>
    <entry>
        <id>325484267</id>
        <title>Help</title>
        <author>
            <name>du...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325484267"/>
        <updated>2024-02-15T19:13:04.638Z</updated>
        <summary>-</summary>
        <content type="html">Help
</content>
    </entry>
    <entry>
        <id>325372952</id>
        <title>Block reloading the same URL on PDF frames </title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325372952"/>
        <updated>2024-02-15T19:09:26.200Z</updated>
        <summary>-</summary>
        <content type="html">For context: https://chromium-review.googlesource.com/c/chromium/src/+/5174594/comments/c6eeeb27_1931b07c

If a frame navigates to the same URL, or reloads using something like window.location = '', then the navigation attempt is allowed.

If the extension frame reloads, then it will say the PDF failed to load. This is because there was no stream added.

If the PDF content frame reloads, then it will create a nested PDF viewer.</content>
    </entry>
    <entry>
        <id>325425529</id>
        <title>Problem with some animations (for ex. slide animation with ease out effect) on Chrome and Firefox</title>
        <author>
            <name>le...@creatopy.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325425529"/>
        <updated>2024-02-15T18:57:51.503Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Test it with embed code on any test web page
2. 
3. 

# Problem Description
Ads served on web pages has some animations. On a large page, when scroll to the ads, layers with animations doesn't work well when the ads are displayed in viewport. If the ads remain in viewport, the animations are playing normal on repeating. If we scroll again, and the ad is disappearing from viewport and then we scroll back, the issue happens again.

# Summary
Problem with some animations (for ex. slide animation with ease out effect) on Chrome and Firefox

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325479697</id>
        <title>external/wpt/shape-detection/single-face-detection.https.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325479697"/>
        <updated>2024-02-15T18:52:58.852Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/shape-detection/single-face-detection.https.html

Crash failure on Linux Tests (dbg)(1)

Test History Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fshape-detection%2Fsingle-face-detection.https.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fshape-detection%2Fsingle-face-detection.https.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 20% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>325449807</id>
        <title>Split histograms for HTTP error code and status on presence of context ID</title>
        <author>
            <name>dm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325449807"/>
        <updated>2024-02-15T18:48:38.502Z</updated>
        <summary>-</summary>
        <content type="html">Let's split the HTTP error code and status histograms into two cases: context ID and no context ID. Relevant histograms that already exist:

* PrivacySandbox.AggregationService.ReportSender.HttpResponseOrNetErrorCode 
* PrivacySandbox.AggregationService.ReportSender.Status

Because context IDs are a Private Aggregation concept, they should probably be nested under PrivacySandbox.PrivateAggregation like so:

* PrivacySandbox.PrivateAggregation.ContextID.HttpResponseOrNetErrorCode
* PrivacySandbox.PrivateAggregation.ContextID.Status
* PrivacySandbox.PrivateAggregation.NoContextID.HttpResponseOrNetErrorCode
* PrivacySandbox.PrivateAggregation.NoContextID.Status

The current histograms are recorded in [AggregatableReportSender::OnReportSent()](https://source.chromium.org/chromium/chromium/src/+/main:content/browser/aggregation_service/aggregatable_report_sender.cc;l=177-186;drc=fb04fb8b4eb9eb3b44e3946e3f17eda34efda0a3), so we know that we have the error code and status there. We still need to join that info up with whether there's a context ID. Perhaps we can plumb the error code and status back to the Private Aggregation implementation via the callback invoked at the end of OnReportSent().
</content>
    </entry>
    <entry>
        <id>325309578</id>
        <title>Relative Color Syntax does not support currentcolor</title>
        <author>
            <name>kb...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325309578"/>
        <updated>2024-02-15T18:47:40.923Z</updated>
        <summary>-</summary>
        <content type="html">See failing web platform tests at https://wpt.fyi/results/css/css-color?label=master&amp;label=experimental&amp;aligned&amp;view=interop&amp;q=label%3Ainterop-2024-relative-color

These tests have been tagged for Interop2024.</content>
    </entry>
    <entry>
        <id>325432957</id>
        <title>IUIAutomationLegacyIAccessiblePattern.GetIAccessible() returns null</title>
        <author>
            <name>va...@grammarly.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325432957"/>
        <updated>2024-02-15T18:37:03.324Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Run Chrome Canary (v123 or greater) with the UiaProvider feature enabled : `chrome.exe --enable-features=UiaProvider`
2. Run the console application (`.\NewUIAAccessibilityTree\bin\Debug\net6.0\NewUIAAccessibilityTree.exe` or via source code)
3. Focus any field in Chrome 

Actual Result
`IUIAutomationLegacyIAccessiblePattern.GetIAccessible()` returns null for each UIA Element received via `IUIAutomation.AddFocusChangedEventHandler`

Expected Result
`IUIAutomationLegacyIAccessiblePattern.GetIAccessible()` returns corresponding IAccessible element

# Problem Description
`IUIAutomationLegacyIAccessiblePattern.GetIAccessible()` returns null for each UIA Element received via `IUIAutomation.AddFocusChangedEventHandler` in the latest Chrome Canary (v123) with the UiaProvider feature turned on.
If the UiaProvider feature is OFF - it works as expected.

Please find attached the simple application (NewUIAAccessibilityTree.zip) that can help you reproduce the issue. Source code is available, built exe file is located in `.\NewUIAAccessibilityTree\bin\Debug\net6.0\NewUIAAccessibilityTree.exe`
The application subscribes to `IUIAutomation.AddFocusChangedEventHandler` and executes the following function for each focused `IUIAutomationElement uiaElement` (C# code):

```
        var legacyIAccessiblePatternObject = uiaElement.GetCurrentPattern(UIA_PatternIds.UIA_LegacyIAccessiblePatternId); // 10018
        if (legacyIAccessiblePatternObject != null)
        {
            if (legacyIAccessiblePatternObject is IUIAutomationLegacyIAccessiblePattern legacyIAccessiblePattern)
            {
                Console.WriteLine("IUIAutomationLegacyIAccessiblePattern is not NULL");
                var accessible = legacyIAccessiblePattern.GetIAccessible();
                if (accessible == null)
                {
                    Console.WriteLine("IAccessible is NULL");
                }
                else
                {
                    Console.WriteLine("IAccessible is NOT NULL. accessible.accName: " + accessible.accName[0]);
                }
            }
        }
```

When you focus on any content in the Chrome Canary (v123) with the UiaProvider feature ON - `accessible ` is NULL and the application outputs "IAccessible is NULL".

Here's the output for Chrome Canary (v123) with the UiaProvider ON:

```
--------------------
Focus changed.
Application process id: 30456
UIAElement.RuntimeId: 42-2623530-4-7-1-1; UIAElement.CurrentName: Search Wikipedia
IUIAutomationLegacyIAccessiblePattern is not NULL
IAccessible is NULL

--------------------
Focus changed.
Application process id: 30456
UIAElement.RuntimeId: 42-2623530-4-7-1-3; UIAElement.CurrentName: EN
IUIAutomationLegacyIAccessiblePattern is not NULL
IAccessible is NULL

--------------------
Focus changed.
Application process id: 30456
UIAElement.RuntimeId: 42-2623530-4-7-1-1312; UIAElement.CurrentName: Search
IUIAutomationLegacyIAccessiblePattern is not NULL
IAccessible is NULL

```

Here's the output for Chrome Canary (v123) with the UiaProvider OFF:

```
--------------------
Focus changed.
Application process id: 25392
UIAElement.RuntimeId: 42-2428044-4--1050; UIAElement.CurrentName: Search Wikipedia
IUIAutomationLegacyIAccessiblePattern is not NULL
IAccessible is NOT NULL. accessible.accName: Search Wikipedia

--------------------
Focus changed.
Application process id: 25392
UIAElement.RuntimeId: 42-2428044-4--1099; UIAElement.CurrentName: EN
IUIAutomationLegacyIAccessiblePattern is not NULL
IAccessible is NOT NULL. accessible.accName: EN

--------------------
Focus changed.
Application process id: 25392
UIAElement.RuntimeId: 42-2428044-4--964; UIAElement.CurrentName: Search
IUIAutomationLegacyIAccessiblePattern is not NULL
IAccessible is NOT NULL. accessible.accName: Search

```

P.S.
This issue is discovered while testing https://issues.chromium.org/issues/323708865, you can find additional details there.

# Summary
IUIAutomationLegacyIAccessiblePattern.GetIAccessible() returns null

# Additional Data
Category: UI \
Chrome Channel: Canary \
Regression: Yes</content>
    </entry>
</feed>