<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-23T00:43:02.193Z</updated>
    <entry>
        <id>326502532</id>
        <title>[Feature Improvement] for "/build" and "/log" offload perm checking to Milo and Logdog</title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326502532"/>
        <updated>2024-02-23T00:43:02.193Z</updated>
        <summary>-</summary>
        <content type="html">Currently, BB always performs permission checks. It requires to add encryptedcookies related configurations. It has two disadvantages:
1. Increased some configuration complexity about adding encryptedcookies for just redirection URLs.
2. For an anonymous user who visits a *private* build via "/build/xxx" or "/log/xxx/...", it needs to sign in twice - one in Buildbucket, the other one in Milo or Logdog.

Potential improvment:
BB doesn't do any permission checks or access to any Datastore entities. 
* For "/build/xxx", blindly redirect to Milo, and let Milo do the perm checking and decide to display LUCI build page or the page that users specified in related Build proto fields.
* For "/log/xxx/...", if we know all log view_url points to LogDog, we can offload the perm checking to LogDog and let it decide whether the user has the read access.</content>
    </entry>
    <entry>
        <id>326501720</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326501720"/>
        <updated>2024-02-23T00:40:32.902Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                             0,0,0                             0,1,0                             1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                       1a 23 ff ff                       fe fd 00 ff                       3f fb 00 ff ...\n                           act. colors == R,G,B,A: 0.101961,0.137255,1.00000,1.00000 0.996078,0.992157,0.00000,1.00000 0.247059,0.984314,0.00000,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.00000,1.00000 0.972549,0.141176,0.00000,1.00000 0.101961,0.137255,1.00000,1.00000 ...\n            act. normal-ULPs-from-zero == R,G,B,A:       ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f28ebd5bae5edd1a0eb695fe66d6c359

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326500831</id>
        <title>When pressing the right mouse button, the first item in the context menu is immediately clicked.</title>
        <author>
            <name>yi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326500831"/>
        <updated>2024-02-23T00:26:44.793Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open some website and click around links
2. Click the right mouse button
3. Without doing anything else, release the right mouse button
4. The first action in the context menu is executed. Usually this is "Back" so the browser navigates back to the last page annoyingly.

# Problem Description
I think this could be a Wayland/Linux specific problem as I've seen a history of such mouse cursor offset problems before.

Version etc:

```

Google Chrome	123.0.6312.4 (Official Build) beta (64-bit) 
Revision	6bbedb653d7f3de24abf06ec522ce79b0a18781b-refs/branch-heads/6312@{#12}
OS	Linux
JavaScript	V8 12.3.219.1
User Agent	Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Command Line	/usr/bin/google-chrome-beta --enable-features=UseOzonePlatform --ozone-platform=wayland --force-dark-mode --password-store=gnome-libsecret --enable-features=VaapiVideoDecoder,VaapiVideoEncoder,TouchpadOverscrollHistoryNavigation --gpu-active-vendor-id=0x8086 --flag-switches-begin --enable-zero-copy --ignore-gpu-blocklist --ozone-platform-hint=wayland --enable-features=VaapiVideoDecoder,VaapiVideoEncoder,TouchpadOverscrollHistoryNavigation,ChromeRefresh2023,CustomizeChromeSidePanel,DefaultANGLEVulkan,EnableDrDc,ScrollableTabStrip:minTabWidth/72,SkiaGraphite,TabGroupsSave,UseGpuSchedulerDfs,Vulkan --flag-switches-end
```

# Summary
When pressing the right mouse button, the first item in the context menu is immediately clicked.

# Additional Data
Category: UI \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326500988</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326500988"/>
        <updated>2024-02-23T00:25:18.676Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                             0,0,0                             0,1,0                             1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                       1a 23 ff ff                       fe fd 00 ff                       3f fb 00 ff ...\n                           act. colors == R,G,B,A: 0.101961,0.137255,1.00000,1.00000 0.996078,0.992157,0.00000,1.00000 0.247059,0.984314,0.00000,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.00000,1.00000 0.972549,0.141176,0.00000,1.00000 0.101961,0.137255,1.00000,1.00000 ...\n            act. normal-ULPs-from-zero == R,G,B,A:     ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5ab771cca55a294f4b52f3138a9466e6

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326355046</id>
        <title>[Android System Health Rotation Memory]: 1 regressions in system_health.memory_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326355046"/>
        <updated>2024-02-23T00:18:42.224Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263646:1263725:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=74f6a437-e131-4e78-9bfd-d74b6a708602

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=74f6a437-e131-4e78-9bfd-d74b6a708602

Top 1 regressions (out of 4, with 3 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_os:system_memory:java_heap:proportional_resident_size_avg/browse_shopping/browse_shopping_amazon_2019
       26.40%: 4915336.5 -&gt; 6213052.0 sizeInBytes

Top 1 affected measurements in android-pixel2-perf:
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_os:system_memory:java_heap:proportional_resident_size_avg/browse_shopping/browse_shopping_amazon_2019
       26.40%: 4915336.5 -&gt; 6213052.0 sizeInBytes

Regressions grouped by system_health.memory_mobile includes data from the following benchmarks with listed owners:
  system_health.memory_mobile: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1263645..1263725
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/142a0614a468d2b4fb29227410c31ea8d0243dbe..e28ac6367e5cf5fdc313be243e2a9162c5b9346b
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/efea7bb8ccb67db20bc6c3cf85996ef1edcb895f..efea7bb8ccb67db20bc6c3cf85996ef1edcb895f</content>
    </entry>
    <entry>
        <id>326498546</id>
        <title>Tests are failing: tutorial_test-gen.cc(423): Value of: RunJavascriptTestF( true, \"ChromeVoxTutorialTest\", \"ResourcesTest\")\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498546"/>
        <updated>2024-02-23T00:10:26.610Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
tutorial_test-gen.cc(423): Value of: RunJavascriptTestF( true, \"ChromeVoxTutorialTest\", \"ResourcesTest\")\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/ChromeVoxTutorialTest.ResourcesTest


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/07c5c20ec64d9ec6016bcfee501c6695

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326498918</id>
        <title>coverage tool doesn't work with gtest wildcard filter</title>
        <author>
            <name>sv...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498918"/>
        <updated>2024-02-23T00:09:33.375Z</updated>
        <summary>-</summary>
        <content type="html">Example command:
$ vpython3 tools/code_coverage/coverage.py  base_unittests -b out/coverage -o out/report -c 'out/coverage/base_unittests --gtest_filter=AtExitTest*' 
It would run all gtests, instead of run gtest based on the filter.
The issue is https://source.chromium.org/chromium/chromium/src/+/main:tools/code_coverage/coverage.py;l=476;drc=51e61c7d11f37e677a8c0abc6224376901464185
Not sure what the cl was trying to fix, but it doesn't work with a normal gtest filter.
Jeff, could you take a look if there's a quick fix? Or maybe just update the instructions so people don't get confused.</content>
    </entry>
    <entry>
        <id>326498460</id>
        <title>content_browsertests  failed on #124.0.6315.1 win-dcheck-tests of official-desktop builders</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498460"/>
        <updated>2024-02-23T00:08:54.145Z</updated>
        <summary>-</summary>
        <content type="html">content_browsertests failed because of:

EvalJsBrowserTest.EvalJsTimeout

SRC_ClearKey/EncryptedMediaTest.Playback_VideoOnly_MP4_AV1/0

SmsBrowserTest.RecordOutcomeWithCrossOriginFrame

SmsBrowserTest.SmsReceivedAfterTabIsClosed

Build URL:
https://ci.chromium.org/ui/p/chrome/builders/ci/win-dcheck-tests/1127/overview

Error-Log URL:
https://logs.chromium.org/logs/chrome/buildbucket/cr-buildbucket/8755397181908599633/+/u/content_browsertests_on_Windows-10-19045/stdout</content>
    </entry>
    <entry>
        <id>326496693</id>
        <title>Expose real run start time in CQ attempt table</title>
        <author>
            <name>yi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326496693"/>
        <updated>2024-02-22T23:57:43.763Z</updated>
        <summary>-</summary>
        <content type="html">This is proposed work to launch quota in chromium because if quota kicks in, it could skew the CQ duration metric in Browser Infra as it will involve the waiting time.</content>
    </entry>
    <entry>
        <id>326496214</id>
        <title>Tests are failing: ninja://third_party/blink/renderer/platform:blink_platform_unittests/ResourceFetcherTest.RevalidateWhileFinishingLoading</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326496214"/>
        <updated>2024-02-22T23:55:20.999Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://third_party/blink/renderer/platform:blink_platform_unittests/ResourceFetcherTest.RevalidateWhileFinishingLoading

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e8e2e37187d7fb5dfeb42e81f3720e8c

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326496682</id>
        <title>Collect UKM: Occurrences of cross-origin LCP images</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326496682"/>
        <updated>2024-02-22T23:54:52.307Z</updated>
        <summary>-</summary>
        <content type="html">A cross-origin LCP image request incurs additional latency due to new connection and TLS handshake costs, vs. a same-origin LCP image. We could investigate and improve the LCP metric of Core Web Vitals, by collecting stats on what portion of the web embeds cross-origin images as their LCP element. 

This ticket tracks work required to implement a UKM to count instances of LCP occurring with LCP element=image and the image source is cross-origin with the main document. The UKM will be recorded as a web-exposed LCP element is finalized.</content>
    </entry>
    <entry>
        <id>326493639</id>
        <title>[webrtc] createAnswer fails with "Failed to create transport answer, transport is missing"</title>
        <author>
            <name>mm...@twilio.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326493639"/>
        <updated>2024-02-22T23:53:50.973Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://jsfiddle.net/manjeshbhargav/u7dgfv82/ on a Chrome beta tab
2. Click on "Start Test" button
3. Observe the logs section in the application

# Problem Description
Expected result: No errors logged
Actual result: An error message similar to the one described in the summary of this issue is logged

# Summary
[webrtc] createAnswer fails with "Failed to create transport answer, transport is missing"

# Custom Questions
#### Which component does this fall under?
Blink&gt;WebRTC

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326466778</id>
        <title>cryptfs log spam on P+ Android devices</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326466778"/>
        <updated>2024-02-22T23:41:03.829Z</updated>
        <summary>-</summary>
        <content type="html">On our Android P+ devices with encrypted disks, there is frequent spam in the Swarming device event logs along the lines of:

```
Failed to get cryptfs field SystemLocale: vdc V 02-22 21:58:20 14338 14338 vdc.cpp:54] Waited 0ms for vold vdc E 02-22 21:58:20 14338 14338 vdc.cpp:181] Raw commands are no longer supported
```

Looking at the open source code for Android's vdc tool, it looks like support for `vdc cryptfs getprop` and `vdc cryptfs setprop` when support for automatic forwarding of commands to vold was removed in Android P. Now, only a small list of commands are explicitly supported and it seems like there is not way to use `vdc` to get properties anymore.

Thus, the offending code should be skipped on P+ to avoid unnecessary log spam.</content>
    </entry>
    <entry>
        <id>326494585</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326494585"/>
        <updated>2024-02-22T23:40:32.977Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                              0,0,0                              0,1,0                              1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                        1c 22 f6 ff                        fe fd 51 ff                        7f f8 49 ff ...\n                           act. colors == R,G,B,A: 0.109804,0.133333,0.964706,1.00000 0.996078,0.992157,0.317647,1.00000 0.498039,0.972549,0.286275,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.317647,1.00000 0.894118,0.243137,0.133333,1.00000 0.109804,0.133333,0.964706,1.00000 ...\n            act. normal-ULPs-from-zer...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bbb3bb28de4d9f7bfb26a8f0c65d6cba

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326493638</id>
        <title>Lossless WebP cannot have a quality specified as the API is currently presented</title>
        <author>
            <name>li...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326493638"/>
        <updated>2024-02-22T23:36:53.048Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
canvas.toDataURL('image/webp', 0.9) cannot make a lossless image.

# Problem Description
Using quality 1 is always necessary to preserve color profiles, even though it inflates the size considerably. Sharp (by lovell) is able to make near-lossless webp files about 30% smaller which are visually identical. It would be so helpful to have this available in Chromium to avoid needing extremely heavy dependencies (in Electron) or backend APIs to handle these use cases.

# Summary
Lossless WebP cannot have a quality specified as the API is currently presented

# Custom Questions
#### Which component does this fall under?
Blink&gt;Canvas

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>326494015</id>
        <title>[TabGroupIndicators] Update a11y descriptors for title indicators</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326494015"/>
        <updated>2024-02-22T23:36:29.001Z</updated>
        <summary>-</summary>
        <content type="html">Update a11y descriptors for title indicators.

Currently using a placeholder with the group name if it exists. Plan to match desktop behavior.</content>
    </entry>
    <entry>
        <id>326391770</id>
        <title>[minizip_bin] Disable build by default</title>
        <author>
            <name>ca...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326391770"/>
        <updated>2024-02-22T23:28:35.697Z</updated>
        <summary>-</summary>
        <content type="html">Apparently the new CMake buildsystem is being used for building Chromium zlib on Windows (a workflow I've not personally tested).

Since we added minizip_bin as a default target, it broke the build on Windows (https://android-review.googlesource.com/c/platform/external/python/cpython3/+/2942385).

The idea is to address the issue.
</content>
    </entry>
    <entry>
        <id>326492955</id>
        <title>[TabGroupIndicators] Collapse/expand tab group on title click</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492955"/>
        <updated>2024-02-22T23:28:01.227Z</updated>
        <summary>-</summary>
        <content type="html">Collapse/expand tab group on title click</content>
    </entry>
    <entry>
        <id>326492787</id>
        <title>[TabGroupIndicators] Update tab update flows</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492787"/>
        <updated>2024-02-22T23:27:30.991Z</updated>
        <summary>-</summary>
        <content type="html">Update tab update flows.

Trigger tab strip view rebuild on relevant events (tab group created, merged, destroyed, etc.).</content>
    </entry>
    <entry>
        <id>326492671</id>
        <title>[TabGroupIndicators] Add selected tab group outline for tab strip</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492671"/>
        <updated>2024-02-22T23:26:29.284Z</updated>
        <summary>-</summary>
        <content type="html">Add selected tab group outline for tab strip.</content>
    </entry>
    <entry>
        <id>326492620</id>
        <title>[TabGroupIndicators] Add tab group bottom indicator on tab strip</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492620"/>
        <updated>2024-02-22T23:26:06.577Z</updated>
        <summary>-</summary>
        <content type="html">Add tab group bottom indicator on tab strip</content>
    </entry>
    <entry>
        <id>326492662</id>
        <title>[TabGroupIndicators] Add group title indicator view on tab strip</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492662"/>
        <updated>2024-02-22T23:24:29.621Z</updated>
        <summary>-</summary>
        <content type="html">Add group title indicator view on tab strip.

Will add title bitmap &amp; bg color separately.</content>
    </entry>
    <entry>
        <id>326492044</id>
        <title>[TabGroupIndicators] Refactor StripLayoutTab to a generic StripLayoutView</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492044"/>
        <updated>2024-02-22T23:23:46.847Z</updated>
        <summary>-</summary>
        <content type="html">Refactor StripLayoutTab to a generic StripLayoutView</content>
    </entry>
    <entry>
        <id>326368637</id>
        <title>TaskAttribution: Fix CPED edge cases and support conditional propagation</title>
        <author>
            <name>sh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326368637"/>
        <updated>2024-02-22T23:23:44.377Z</updated>
        <summary>-</summary>
        <content type="html">We're simplifying task attribution by propagating the same task state when possible (push-based, from some source) and only propagating state when necessary.

This will reduce the number of objects we allocate and how often we need to propagate state. But there are a few minor issues with the CPED + `TaskScope` implementation that need to be sorted out.

---

**Problem 1**: The CPED stored on promise reaction objects is not restored if that data is undefined. This means the Isolate's CPED can be incorrect during a microtask if undefined is being propagated (which will be the case when there's nothing to propagate).

This can be fixed by:
 1. Clearing the Isolate's CPED before running microtasks, either in v8 or blink
     - It's a lot easier/cleaner to do this in v8, but possible in blink
 1. Unconditionally setting the Isolate's CPED when running a promise reaction job

**Note**: this isn't an issue currently because we always create state to propagate, so cached CPED should never be undefined. That optimization was for when CPED was exclusively used by self.scheduler and was rarely set.

---

**Problem 2**: Multiple events &amp; microtask checkpoints can run under a single `TaskScope` (which is what sets CPED in blink), but CPED is set to undefined after each microtask (if it changed CPED).

For example:
 1. Suppose an XHR event has 2 listeners
 1. A `TaskScope` is created for dispatching XHR events, setting CPED to _state_
 1. _listener1_ fires and a promise reaction with CPED = _state_ is created
 1. Microtasks for _listener1_ run: CPED is set to _state_ during a microtask and cleared after
 1. _listener2_ fires: CPED is undefined but should be _state_

This is partially mitigated currently by caching the CPED value set during `TaskScope` creation and returning that as the `RunningTask()`. But v8 has no knowledge of that, so it doesn't get propagated by v8's mechanism (only for callbacks in blink). And when undefined becomes a propagatable value, the fallback could cause incorrect values to be propagated.

This can be fixed by:
 1. Creating a second `TaskScope` in blink for each callback created during event dispatch, which ensures the previous value is restored before the next callback runs
 1. Restoring the previous CPED value after running a microtask instead of setting it to undefined (in v8)
 1. Restore the pre-microtask checkpoint CPED value after a microtasks run (in v8)

---

**Problem 3**: Blink microtasks (`EnqueueMicrotask()`) are not CPED-aware.

This is again partially mitigated by the fallback mentioned above, but there are edge cases and the fallback needs to be removed to support less frequent propagation.

This can be fixed by:
 1. Modifying v8's `EnqueueMicrotask()` API to support CPED
 1. Modify blink's usage of `EnqueueMicrotask()` (i.e. `EventLoop::EnqueueMicrotask()`) to set/reset CPED, matching what v8 does</content>
    </entry>
    <entry>
        <id>326488897</id>
        <title>[TabGroupIndicators] Hook into Tab Group APIs for title &amp; color</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326488897"/>
        <updated>2024-02-22T23:22:47.736Z</updated>
        <summary>-</summary>
        <content type="html">Hook into Tab Group APIs for title &amp; color.

There's an existing util for the tab group title [1]. There will be one for the tab group color once that's implemented for the GTS. We may need to wrap in an observer to update when needed.

[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/tab_group/java/src/org/chromium/chrome/browser/tasks/tab_groups/TabGroupTitleUtils.java;l=24;drc=e5f8ff312fe542f39c7d34b4440f18d1500b15f9</content>
    </entry>
    <entry>
        <id>326411160</id>
        <title>[dPWA][Win] SMTC box not hidden on audio finish or navigation within the PWA</title>
        <author>
            <name>li...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326411160"/>
        <updated>2024-02-22T23:17:31.426Z</updated>
        <summary>-</summary>
        <content type="html">What steps will reproduce the problem?
1. Navigate to ![](chrome://flags/#enable-web-app-system-media-controls-win) and enable
2. Navigate to ![](https://liahiscock.github.io/PWA/MediaControls/App1) and install as a PWA
3. In the PWA window, start playing the audio. Open Windows SMTC UI (from taskbar right side) and verify SMTC box shows.
4. In the PWA window, click one of the two links on the page ("PWA #2" or "PWA #3")
5. Open the Windows SMTC UI again and note the box is still there even though we've navigated away from the page that was playing audio.
    - With the feature flag disabled, the SMTC UI disappears after the navigation, which is what we expect with the flag enabled as well
    - The issue also repros if you let the audio finish playing on its own -- with feature flag on, the SMTC box is still there. feature flag off, the box disappears as soon as the track finishes playing

----------------------------------------------------------------
This appears to be caused by different handling of audio ending for media controllers made to follow the active session vs a specific session.

Controllers that follow the active session appear to be cleaned up via
1. `AudioFocusManager::AbandonAudioFocusInternal`
2. `AudioFocusManager::MaybeUpdateActiveSession`
3. `MediaController::ClearMediaSession` called on the active_media_controller proxy (which flushes all its MediaControllerObservers with null/empty information that then notifies Windows)

Controllers that follow a specific media session seem to follow
1. `AudioFocusManager::AbandonAudioFocusInternal` which calls `OnFocusLost` on all of its `AudioFocusObservers` </content>
    </entry>
    <entry>
        <id>326489905</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326489905"/>
        <updated>2024-02-22T23:10:36.987Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-hflip.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                              0,0,0                              0,1,0                              1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                        fe fd 51 ff                        e3 3e 22 ff                        1c 22 f6 ff ...\n                           act. colors == R,G,B,A: 0.996078,0.992157,0.317647,1.00000 0.890196,0.243137,0.133333,1.00000 0.109804,0.133333,0.964706,1.00000 ...\n                           exp. colors == R,G,B,A: 0.894118,0.243137,0.133333,1.00000 0.996078,0.992157,0.317647,1.00000 0.498039,0.972549,0.286275,1.00000 ...\n            act. normal-ULPs-from-zero == ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-hflip.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bdd12ca4ddcc22438bd927fb54b7ed94

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326360728</id>
        <title>[Chrome Perf Accessibility Sheriff]: 26 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326360728"/>
        <updated>2024-02-22T23:04:02.705Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264031:1264046:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ac80a1a3-0272-4f53-b1d2-29a50c17a7c7

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ac80a1a3-0272-4f53-b1d2-29a50c17a7c7

Top 10 regressions (out of 23, with 5 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    17444.24%: 0.9065000000000001 -&gt; 159.0385 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    15710.38%: 0.8 -&gt; 126.483 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12474.58%: 0.7355 -&gt; 92.48599999999999 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12067.56%: 0.5994999999999999 -&gt; 72.9445 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     5827.52%: 0.129 -&gt; 7.6465 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     4805.43%: 0.175 -&gt; 8.5845 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-focusable-containers.html
     2776.89%: 0.872 -&gt; 25.0865 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-deep-tree.html
     2676.08%: 0.878 -&gt; 24.374000000000002 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-focusable-containers.html
     2524.47%: 1.1484999999999999 -&gt; 30.142 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-deep-tree.html
     2496.44%: 1.1524999999999999 -&gt; 29.924 ms

Top 3 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    15710.38%: 0.8 -&gt; 126.483 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12067.56%: 0.5994999999999999 -&gt; 72.9445 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     5827.52%: 0.129 -&gt; 7.6465 ms


Top 3 affected measurements in mac-laptop_low_end-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    17444.24%: 0.9065000000000001 -&gt; 159.0385 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12474.58%: 0.7355 -&gt; 92.48599999999999 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     4805.43%: 0.175 -&gt; 8.5845 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1264018..1264036
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3869f246146eb4c4dbb46236ce4372a8e89ddb39..c582ec924d4ac7a1b09c604f1cdff508881d311e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e166dec0a9f143140377af113ba66fbf0e052b01..e166dec0a9f143140377af113ba66fbf0e052b01</content>
    </entry>
    <entry>
        <id>326488819</id>
        <title>Block PDF viewer from loading in fenced frames</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326488819"/>
        <updated>2024-02-22T23:02:10.722Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326353889</id>
        <title>Add histogram to measure mouse/touch/stylus usage</title>
        <author>
            <name>Ad...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326353889"/>
        <updated>2024-02-22T22:56:37.141Z</updated>
        <summary>-</summary>
        <content type="html">Add a metric to compare usage of inputs between mouse/touch/stylus, for instance whenever a mouse is clicked or when a touchscreen is tapped with a finger or stylus (or "eraser").</content>
    </entry>
    <entry>
        <id>326487241</id>
        <title>Make all existing PDF tests pass</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326487241"/>
        <updated>2024-02-22T22:54:47.906Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326487435</id>
        <title>Remove GuestView PDF tests</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326487435"/>
        <updated>2024-02-22T22:53:35.234Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326487542</id>
        <title>Make existing chromeOS PDF extension tests pass</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326487542"/>
        <updated>2024-02-22T22:52:28.523Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326466942</id>
        <title>Chrome PDF Viewer is very slow/laggy</title>
        <author>
            <name>ne...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326466942"/>
        <updated>2024-02-22T22:52:05.239Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326486769</id>
        <title>Follow-up work</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326486769"/>
        <updated>2024-02-22T22:50:27.123Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326459578</id>
        <title>[V8 Perf Sheriff]: 6 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459578"/>
        <updated>2024-02-22T22:47:49.574Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263970:1264002:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=da9cb936-c4f3-4543-9e8b-b781e4f92986

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=da9cb936-c4f3-4543-9e8b-b781e4f92986

Top 6 regressions (out of 6, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_warm_2021
      752.68%: 5.5055 -&gt; 46.944500000000005 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_2021
      519.27%: 6.1325 -&gt; 37.9765 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_2021
      519.11%: 1.5335 -&gt; 9.494 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_warm_2021
      287.65%: 1.292 -&gt; 5.0085 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_media/browse_media_youtubetv_2019
      117.29%: 9.879999999999999 -&gt; 21.468 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_media/browse_media_youtubetv_2019
      117.28%: 19.759999999999998 -&gt; 42.935 ms

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_warm_2021
      752.68%: 5.5055 -&gt; 46.944500000000005 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_2021
      519.27%: 6.1325 -&gt; 37.9765 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_2021
      519.11%: 1.5335 -&gt; 9.494 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: almuthanna@chromium.org, cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/80f679a1709fe1271f542e42a3ba3f1be31f8e26..8df6e2f99a043c956a3246be3f837aced00980c0
  Chromium Commit Position: https://crrev.com/1263969..1264002
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/8c2899cbd267fb705a48c9fdec7f246dff2900b8..3869f246146eb4c4dbb46236ce4372a8e89ddb39
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e166dec0a9f143140377af113ba66fbf0e052b01..e166dec0a9f143140377af113ba66fbf0e052b01</content>
    </entry>
    <entry>
        <id>326353888</id>
        <title>Chrome crashes and exits within a few seconds of launch</title>
        <author>
            <name>jw...@mimeo.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326353888"/>
        <updated>2024-02-22T22:38:46.708Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Install Chrome 122.0.6261.70
2. Launch the app
3. Wait for the crash

# Problem Description
Self-explanatory - crash dump available. Chrome 122.0.6261.58 did not have this problem.

# Additional Comments
"client_id2": "4e4b4456-dd6e-4398-b570-e04fb79f4be9"

# Summary
Chrome crashes and exits within a few seconds of launch

# Custom Questions
#### Crashed report ID: 
No

#### How much crashed? 
The whole browser

#### Is it a problem with a plugin?
No - It's the browser itself

# Additional Data
Category: Crashes \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326485093</id>
        <title>&amp;lt;Template&amp;gt;: Mutation Events deprecation bug template</title>
        <author>
            <name>ma...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326485093"/>
        <updated>2024-02-22T22:34:48.371Z</updated>
        <summary>-</summary>
        <content type="html">Justification: I am in the process of deprecating Mutation Events, and I need to provide developers an easy way to report issues, and route those issues to the appropriate person (me), so that we can catch them as early as possible.

Component: Chromium &gt; Blink &gt; DOM

Template Name: Mutation Events

Template Description: Use this template to report an issue caused by the deprecation/removal of Mutation Events from the web platform.

Is this the default template for the component? NO

Do any of the following fields require a default setting?
* Title - "[Mutation Events] "
* Type - Bug
* Priority - P1
* Severity
* Hotlists - hotlistid:5284148
* Assignee - masonf@chromium.org
* Verifier
* Collaborators
* CC (Provide a comma separated listed)
* Custom Fields

What should be included in the initial comment (please mention if you’re using markdown or not): NO markdown

Thanks for reporting an issue related to the deprecation/removal of Mutation Events. Please answer the questions below:

1. Have you read the chromestatus entry (https://chromestatus.com/feature/5083947249172480) for this deprecation?

2. If you need more time to migrate off of the deprecated features, have you explored either the Deprecation Trial or Enterprise Policy?

3. Please describe the issue you're facing:

4. Any other relevant details?</content>
    </entry>
    <entry>
        <id>326466941</id>
        <title>NonRestorableUserSession session model is restored during restarts</title>
        <author>
            <name>cf...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326466941"/>
        <updated>2024-02-22T22:34:48.315Z</updated>
        <summary>-</summary>
        <content type="html">https://github.com/GoogleChromeLabs/privacy-sandbox-dev-support/issues/257 pointed out that RWS-granted requestStorageAccessFor grants (i.e. the `top-level-storage-access` permission) don't disappear after a browser restart, which makes it impossible for a developer to get to a "clean" state for testing (since this permission is not surfaced in chrome://settings anywhere).

However, this permission uses the [NonRestorableUserSession SessionModel](https://crsrc.org/c/chrome/browser/top_level_storage_access_api/top_level_storage_access_permission_context.cc;drc=7387be083e647f52ad93bbb1cc4801a4313fd1c6;l=221), so it seems unintended that these would be restored.

I can reproduce this using the [requestStorageAccessFor demo](https://rws-member-1.glitch.me/request-storage-access-for.html) and the [requestStorageAccess demo](https://rws-member-1.glitch.me/request-storage-access.html) (after setting up the requisite RWS locally) in a local build of Chromium (124.0.6316.0 (Developer Build) (64-bit)). I think this is a relatively new regression.</content>
    </entry>
    <entry>
        <id>326482714</id>
        <title>[2024 PE] Desktop: update page info type styles to be consistent</title>
        <author>
            <name>yw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326482714"/>
        <updated>2024-02-22T22:20:22.979Z</updated>
        <summary>-</summary>
        <content type="html">Currently, the type styles for the page info menu and submenus are inconsistent. Some body copy has different color and line-heights. Could we define a spec that makes this more coherent?

Screenshot: https://screenshot.googleplex.com/7Q6PPN2TDfatQjf

Serena / Shane, is this something we'd like to invest in? If so, would on the UX side would be the best person to own the spec?</content>
    </entry>
    <entry>
        <id>326478175</id>
        <title>grandparent_location_aboutsrcdoc.sub.window.html is flaky</title>
        <author>
            <name>db...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326478175"/>
        <updated>2024-02-22T22:18:25.547Z</updated>
        <summary>-</summary>
        <content type="html">grandparent_location_aboutsrcdoc.sub.window.html, which was [landed earlier today](https://chromium-review.googlesource.com/c/chromium/src/+/5238679), is [flaky on multiple platforms](https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fwpt_internal%2Fdom%2Fabout_srcdoc%2Fgrandparent_location_aboutsrcdoc.sub.window.html).</content>
    </entry>
    <entry>
        <id>326480045</id>
        <title>[2024 PE] Desktop: update page info animation between main and subpages</title>
        <author>
            <name>yw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326480045"/>
        <updated>2024-02-22T22:09:20.948Z</updated>
        <summary>-</summary>
        <content type="html">Per sereeena@ this was built and CL landed by olesiamarukhno@ but never made it to Canary. Possible to revisit this again as part of the PE effort?

Spec of what it should look like: https://docs.google.com/presentation/d/1dRjIubeN0sYdRuppkvDUvrkZDiMxkWSQIEHejiiQVsM/edit#slide=id.gd31a203c00_0_4

Assigning to Olesia to investigate further.</content>
    </entry>
    <entry>
        <id>326353887</id>
        <title>Add WebGLObject IDL superinterface</title>
        <author>
            <name>kb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326353887"/>
        <updated>2024-02-22T22:04:07.426Z</updated>
        <summary>-</summary>
        <content type="html">https://github.com/KhronosGroup/WebGL/issues/3542 points out that WebGLObject is not exposed in any WebGL implementation's Web IDL. This causes failures of the automatically-generated IDL tests in the Interop test suite.

An attempt was made to remove WebGLObject from the specification, but the result was undesirable. Instead let's try to add WebGLObject to the implementation.

I vaguely remember trying to do this in the past and running into a problem where the split between WebGL "context objects" and "shared objects" caused difficulty when adding the WebGLObject superinterface in the IDL. Will try this again and find out.
</content>
    </entry>
    <entry>
        <id>326479137</id>
        <title>[2024 PE] Desktop: opportunity to make bookmark folder terminology more clear</title>
        <author>
            <name>yw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326479137"/>
        <updated>2024-02-22T22:03:58.266Z</updated>
        <summary>-</summary>
        <content type="html">When adding a bookmark, the "All bookmarks" and "Other bookmarks" folders seem to be used interchangeably and can be confusing. Seems like there's an opportunity to revisit the strings.

Screenshot (all bookmarks): https://screenshot.googleplex.com/5qQqktcWi4BRobF
Screenshot (other bookmarks): https://screenshot.googleplex.com/9Ud8FucU7vmRL5R

Assigning to Aina to provide guidance.</content>
    </entry>
    <entry>
        <id>326477842</id>
        <title>Merge request placeholder bug for crrev.com/c/5301240</title>
        <author>
            <name>am...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326477842"/>
        <updated>2024-02-22T21:59:05.543Z</updated>
        <summary>-</summary>
        <content type="html">Necessary to merge change for ChromeOS M123.

1. Why does your merge fit within the merge criteria for these milestones (Chrome Browser, Chrome OS)?
    This fixes testing-only behavior for the 3PCD project.
2. What changes specifically would you like to merge? Please link to Gerrit.
    https://chromium-review.googlesource.com/c/chromium/src/+/5301240
3. Have the changes been released and tested on canary?
    Tested locally. Released to canary on 2/22.
4. Is this a new feature? If yes, is it behind a Finch flag and are experiments active in any release channels?
    This is an existing feature, behind a Finch flag.
5. [Chrome OS only]: Was the change reviewed and approved by the Eng Prod Representative?
    N/A
6. If this merge addresses a major issue in the stable channel, does it require manual verification by the test team? If so, please describe required testing.
    N/A</content>
    </entry>
    <entry>
        <id>326478741</id>
        <title>Add support for typed suggestions grouping</title>
        <author>
            <name>en...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326478741"/>
        <updated>2024-02-22T21:54:50.637Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326478174</id>
        <title>`constexpr ObjCType*` is allowed whereas `const ObjCType*` isn’t</title>
        <author>
            <name>av...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326478174"/>
        <updated>2024-02-22T21:49:23.493Z</updated>
        <summary>-</summary>
        <content type="html">`const ObjCType*` is disallowed, as the C++ notion of a “const” object doesn’t make sense for an Objective-C type. This is enforced by the compiler.

However, the phrasing `constexpr ObjCType*` is allowed by the compiler, as evidenced by its [use in our codebase](https://source.chromium.org/search?q=%22constexpr%20NSString%22&amp;ss=chromium). However, a “constexpr” Objective-C object is just as non-sensical as a “const” Objective-C object.

The compiler should be fixed to reject this too.</content>
    </entry>
    <entry>
        <id>326477104</id>
        <title>[2024 PE] Desktop: persistent ring around extensions</title>
        <author>
            <name>yw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326477104"/>
        <updated>2024-02-22T21:47:35.755Z</updated>
        <summary>-</summary>
        <content type="html">This issue is a bit hard to replicate, but the ring around the extension icons will sometimes persist, requiring hovering over it again to get it to go away. In initial discussion with erikchen@, this may be due to a subtle bug in views::LayerAnimator. 

Screenshot: https://screenshot.googleplex.com/8mFPJpGdEWQkfod

Erik, can you help route to the right owner to investigate further?</content>
    </entry>
    <entry>
        <id>326476000</id>
        <title>Make Suppliers APIs more Cohesive</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326476000"/>
        <updated>2024-02-22T21:41:07.656Z</updated>
        <summary>-</summary>
        <content type="html">The APIs in [//base/android/.../supplier](https://source.chromium.org/chromium/chromium/src/+/main:base/android/junit/src/org/chromium/base/supplier/;l=1?q=f:base%2Fandroid%20supplier&amp;sq=&amp;ss=chromium) were added on an as-needed basis, and many of them behave in subtly different ways.

Highlights from an [internal discussion](http://go/suppliers-email): 

There three behaviors that differ:
1. Whether to call the given callback if the value is already set
2. When the value is set, whether to call callbacks immediately, or via a posted event.
3. Whether null values are allowed

The caller of the API is in the best position to make decisions on #1 and #2, but it's currently hardcoded (and inconsistently so) in the implementations.

It might be the most clear &amp; ergonomic to encode the behaviors in the method names. E.g.:
```
void addSyncObserver(Callback&lt;E&gt; observer);
void addSyncObserverAndCall(Callback&lt;E&gt; observer);
void addSyncObserverAndCallIfSet(Callback&lt;E&gt; observer);
void addSyncObserverAndPost(Callback&lt;E&gt; observer);
void addSyncObserverAndPostIfSet(Callback&lt;E&gt; observer);
void addAsyncObserver(Callback&lt;E&gt; observer);
void addAsyncObserverAndCall(Callback&lt;E&gt; observer);
void addAsyncObserverAndCallIfSet(Callback&lt;E&gt; observer);
void addAsyncObserverAndPost(Callback&lt;E&gt; observer);
void addAsyncObserverAndPostIfSet(Callback&lt;E&gt; observer);
```

I think it would make sense to change OneShotSupplier to also use the same name "addAsyncObserverAndPostIfSet()"

The way google3 deals with the sync vs. async problem is with ListenableFuture. It has callers provide an Executor when registering callbacks, where the Executor is "Runnable::run" for sync callback. I find that approach kinda verbose, but also something that's worth considering.
</content>
    </entry>
    <entry>
        <id>326475719</id>
        <title>Improve PostTask Java API</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326475719"/>
        <updated>2024-02-22T21:38:20.399Z</updated>
        <summary>-</summary>
        <content type="html">Examples:
* PostTask interop with Executors
* PostTask for Deferred Startup Tasks
* PostTaskAndReply (&amp; ThreadTaskRunnerHandle::Get())
* Revisit PostTask thread priority handling
* PostTask where Looper is required (add clear guidance at least)
</content>
    </entry>
</feed>