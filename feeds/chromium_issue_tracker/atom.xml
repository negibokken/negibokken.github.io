<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:32.969Z</updated>
    <entry>
        <id>334137034</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334137034"/>
        <updated>1970-01-01T00:28:32.969Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286037:1286064:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=66dce92a-247c-4eb8-bd6c-e2e2b303b4d6

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=66dce92a-247c-4eb8-bd6c-e2e2b303b4d6

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.bindings/insert-before/insert-before.html
       10.13%: 15.9556 -&gt; 14.3385 unitless

Top 1 affected measurements in android-pixel2_webview-perf:
  - blink_perf.bindings/insert-before/insert-before.html
       10.13%: 15.9556 -&gt; 14.3385 unitless

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: haraken@chromium.org, japhet@chromium.org, jbroman@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286036..1286064
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..1c35107cdca725ca700f1c8c3ea39d690e4cfc3e</content>
    </entry>
    <entry>
        <id>333961058</id>
        <title>Not all ports available on external thunderbolt dock</title>
        <author>
            <name>wo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961058"/>
        <updated>1970-01-01T00:28:32.968Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Plug in thunderbolt doc
2. Keyboard/mouse won't work in the dock but will when plugged directly into the laptop
3. However, the monitor will connect just fine

# Problem Description
When I plug into a thunderbolt dock via usb-C cable, only some of the peripherals work (e.g., monitor works but the USB ports don't work). All of the ports worked in a previous version (probably ~1 week ago) and they all work with a different laptop (Thinkpad with Windows)

# Summary
Not all ports available on external thunderbolt dock

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Dev \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333940421</id>
        <title>Replace ChainCallbacks() with Callback::Then()</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333940421"/>
        <updated>1970-01-01T00:28:32.966Z</updated>
        <summary>-</summary>
        <content type="html">c/b/web_applications/callback_utils.h contains a facility for chaining callbacks, originally added (in a different subdir) in https://chromium-review.googlesource.com/c/chromium/src/+/3858898.

This requires making each bound method take a "next callback" arg and manually invoke it with the desired arguments when it's done running, while returning `void` itself.

**Problems**
* Called method signatures are more verbose, because they include details of the subsequent pipeline stage.
* Called method signatures don't "say what they mean", because any "return value" is passed to the next callback inline instead of being exposed as a return type.
* Called method implementations are inflexible for composition/reuse, because they encode details of how to invoke the subsequent pipeline stage.
* Caller implementations are misleading, because `RunChainedCallbacks()` doesn't actually mean each successive callback will run; it simply binds them as args and runs the first callback. Since any given callback can take its arg and do anything with it, as opposed to actually chaining to it (and many indeed do!), callers must go read each called method to understand the actual control flow.
* The convenience of `RunChainedCallbacks()` encourages pessimistic serialization when some stages could theoretically run simultaneously.
* Using callbacks as args makes any potential future conversion to coroutines more difficult.
* This isn't common practice in Chromium, so it increases cognitive and maintenance burden.

**Proposed solution**

`base::{Once,Repeating}Callback` already contains a facility for chaining that avoids the issues above: `.Then()`. It binds successive callbacks by passing the return value of each as the unbound arg of the next. As a result, actual arguments and execution order are explicit at the callsite, and not encoded into the called methods.

`base::BarrierCallback` allows parallelizing independent chains and running some termination step only when all of them complete. If "abort on first error" behavior is desired, https://chromium-review.googlesource.com/c/chromium/src/+/5378285 may be of interest.

This bug proposes gradually converting all usage of ChainedCallbacks to standard Chromium idioms above (and then removing this header), along with removing continuation callback params where possible.

**Complications**

Without coroutines, maybe-async actions are difficult to implement without continuation callback arguments. Consider:
```c++
void Obj::MaybeAsync(ContinuationCallback cb) {
  if (done_) {
    cb.Run();
  } else {
    task_runner_-&gt;PostTaskAndReply(FROM_HERE, base::BindOnce(DoWork), std::move(cb));
  }
}
```
This code doesn't have obviously-superior alternatives. Such cases in existing code will probably need to continue to use continuation passing. However, by eliminating other continuations and pessimistic serialization, we can still improve existing code.

**Sample conversions**

OLD CODE *(based on the real class, but simplified)*
```c++
void WebAppIconDiagnosticCommand::DiagnoseEmptyOrMissingIconFiles(
    base::OnceCallback&lt;void(CommandResult)&gt; done_callback,
    WebAppIconManager::IconFilesCheck icon_files_check) {
  result_-&gt;has_empty_icon_file = icon_files_check.empty &gt; 0;
  result_-&gt;has_missing_icon_file = icon_files_check.missing &gt; 0;
  std::move(done_callback).Run(CommandResult::kSuccess);
}

void Caller() {
  RunChainedCallbacks(
      base::BindOnce(
          &amp;WebAppIconDiagnosticCommand::DiagnoseEmptyOrMissingIconFiles,
          GetWeakPtr()),

      base::BindOnce(&amp;WebAppIconDiagnosticCommand::ReportResultAndDestroy,
                     GetWeakPtr()));
}
```
NEW CODE
```c++
CommandResult WebAppIconDiagnosticCommand::DiagnoseEmptyOrMissingIconFiles(
    WebAppIconManager::IconFilesCheck icon_files_check) {
  result_-&gt;has_empty_icon_file = icon_files_check.empty &gt; 0;
  result_-&gt;has_missing_icon_file = icon_files_check.missing &gt; 0;
  return CommandResult::kSuccess;
}

void Caller() {
  base::BindOnce(&amp;WebAppIconDiagnosticCommand::DiagnoseEmptyOrMissingIconFiles,
                 GetWeakPtr())
      .Then(base::BindOnce(&amp;WebAppIconDiagnosticCommand::ReportResultAndDestroy,
                           GetWeakPtr()))
      .Run();
}
```
Not only is the new code shorter, `DiagnoseEmptyOrMissingIconFiles()` can now be invoked from anywhere and doesn't care about the context it's inside.

OLD CODE *(based on the real class, but simplified)*
```c++
void ManifestUpdateCheckCommand::DownloadNewManifestData(
    base::OnceClosure next_step_callback) {
  DCHECK_EQ(stage_, ManifestUpdateCheckStage::kPendingAppLock);
  stage_ = ManifestUpdateCheckStage::kDownloadingNewManifestData;

  RunChainedCallbacks(
      base::BindOnce(&amp;ManifestUpdateCheckCommand::DownloadNewManifestJson,
                     GetWeakPtr()),

      base::BindOnce(&amp;ManifestUpdateCheckCommand::StashNewManifestJson,
                     GetWeakPtr()),

      base::BindOnce(&amp;ManifestUpdateCheckCommand::DownloadNewIconBitmaps,
                     GetWeakPtr()),

      base::BindOnce(&amp;ManifestUpdateCheckCommand::StashNewIconBitmaps,
                     GetWeakPtr()),

      base::BindOnce(&amp;ManifestUpdateCheckCommand::ValidateNewScopeExtensions,
                     GetWeakPtr()),

      base::BindOnce(&amp;ManifestUpdateCheckCommand::StashValidatedScopeExtensions,
                     GetWeakPtr()),

      std::move(next_step_callback));
}
```
NEW CODE (assumes https://chromium-review.googlesource.com/c/chromium/src/+/5378285 has landed, and some signature changes not shown here)
```c++
void ManifestUpdateCheckCommand::DownloadNewManifestData(
    base::OnceClosure next_step_callback) {
  DCHECK_EQ(stage_, ManifestUpdateCheckStage::kPendingAppLock);
  stage_ = ManifestUpdateCheckStage::kDownloadingNewManifestData;

  DownloadNewManifestJson(
      base::BindOnce(&amp;ManifestUpdateCheckCommand::StashNewManifestJson,
                     GetWeakPtr())
          .Then(base::BindOnce(&amp;ManifestUpdateCheckCommand::OnManifestStashed,
                               GetWeakPtr(), std::move(next_step_callback))));
}

void ManifestUpdateCheckCommand::OnManifestStashed(
    base::OnceClosure next_step_callback) {
  const auto barrier_cb = base::BarrierCallbackOrFirstError(
      2, base::BindOnce(
             [](base::OnceClosure cb, auto ret) {
               // Only invoke `cb` if neither step had an error.
               if (ret.has_value()) {
                 std::move(cb).Run();
               } else {
                 CompleteCommandAndSelfDestruct(ret.error());
               }
             },
             std::move(next_step_callback)));
  DownloadNewIconBitmaps(
      base::BindOnce(&amp;ManifestUpdateCheckCommand::StashNewIconBitmaps,
                     GetWeakPtr())
          .Then(barrier_cb));
  ValidateNewScopeExtensions(
      base::BindOnce(&amp;ManifestUpdateCheckCommand::StashValidatedScopeExtensions,
                     GetWeakPtr())
          .Then(barrier_cb));
}
```
This eliminates continuation arguments from all three "stash" methods, hoists duplicated error-handling code to a common location, and allows the "download icon bitmaps" and "validate scope extensions" stages to run in parallel. The new `OnManifestStashed()` method could instead be written as a lambda if desired, assuming the called methods were public and the lambda manually checked a bound weak pointer.</content>
    </entry>
    <entry>
        <id>334193264</id>
        <title>Rename ImprovedBookmarkRow to BookmarkRow</title>
        <author>
            <name>wy...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334193264"/>
        <updated>1970-01-01T00:28:32.965Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334192344</id>
        <title>m126 ffmpeg roll</title>
        <author>
            <name>li...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334192344"/>
        <updated>1970-01-01T00:28:32.965Z</updated>
        <summary>-</summary>
        <content type="html">another milestone, another ffmpeg roll.</content>
    </entry>
    <entry>
        <id>334190793</id>
        <title>Tests are failing: signin_view_controller_interactive_uitest.cc(184): Failed\r\nRunLoop::Run() timed out. Timeout set at ProxyRunTestOnMainThreadLoop@content\\public\...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334190793"/>
        <updated>1970-01-01T00:28:32.965Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
signin_view_controller_interactive_uitest.cc(184): Failed\r\nRunLoop::Run() timed out. Timeout set at ProxyRunTestOnMainThreadLoop@content\\public\\test\\browser_test_base.cc:851.

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:interactive_ui_tests/SignInViewControllerBrowserTest.EmailConfirmationDefaultFocus
- ninja://chrome/test:interactive_ui_tests/SignInViewControllerBrowserTest.SyncConfirmationDefaultFocus


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/a42dce3841134a59389f3c4324199a0c

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333926710</id>
        <title>[Graphics]: 8 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926710"/>
        <updated>1970-01-01T00:28:32.965Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286142:1286275:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=40ceed90-9274-4286-b36b-c15804db949f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=40ceed90-9274-4286-b36b-c15804db949f

Top 1 regressions (out of 2, with 1 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/jarro_doverson
       82.59%: 5.5645500000000006 -&gt; 10.16005 unitless

Top 1 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/jarro_doverson
       82.59%: 5.5645500000000006 -&gt; 10.16005 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286141..1286275
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/0567fc17863c733a58907e561ef2fdcba53c17f8..69eafa67829f10ed19856b44b304629571069661</content>
    </entry>
    <entry>
        <id>334188989</id>
        <title>Chrome does not scroll the table when navigating with VoiceOver screen reader</title>
        <author>
            <name>vt...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334188989"/>
        <updated>1970-01-01T00:28:32.964Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Launch VoiceOver screen reader with Command+F5.
2. Open a webpage with an HTML table that does not fit on the screen, i.e. the user has to scroll in order to see the rest of the table content.
3. Use VoiceOver navigation keystrokes, i.e. Control+Option+arrows, to navigate through the table. Move downward to get to the last row and observe.

Observed results:
Even though VOiceOver reports the correct number of rows and columns, the count (and the focus) get reset as soon as VOiceOver cursor gets to the last visible row on the screen.

Expected results:
VoiceOver should scroll the table once the cursor hits the last visible row on the screen so that the user can continue navigating the rest of the table content.

# Problem Description
When the table does not fit on the screen, users of VoiceOver screen reader are not able to view the table content that extends beyond the current screen. As soon as the VoiceOver cursor hits the last visible row, the navigation gets reset to the top of the table.

# Additional Comments
Since I was not able to find the page that can be relied on to reproduce the issue at any time, I created a small HTML/Javascript example to illustrate the behavior. The constants at the top of the script can be adjusted to change the number of desired rows and columns.

# Summary
Chrome does not scroll the table when navigating with VoiceOver screen reader

# Custom Questions
#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333961056</id>
        <title>href on anchor tag containing a text fragment fails on different query strings</title>
        <author>
            <name>db...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961056"/>
        <updated>1970-01-01T00:28:32.963Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Navigate to a page with a query string such as "https://bungalooknursery.com.au/search-plants?SearchText=&amp;CatAndOr=OR&amp;category%5B%5D=Fern#ShowMatchingPlants"
2. Click on a link within the page with the same text fragment but different query string such as "/search-plants?SearchText=possum#ShowMatchingPlants"
3. The query doesn't get loaded into a new page, the only action performed is scrolling the page to "#ShowMatchingPlants".

This code used to work.  This bug also affects WordPress menus with text fragments.  I have reproduced this bug in the latest Chrome and MS Edge browsers.  The above steps will fail (on above pages) as by the time you read this I will have removed the text fragments as a poor workaround.

# Problem Description
This HTML fails and simply scrolls to the text fragment:

&lt;a class="ButtonLookSmall SpecialSearchBtn" href="/search-plants?SearchText=possum#ShowMatchingPlants" title="Canned search for plants that mention &amp;quot;possums&amp;quot;.

NOTE: All other search fields will be ignored! You can reapply them after the search if you wish.

URL
----------
/search-plants?SearchText=possum#ShowMatchingPlants"&gt;Possums&lt;/a&gt;

# Summary
href on anchor tag containing a text fragment fails on different query strings

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
Tested latest Chrome &amp; MS Edge browsers

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333954432</id>
        <title>chrome://dino visits are not logged in WebUI.CreatedForUrl histogram.</title>
        <author>
            <name>dp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333954432"/>
        <updated>1970-01-01T00:28:32.963Z</updated>
        <summary>-</summary>
        <content type="html">Candidate fix at https://chromium-review.googlesource.com/c/chromium/src/+/5449505.</content>
    </entry>
    <entry>
        <id>333976558</id>
        <title>[V8 Memory Perf Sheriff]: 4 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976558"/>
        <updated>1970-01-01T00:28:32.961Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286348:1286375:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f8205bb9-bd3d-4500-8536-a60608400827

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=f8205bb9-bd3d-4500-8536-a60608400827
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f8205bb9-bd3d-4500-8536-a60608400827

Top 4 regressions (out of 4, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:v8:allocated_objects_size_avg/browse_search/browse_search_google_india_2021
      114.57%: 9691191.5 -&gt; 20794408.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:v8:effective_size_avg/browse_search/browse_search_google_india_2021
      104.11%: 11363885.0 -&gt; 23194341.5 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:blink_gc:allocated_objects_size_avg/browse_search/browse_search_google_india_2021
       90.50%: 4430477.0 -&gt; 8439868.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:blink_gc:effective_size_avg/browse_search/browse_search_google_india_2021
       49.52%: 9149098.5 -&gt; 13679275.0 sizeInBytes

Top 3 affected measurements in win-10-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:v8:allocated_objects_size_avg/browse_search/browse_search_google_india_2021
      114.57%: 9691191.5 -&gt; 20794408.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:v8:effective_size_avg/browse_search/browse_search_google_india_2021
      104.11%: 11363885.0 -&gt; 23194341.5 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:blink_gc:allocated_objects_size_avg/browse_search/browse_search_google_india_2021
       90.50%: 4430477.0 -&gt; 8439868.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286347..1286375
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..f16922ec4c190b96c206d983f110ecb0c88f9561
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/69eafa67829f10ed19856b44b304629571069661..41b4bf97c15b5dce6d5dd7dd0624c232889217ce</content>
    </entry>
    <entry>
        <id>333967640</id>
        <title>Rename setUpSaveCardInfobarEGTestHelper.</title>
        <author>
            <name>sl...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333967640"/>
        <updated>1970-01-01T00:28:32.959Z</updated>
        <summary>-</summary>
        <content type="html">Currently setUpSaveCardInfobarEGTestHelper is used by the SaveCardInfobarEGTest as well as CardUnmaskAuthenticationSelectionEgtest. Give it a general name. For example `setUpFakeCreditCardServer`.</content>
    </entry>
    <entry>
        <id>333961054</id>
        <title>WebUI.CreatedForUrl histogram not recording any chrome-untrusted:// visits.</title>
        <author>
            <name>dp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961054"/>
        <updated>1970-01-01T00:28:32.959Z</updated>
        <summary>-</summary>
        <content type="html">See logic at [1] which skips any logging unless the scheme is chrome:// or devtools://. This seems like a bug.

[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/webui/log_web_ui_url.cc;l=20;drc=800532c0bf6712ea4ab5928da9e776d6607a10b1</content>
    </entry>
    <entry>
        <id>333972306</id>
        <title>138%-250% regression in blink_perf.webcodecs at 1285077:1285128</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333972306"/>
        <updated>1970-01-01T00:28:32.959Z</updated>
        <summary>-</summary>
        <content type="html">None</content>
    </entry>
    <entry>
        <id>334170377</id>
        <title>Move TabRestoreService::Entry structs into their own file to decouple the types from the implementation</title>
        <author>
            <name>dl...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334170377"/>
        <updated>1970-01-01T00:28:32.958Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>334167388</id>
        <title>Tests are failing: ninja://chrome/test:unit_tests/SiteEngagementServiceTest.GetTotalNavigationPoints</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334167388"/>
        <updated>1970-01-01T00:28:32.958Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:unit_tests/SiteEngagementServiceTest.GetTotalNavigationPoints

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/cb5481d971c362ac3a2a0d5da08c224a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333926708</id>
        <title>[Chrome Perf Accessibility Sheriff]: 3 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926708"/>
        <updated>1970-01-01T00:28:32.957Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286523:1286532:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=3193c1d3-4915-41a7-90f8-fdcc38b1b272

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=3193c1d3-4915-41a7-90f8-fdcc38b1b272

Top 1 regressions (out of 6, with 5 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/BrowserAccessibilityManager::OnLocationChanges_sum/location-changes-css-animation.html
         inf%: 0.0 -&gt; 0.0975 ms

Top 1 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.accessibility/BrowserAccessibilityManager::OnLocationChanges_sum/location-changes-css-animation.html
         inf%: 0.0 -&gt; 0.0975 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286522..1286532
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a6857d71bd107af64d2245c68a280fe432cc179c..a6857d71bd107af64d2245c68a280fe432cc179c
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/bdfcaba85b3496ca1c799ecb306503fc40aff86b..bdfcaba85b3496ca1c799ecb306503fc40aff86b</content>
    </entry>
    <entry>
        <id>333954430</id>
        <title>Implement SharedImage Pool</title>
        <author>
            <name>vi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333954430"/>
        <updated>1970-01-01T00:28:32.957Z</updated>
        <summary>-</summary>
        <content type="html">Implement a shared image pool which clients can use to allocate a pool of identical shared images.

Initially a client side SI pool can be implemented which can be later extended to the service side by passing additional information and metadata. Service side can use this information to optimize the SI Pool dynamically, handle pool cleanup by using service side events like memory pressure etc.
</content>
    </entry>
    <entry>
        <id>333961053</id>
        <title>Check Bind special-cases for rebound callbacks for cvref quals + reference wrappers</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961053"/>
        <updated>1970-01-01T00:28:32.957Z</updated>
        <summary>-</summary>
        <content type="html">`Bind()` has special-case code to try and avoid overhead when directly rebinding a callback without new args: https://source.chromium.org/chromium/chromium/src/+/main:base/functional/bind_internal.h;l=1853;drc=e2dd9c020dd1f8a6090365303a1efdab15599f96

* The uses of `is_instantiation&lt;&gt;` do not attempt to decay the argument type. I should check whether this code actually fires in all the cases we want it to, e.g. if `BindOnce(std::move(once_cb))` works.
* There's no unwrapping of `std::reference_wrapper&lt;&gt;`. I don't know if we ever do such a thing, but this should most likely (recursively) peek at the unwrapped type to see if it's a callback, and apply to that if so. (Need to think through whether there are any safety/correctness concerns with that.) Note that we can't just blindly strip reference wrappers here, since if the single arg is _not_ another callback, we need the ref wrapper storage machinery elsewhere to kick in.</content>
    </entry>
    <entry>
        <id>334057056</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334057056"/>
        <updated>1970-01-01T00:28:32.957Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d762beab-2ac2-4760-a8c2-9debe012b14e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d762beab-2ac2-4760-a8c2-9debe012b14e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/v8:gc:cycle_sum/browse_media/browse_media_tumblr_2018
        4.93%: 149.427 -&gt; 156.798 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop/v8:gc:cycle_sum/browse_media/browse_media_tumblr_2018
        4.93%: 149.427 -&gt; 156.798 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334082975</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334082975"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f6d34b55-ab04-4729-be22-2619c99aaa50

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f6d34b55-ab04-4729-be22-2619c99aaa50

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/Compile:duration_avg/browse_news/browse_news_reddit_2020
       32.62%: 57.05 -&gt; 75.66 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/Compile:duration_avg/browse_news/browse_news_reddit_2020
       32.62%: 57.05 -&gt; 75.66 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333954429</id>
        <title>Allow requests from extension service workers to continue without a certificate in certain cases</title>
        <author>
            <name>rd...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333954429"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">This is a follow up from crbug.com/1417601.

In crbug.com/1417601, we allowed requests from extension service workers to use enterprise-provided client certificates. This allowed requests from extension service workers that hit a resource that required a client cert to succeed if the user was on an enterprise device where the admin configured the enterprise policy.  This is inline with how extension offscreen documents and legacy extension background pages behaved.

However, there's still a notable difference here; specifically, in the case of a resource having an _optional_ client cert.

In both cases, we'll end up looking for the client cert from the ChromeContentBrowserClient in [SelectClientCertificate()](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/chrome_content_browser_client.cc;l=3752-3874;drc=95da459e578db011f3717ed457e3a5c9174edd62).

Extension Service Worker Case: We don't find a client cert from enterprise policy and we also don't have an associated WebContents. This results in us early-returning from [this if statement](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/chrome_content_browser_client.cc;l=3841-3852;drc=95da459e578db011f3717ed457e3a5c9174edd62), which results in the request being terminated.

Extension Offscreen Document and Legacy Background Page Case: These are both DOM-based contexts, so they *do* have a valid WebContents at this point.  This allows the code to continue through to [ShowSSLClientCertificateSelector](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/views/ssl_client_certificate_selector.cc;l=163-196;drc=0ebe2cf9f3f6544ba582473c5b9b8e3506f29708).  This will never let us show a dialog for these contexts -- [SSLClientCertificateSelector::CanShow()](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/views/ssl_client_certificate_selector.cc;l=183-188;drc=0ebe2cf9f3f6544ba582473c5b9b8e3506f29708) will return false.  That's good, because we don't want to display a picker without any context.  However, before reaching that point, there's [a check](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/views/ssl_client_certificate_selector.cc;l=176-181;drc=0ebe2cf9f3f6544ba582473c5b9b8e3506f29708) for whether there are any certificates to choose from.  If there aren't any, instead of canceling the request, the request will continue without a certificate.

The end result is that, in the DOM-based contexts case, the extension can make requests to resources that request, but do not require, a certificate if there are no client certs to pick from.

We should support this same behavior for extension service workers.  There's concern about supporting this case for *all* service workers because of the way client cert selection works on Android.  There, we can't separate out the process of querying and selecting the certificates, and so don't want to enter the flow of potentially selecting certificates unless we're ready to show a dialog.

For this, we'll have extension service workers behave slightly differently from web service workers, allowing them to emulate the behavior we already have for DOM-based extension contexts.</content>
    </entry>
    <entry>
        <id>333962770</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962770"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fa95eb1b-8aca-4af5-a392-525e3b77ce94

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fa95eb1b-8aca-4af5-a392-525e3b77ce94

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/V8 C++:duration_avg/browse_media/browse_media_googleplaystore_2021
        1.61%: 87.630005 -&gt; 89.041 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/V8 C++:duration_avg/browse_media/browse_media_googleplaystore_2021
        1.61%: 87.630005 -&gt; 89.041 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333965950</id>
        <title>Crash</title>
        <author>
            <name>ol...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333965950"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">Basic info:

* Build fingerprint: OPPO/OPD2102ARU/OP5226L1:13/RKQ1.211119.001/S.16022e6-2-1:user/release-keys
* Android API level: 33
* Crashed WebView version: 124.0.6367.18
* DevTools version: com.google.android.webview (124.0.6367.42/636704242)
* Application: com.activision.callofduty.warzone (933)
* If this app is available on Google Play, please include a URL:

Steps to reproduce:

1.
2.
3.

Expected result:
(What should have happened?)

&lt;Any additional comments, you want to share&gt;"

---

**DO NOT CHANGE BELOW THIS LINE**

* Crash ID: http://crash/54d78107e371605c
* Instructions for triaging this report (Chromium members only): https://bit.ly/2SM1Y9t
</content>
    </entry>
    <entry>
        <id>334064001</id>
        <title>Some CSS values don't wrap in the Styles panel</title>
        <author>
            <name>os...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334064001"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open https://stackblitz.com/github/oscarmarina/blk-material
2. Open Chrome DevTools - Styles panel
3. Inspect &lt;blk-material&gt; webcomponent
2. 
3. 

# Problem Description
In [Elements:Styles] panel some CSS values that contain multiple CSS variables do not wrap when the panel is narrowed. This can make it difficult to read and understand the CSS code.

I've attached an image and video comparing Firefox Developer Tools (where CSS variables wrap correctly) with Chrome Developer Tools (where the issue occurs).

# Summary
Some CSS values don't wrap in the Styles panel

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333926707</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926707"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=5f987230-213a-464c-9f08-17f27bd0d98e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=5f987230-213a-464c-9f08-17f27bd0d98e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/Compile:duration_avg/browse_tools/browse_tools_docs_scrolling
       32.62%: 57.05 -&gt; 75.66 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/Compile:duration_avg/browse_tools/browse_tools_docs_scrolling
       32.62%: 57.05 -&gt; 75.66 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334085072</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334085072"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ae4c4eac-b5e5-40c1-ab7e-95edcdee7252

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ae4c4eac-b5e5-40c1-ab7e-95edcdee7252

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/Compile:duration_avg/browse_search/browse_search_google_india_2021
       32.62%: 57.05 -&gt; 75.66 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/Compile:duration_avg/browse_search/browse_search_google_india_2021
       32.62%: 57.05 -&gt; 75.66 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334026779</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334026779"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fa898ddb-c12e-4019-87aa-17542c0b0c3a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fa898ddb-c12e-4019-87aa-17542c0b0c3a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/V8-Only-Main-Thread:duration_avg/browse_media/browse_media_youtubetv_2019
        4.25%: 526.0875 -&gt; 548.459 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/V8-Only-Main-Thread:duration_avg/browse_media/browse_media_youtubetv_2019
        4.25%: 526.0875 -&gt; 548.459 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333976555</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976555"/>
        <updated>1970-01-01T00:28:32.956Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284821:1284996:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a0d3e832-1f48-4a82-a3ce-847a9c417a56

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a0d3e832-1f48-4a82-a3ce-847a9c417a56

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/Compile:duration_avg/browse_media/browse_media_youtubetv_watch_2020
       32.62%: 57.05 -&gt; 75.66 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/Compile:duration_avg/browse_media/browse_media_youtubetv_watch_2020
       32.62%: 57.05 -&gt; 75.66 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334085071</id>
        <title>[Blink Layout]: 2 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334085071"/>
        <updated>1970-01-01T00:28:32.955Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286044:1286052:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2b5e1341-6a78-48d9-a285-75e964333727

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2b5e1341-6a78-48d9-a285-75e964333727

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.layout/hittest-block-children/hittest-block-children.html
       71.82%: 22.25 -&gt; 38.230000000000004 ms

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.layout/hittest-block-children/hittest-block-children.html
       71.82%: 22.25 -&gt; 38.230000000000004 ms

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: ikilpatrick@chromium.org, kojii@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/d55abbb238196735f6a3ae6b5209a1a0eb4a8b28..6d38d8cba8bca76b7a4752461acec4b4dc97775d
  Chromium Commit Position: https://crrev.com/1286043..1286052
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..1c35107cdca725ca700f1c8c3ea39d690e4cfc3e</content>
    </entry>
    <entry>
        <id>334082973</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334082973"/>
        <updated>1970-01-01T00:28:32.955Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285952:1286012:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b733b1ec-d924-4981-8ab9-a6d25974b10e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b733b1ec-d924-4981-8ab9-a6d25974b10e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:young:atomic_sum/browse_media/browse_media_youtubetv_2019
       34.62%: 39.4 -&gt; 53.04 

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - v8.browsing_desktop/v8:gc:cycle:main_thread:young:atomic_sum/browse_media/browse_media_youtubetv_2019
       34.62%: 39.4 -&gt; 53.04 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971753</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971753"/>
        <updated>1970-01-01T00:28:32.955Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286119:1286165:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=bfe9d525-ba27-43c9-b4e1-80bf08b8ab9c

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=bfe9d525-ba27-43c9-b4e1-80bf08b8ab9c
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=bfe9d525-ba27-43c9-b4e1-80bf08b8ab9c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop-future/Total:duration_avg/browse_tools/browse_tools_docs_scrolling
       19.71%: 3577.324 -&gt; 4282.471 

Top 1 affected measurements in win-10-perf:
  - v8.browsing_desktop-future/Total:duration_avg/browse_tools/browse_tools_docs_scrolling
       19.71%: 3577.324 -&gt; 4282.471 

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333972305</id>
        <title>[V8 Perf Sheriff]: 3 regressions in v8</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333972305"/>
        <updated>1970-01-01T00:28:32.955Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 93214:93217:

  Internal (Googlers-only) Reports:
    - V8: https://v8-perf.corp.goog/_/alertgroup?group_id=0bbec678-b294-4d56-a11a-680e0c892725

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0bbec678-b294-4d56-a11a-680e0c892725

Top 3 regressions (out of 5, with 2 improvements) in this group:
  - internal.client.v8/ia32/v8/Infra/Stability/AreWeFastYet
      100.00%: 1.0 -&gt; 0.0 bool
  - internal.client.v8/ia32/v8/Infra/Stability/Unity-Liftoff
      100.00%: 1.0 -&gt; 0.0 bool
  - internal.client.v8/x64/v8/web-tooling-benchmark/buble
       14.50%: 11.79 -&gt; 10.08 runs/s

Top 2 affected measurements in ia32:
  - v8/Infra/Stability/AreWeFastYet
      100.00%: 1.0 -&gt; 0.0 bool
  - v8/Infra/Stability/Unity-Liftoff
      100.00%: 1.0 -&gt; 0.0 bool


Top 1 affected measurements in x64:
  - v8/web-tooling-benchmark/buble
       14.50%: 11.79 -&gt; 10.08 runs/s

Regressions grouped by v8 includes data from the following benchmarks with listed owners:
  v8: 
      

Commits in this range:
  V8 Git Hash: https://chromium.googlesource.com/v8/v8/+log/9e3c04a30922628a7424ed6df3fbddbc73fa4aa5..f18d6b0452142d5e411d502f5aa744ed9918307a
  V8 Perf Git Hash: https://chrome-internal.googlesource.com/v8/v8-perf/+log/69314fe7313b988ec4d3f731b8e0949c46985d01..69314fe7313b988ec4d3f731b8e0949c46985d01</content>
    </entry>
    <entry>
        <id>333981079</id>
        <title>http://datatables.net/tn/7</title>
        <author>
            <name>po...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333981079"/>
        <updated>1970-01-01T00:28:32.954Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>334154801</id>
        <title>http/tests/devtools/elements/styles-2/multiple-imports-edit-crash.js test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334154801"/>
        <updated>1970-01-01T00:28:32.954Z</updated>
        <summary>-</summary>
        <content type="html">http/tests/devtools/elements/styles-2/multiple-imports-edit-crash.js

Text Failure on mac11-arm64-rel-tests, mac12-arm64-rel-tests: , mac13-arm64-rel-tests builder 

Test History Link:
mac11-arm64-rel-tests: https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fdevtools%2Felements%2Fstyles-2%2Fmultiple-imports-edit-crash.js?q=VHASH%3A1da32bc6d12138b3

mac13-arm64-rel-tests: https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fdevtools%2Felements%2Fstyles-2%2Fmultiple-imports-edit-crash.js?q=VHASH%3A468033802be7c257

mac12-arm64-rel-tests: : https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fdevtools%2Felements%2Fstyles-2%2Fmultiple-imports-edit-crash.js?q=VHASH%3Ac5838aea20088469

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Fhttp%2Ftests%2Fdevtools%2Felements%2Fstyles-2%2Fmultiple-imports-edit-crash.js&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 10.21% flaky rate in runs mostly on mac  builders
</content>
    </entry>
    <entry>
        <id>333950756</id>
        <title>Remove or flag guard SoftNavigationHeuristics developer console log</title>
        <author>
            <name>sh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333950756"/>
        <updated>1970-01-01T00:28:32.954Z</updated>
        <summary>-</summary>
        <content type="html">`SoftNavigationHeuristics` emits a console message when a soft navigation is detected. While this is useful for debugging, we probably shouldn't spam the console in production. We might not want to outright remove it (yet), but we should probably hide it behind an about://flags entry or something.

See https://chromium-review.googlesource.com/c/chromium/src/+/5311372/comment/73e6bb08_cdf9c9d8/ for related discussion.</content>
    </entry>
    <entry>
        <id>333945861</id>
        <title>[SPC] Add experimental network/issuer icons</title>
        <author>
            <name>sm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333945861"/>
        <updated>1970-01-01T00:28:32.953Z</updated>
        <summary>-</summary>
        <content type="html">Tracking bug for adding experimental network/issuer icons to the SPC transaction UX, to allow local developer testing of this UX exploration. The intention is to land something behind a Chrome for exploration only, with the assumption of having to rework the API shape at minimum before it could be actually shipped.</content>
    </entry>
    <entry>
        <id>333981078</id>
        <title>Chromium Accessibility implementation misclassifies lists as tables</title>
        <author>
            <name>ej...@amazon.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333981078"/>
        <updated>1970-01-01T00:28:32.952Z</updated>
        <summary>-</summary>
        <content type="html">This bug is impacting an accessibility service:

Problem:

When trying to navigate by HTML Tables, the current chromium implementation classifies lists as tables. This causes incorrect usage when trying to navigate to a table, since you land on lists as well. Sometimes, there are multiple lists in between tables that cause unnecessary churn. 

In it’s current state, performAction(ACTION_PREVIOUS_HTML_ELEMENT, “TABLE”) and performAction(ACTION_NEXT_HTML_ELEMENT, “TABLE”) navigate to elements that are not tables. This is due to the method isTableLike considering Lists and other elements as Table elements: 

https://source.chromium.org/chromium/chromium/src/+/main:ui/accessibility/ax_role_properties.cc;l=844-875?q=isTableLike&amp;ss=chromium%2Fchromium%2Fsrc

Here is the flow in which this happens:

1. When performAction is called, it goes here in Chromium: https://source.chromium.org/chromium/chromium/src/+/main:content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java;l=1147-1163?q=webcontentsaccessibility&amp;ss=chromium%2Fchromium%2Fsrc

2. performAction then calls on the jumpToElementType method: https://source.chromium.org/chromium/chromium/src/+/main:content/public/android/java/src/org/chromium/content/browser/accessibility/WebContentsAccessibilityImpl.java;l=1413?q=jumptoelementtype&amp;sq=&amp;ss=chromium%2Fchromium%2Fsrc

3. jumpToElementType calls on findElementType: https://source.chromium.org/chromium/chromium/src/+/main:content/browser/accessibility/web_contents_accessibility_android.cc;l=1088-1105

4. Which then runs a tree search that has a predicate option, which in this case is “TABLE”: https://source.chromium.org/chromium/chromium/src/+/main:content/browser/accessibility/one_shot_accessibility_tree_search.cc;l=445-448?q=one_shot_acc&amp;ss=chromium%2Fchromium%2Fsrc

5. This predicate calls on a method called isTableLike to determine if a node’s role is a table: https://source.chromium.org/chromium/chromium/src/+/main:ui/accessibility/ax_role_properties.cc;l=844-875?q=isTableLike&amp;ss=chromium%2Fchromium%2Fsrc


The isTableLike method includes many elements that are not tables, and is the reason ACTION_PREVIOUS_HTML_ELEMENT and ACTION_NEXT_HTML_ELEMENT are jumping to elements that are not tables.


Proposal:

There should be a new check, for instance isTraditionalTable, that only includes grids and tables:

class ax_role_properties

bool IsTraditionalTable(const ax::mojom::Role role) {
  switch (role) {
    case ax::mojom::Role::kGrid:
    case ax::mojom::Role::kListGrid:
    case ax::mojom::Role::kTable:
    case ax::mojom::Role::kTreeGrid:
      return true;
    case ax::mojom::Role::kLayoutTable:
      return kExposeLayoutTableAsDataTable;
    default:
      return false;
  }
}

This could then be called by either the existing Table predicate, or a new one to give a new argument option for accessibility actions html next and previous element.

The existing table predicate would now call the isTraditionalTable method: 
class one_shot_accessibility_tree_search

bool AccessibilityTablePredicate(BrowserAccessibility* start,
                                 BrowserAccessibility* node) {
  return ui::IsTraditionalTable(node-&gt;GetRole());
}

</content>
    </entry>
    <entry>
        <id>334148065</id>
        <title>virtual/web-bluetooth-new-permissions-backend/external/wpt/bluetooth/server/getPrimaryService/gen-disconnected-device.https.window.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334148065"/>
        <updated>1970-01-01T00:28:32.952Z</updated>
        <summary>-</summary>
        <content type="html">virtual/web-bluetooth-new-permissions-backend/external/wpt/bluetooth/server/getPrimaryService/gen-disconnected-device.https.window.html

Crash Failure on Linux Tests (dbg)(1) builder

Test History Link:
Linux Tests (dbg)(1): 
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fvirtual%2Fweb-bluetooth-new-permissions-backend%2Fexternal%2Fwpt%2Fbluetooth%2Fserver%2FgetPrimaryService%2Fgen-disconnected-device.https.window.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fvirtual%2Fweb-bluetooth-new-permissions-backend%2Fexternal%2Fwpt%2Fbluetooth%2Fserver%2FgetPrimaryService%2Fgen-disconnected-device.https.window.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 11.71% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>334147653</id>
        <title>Add support for buyerReportingId and buyerAndSellerReportingId from B&amp;A response</title>
        <author>
            <name>be...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334147653"/>
        <updated>1970-01-01T00:28:32.952Z</updated>
        <summary>-</summary>
        <content type="html">We need to verify that the buyerReportingId or buyerAndSellerReportingId used for reporting on the Bidding and Auction Services trusted server matches the corresponding reporting ID associated with the ad on device.</content>
    </entry>
    <entry>
        <id>333961052</id>
        <title>ProfileMenuViewPixelTest.InvokeUi_default is failing on windows</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961052"/>
        <updated>1970-01-01T00:28:32.952Z</updated>
        <summary>-</summary>
        <content type="html">Most of the builds on this builder are failing this test. Here is an example, but they go back farther than the first page: https://ci.chromium.org/ui/p/chromium/builders/ci/Win10%20Tests%20x64/89743/overview</content>
    </entry>
    <entry>
        <id>334143253</id>
        <title>Customer have detected random CORS issues when working with Chrome with icons stored in a public GCP</title>
        <author>
            <name>rn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334143253"/>
        <updated>1970-01-01T00:28:32.951Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
- Initially, Cx has provided the screenshot of an error message [1].
- Cx also mentioned that it is random (it not always happens on the same icons) but it always occurs when the request to the bucket is done from an environment after a previous request done from a different environment (i.e: they make a request from DEV and it’s ok and then they make a request from PRE and in some icons we get a CORS error).
- As an example, Cx has made a request from DEV (left) and it’s ok whereas they request from ITG (right) and as we can see they get CORS errors because the header keeps a DEV value) [2].
- Cx has provided the screenshot of Headers DEV [3] &amp; [4] and Headers ITG [5].
- Cx mentioned that all of their team has tried it and the error happens in all of their Chrome browsers. It does not happen though in Safari or Edge.
[1] : https://screenshot.googleplex.com/7MAoutuPAFExD2p.png
[2] : https://screenshot.googleplex.com/6Dhc6Nrvx2EgegT.png
[3] : https://screenshot.googleplex.com/4CXcnqYioaWzJGk.png
[4] : https://screenshot.googleplex.com/5agGUCCcLZyjxgA.png
[5] : https://screenshot.googleplex.com/9qxD4TSxFYSZvkB.png

# Problem Description
- As per the bug (b/333724082), Software Engineer mentioned that cx have correct CORS configuration setting and GCS is also sending correct response to every call. Taking into consideration that only Chrome user having this issue, we would recommend sending this issue to Chrome team to see if they have better insights.
- For more information about the investigation of GCS, please check the bug (b/333724082).

# Additional Comments
Vector Case No : https://metabug.corp.google.com/entity/142860541?audience=42
Bug Link : https://buganizer.corp.google.com/issues/333724082

# Summary
Customer have detected random CORS issues when working with Chrome with icons stored in a public GCP

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>334141910</id>
        <title>Tests are failing: dump_accessibility_browsertest_base.cc(561): Value of: accessibility_waiter.WaitForNotification()\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334141910"/>
        <updated>1970-01-01T00:28:32.950Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
dump_accessibility_browsertest_base.cc(561): Value of: accessibility_waiter.WaitForNotification()\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://content/test:content_browsertests/DumpAccessibilityTreeTest.AccessibilityCSSTransform/All.blink
- ninja://content/test:content_browsertests/DumpAccessibilityTreeTest.AccessibilityIframeAriaHidden/All.blink
- ninja://content/test:content_browsertests/DumpAccessibilityTreeTest.AccessibilityCSSIframeHidden/All.blink
- ninja://content/test:content_browsertests/DumpAccessibilityTreeTest.AccessibilityCSSTransform/All.mac
- ninja://content/test:content_browsertests/DumpAccessibilityTreeTest.AccessibilityIframeAriaHidden/All.uia


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/039f3c162e95951a259d28f540da10bf

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334138332</id>
        <title>Add metrics to measure when budgets for sharedStorage.selectURL are hit</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334138332"/>
        <updated>1970-01-01T00:28:32.950Z</updated>
        <summary>-</summary>
        <content type="html">We should record UMA to see how often calls to selectURL end up with an insufficient budget.</content>
    </entry>
    <entry>
        <id>334135222</id>
        <title>PasswordSharingTestCase/testTappingLearnMoreInFamilyPickerInfoPopup fails on ios-tests</title>
        <author>
            <name>ei...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334135222"/>
        <updated>1970-01-01T00:28:32.950Z</updated>
        <summary>-</summary>
        <content type="html">Step "ios_chrome_settings_eg2tests_module iPad Pro 11\" (5th Gen) 16.7.1 or 16.7.2 on iOS-16.7.1 or iOS-16.7.2" failing on builder "chrome/ci/ios-tests"

List of failed builders:

Builder: ios-tests
https://ci.chromium.org/p/chrome/builders/ci/ios-tests
First failing build:
https://ci.chromium.org/p/chrome/builders/ci/ios-tests/b8750995406712561409
</content>
    </entry>
    <entry>
        <id>333976554</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976554"/>
        <updated>1970-01-01T00:28:32.949Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285829:1285854:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=166351ac-79e8-4cba-b1f0-ca8115b6fda1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=166351ac-79e8-4cba-b1f0-ca8115b6fda1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/put_and_create_imagebitmap_from_imagedata
        2.08%: 166.2957 -&gt; 169.7576 

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/put_and_create_imagebitmap_from_imagedata
        2.08%: 166.2957 -&gt; 169.7576 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334134064</id>
        <title>Step "ios_chrome_integration_eg2tests_module iPhone X 16.7.1 or 16.7.5 on iOS-16.7.1 or iOS-16.7.5" failing on builder "chrome/ci/iphone-device"</title>
        <author>
            <name>ei...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334134064"/>
        <updated>1970-01-01T00:28:32.949Z</updated>
        <summary>-</summary>
        <content type="html">Step "ios_chrome_integration_eg2tests_module iPhone X 16.7.1 or 16.7.5 on iOS-16.7.1 or iOS-16.7.5" failing on builder "chrome/ci/iphone-device"

List of failed builders:

Builder: iphone-device
https://ci.chromium.org/p/chrome/builders/ci/iphone-device
First failing build:
https://ci.chromium.org/p/chrome/builders/ci/iphone-device/b8750841429851767457
</content>
    </entry>
    <entry>
        <id>333971752</id>
        <title>[Blink Shadow DOM]: 1 regressions in blink_perf.shadow_dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971752"/>
        <updated>1970-01-01T00:28:32.949Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285761:1285790:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=04e7cbbd-6d76-4fea-8e71-5620a1bf5fe5

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=04e7cbbd-6d76-4fea-8e71-5620a1bf5fe5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.shadow_dom/v1-distribution-disconnected-and-reconnected/v1-distribution-disconnected-and-reconnected.html
       33.29%: 342.76 -&gt; 456.88 

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.shadow_dom/v1-distribution-disconnected-and-reconnected/v1-distribution-disconnected-and-reconnected.html
       33.29%: 342.76 -&gt; 456.88 

Regressions grouped by blink_perf.shadow_dom includes data from the following benchmarks with listed owners:
  blink_perf.shadow_dom: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926319</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926319"/>
        <updated>1970-01-01T00:28:32.949Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286323:1286349:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=89a5e82a-5dde-492d-a533-58a057455c5d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=89a5e82a-5dde-492d-a533-58a057455c5d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/blink_perf.bindings/worker-transferable-roundtrip/worker-transferable-roundtrip.html
        1.37%: 0.952 -&gt; 0.965 

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - blink_perf.bindings/worker-transferable-roundtrip/worker-transferable-roundtrip.html
        1.37%: 0.952 -&gt; 0.965 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333962769</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962769"/>
        <updated>1970-01-01T00:28:32.948Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286113:1286291:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c433c2c7-0b18-454c-b478-2529547fb237

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c433c2c7-0b18-454c-b478-2529547fb237

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/v8.browsing_mobile-future/Compile:duration_avg/browse_shopping/browse_shopping_flipkart_2019
        4.10%: 199.056 -&gt; 207.212 

Top 1 affected measurements in android-pixel6-perf:
  - v8.browsing_mobile-future/Compile:duration_avg/browse_shopping/browse_shopping_flipkart_2019
        4.10%: 199.056 -&gt; 207.212 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
</feed>