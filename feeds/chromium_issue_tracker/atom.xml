<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.573Z</updated>
    <entry>
        <id>335544086</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 1 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335544086"/>
        <updated>1970-01-01T00:28:33.573Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289807:1289851:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2ce6a93c-4428-4cea-88df-5414b8b696f5

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2ce6a93c-4428-4cea-88df-5414b8b696f5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_alphabetty_2018
       34.73%: 12836025.0 -&gt; 17293413.0 sizeInBytes

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_alphabetty_2018
       34.73%: 12836025.0 -&gt; 17293413.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289806..1289851
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3..ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/b38bf89d031432b90144c3c2714617735dce28fa..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335774300</id>
        <title>[V8 Perf Sheriff]: 2 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335774300"/>
        <updated>1970-01-01T00:28:33.573Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289912:1289932:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=38787a29-ff85-4103-8ef0-0f77fd49e618

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=38787a29-ff85-4103-8ef0-0f77fd49e618
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=38787a29-ff85-4103-8ef0-0f77fd49e618

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_warm_2021
      319.33%: 2808.858 -&gt; 11778.262999999999 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_2021
      232.02%: 711.393 -&gt; 2361.9714999999997 ms

Top 2 affected measurements in win-10-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_warm_2021
      319.33%: 2808.858 -&gt; 11778.262999999999 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_2021
      232.02%: 711.393 -&gt; 2361.9714999999997 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289911..1289932
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/9c9d260e249f4a597001f95d715ac455557a6f62..d6b1801d5f891880e5b124fe657b84a9a49a9134
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335769259</id>
        <title>[V8 Memory Perf Sheriff]: 2 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335769259"/>
        <updated>1970-01-01T00:28:33.573Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289912:1289932:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=dbf83f6c-5011-451d-aa6a-dd53f311ac25

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=dbf83f6c-5011-451d-aa6a-dd53f311ac25
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=dbf83f6c-5011-451d-aa6a-dd53f311ac25

Top 2 regressions (out of 5, with 3 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8_max/browse_tools/browse_tools_photoshop_2021
      202.97%: 3118.754 -&gt; 9448.998500000002 ms
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt_max/browse_tools/browse_tools_photoshop_2021
      202.96%: 3118.936 -&gt; 9449.1535 ms

Top 2 affected measurements in win-10-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8_max/browse_tools/browse_tools_photoshop_2021
      202.97%: 3118.754 -&gt; 9448.998500000002 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt_max/browse_tools/browse_tools_photoshop_2021
      202.96%: 3118.936 -&gt; 9449.1535 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289911..1289932
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/9c9d260e249f4a597001f95d715ac455557a6f62..d6b1801d5f891880e5b124fe657b84a9a49a9134
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335792580</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 3 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335792580"/>
        <updated>1970-01-01T00:28:33.573Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289912:1289932:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=13721479-f1d0-4f45-bd31-49467d1f893b

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=13721479-f1d0-4f45-bd31-49467d1f893b
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=13721479-f1d0-4f45-bd31-49467d1f893b

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_alphabetty_2018
       84.19%: 14496804.0 -&gt; 26701064.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_news/browse_news_flipboard_2020
       49.28%: 43889687.0 -&gt; 65520022.0 sizeInBytes
  - ChromiumPerf/win-10-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_news/browse_news_nytimes_2020
       12.11%: 25209703.0 -&gt; 28261384.5 sizeInBytes

Top 3 affected measurements in win-10-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_alphabetty_2018
       84.19%: 14496804.0 -&gt; 26701064.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_news/browse_news_flipboard_2020
       49.28%: 43889687.0 -&gt; 65520022.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_news/browse_news_nytimes_2020
       12.11%: 25209703.0 -&gt; 28261384.5 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289911..1289932
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/9c9d260e249f4a597001f95d715ac455557a6f62..d6b1801d5f891880e5b124fe657b84a9a49a9134
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335704896</id>
        <title>[Chromium Perf Motionmark Sheriff]: 2 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335704896"/>
        <updated>1970-01-01T00:28:33.573Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289912:1289932:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=261a17a0-ae9f-4572-80d4-74266f795ef7

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=261a17a0-ae9f-4572-80d4-74266f795ef7
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=261a17a0-ae9f-4572-80d4-74266f795ef7

Top 2 regressions (out of 4, with 2 improvements) in this group:
  - ChromiumPerf/win-10-perf/rendering.desktop/motionmark/motionmark_ramp_suits
       59.11%: 667.0784 -&gt; 272.77605 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/motionmark/motionmark_ramp_paths
       46.09%: 2019.4023 -&gt; 1088.68065 unitless

Top 2 affected measurements in win-10-perf:
  - rendering.desktop/motionmark/motionmark_ramp_suits
       59.11%: 667.0784 -&gt; 272.77605 unitless
  - rendering.desktop/motionmark/motionmark_ramp_paths
       46.09%: 2019.4023 -&gt; 1088.68065 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289911..1289932
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/9c9d260e249f4a597001f95d715ac455557a6f62..d6b1801d5f891880e5b124fe657b84a9a49a9134
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335829874</id>
        <title>Have an option to display URLs using non-confusable characters. Have a new setting for this.</title>
        <author>
            <name>ac...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829874"/>
        <updated>1970-01-01T00:28:33.571Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open comment https://issues.chromium.org/issues/40086586#comment6
2. Observe confusing text BEFORE users clicks a link
3. 

# Problem Description
Fixes of the bug weren't enough... https://issues.chromium.org/issues/40086586

# Additional Comments
The unrestricted Unicode for domains and URLs was a bad idea for banks and many commercial companies... Chromium can have extra low security mode where less checks will be enforced.

# Summary
Have an option to display URLs using non-confusable characters. Have a new setting for this.

# Custom Questions
#### Please select a label to classify your issue:
Not sure - I don't know

# Additional Data
Category: Other \
Chrome Channel: Canary \
Regression: No</content>
    </entry>
    <entry>
        <id>335857352</id>
        <title>Fix *RenderFrameHostManagerTest.CanCommitOrigin* for RenderDocument</title>
        <author>
            <name>dc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857352"/>
        <updated>1970-01-01T00:28:33.571Z</updated>
        <summary>-</summary>
        <content type="html">There's no reason this shouldn't work for RenderDocument. After https://chromium-review.googlesource.com/c/chromium/src/+/5466422, and with something like https://chromium-review.googlesource.com/c/chromium/src/+/5465473 to better match how real code would act, this gets closer to passing, but still hits a DCHECK in the navigation code.

```
[1340875:1340875:FATAL:render_frame_host_manager.cc(4408)] Check failed: frame_tree_node_-&gt;parent(). 
#0 0x55d227c8e3e2 base::debug::CollectStackTrace() [../../base/debug/stack_trace_posix.cc:1039:7]
#1 0x55d227c7898e base::debug::StackTrace::StackTrace() [../../base/debug/stack_trace.cc:236:20]
#2 0x55d227b9d22e logging::LogMessage::Flush() [../../base/logging.cc:710:29]
#3 0x55d227b9d10d logging::LogMessage::~LogMessage() [../../base/logging.cc:698:3]
#4 0x55d227b84d9f logging::(anonymous namespace)::DCheckLogMessage::~DCheckLogMessage() [../../base/check.cc:166:3]
#5 0x55d227b84dfe logging::(anonymous namespace)::DCheckLogMessage::~DCheckLogMessage() [../../base/check.cc:161:32]
#6 0x55d227b84853 logging::CheckError::~CheckError() [../../third_party/libc++/src/include/__memory/unique_ptr.h:67:5]
#7 0x55d226e44b40 content::RenderFrameHostManager::GetReplacementFrameToken() [../../content/browser/renderer_host/render_frame_host_manager.cc:4408:5]
#8 0x55d226e43edd content::RenderFrameHostManager::InitRenderFrame() [../../content/browser/renderer_host/render_frame_host_manager.cc:4379:7]
#9 0x55d226e43525 content::RenderFrameHostManager::CreateSpeculativeRenderFrame() [../../content/browser/renderer_host/render_frame_host_manager.cc:3968:8]
#10 0x55d226e3b4d8 content::RenderFrameHostManager::CreateSpeculativeRenderFrameHost() [../../content/browser/renderer_host/render_frame_host_manager.cc:3880:36]
#11 0x55d226e38a5d content::RenderFrameHostManager::GetFrameHostForNavigation() [../../content/browser/renderer_host/render_frame_host_manager.cc:1737:22]
#12 0x55d226e37efb content::RenderFrameHostManager::DidCreateNavigationRequest() [../../content/browser/renderer_host/render_frame_host_manager.cc:1348:19]
#13 0x55d226caacee content::FrameTreeNode::TakeNavigationRequest() [../../content/browser/renderer_host/frame_tree_node.cc:599:21]
#14 0x55d226db24a2 content::Navigator::OnBeginNavigation() [../../content/browser/renderer_host/navigator.cc:1107:20]
#15 0x55d226df9785 content::RenderFrameHostImpl::BeginNavigation() [../../content/browser/renderer_host/render_frame_host_impl.cc:9621:33]
#16 0x55d227b4b490 content::NavigationSimulatorImpl::SimulateRendererInitiatedStart() [../../content/test/navigation_simulator_impl.cc:1390:65]
#17 0x55d227b49fe8 content::NavigationSimulatorImpl::Start() [../../content/test/navigation_simulator_impl.cc:451:10]
#18 0x55d227b4cbab content::NavigationSimulatorImpl::ReadyToCommit() [../../content/test/navigation_simulator_impl.cc:565:7]
#19 0x55d221ed3be0 content::RenderFrameHostManagerTest_CanCommitOrigin_Test::TestBody() [../../content/browser/renderer_host/render_frame_host_manager_unittest.cc:3380:17]
```</content>
    </entry>
    <entry>
        <id>335774299</id>
        <title>CHECK failure: !ax_object-&amp;gt;IsMissingParent(). "Image" axid#77 &amp;lt;img.c15&amp;gt; needsToUpdateCachedValu</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335774299"/>
        <updated>1970-01-01T00:28:33.571Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5200395635720192

Fuzzer: marty_html_twiddler
Job Type: linux_asan_content_shell_drt
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  !ax_object-&gt;IsMissingParent(). "Image" axid#77 &lt;img.c15&gt; needsToUpdateCachedValu
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_content_shell_drt&amp;range=1288015:1288025

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5200395635720192

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335790757</id>
        <title>Proactively clean up pending commit speculative RFHs when reporting a bad message</title>
        <author>
            <name>dc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335790757"/>
        <updated>1970-01-01T00:28:33.571Z</updated>
        <summary>-</summary>
        <content type="html">Right now, when reporting a bad message when handling the commit navigation ack, we leave the speculative RFH in the pending commit state—but `RenderFrameHostImpl::HasPendingCommitForCrossDocumentNavigation()` will be false. This is a bit weird, and due to the fact that we only clean up the speculative RFH as a side effect of asynchronously observing renderer process termination.

It might be nice not to leave speculative RFHs around in this state. One possible way to do this would be to perform this cleanup from the `NavigationRequest` destructor.</content>
    </entry>
    <entry>
        <id>335921332</id>
        <title>Add feature flags for app menu item and reorganization divider</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335921332"/>
        <updated>1970-01-01T00:28:33.570Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>335909583</id>
        <title>https://www.google.com/search?q=sally+soklay+ngim&amp;rlz=1C1CHBF_enUS1040US1106&amp;oq=&amp;gs_lcrp=EgZjaHJvbWU</title>
        <author>
            <name>sa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335909583"/>
        <updated>1970-01-01T00:28:33.568Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 
2. 
3. https://www.google.com/search?q=sally+soklay+ngim&amp;rlz=1C1CHBF_enUS1040US1106&amp;oq=&amp;gs_lcrp=EgZjaHJvbWUqCQgAECMYJxjqAjIJCAAQIxgnGOoCMgkIARAjGCcY6gIyCQgCECMYJxjqAjIJCAMQLhgnGOoCMg8IBBAuGCcYxwEY6gIY0QMyCQgFECMYJxjqAjIJCAYQIxgnGOoCMgkIBxAjGCcY6gLSAQkxMzU4ajBqMTWoAgiwAgE&amp;sourceid=chrome&amp;ie=UTF-8

# Problem Description
https://www.google.com/search?q=sally+soklay+ngim&amp;rlz=1C1CHBF_enUS1040US1106&amp;oq=&amp;gs_lcrp=EgZjaHJvbWUqCQgAECMYJxjqAjIJCAAQIxgnGOoCMgkIARAjGCcY6gIyCQgCECMYJxjqAjIJCAMQLhgnGOoCMg8IBBAuGCcYxwEY6gIY0QMyCQgFECMYJxjqAjIJCAYQIxgnGOoCMgkIBxAjGCcY6gLSAQkxMzU4ajBqMTWoAgiwAgE&amp;sourceid=chrome&amp;ie=UTF-8

# Additional Comments
https://www.google.com/search?q=sally+soklay+ngim&amp;rlz=1C1CHBF_enUS1040US1106&amp;oq=&amp;gs_lcrp=EgZjaHJvbWUqCQgAECMYJxjqAjIJCAAQIxgnGOoCMgkIARAjGCcY6gIyCQgCECMYJxjqAjIJCAMQLhgnGOoCMg8IBBAuGCcYxwEY6gIY0QMyCQgFECMYJxjqAjIJCAYQIxgnGOoCMgkIBxAjGCcY6gLSAQkxMzU4ajBqMTWoAgiwAgE&amp;sourceid=chrome&amp;ie=UTF-8

# Summary
https://www.google.com/search?q=sally+soklay+ngim&amp;rlz=1C1CHBF_enUS1040US1106&amp;oq=&amp;gs_lcrp=EgZjaHJvbWU

# Additional Data
Category: Developer Tools \
Chrome Channel: Dev \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335544085</id>
        <title>[V8 Perf Sheriff]: 10 regressions in v8</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335544085"/>
        <updated>1970-01-01T00:28:33.567Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 93416:93417:

  Internal (Googlers-only) Reports:
    - V8: https://v8-perf.corp.goog/_/alertgroup?group_id=92221f87-8023-4ba5-92f6-a1a56e46a620

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=92221f87-8023-4ba5-92f6-a1a56e46a620

Top 10 regressions (out of 67, with 57 improvements) in this group:
  - internal.client.v8/ia32/v8/JSTests/Closures/Closures
       15.66%: 134681.6666666667 -&gt; 113590.0 score
  - internal.client.v8/ia32/v8/JSTests/Closures/Total
       15.66%: 134681.6666666667 -&gt; 113590.00000000003 score
  - internal.client.v8/ia32/v8/JSTests/RestParameters/Basic1
       14.07%: 6512148.333333334 -&gt; 5595901.666666666 score
  - internal.client.v8/MacM1/v8/JetStream2/default/richards/Average
        5.39%: 4.618 -&gt; 4.867 ms
  - internal.client.v8/MacM1/v8/JetStream2/default/richards/Total-Mean
        5.18%: 5.3655 -&gt; 5.6434999999999995 ms
  - internal.client.v8/MacM1/v8/JetStream2/default/hash-map/Average
        3.74%: 3.518 -&gt; 3.6494999999999997 ms
  - internal.client.v8/MacM1/v8/JetStream2/future/hash-map/Average
        3.41%: 3.5145 -&gt; 3.6345 ms
  - internal.client.v8/MacM1/v8/JetStream2/future/hash-map/Wall-Time
        3.19%: 434.771 -&gt; 448.625 ms
  - internal.client.v8/x64/v8/JetStream2/maglev/hash-map/Average-Score
        3.05%: 308.28549999999996 -&gt; 298.88300000000004 score
  - internal.client.v8/x64/v8/JetStream2/maglev/hash-map/Average
        3.03%: 16.219 -&gt; 16.711 ms

Top 3 affected measurements in MacM1:
  - v8/JetStream2/default/richards/Average
        5.39%: 4.618 -&gt; 4.867 ms
  - v8/JetStream2/default/richards/Total-Mean
        5.18%: 5.3655 -&gt; 5.6434999999999995 ms
  - v8/JetStream2/default/hash-map/Average
        3.74%: 3.518 -&gt; 3.6494999999999997 ms


Top 3 affected measurements in ia32:
  - v8/JSTests/Closures/Closures
       15.66%: 134681.6666666667 -&gt; 113590.0 score
  - v8/JSTests/Closures/Total
       15.66%: 134681.6666666667 -&gt; 113590.00000000003 score
  - v8/JSTests/RestParameters/Basic1
       14.07%: 6512148.333333334 -&gt; 5595901.666666666 score


Top 2 affected measurements in x64:
  - v8/JetStream2/maglev/hash-map/Average-Score
        3.05%: 308.28549999999996 -&gt; 298.88300000000004 score
  - v8/JetStream2/maglev/hash-map/Average
        3.03%: 16.219 -&gt; 16.711 ms

Regressions grouped by v8 includes data from the following benchmarks with listed owners:
  v8: 
      

Commits in this range:
  V8 Git Hash: https://chromium.googlesource.com/v8/v8/+log/059660cca32f3100af12771c7f5bfe1a7ad57024..a857c227f1c37f4ac02e0f6b421ab679aba0f809
  V8 Perf Git Hash: https://chrome-internal.googlesource.com/v8/v8-perf/+log/0953d8e640bea3a0f52e6a78d9c6952f9c1bb642..0953d8e640bea3a0f52e6a78d9c6952f9c1bb642</content>
    </entry>
    <entry>
        <id>335792579</id>
        <title>[Graphics]: 10 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335792579"/>
        <updated>1970-01-01T00:28:33.567Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289912:1289932:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=73595346-2bfd-482f-89e0-6cc7ee25a41e

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=73595346-2bfd-482f-89e0-6cc7ee25a41e
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=73595346-2bfd-482f-89e0-6cc7ee25a41e

Top 7 regressions (out of 64, with 57 improvements) in this group:
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/throughput_scrolling_uncomposited
         inf%: 0.0 -&gt; 10.5 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/many_images
      604.00%: 12.5 -&gt; 88.0 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/bouncing_clipped_rectangles
       64.45%: 29.117 -&gt; 47.882149999999996 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/css_value_type_path
       49.11%: 9.177900000000001 -&gt; 13.68525 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/web_animation_value_type_path
       46.00%: 9.0756 -&gt; 13.249949999999998 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/techcrunch_2018
       33.33%: 66.25 -&gt; 88.33335 unitless
  - ChromiumPerf/win-10-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/motionmark_ramp_images
       12.48%: 33.79515 -&gt; 38.013450000000006 unitless

Top 3 affected measurements in win-10-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/throughput_scrolling_uncomposited
         inf%: 0.0 -&gt; 10.5 unitless
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/many_images
      604.00%: 12.5 -&gt; 88.0 unitless
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/bouncing_clipped_rectangles
       64.45%: 29.117 -&gt; 47.882149999999996 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289911..1289932
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/9c9d260e249f4a597001f95d715ac455557a6f62..d6b1801d5f891880e5b124fe657b84a9a49a9134
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335857351</id>
        <title>Issues opening file picker on Chrome MAC OS</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857351"/>
        <updated>1970-01-01T00:28:33.567Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Our code invokes the file picker via &lt;fileInputRef&gt;.current.click(); when user click on a button.
2. It works fine most of the time.
3. We got user reports with nothing happening when clicking that button. 

# Problem Description
It is an inconsistent behavior. Our app is not able to capture metrics to know how often. No errors surfaced for the app, simply doesn't work.

For all reports we got, closing and re-opening Chrome fixes it. When they get to that state, no other pages that invoke the file picker work either. That makes us believe it is a problem with the browser. I found multiple forums on the internet reporting this problem but couldn't find an existing Chromium bug.

https://support.google.com/chrome/thread/134852610/since-latest-mac-os-can-no-longer-upload-any-files-in-chrome?hl=en
https://droidwin.com/fix-cannot-upload-files-via-chrome-in-macos/

# Summary
Issues opening file picker on Chrome MAC OS

# Additional Data
Category: JavaScript \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335839127</id>
        <title>Remove extra confirmation step in update flow</title>
        <author>
            <name>se...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335839127"/>
        <updated>1970-01-01T00:28:33.567Z</updated>
        <summary>-</summary>
        <content type="html">Currently the update UX requires three steps:
1. Click on update chip ("Finish update"/"Relaunch to update"/"New Chrome available")
2. Click on update item in menu ("Relaunch to update - Your tabs will reopen")
3. Click on relaunch button in dialog ("Relaunch")

Fix excessive steps by removing the confirmation dialog (step 3 of above). See internal approvals [here](https://docs.google.com/document/d/19Gd_3ZUxGBWjYx43SCPzHcjHQUnVU_iDGOknyw6k7WE/edit?tab=t.0)

Visual proposal is attached</content>
    </entry>
    <entry>
        <id>335912219</id>
        <title>Update focus UI and cursor hover of result text</title>
        <author>
            <name>cu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335912219"/>
        <updated>1970-01-01T00:28:33.567Z</updated>
        <summary>-</summary>
        <content type="html">Copied from https://b.corp.google.com/issues/335855845 and https://b.corp.google.com/issues/333084678

Result text is a contenteditable and currently uses default focus behaviour which is a highlight directly surrounding the contents of the div. This can look poor visually as the right border of the focus outline can look staggered depending on how the text wraps.
One UX suggestion to improve the appearance of this is to use a blue highlight around the entire results container instead, similar to what we currently use for textareas in the dialog.</content>
    </entry>
    <entry>
        <id>335909582</id>
        <title>Implement and use MLNumber</title>
        <author>
            <name>as...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335909582"/>
        <updated>1970-01-01T00:28:33.566Z</updated>
        <summary>-</summary>
        <content type="html">Initial spec changes are here: https://github.com/webmachinelearning/webnn/pull/647</content>
    </entry>
    <entry>
        <id>335909581</id>
        <title>[reading-order-items] What should be the focus navigation scope owner when it is a reading order and popover container</title>
        <author>
            <name>di...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335909581"/>
        <updated>1970-01-01T00:28:33.566Z</updated>
        <summary>-</summary>
        <content type="html">In a Popover Scoped Focus Navigation, the root_ of the scope is the popover while the Owner of the scope is its invoker. When navigating out of this scope, we know to visit the elements following the invoker, instead of wherever the popover is defined in the DOM.

In a Reading Order Scoped Focus Navigation, both the root_ and the Owner of the scope is the reading order container. This allows elements found within the scope to get navigated in order. When it is time to leave the scope, it knows to resume from where the container is.

However, when the popover is a reading order container, the two rules above conflict.

Example:

```
&lt;style&gt;
popover {
  display: grid;
  reading-order-items: grid-order;
}
&lt;/style&gt;
&lt;div popover id=P class="popover"&gt;
  &lt;button id=b1 style="order: 3"&gt;Popover button B1&lt;/button&gt;
  &lt;button id=b2 style="order: 1"&gt;Popover button B2&lt;/button&gt;
  &lt;button id=b3 style="order: 2"&gt;Popover button B3&lt;/button&gt;
&lt;/div&gt;
```

Potential solutions:
1. Have popover opt out of the reading-order feature. This feels not ideal since reading-order would help make popovers more accessible to keyboard users.
2. Change the ScopedFocusNavigation::Owner() to return invoker if this is a popover scope. Else, return owner directly.
3. Make a specific change within the FocusNavigation code, before calling ScopedFocusNavigation::CreateFor
3. Other ideas?</content>
    </entry>
    <entry>
        <id>335818079</id>
        <title>[Shared Storage] Clean up browser resources when the worklet is unusable</title>
        <author>
            <name>ya...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818079"/>
        <updated>1970-01-01T00:28:33.563Z</updated>
        <summary>-</summary>
        <content type="html">In SharedStorageWorkletHost::SelectURL()Run(), we could set `keep_alive_after_operation_` to false at one point, but the operation could fail due to other error checkings, without posting it to the worklet environment. In this case, the worklet won't be destroyed, but it's unusable either. In this case, we should clean up the resource.
</content>
    </entry>
    <entry>
        <id>335901087</id>
        <title>clang-cl generates subpar code for std::isfinite</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335901087"/>
        <updated>1970-01-01T00:28:33.563Z</updated>
        <summary>-</summary>
        <content type="html">I recently replaced Skia's hand-rolled implementation of `std::isfinite` with the standard library version, trusting that Clang's implementation would be equally efficient.

In practice, this led to a significant, measurable regression in our path-rendering code. (Screenshot attached below.)

This effect _only_ occurred on Win10 + x86_64, where clang-cl is used. On Linux + x86_64, Mac + x86_64, Mac + ARM, Android + ARM, etc., the performance was close enough that it did not disrupt benchmarks.

I don't see any mention of `__builtin_isfinite` in this file; is that the missing piece? They seem to only special-case a few heavy hitters.

https://github.com/microsoft/STL/blob/main/stl/inc/cmath
</content>
    </entry>
    <entry>
        <id>335902824</id>
        <title>http/tests/history/scroll-restoration/scroll-restoration-same-doc.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335902824"/>
        <updated>1970-01-01T00:28:33.563Z</updated>
        <summary>-</summary>
        <content type="html">http/tests/history/scroll-restoration/scroll-restoration-same-doc.html

Harness Failure on Linux Tests(dbg)(1) builder

Test History Link:
Linux Tests(dbg)(1): https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fhistory%2Fscroll-restoration%2Fscroll-restoration-same-doc.html?q=VHASH%3A3cc2a4548647ce0d

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Fhttp%2Ftests%2Fhistory%2Fscroll-restoration%2Fscroll-restoration-same-doc.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 19.18% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>335901379</id>
        <title>Tests are failing: largest_contentful_paint_browsertest.cc(1160): Expected: (load_start_list_[0]) &amp;lt; (load_end_list_[0]), actual: 32 vs 32</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335901379"/>
        <updated>1970-01-01T00:28:33.562Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
largest_contentful_paint_browsertest.cc(1160): Expected: (load_start_list_[0]) &lt; (load_end_list_[0]), actual: 32 vs 32

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/LcpBreakdownTimingsTest.NativeLazyLoadingImage
- ninja://chrome/test:browser_tests/LcpBreakdownTimingsTest.CssBackgroundImage
- ninja://chrome/test:browser_tests/LcpBreakdownTimingsTest.PreloadedCacheableImage
- ninja://chrome/test:browser_tests/LcpBreakdownTimingsTest.DocumentWrittenImage
- ninja://chrome/test:browser_tests/LcpBreakdownTimingsTest.PreloadedImage


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/fc045a08a67019869960fcc0fd4b1699

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335839125</id>
        <title>[shared storage ]For cross-origin worklet, don't expose error after the user preferences check</title>
        <author>
            <name>ya...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335839125"/>
        <updated>1970-01-01T00:28:33.562Z</updated>
        <summary>-</summary>
        <content type="html">For cross-origin worklet, don't expose error encountered on/after the user preference check, as it could leak the user preferences for the worklet origin to the worklet creator context.
</content>
    </entry>
    <entry>
        <id>335857350</id>
        <title>Clear up latest recipe test warnings in tools/build</title>
        <author>
            <name>bp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857350"/>
        <updated>1970-01-01T00:28:33.562Z</updated>
        <summary>-</summary>
        <content type="html">All these warnings are getting annoying:  
https://screenshot.googleplex.com/337zxa5aqAjPwRA

Prob just need to use different recipe_mod APIs for some things. I know there's some path stuff in there somewhere.</content>
    </entry>
    <entry>
        <id>335829872</id>
        <title>FedCM dialog appeared over the wrong tab</title>
        <author>
            <name>da...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829872"/>
        <updated>1970-01-01T00:28:33.561Z</updated>
        <summary>-</summary>
        <content type="html">Sam suggested I file this. I came across a case where the FedCM dialog was stuck visible over the wrong tab, and even stayed visible across tab switches. See screenshot of it visible over the new tab page.

Not sure exactly what the triggered it and it's since cleared itself, but here's all the information I've got.

Version and OS:
```
Google Chrome    124.0.6367.60 (Official Build) (arm64) 
Revision    8771130bd84f76d855ae42fbe02752b03e352f17-refs/branch-heads/6367@{#798}
OS    macOS Version 14.4.1 (Build 23E224)
```

I had a tab open to stackoverflow.com and was switching between my tabs with Ctrl-Tab. I don't remember exactly what I was doing but as I was switching, I noticed that dialog appear. Then I switched tabs some more and it stayed visible.

At some point I switched around and switched to the stackoverflow.com tab. From there, switching away from that tab made it go away.

My best guess (with no evidence but what I've observed here) is that transitions from wrong-tab -&gt; wrong-tab don't hide the dialog and I tripped some kind of race condition where the dialog fired at the same time as my switching away from the tab. Or perhaps there's a bug where background tabs can open that dialog?</content>
    </entry>
    <entry>
        <id>335818078</id>
        <title>Check cookie domain on setting cookies</title>
        <author>
            <name>ch...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818078"/>
        <updated>1970-01-01T00:28:33.561Z</updated>
        <summary>-</summary>
        <content type="html">We should verify that a CanonicalCookie's Domain() field domain-matches the URL from which it is being set. Ideally this should be a check in CookieBase::IsSetPermittedInContext().

It's coincidentally true because callers ensure it, but it feels like this should go in the base class logic.

See crbug.com/40096066 for historical context.</content>
    </entry>
    <entry>
        <id>335897601</id>
        <title>Add some multi IDP WPTs</title>
        <author>
            <name>np...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335897601"/>
        <updated>1970-01-01T00:28:33.561Z</updated>
        <summary>-</summary>
        <content type="html">Most multi IDP WPTs involved multi-get so they were removed. We should add some tests with single-get multi IDP.</content>
    </entry>
    <entry>
        <id>335898567</id>
        <title>remove api.path.eq()</title>
        <author>
            <name>mo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335898567"/>
        <updated>1970-01-01T00:28:33.561Z</updated>
        <summary>-</summary>
        <content type="html">Remove `api.path.eq()`</content>
    </entry>
    <entry>
        <id>335829871</id>
        <title>Chrome &amp; Adobe Acrobat Sign Downloads - Chrome Opens my Download Doc automatically</title>
        <author>
            <name>ro...@corriganagency.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829871"/>
        <updated>1970-01-01T00:28:33.560Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version (from ""Settings &gt; About Google Chrome""): 124.0.6367.61
Device Type: (iPad 2, iPhone 4, etc) Dell Computer
URLs (if applicable):


Behavior in Safari (if applicable):


Steps to reproduce:
(1) Automatically opening Downloads
(2)
(3)

Expected result:


Actual result:</content>
    </entry>
    <entry>
        <id>335895982</id>
        <title>virtual/gethtml-disabled/external/wpt/shadow-dom/declarative/gethtml.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335895982"/>
        <updated>1970-01-01T00:28:33.560Z</updated>
        <summary>-</summary>
        <content type="html">virtual/gethtml-disabled/external/wpt/shadow-dom/declarative/gethtml.html

Crash Failure on Linux Tests (dbg)(1) buidler

Test History Link:
Linux Tests (dbg)(1): https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fvirtual%2Fgethtml-disabled%2Fexternal%2Fwpt%2Fshadow-dom%2Fdeclarative%2Fgethtml.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fvirtual%2Fgethtml-disabled%2Fexternal%2Fwpt%2Fshadow-dom%2Fdeclarative%2Fgethtml.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 26.56% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>335764813</id>
        <title>[Graphics]: 9 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335764813"/>
        <updated>1970-01-01T00:28:33.560Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289933:1289958:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4851ba67-090a-4fbd-8504-2d9bfe258121

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4851ba67-090a-4fbd-8504-2d9bfe258121

Top 4 regressions (out of 4, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/css_opacity_plus_n_layers_99
       14.19%: 3.03375 -&gt; 3.4641 unitless
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/css_opacity_plus_n_layers_99
       13.25%: 2.7041 -&gt; 3.0623500000000003 unitless
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_60000_pixels_per_second
       13.04%: 14.037749999999999 -&gt; 15.8686 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_90000_pixels_per_second
       10.39%: 8.54355 -&gt; 9.4316 unitless

Top 2 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/css_opacity_plus_n_layers_99
       13.25%: 2.7041 -&gt; 3.0623500000000003 unitless
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_60000_pixels_per_second
       13.04%: 14.037749999999999 -&gt; 15.8686 unitless


Top 2 affected measurements in mac-laptop_low_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/css_opacity_plus_n_layers_99
       14.19%: 3.03375 -&gt; 3.4641 unitless
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_90000_pixels_per_second
       10.39%: 8.54355 -&gt; 9.4316 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289925..1289935
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/d6b1801d5f891880e5b124fe657b84a9a49a9134..d6b1801d5f891880e5b124fe657b84a9a49a9134
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..299b28569682198aed2b2635f2405c6e7db471ba</content>
    </entry>
    <entry>
        <id>335894362</id>
        <title>“Always Verify When Using Autofill” toggle doesn’t get synced while in multi-window mode</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335894362"/>
        <updated>1970-01-01T00:28:33.559Z</updated>
        <summary>-</summary>
        <content type="html">App Version: 125.0.6422.7 Beta
iOS Version: 17.5 Beta 2, 16.7.2
Device: iPad Pro 4th Gen, iPad Mini 6th Gen

Preconditions:
Device passcode is set up

Steps to reproduce:
  1. Launch Chrome
  2. Open a new window
  3. In both windows navigate to Settings &gt; Payment Methods 
  4. Tap on “Always Verify When Using Autofill” toggle to turn it Off/On and observe

Observed results:
“Always Verify When Using Autofill” toggle doesn’t get synced while in multi-window mode

Expected results:
“Always Verify When Using Autofill” toggle should get synced while in multi-window mode

Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: Firefox: NA
Bug reproducible on current stable build (App Version, iOS Version): Yes M124
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes M125

Link to video:
https://drive.google.com/file/d/1fb1LkMs0AhLr6fR4iknA6WaDHPyNGq0i/view?usp=drive_link&amp;resourcekey=0-k_kwLEeW9yXCbrT04iq2CQ</content>
    </entry>
    <entry>
        <id>335891661</id>
        <title>Refactor browser_options to not depend on browser_finder</title>
        <author>
            <name>wn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335891661"/>
        <updated>1970-01-01T00:28:33.559Z</updated>
        <summary>-</summary>
        <content type="html">Context: https://chromium-review.googlesource.com/c/catapult/+/5462258/comment/699fa463_d864effd/

Depending on browser_finder means that browser_options transitively depends on all the finders, e.g. android_browser_finder, which then consume browser_options (as they should, given they need to know what options were passed).

Refactor options:
1. Avoid using browser_finder in browser_options, some of the options may have slightly less desirable defaults, but perhaps better documentations will help here.
2. Refactor out the common data somehow, currently it's mostly looking at what browser types are available, so perhaps that doesn't need to invoke all the full browser finders or initialize any browsers via their finders.</content>
    </entry>
    <entry>
        <id>335891540</id>
        <title>ReadAnythingMochaTest.UpdateContentSelectionWithHighlights failing</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335891540"/>
        <updated>1970-01-01T00:28:33.559Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
read_anything_browsertest.cc(32): Value of: RunTestOnWebContents(web_contents, file, trigger, true)\n  Actual: false (Mocha test failures detected in file: side_panel/read_anything/update_content_selection_with_highlights.js, triggered by 'mocha.run()')\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/ReadAnythingMochaTest.UpdateContentSelectionWithHighlights


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/580343d0e4418328b4cab3e68984dc9a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335891831</id>
        <title>BookmarkTest#testShowInFolder_* is flaky</title>
        <author>
            <name>wy...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335891831"/>
        <updated>1970-01-01T00:28:33.559Z</updated>
        <summary>-</summary>
        <content type="html">Selecting the "Show in folder" menu item doesn't work as expected with espresso. Find a better way to test the menu item iteraction.</content>
    </entry>
    <entry>
        <id>335792577</id>
        <title>[V8 Memory Perf Sheriff]: 6 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335792577"/>
        <updated>1970-01-01T00:28:33.558Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289527:1289547:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b4715441-0cd9-4625-b199-c2751686d619

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b4715441-0cd9-4625-b199-c2751686d619

Top 1 regressions (out of 16, with 15 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/v8:gc:cycle:main_thread:full:incremental:sweep_sum/browse_media/browse_media_facebook_photos_2019
       10.16%: 23.886499999999998 -&gt; 26.313000000000002 ms

Top 1 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/v8:gc:cycle:main_thread:full:incremental:sweep_sum/browse_media/browse_media_facebook_photos_2019
       10.16%: 23.886499999999998 -&gt; 26.313000000000002 ms

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: cbruni@chromium.org, leszeks@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289526..1289547
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/c8fc466db6e3790fcff9e33563662dd0231f1074..c8fc466db6e3790fcff9e33563662dd0231f1074
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/ff54aee9ab3d5fc5ea6f9d12fb05c582115b736d..ff54aee9ab3d5fc5ea6f9d12fb05c582115b736d</content>
    </entry>
    <entry>
        <id>335886104</id>
        <title>[WPT] Failures in html-aam/roles-contextual.html</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335886104"/>
        <updated>1970-01-01T00:28:33.558Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335890642</id>
        <title>Tests are failing: ninja://:blink\\_web\\_tests/%fast/borders/border-image-rotate-transform.html%</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335890642"/>
        <updated>1970-01-01T00:28:33.558Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with a test name like: ninja://:blink\\_web\\_tests/%fast/borders/border-image-rotate-transform.html%

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/abb8605a7a7ca4620b623de40544fd87

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335889832</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.signin.SigninFirstRunFragmentTest#testContinueButton_automotiveDevice_dismissSignInFromDeviceLockPage </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335889832"/>
        <updated>1970-01-01T00:28:33.558Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.signin.SigninFirstRunFragmentTest#testContinueButton_automotiveDevice_dismissSignInFromDeviceLockPage is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.signin.SigninFirstRunFragmentTest%23testContinueButton_automotiveDevice_dismissSignInFromDeviceLockPage
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.signin.SigninFirstRunFragmentTest%23testContinueButton_automotiveDevice_dismissSignInFromDeviceLockPage
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.signin.SigninFirstRunFragmentTest%23testContinueButton_automotiveDevice_dismissSignInFromDeviceLockPage

</content>
    </entry>
    <entry>
        <id>335889883</id>
        <title>[Test Reviver] Consistently failing: ninja://content/shell/android:content_shell_test_apk/org.chromium.content.browser.accessibility.WebContentsAccessibilityTreeTest#test_iframeTransform </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335889883"/>
        <updated>1970-01-01T00:28:33.558Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://content/shell/android:content_shell_test_apk/org.chromium.content.browser.accessibility.WebContentsAccessibilityTreeTest#test_iframeTransform is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fcontent%2Fshell%2Fandroid%3Acontent_shell_test_apk%2Forg.chromium.content.browser.accessibility.WebContentsAccessibilityTreeTest%23test_iframeTransform
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fcontent%2Fshell%2Fandroid%3Acontent_shell_test_apk%2Forg.chromium.content.browser.accessibility.WebContentsAccessibilityTreeTest%23test_iframeTransform
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fcontent%2Fshell%2Fandroid%3Acontent_shell_test_apk%2Forg.chromium.content.browser.accessibility.WebContentsAccessibilityTreeTest%23test_iframeTransform

</content>
    </entry>
    <entry>
        <id>335790756</id>
        <title>SameSite=Strict does not not work in some versions of Chrome</title>
        <author>
            <name>ja...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335790756"/>
        <updated>1970-01-01T00:28:33.557Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Develop an application that uses SameSite=Strict with cookies from two different subdomains, e.g., aaa.xyz.com and bbb.xyz.com.
2. The initial access should be to something in aaa.xyz.com that sets a cookie with SameSite=Strict
3. That acsess should trigger an access to something in bbb.xyz.com that sets a different cookie with SameSite=Strick.
4. After step 3, the original request to aaa.xyz.com should request something else from aaa.xyz.com
5. Observe that the bbb.xyz.com cookie is filtered out of the request at step 4.

# Problem Description
SameSite=Strict does not work in some versions of Chromium. For example, cookies with domains aaa.xyz.com and bbb.xyz.com should both work with SameSite=Strict. It works correctly with Chrome Version 124.0.6367.61 (Official Build) (64-bit). It does not work with Microsot Edge Version 124.0.2478.51 (Official build) (64-bit), or with Chrome Version 123.0.6312.120 on my Google Pixel 7.

# Additional Comments
I would include screen shots but company policy prohibits sharing anything that exposes our internal URLs.

# Summary
SameSite=Strict does not not work in some versions of Chrome

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335839124</id>
        <title>Please explicitly state what context (extension service worker, content script or popup, etc.) each of the chrome.domain API is available in</title>
        <author>
            <name>ve...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335839124"/>
        <updated>1970-01-01T00:28:33.557Z</updated>
        <summary>-</summary>
        <content type="html">As titled.

When I the read docs for Chrome Extension's, each time it is not clear what context (extension service worker, content script or popup, etc.) each of the chrome.&lt;domain&gt;, whereas &lt;domain&gt; (just to name a few: debugger, alarm, search, etc.) is available in/at. If you make it just below "Permissions" or "Description" something like "Context", that would be perfect.

Cheers !
</content>
    </entry>
    <entry>
        <id>335857349</id>
        <title>conformance/textures/misc/texture-video-transparent.html flaky on Pixel 4</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857349"/>
        <updated>1970-01-01T00:28:33.556Z</updated>
        <summary>-</summary>
        <content type="html">Starting in [this build](https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Pixel%204)/48039/infra), `conformance/textures/misc/texture-video-transparent.html`  has been flaking on WebGL 1 with the validating decoder due to:

```
Traceback (most recent call last):
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/gpu_integration_test.py", line 637, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 264, in RunActualGpuTest
    getattr(self, test_name)(test_path, test_args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 429, in _RunConformanceTest
    self._CheckTestCompletion()
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 425, in _CheckTestCompletion
    self.fail(self._WebGLTestMessages(self.tab))
  File "/b/swarming/w/ir/.task_template_vpython_cache/vpython/store/cpython+brnf8280j1oln04mbftis2f5p0/contents/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: Upon load: Tab was foregrounded
neither left is green nor right is blue 
at (4, 4) expected: 0,255,0 was 255,0,0
at (20, 4) expected: 0,0,255 was 255,0,0


```

Given the flake rate and when the first flake occurred, I don't think this is related to the recent WebGL roll on the 16th, as I would expect flakes to show up earlier than the linked build in that case.

Since this is a validating decoder-only issue, this is a low priority issue.</content>
    </entry>
    <entry>
        <id>335885654</id>
        <title>Tests are failing: view.cc(2710): Check failed: parent_layer == layer()-&amp;gt;parent() (000024B401EFFB80 vs. 0000000000000000)</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335885654"/>
        <updated>1970-01-01T00:28:33.556Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
view.cc(2710): Check failed: parent_layer == layer()-&gt;parent() (000024B401EFFB80 vs. 0000000000000000)

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PageInfoBubbleViewDialogBrowserTest.InvokeUi_TrackingProtection3pcLimited
- ninja://chrome/test:browser_tests/PageInfoBubbleViewDialogBrowserTest.InvokeUi_TrackingProtection3pcAllowedForSite
- ninja://chrome/test:browser_tests/PageInfoBubbleViewDialogBrowserTest.InvokeUi_TrackingProtection3pcBlocked
- ninja://chrome/test:browser_tests/PageInfoBubbleViewBrowserTestWithRedInterstitialFaceliftEnabled.UnwantedSoftwareNewStrings


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/ecf372fc46936a89518e452f5f0f780a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335839123</id>
        <title>I've encountered an issue where Chrome's autofill functionality is overriding the autocomplete="off"</title>
        <author>
            <name>ja...@getvitaminlab.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335839123"/>
        <updated>1970-01-01T00:28:33.556Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Visit Website checkout page 
2. Navigate to the registration or checkout page.
3. Observe the last name field, which has the autocomplete="off" attribute set.
4. Click on the autofill options provided by Chrome or manually manage autofill settings.
5.Select a saved address with a first name but no last name.
6.Notice that Chrome autofills the last name field with the first name, overriding the autocomplete="off" attribute.

# Problem Description
1. Visit Website checkout page 
2. Navigate to the registration or checkout page.
3. Observe the last name field, which has the autocomplete="off" attribute set.
4. Click on the autofill options provided by Chrome or manually manage autofill settings.
5.Select a saved address with a first name but no last name.
6.Notice that Chrome autofills the last name field with the first name, overriding the autocomplete="off" attribute.

# Additional Comments
It is creating  problems in checkout form as firstname and lastname are duplicating for all the users

# Summary
I've encountered an issue where Chrome's autofill functionality is overriding the autocomplete="off"

# Custom Questions
#### Example URL: 
https://wp-staging.getvitaminlab.com/customer-checkout?formula-id=

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335857348</id>
        <title>deqp/functional/gles3/multisample/fbo_max_samples.html flaky on Pixel 4</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857348"/>
        <updated>1970-01-01T00:28:33.555Z</updated>
        <summary>-</summary>
        <content type="html">`deqp/functional/gles3/multisample/fbo_max_samples.html` has been flaking pretty frequently on Pixel 4 devices due to:

```
Traceback (most recent call last):
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/gpu_integration_test.py", line 637, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 264, in RunActualGpuTest
    getattr(self, test_name)(test_path, test_args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 429, in _RunConformanceTest
    self._CheckTestCompletion()
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 425, in _CheckTestCompletion
    self.fail(self._WebGLTestMessages(self.tab))
  File "/b/swarming/w/ir/.task_template_vpython_cache/vpython/store/cpython+brnf8280j1oln04mbftis2f5p0/contents/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: [test 1] Ran in 46.90000000037253ms
[test 2] Ran in 37.700000000186265ms
[test 3] Ran in 79.5ms
...
multisample.fbo_max_samples.constancy_sample_coverage: Failed
Init testcase: multisample.fbo_max_samples.num_samples_polygon
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Number of distinct colors detected so far: at least 5
Init testcase: multisample.fbo_max_samples.num_samples_line
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Number of distinct colors detected so far: at least 5
Init testcase: multisample.fbo_max_samples.common_edge_small_quads
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (256, 256) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Success: All quad interiors seem unicolored (no common-edge artifacts)
Init testcase: multisample.fbo_max_samples.common_edge_big_quad
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Success: All quad interiors seem unicolored (no common-edge artifacts)
Init testcase: multisample.fbo_max_samples.common_edge_viewport_quad
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Success: All quad interiors seem unicolored (no common-edge artifacts)
Init testcase: multisample.fbo_max_samples.depth
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Depth test enabled, depth func is gl.LESS
Drawing several bigger-than-viewport black or white polygons intersecting each other
Number of distinct colors detected so far: at least 5
Init testcase: multisample.fbo_max_samples.stencil
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Drawing a pattern with gl.stencilFunc(gl.ALWAYS, 1, 1) and gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE)
Clearing color buffer to black
Checking that color buffer was actually cleared to black
Drawing a viewport-sized quad with gl.stencilFunc(gl.EQUAL, 1, 1) and gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP) - should result in same image as the first
Success: The two images rendered are identical
Init testcase: multisample.fbo_max_samples.sample_coverage_invert
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Clearing color to all-zeros
Drawing the pattern with gl.SAMPLE_COVERAGE disabled
Clearing color to all-zeros
Drawing the pattern with gl.SAMPLE_COVERAGE enabled, using non-inverted masks
Drawing the pattern with gl.SAMPLE_COVERAGE enabled, using same sample coverage values but inverted masks
Success: The two images rendered are identical
Init testcase: multisample.fbo_max_samples.proportionality_alpha_to_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
gl.SAMPLE_ALPHA_TO_COVERAGE is enabled
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0
Average red color component: 0
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.05263157894736842
Average red color component: 0.015441176470588236
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.10526315789473684
Average red color component: 0.061764705882352944
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.15789473684210525
Average red color component: 0.13897058823529412
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.21052631578947367
Average red color component: 0.20073529411764707
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.2631578947368421
Average red color component: 0.2627450980392157
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.3157894736842105
Average red color component: 0.3254901960784314
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.3684210526315789
Average red color component: 0.3254901960784314
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.42105263157894735
Average red color component: 0.403921568627451
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.47368421052631576
Average red color component: 0.4666666666666667
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.5263157894736842
Average red color component: 0.5294117647058824
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.5789473684210527
Average red color component: 0.5764705882352941
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.631578947368421
Average red color component: 0.6705882352941176
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.6842105263157895
Average red color component: 0.6705882352941176
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.7368421052631579
Average red color component: 0.7333333333333333
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.7894736842105263
Average red color component: 0.796078431372549
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.8421052631578947
Average red color component: 0.8588235294117647
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.8947368421052632
Average red color component: 0.9372549019607843
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.9473684210526315
Average red color component: 0.984313725490196
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 1
Average red color component: 1
Success: Number of coverage mask bits set appears to be, on average, proportional to alpha
Init testcase: multisample.fbo_max_samples.proportionality_sample_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
gl.SAMPLE_COVERAGE is enabled
Clearing color to black
Drawing a red quad using sample coverage value 0
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.05263157894736842
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.10526315789473684
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.15789473684210525
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.21052631578947367
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.2631578947368421
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.3157894736842105
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.3684210526315789
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.42105263157894735
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.47368421052631576
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.5263157894736842
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.5789473684210527
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.631578947368421
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.6842105263157895
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.7368421052631579
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.7894736842105263
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 0.8421052631578947
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 0.8947368421052632
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 0.9473684210526315
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 1
Average red color component: 1
Success: Number of coverage mask bits set appears to be, on average, proportional to sample coverage value
Init testcase: multisample.fbo_max_samples.proportionality_sample_coverage_inverted
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
gl.SAMPLE_COVERAGE is enabled
Clearing color to black
Drawing a red quad using sample coverage value 1 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.9473684210526316 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.8947368421052632 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.8421052631578947 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.7894736842105263 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.736842105263158 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.6842105263157895 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.631578947368421 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.5789473684210527 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.5263157894736843 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.4736842105263158 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.42105263157894735 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.368421052631579 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.3157894736842105 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.26315789473684215 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.21052631578947367 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.1578947368421053 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.10526315789473684 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.052631578947368474 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0 (inverted)
Average red color component: 1
Success: Number of coverage mask bits set appears to be, on average, proportional to inverted sample coverage value
Init testcase: multisample.fbo_max_samples.constancy_alpha_to_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Clearing color to black
gl.SAMPLE_ALPHA_TO_COVERAGE is enabled
Color mask is TRUE, TRUE, TRUE, FALSE
Drawing several green quads, each fully overlapped by a red quad with the same alpha values
Success: Coverage mask appears to be constant at a given pixel coordinate with a given alpha
Init testcase: multisample.fbo_max_samples.constancy_sample_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Clearing color to black
gl.SAMPLE_COVERAGE is enabled
Drawing several green quads, each fully overlapped by a red quad with the same sample coverage values
Failure: Non-zero green color component detected - should have been completely overwritten by red quad
FAIL Failed
[test 155] Ran in 231.19999999925494ms
```

[This build](https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Pixel%204)/47946/infra) appears to be the first occurrence of the failure, but flakiness seems to have increased around [this build](https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Pixel%204)/47956/infra). Both of those are before the recent WebGL roll, though, so I don't think we can attribute the increased flakiness to that.</content>
    </entry>
    <entry>
        <id>335878764</id>
        <title>[FedCM] Fix cancel after account selection on button flow modal</title>
        <author>
            <name>ta...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335878764"/>
        <updated>1970-01-01T00:28:33.555Z</updated>
        <summary>-</summary>
        <content type="html">Currently on the button flow modal, there is a bug where clicking on cancel after selecting an account does not actually cancel.</content>
    </entry>
    <entry>
        <id>335878468</id>
        <title>Rename TransitStation to Station and StationFacility to Facility</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335878468"/>
        <updated>1970-01-01T00:28:33.553Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335782518</id>
        <title>Add prototype feature so mayLaunchUrl doesn't send user cookies</title>
        <author>
            <name>bi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335782518"/>
        <updated>1970-01-01T00:28:33.553Z</updated>
        <summary>-</summary>
        <content type="html">To help test how sites, loaded in hidden tabs, react to not having access to the user's cookies we want to add the ability to disable user's cookie jar access by the hidden tab.
</content>
    </entry>
    <entry>
        <id>335875165</id>
        <title>virtual/plz-dedicated-worker-disabled/http/tests/devtools/console/* tests are flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335875165"/>
        <updated>1970-01-01T00:28:33.552Z</updated>
        <summary>-</summary>
        <content type="html">virtual/plz-dedicated-worker-disabled/http/tests/devtools/console/console-api-on-call-frame.js

Crash Failure on Linux Tests(dbg)(1) builder

Test History Link:
Linux Tests (dbg)(1): https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fvirtual%2Fplz-dedicated-worker-disabled%2Fhttp%2Ftests%2Fdevtools%2Fconsole%2Fconsole-api-on-call-frame.js?q=VHASH%3A3cc2a4548647ce0d

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Fvirtual%2Fplz-dedicated-worker-disabled%2Fhttp%2Ftests%2Fdevtools%2Fconsole%2Fconsole-api-on-call-frame.js&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 59.65% flaky rate in runs mostly on Linux builders</content>
    </entry>
</feed>