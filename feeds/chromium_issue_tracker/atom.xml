<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.556Z</updated>
    <entry>
        <id>335857349</id>
        <title>conformance/textures/misc/texture-video-transparent.html flaky on Pixel 4</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857349"/>
        <updated>1970-01-01T00:28:33.556Z</updated>
        <summary>-</summary>
        <content type="html">Starting in [this build](https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Pixel%204)/48039/infra), `conformance/textures/misc/texture-video-transparent.html`  has been flaking on WebGL 1 with the validating decoder due to:

```
Traceback (most recent call last):
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/gpu_integration_test.py", line 637, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 264, in RunActualGpuTest
    getattr(self, test_name)(test_path, test_args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 429, in _RunConformanceTest
    self._CheckTestCompletion()
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 425, in _CheckTestCompletion
    self.fail(self._WebGLTestMessages(self.tab))
  File "/b/swarming/w/ir/.task_template_vpython_cache/vpython/store/cpython+brnf8280j1oln04mbftis2f5p0/contents/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: Upon load: Tab was foregrounded
neither left is green nor right is blue 
at (4, 4) expected: 0,255,0 was 255,0,0
at (20, 4) expected: 0,0,255 was 255,0,0


```

Given the flake rate and when the first flake occurred, I don't think this is related to the recent WebGL roll on the 16th, as I would expect flakes to show up earlier than the linked build in that case.

Since this is a validating decoder-only issue, this is a low priority issue.</content>
    </entry>
    <entry>
        <id>335885654</id>
        <title>Tests are failing: view.cc(2710): Check failed: parent_layer == layer()-&amp;gt;parent() (000024B401EFFB80 vs. 0000000000000000)</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335885654"/>
        <updated>1970-01-01T00:28:33.556Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
view.cc(2710): Check failed: parent_layer == layer()-&gt;parent() (000024B401EFFB80 vs. 0000000000000000)

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PageInfoBubbleViewDialogBrowserTest.InvokeUi_TrackingProtection3pcLimited
- ninja://chrome/test:browser_tests/PageInfoBubbleViewDialogBrowserTest.InvokeUi_TrackingProtection3pcAllowedForSite
- ninja://chrome/test:browser_tests/PageInfoBubbleViewDialogBrowserTest.InvokeUi_TrackingProtection3pcBlocked
- ninja://chrome/test:browser_tests/PageInfoBubbleViewBrowserTestWithRedInterstitialFaceliftEnabled.UnwantedSoftwareNewStrings


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/ecf372fc46936a89518e452f5f0f780a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335839123</id>
        <title>I've encountered an issue where Chrome's autofill functionality is overriding the autocomplete="off"</title>
        <author>
            <name>ja...@getvitaminlab.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335839123"/>
        <updated>1970-01-01T00:28:33.556Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Visit Website checkout page 
2. Navigate to the registration or checkout page.
3. Observe the last name field, which has the autocomplete="off" attribute set.
4. Click on the autofill options provided by Chrome or manually manage autofill settings.
5.Select a saved address with a first name but no last name.
6.Notice that Chrome autofills the last name field with the first name, overriding the autocomplete="off" attribute.

# Problem Description
1. Visit Website checkout page 
2. Navigate to the registration or checkout page.
3. Observe the last name field, which has the autocomplete="off" attribute set.
4. Click on the autofill options provided by Chrome or manually manage autofill settings.
5.Select a saved address with a first name but no last name.
6.Notice that Chrome autofills the last name field with the first name, overriding the autocomplete="off" attribute.

# Additional Comments
It is creating  problems in checkout form as firstname and lastname are duplicating for all the users

# Summary
I've encountered an issue where Chrome's autofill functionality is overriding the autocomplete="off"

# Custom Questions
#### Example URL: 
https://wp-staging.getvitaminlab.com/customer-checkout?formula-id=

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335857348</id>
        <title>deqp/functional/gles3/multisample/fbo_max_samples.html flaky on Pixel 4</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857348"/>
        <updated>1970-01-01T00:28:33.555Z</updated>
        <summary>-</summary>
        <content type="html">`deqp/functional/gles3/multisample/fbo_max_samples.html` has been flaking pretty frequently on Pixel 4 devices due to:

```
Traceback (most recent call last):
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/gpu_integration_test.py", line 637, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 264, in RunActualGpuTest
    getattr(self, test_name)(test_path, test_args)
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 429, in _RunConformanceTest
    self._CheckTestCompletion()
  File "/b/swarming/w/ir/content/test/gpu/gpu_tests/webgl_conformance_integration_test_base.py", line 425, in _CheckTestCompletion
    self.fail(self._WebGLTestMessages(self.tab))
  File "/b/swarming/w/ir/.task_template_vpython_cache/vpython/store/cpython+brnf8280j1oln04mbftis2f5p0/contents/lib/python3.8/unittest/case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: [test 1] Ran in 46.90000000037253ms
[test 2] Ran in 37.700000000186265ms
[test 3] Ran in 79.5ms
...
multisample.fbo_max_samples.constancy_sample_coverage: Failed
Init testcase: multisample.fbo_max_samples.num_samples_polygon
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Number of distinct colors detected so far: at least 5
Init testcase: multisample.fbo_max_samples.num_samples_line
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Number of distinct colors detected so far: at least 5
Init testcase: multisample.fbo_max_samples.common_edge_small_quads
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (256, 256) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Success: All quad interiors seem unicolored (no common-edge artifacts)
Init testcase: multisample.fbo_max_samples.common_edge_big_quad
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Success: All quad interiors seem unicolored (no common-edge artifacts)
Init testcase: multisample.fbo_max_samples.common_edge_viewport_quad
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Quads seem OK - moving on to next pattern
Success: All quad interiors seem unicolored (no common-edge artifacts)
Init testcase: multisample.fbo_max_samples.depth
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Depth test enabled, depth func is gl.LESS
Drawing several bigger-than-viewport black or white polygons intersecting each other
Number of distinct colors detected so far: at least 5
Init testcase: multisample.fbo_max_samples.stencil
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Drawing a pattern with gl.stencilFunc(gl.ALWAYS, 1, 1) and gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE)
Clearing color buffer to black
Checking that color buffer was actually cleared to black
Drawing a viewport-sized quad with gl.stencilFunc(gl.EQUAL, 1, 1) and gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP) - should result in same image as the first
Success: The two images rendered are identical
Init testcase: multisample.fbo_max_samples.sample_coverage_invert
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Additive blending enabled in order to detect (erroneously) overlapping samples
Clearing color to all-zeros
Drawing the pattern with gl.SAMPLE_COVERAGE disabled
Clearing color to all-zeros
Drawing the pattern with gl.SAMPLE_COVERAGE enabled, using non-inverted masks
Drawing the pattern with gl.SAMPLE_COVERAGE enabled, using same sample coverage values but inverted masks
Success: The two images rendered are identical
Init testcase: multisample.fbo_max_samples.proportionality_alpha_to_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
gl.SAMPLE_ALPHA_TO_COVERAGE is enabled
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0
Average red color component: 0
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.05263157894736842
Average red color component: 0.015441176470588236
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.10526315789473684
Average red color component: 0.061764705882352944
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.15789473684210525
Average red color component: 0.13897058823529412
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.21052631578947367
Average red color component: 0.20073529411764707
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.2631578947368421
Average red color component: 0.2627450980392157
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.3157894736842105
Average red color component: 0.3254901960784314
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.3684210526315789
Average red color component: 0.3254901960784314
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.42105263157894735
Average red color component: 0.403921568627451
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.47368421052631576
Average red color component: 0.4666666666666667
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.5263157894736842
Average red color component: 0.5294117647058824
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.5789473684210527
Average red color component: 0.5764705882352941
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.631578947368421
Average red color component: 0.6705882352941176
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.6842105263157895
Average red color component: 0.6705882352941176
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.7368421052631579
Average red color component: 0.7333333333333333
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.7894736842105263
Average red color component: 0.796078431372549
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.8421052631578947
Average red color component: 0.8588235294117647
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.8947368421052632
Average red color component: 0.9372549019607843
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 0.9473684210526315
Average red color component: 0.984313725490196
Clearing color to black
Using color mask TRUE, TRUE, TRUE, FALSE
Drawing a red quad using alpha value 1
Average red color component: 1
Success: Number of coverage mask bits set appears to be, on average, proportional to alpha
Init testcase: multisample.fbo_max_samples.proportionality_sample_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
gl.SAMPLE_COVERAGE is enabled
Clearing color to black
Drawing a red quad using sample coverage value 0
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.05263157894736842
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.10526315789473684
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.15789473684210525
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.21052631578947367
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.2631578947368421
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.3157894736842105
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.3684210526315789
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.42105263157894735
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.47368421052631576
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.5263157894736842
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.5789473684210527
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.631578947368421
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.6842105263157895
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.7368421052631579
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.7894736842105263
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 0.8421052631578947
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 0.8947368421052632
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 0.9473684210526315
Average red color component: 1
Clearing color to black
Drawing a red quad using sample coverage value 1
Average red color component: 1
Success: Number of coverage mask bits set appears to be, on average, proportional to sample coverage value
Init testcase: multisample.fbo_max_samples.proportionality_sample_coverage_inverted
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (64, 64) with 4 samples
gl.SAMPLE_COVERAGE is enabled
Clearing color to black
Drawing a red quad using sample coverage value 1 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.9473684210526316 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.8947368421052632 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.8421052631578947 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.7894736842105263 (inverted)
Average red color component: 0
Clearing color to black
Drawing a red quad using sample coverage value 0.736842105263158 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.6842105263157895 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.631578947368421 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.5789473684210527 (inverted)
Average red color component: 0.24705882352941178
Clearing color to black
Drawing a red quad using sample coverage value 0.5263157894736843 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.4736842105263158 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.42105263157894735 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.368421052631579 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.3157894736842105 (inverted)
Average red color component: 0.4980392156862745
Clearing color to black
Drawing a red quad using sample coverage value 0.26315789473684215 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.21052631578947367 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.1578947368421053 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.10526315789473684 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0.052631578947368474 (inverted)
Average red color component: 0.7490196078431373
Clearing color to black
Drawing a red quad using sample coverage value 0 (inverted)
Average red color component: 1
Success: Number of coverage mask bits set appears to be, on average, proportional to inverted sample coverage value
Init testcase: multisample.fbo_max_samples.constancy_alpha_to_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Clearing color to black
gl.SAMPLE_ALPHA_TO_COVERAGE is enabled
Color mask is TRUE, TRUE, TRUE, FALSE
Drawing several green quads, each fully overlapped by a red quad with the same alpha values
Success: Coverage mask appears to be constant at a given pixel coordinate with a given alpha
Init testcase: multisample.fbo_max_samples.constancy_sample_coverage
Querying maximum number of samples for gl.RGBA8 with gl.getInternalformatParameter()
Using FBO of size (512, 512) with 4 samples
Clearing color to black
gl.SAMPLE_COVERAGE is enabled
Drawing several green quads, each fully overlapped by a red quad with the same sample coverage values
Failure: Non-zero green color component detected - should have been completely overwritten by red quad
FAIL Failed
[test 155] Ran in 231.19999999925494ms
```

[This build](https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Pixel%204)/47946/infra) appears to be the first occurrence of the failure, but flakiness seems to have increased around [this build](https://ci.chromium.org/ui/p/chromium/builders/ci/Android%20FYI%20Release%20(Pixel%204)/47956/infra). Both of those are before the recent WebGL roll, though, so I don't think we can attribute the increased flakiness to that.</content>
    </entry>
    <entry>
        <id>335878764</id>
        <title>[FedCM] Fix cancel after account selection on button flow modal</title>
        <author>
            <name>ta...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335878764"/>
        <updated>1970-01-01T00:28:33.555Z</updated>
        <summary>-</summary>
        <content type="html">Currently on the button flow modal, there is a bug where clicking on cancel after selecting an account does not actually cancel.</content>
    </entry>
    <entry>
        <id>335878468</id>
        <title>Rename TransitStation to Station and StationFacility to Facility</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335878468"/>
        <updated>1970-01-01T00:28:33.553Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335782518</id>
        <title>Add prototype feature so mayLaunchUrl doesn't send user cookies</title>
        <author>
            <name>bi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335782518"/>
        <updated>1970-01-01T00:28:33.553Z</updated>
        <summary>-</summary>
        <content type="html">To help test how sites, loaded in hidden tabs, react to not having access to the user's cookies we want to add the ability to disable user's cookie jar access by the hidden tab.
</content>
    </entry>
    <entry>
        <id>335875165</id>
        <title>virtual/plz-dedicated-worker-disabled/http/tests/devtools/console/console-api-on-call-frame.js test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335875165"/>
        <updated>1970-01-01T00:28:33.552Z</updated>
        <summary>-</summary>
        <content type="html">virtual/plz-dedicated-worker-disabled/http/tests/devtools/console/console-api-on-call-frame.js

Crash Failure on Linux Tests(dbg)(1) builder

Test History Link:
Linux Tests (dbg)(1): https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fvirtual%2Fplz-dedicated-worker-disabled%2Fhttp%2Ftests%2Fdevtools%2Fconsole%2Fconsole-api-on-call-frame.js?q=VHASH%3A3cc2a4548647ce0d

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Fvirtual%2Fplz-dedicated-worker-disabled%2Fhttp%2Ftests%2Fdevtools%2Fconsole%2Fconsole-api-on-call-frame.js&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 59.65% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>335857344</id>
        <title>Chrome Accepts An End-Entity Certificate with OCSP Signing EKU While Firefox Rejects It</title>
        <author>
            <name>pi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857344"/>
        <updated>1970-01-01T00:28:33.552Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Generating a mutated digital certificate with an additional Subject Alternative Name (SAN) of "ypj.test.com", along with its corresponding root CA and private key.
2. Configuring an Nginx web server to use the mutated certificate in HTTPS mode.
3. Setting up the local machine (127.0.0.1) as the server and mapping "ypj.test.com" to 127.0.0.1 in the hosts file. 
4. Adding the root CA to the system's trusted root certificate store using certutil.
5. Running nginx.exe. Accessing the URL "https://ypj.test.com:443" in a web browser, where the certificate's SAN matches the URL.

# Problem Description
I have encountered a potential security issue where end-entity certificates that include the OCSP Signing Extended Key Usage (EKU) are being accepted. Standards and best practices typically reserve the OCSP Signing EKU for certificates specifically authorized to sign OCSP responses, not for general end-entity purposes such as server or client authentication.
Chrome has accepted these certificates; however, Firefox appropriately rejects them while displaying the 'SEC_ERROR_INADEQUATE_CERT_TYPE Error'. The Firefox development team has also pointed out that there's really no reason for an end-entity certificate to have the OCSP signing EKU, adhering to the principle of least privilege and the intended use of the certificate.
To enhance the strictness and security of the implementation, Chrome should reject end-entity certificates with the OCSP Signing Extended Key Usage (EKU) to prevent entities from issuing fraudulent OCSP responses. This precaution is necessary as the OCSP Signing EKU should be exclusive to entities expressly authorized to handle certificate revocation statuses, thus preserving the trustworthiness of the OCSP system.

# Summary
Chrome Accepts An End-Entity Certificate with OCSP Signing EKU While Firefox Rejects It

# Additional Data
Category: Security \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335857343</id>
        <title>Images in a flex container don't update sizing properly</title>
        <author>
            <name>pi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335857343"/>
        <updated>1970-01-01T00:28:33.551Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Have a flex container with a child image
2. Set the flex container height to 0px
3. Load the page
4. Remove the height on the flex container
5. You would expect image to load but it doesn't.

# Problem Description
Images that are the child of a flex container don't update their sizing when the flex container height is removed. If something else triggers the image to update, then it will update properly. This can be changing the src or adding a border to the image (assuming other things). 

Example: https://jsfiddle.net/m5h0b7q9/7/

When you press the "Show Image" button it removes the "hide" class and the image should show up but it doesn't.

This was working on previous versions of Chrome.

# Summary
Images in a flex container don't update sizing properly

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335657995</id>
        <title>Unable to access websites after updating</title>
        <author>
            <name>jj...@direcmanagement.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335657995"/>
        <updated>1970-01-01T00:28:33.550Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open webpage we could previously open (www.gmail.com)

2.Get "err_connection_reset" 
3. 

# Problem Description
After updating to the new .61 version, users are having issues accessing websites that we had access to before.
I've reset, uninstalled and reinstalled, disabled extensions, reset ipconfig settings. Nothing has worked

# Additional Comments
Other sites are www.bcbs.com, www.swipeclock.com

# Summary
Unable to access websites after updating

# Custom Questions
#### Example URL: 
www.gmail.com

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335869372</id>
        <title>Tests are failing: ninja://chrome/test:browser_tests/LensOverlayControllerBrowserTest.ShowSidePanelAfterManualRegionSelection</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335869372"/>
        <updated>1970-01-01T00:28:33.550Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:browser_tests/LensOverlayControllerBrowserTest.ShowSidePanelAfterManualRegionSelection

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/155bed33758c07a043d2ca17017b3ba9

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335802748</id>
        <title>IsHostnameNonUnique() returns true for a TLD</title>
        <author>
            <name>es...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335802748"/>
        <updated>1970-01-01T00:28:33.549Z</updated>
        <summary>-</summary>
        <content type="html">As discussed in issue 41437527, IsHostnameNonUnique() returns true for a TLD (e.g. "com"). This is probably fine for most users of that function, but it's a little weird because the Baseline Requirements allow publicly trusted CAs to issue certificates for TLDs (per my interpretation, at least). We should see if we can make that function return false for TLDs, without wreaking havoc on other callsites.

-----

From the BRs:

Internal Name: A string of characters (not an IP address) in a Common Name or Subject Alternative
Name field of a Certificate that cannot be verified as globally unique within the public DNS at the
time of certificate issuance because it does not end with a Top Level Domain registered in IANA’s
Root Zone Database.</content>
    </entry>
    <entry>
        <id>335866995</id>
        <title>Tests are failing: java.lang.IllegalArgumentException: Unable to find task ID 54</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335866995"/>
        <updated>1970-01-01T00:28:33.549Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
java.lang.IllegalArgumentException: Unable to find task ID 54

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.DetachedResourceRequestTest#testRepeatedIntents
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.firstrun.FirstRunIntegrationTest#testNativeInitBeforeFragmentSkip
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.firstrun.FirstRunIntegrationTest#testMultipleFresViewIntoCustom
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.firstrun.FirstRunIntegrationTest#testSigninFirstRunPageShownBeforeChildStatusFetch
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.firstrun.FirstRunIntegrationTest#testMultipleFresBackButton


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/9217c55d5f8c92fce92f412c9b2ddccc

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335864910</id>
        <title>Tests are failing: native_widget_mac.mm(476): Check failed: ui::MODAL_TYPE_SYSTEM != modal_type (3 vs. 3)</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335864910"/>
        <updated>1970-01-01T00:28:33.548Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
native_widget_mac.mm(476): Check failed: ui::MODAL_TYPE_SYSTEM != modal_type (3 vs. 3)

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/InteractiveBrowserTestDialogBrowsertest.BrowserModalDialogContext/System


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/094645f88cbf973c2162aac8e66fb59f

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335704895</id>
        <title>net_cookie_partition_key_fuzzer: CHECK failure: serialized_partition_key-&amp;gt;TopLevelSite() == SchemefulSite(url).Serialize() in co</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335704895"/>
        <updated>1970-01-01T00:28:33.548Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=6720250687979520

Fuzzing Engine: libFuzzer
Fuzz Target: net_cookie_partition_key_fuzzer
Job Type: libfuzzer_chrome_asan
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  serialized_partition_key-&gt;TopLevelSite() == SchemefulSite(url).Serialize() in co
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan&amp;range=1289521:1289574

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=6720250687979520

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>335829868</id>
        <title>Proper event readyiness waiting for ServiceWorkerLifetimeKeepaliveBrowsertest</title>
        <author>
            <name>jl...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829868"/>
        <updated>1970-01-01T00:28:33.548Z</updated>
        <summary>-</summary>
        <content type="html">These tests are not waiting for the worker to fully start before dispatching events. Let's use ServiceWorkerTaskQueue::TestObserver::DidStartWorker() instead to be less flaky.</content>
    </entry>
    <entry>
        <id>335829867</id>
        <title>RendererHost should batch input mojo messages</title>
        <author>
            <name>jo...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829867"/>
        <updated>1970-01-01T00:28:33.547Z</updated>
        <summary>-</summary>
        <content type="html">This came up in: https://chromium-review.googlesource.com/c/chromium/src/+/5375183 for b/329346768

Currently gesture recognition and dispatch in the Browser process can determine that there are multiple gestures to forward to the target Renderer. Such as:
  -  GestureScrollUpdate with a GestureScrollBegin
  -  GestureScrollUpdate with a GesturePinchUpdate (when pinch is occurring)

However we dispatch each of these as a separate message. Which can lead to input intended for a VSync arriving on each side of the VSync. Some code, such as `blink::CompositorThreadEventQueue` expect the pinches to be accompanied by scrolls. While for `GestureScrollBegin` the delay can lead to the scroll update missing the VSync completely.

We should look to batch these together</content>
    </entry>
    <entry>
        <id>335862402</id>
        <title>[css-view-transitions-2] Specificity of the new :active-view-transition-type</title>
        <author>
            <name>aj...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335862402"/>
        <updated>1970-01-01T00:28:33.547Z</updated>
        <summary>-</summary>
        <content type="html">CSSWG added the following resolution(s):

&gt; RESOLVED: Have both `:active-view-transition` and :`active-view-transition-type(param)` be 1-class like specificity regardless of `param`

in https://github.com/w3c/csswg-drafts/issues/10071#issuecomment-2066994042

This bug was filed by the Spec Resolution Github Bot. This [doc](https://docs.google.com/document/d/1h3-Il_KusVrvVfC86yYhNtTWz5fEoBe3FraCOcZZLyU/edit) briefly describes the process. Please reach out to chrishtr@chromium.org for questions.</content>
    </entry>
    <entry>
        <id>335818074</id>
        <title>chrome.permissions.remove not removing optional_host_permissions.</title>
        <author>
            <name>tm...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818074"/>
        <updated>1970-01-01T00:28:33.547Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Download the sample extension showing the issue (https://github.com/tbrockman/chrome-remove-permissions-bug.git)
2. Load the extension unpacked
3. Click "Add Permission" in the popup (and grant the permissions)
4. Verify that permission is added (under Site access in extension details)
5. Click "Remove Permission" in the popup
6. See that the permission hasn't been removed (still listed under Site access in extension details) despite the call to remove permissions being successful

# Problem Description
Chrome extension documentation suggests that chrome.permissions.remove should be called once a permission is no longer needed. In an extension I'm building, I've attempted to make all permissions optional, by adding the following to my manifest.json:

```json
"optional_host_permissions": [
    "&lt;all_urls&gt;"
]
```

And then I only dynamically request access to the URL match patterns that the user specifies in a text field in the popup:

```js
chrome.permissions.request({
    permissions: [],
    origins: userSpecifiedOrigins
})
```

If they remove any match patterns, the expectation is that the extension will no longer have those host permissions. Currently, this is not the case, as the call to chrome.permissions.remove doesn't seem to actually remove the permissions. 

For any user (my extension is a dev tool, so the intended audience might be more security conscious than normal) who examines the extension details, they will see that the extension has access to _all_ host permissions they've granted in the past, regardless of what they've currently specified, which is unexpected behavior and erodes trust. Given the propensity of browser extensions to be user for data-mining and other malicious purposes, I'd like to avoid this perception.

# Additional Comments
Zip of example extension for reproducing the bug attached for convenience 

# Summary
chrome.permissions.remove not removing optional_host_permissions.

# Custom Questions
#### Which component does this fall under?
Blink&gt;PermissionsAPI

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335861896</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(389): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,sampleWithVideoFrameWith...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335861896"/>
        <updated>1970-01-01T00:28:33.547Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(389): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,sampleWithVideoFrameWithVisibleRectParam:videoName=\"four-colors-vp9-bt601-rotate-90.mp4\";dstColorSpace=\"srgb\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 1,14,0 and 1,14,0 inclusive:\n                                coords ==   X,Y,Z:                            1,14,0\n      act. texel bytes (little-endian) ==      0x:                       40 fd 00 ff\n                           act. colors == R,G,B,A: 0.250980,0.992157,0.00000,1.00000\n                           exp. colors == R,G,B,A: 0.247059,0.984314,0.00000,1.00000\n            act. normal-ULPs-from-zero == R,G,B,A:                      64,253,0,255\n            exp. normal-ULPs-from-zero == R,G,B,A:                      63,251,0,255\n             tolerance ± 1 normal-ULPs\n       diff (act - exp) in normal-ULPs ==                                    1,2,0,0\n    Error\n        at TextureExpectations....

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,sampleWithVideoFrameWithVisibleRectParam:videoName=\"four-colors-vp9-bt601-rotate-90.mp4\";dstColorSpace=\"srgb\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/b4fee92778be88bf82d69dd3f6d8f25b

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335859542</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextView</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335859542"/>
        <updated>1970-01-01T00:28:33.546Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextView

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/8f5b63e0490b2370c4d8a0cbd3848285

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335856439</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldNotShowUpNextView_WhenEventListViewIsOpen</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335856439"/>
        <updated>1970-01-01T00:28:33.545Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldNotShowUpNextView_WhenEventListViewIsOpen

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e02de9a4e87e8847397dff92642f786a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335797531</id>
        <title>AppShimMetricsTest.Basics is flaky</title>
        <author>
            <name>me...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335797531"/>
        <updated>1970-01-01T00:28:33.545Z</updated>
        <summary>-</summary>
        <content type="html">Sometimes shared memory backed histograms don't seem to be collected from app shims, causing the test to fail.</content>
    </entry>
    <entry>
        <id>335855066</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.NoBackButton</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335855066"/>
        <updated>1970-01-01T00:28:33.544Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.NoBackButton

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5717c30d700403c4aa70ffb7ac01a16d

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335544084</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335544084"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1288903:1289426:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d11b31f2-2ab9-4a11-9c4d-a7526d86114a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d11b31f2-2ab9-4a11-9c4d-a7526d86114a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/repaint_instagram_2018
      900.00%: 3.0 -&gt; 30.0 unitless

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/repaint_instagram_2018
      900.00%: 3.0 -&gt; 30.0 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1288902..1289426
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/628dd1909b2405aa0a68f9bd1aa00bbe5bc717b0..37e4bb8df182b508cc2df84abd7ef2bd64a5749e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/85bea5a11bf3e771b335671b9875b8a9b033f223..56e63097498d0ad6fe2eca779b7df173cc6a0fca</content>
    </entry>
    <entry>
        <id>335797530</id>
        <title>the tab logos/favicons for pages appear in the top left corner and seem cut off</title>
        <author>
            <name>ba...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335797530"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. go to a webpage
2. see the favicon
3. 

# Problem Description
the tab logos/favicons for pages appear in the top left corner and seem cut off. they were appearing next to the webpage name, but they seem off now

# Summary
the tab logos/favicons for pages appear in the top left corner and seem cut off

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335852595</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextWithCachedData</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335852595"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextWithCachedData

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/14dc12335fcd623b84f4891804ba3524

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335782514</id>
        <title>Listen to onSurveyCompleted events and record histogram</title>
        <author>
            <name>ra...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335782514"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335850106</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.Init</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335850106"/>
        <updated>1970-01-01T00:28:33.543Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.Init

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/b15bf8ba6f4c865a398ce2ab0e6f6e41

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335829864</id>
        <title>WebView fails to invalidate first frame when client doesn't request BeginFrames</title>
        <author>
            <name>va...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335829864"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">WebView needs to decide if we will be drawing this frame at the BeginFrame time, meaning that BeginFrame events needs to flow if there is any undrawn frames. Normally this isn't an issue, because clients actively submitting frames subscribe to them. 

When it's not the case, webview temporary subscribes to BeginFrame when we receive new CompositorFrame  that is embedded in the last drawn frame. Unfortunately this isn't quite correct for the first frame, because the surface might be not embedded yet.</content>
    </entry>
    <entry>
        <id>335818071</id>
        <title>NO SOUND, unless I choose the internal speakers of my mac pro 6.1</title>
        <author>
            <name>an...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818071"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 124.0.0.0
OS Version           : OS X 10.15.7
URLs (if applicable) :
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you
have tested this issue:
     Safari:OK
    Firefox:OK
       Edge:ok

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead of that?


Please provide any additional information below. Attach a screenshot if
possible.

UserAgentString: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36


For graphics-related bugs, please copy/paste the contents of the about:gpu
page at the end of this report.
</content>
    </entry>
    <entry>
        <id>335744350</id>
        <title>theme changes are syncing despite theme syncing being turned off</title>
        <author>
            <name>bu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335744350"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. sign in and enable syncing in at least two profiles
2. in each profile under "manage what you sync" enabled only (bookmarks, extensions, settings)
3. switch the theme in one profile
4. for me it syncs and switches on other profiles

# Problem Description
Theme syncing was enabled at one point. I disabled it in each profile, but theme changes are still syncing.

# Summary
theme changes are syncing despite theme syncing being turned off

# Additional Data
Category: Sync \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335846685</id>
        <title>"Cannot tap on the left part of Omnibox after some scrolling" test case coverage needed in Earl Grey or unittests for issue 334891575</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335846685"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">nicolasmacbeth@, do we have automation coverage for this bug to prevent future regressions?

Requesting you to provide the automation status / tests links.</content>
    </entry>
    <entry>
        <id>335744349</id>
        <title>Decide on SwiftShader × {Chrome, new Headless, chrome-headless-shell, Chrome for Testing}</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335744349"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">Doc: [go/chrome-for-testing:swiftshader](http://go/chrome-for-testing:swiftshader)</content>
    </entry>
    <entry>
        <id>335846088</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.FocusingToDateCell</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335846088"/>
        <updated>1970-01-01T00:28:33.542Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.FocusingToDateCell

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/1693b2e76b1d5ced712bfbd0fd1c0e02

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335763886</id>
        <title>[V8 Perf Sheriff]: 5 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335763886"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289421:1289454:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=867d7a3d-708d-4e47-ad76-16cb8947d703

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=867d7a3d-708d-4e47-ad76-16cb8947d703

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - ChromiumPerf/android-pixel2_webview-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_media/browse_media_facebook_photos_2019
      453.56%: 0.1615 -&gt; 0.894 ms

Top 3 affected measurements in android-pixel2_webview-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc/browse_shopping/browse_shopping_amazon_2019
      477.50%: 1.369 -&gt; 7.906 ms
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_media/browse_media_facebook_photos_2019
      453.56%: 0.1615 -&gt; 0.894 ms

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: cbruni@chromium.org, leszeks@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289420..1289454
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/37e4bb8df182b508cc2df84abd7ef2bd64a5749e..37e4bb8df182b508cc2df84abd7ef2bd64a5749e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/56e63097498d0ad6fe2eca779b7df173cc6a0fca..56e63097498d0ad6fe2eca779b7df173cc6a0fca</content>
    </entry>
    <entry>
        <id>335774296</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335774296"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289718:1289758:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ad58e8fe-2faa-4a28-8fe9-7885e23ae0aa

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=ad58e8fe-2faa-4a28-8fe9-7885e23ae0aa
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ad58e8fe-2faa-4a28-8fe9-7885e23ae0aa

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/system_health.common_desktop/cwv:first_contentful_paint_avg/load_games/load_games_alphabetty_2018
      105.23%: 4003.0 -&gt; 8215.5 ms

Top 1 affected measurements in win-10-perf:
  - system_health.common_desktop/cwv:first_contentful_paint_avg/load_games/load_games_alphabetty_2018
      105.23%: 4003.0 -&gt; 8215.5 ms

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: charliea@chromium.org, chrome-speed-metrics-dev@chromium.org, sullivan@chromium.org, tdresser@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1289717..1289758
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3..ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/ff54aee9ab3d5fc5ea6f9d12fb05c582115b736d..ff54aee9ab3d5fc5ea6f9d12fb05c582115b736d</content>
    </entry>
    <entry>
        <id>335842582</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextView_WhenEventListHasClosedWithoutScrolling</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335842582"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldShowUpNextView_WhenEventListHasClosedWithoutScrolling

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c63b521ba4aa2b655d33b8924217410a

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335764810</id>
        <title>Abrt in v8::internal::__RT_impl_Runtime_Abort</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335764810"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4839160910118912

Fuzzer: None
Job Type: linux_asan_d8_v8_arm64_dbg
Platform Id: linux

Crash Type: Abrt
Crash Address: 0x053900016068
Crash State:
  v8::internal::__RT_impl_Runtime_Abort
  v8::internal::Runtime_Abort
  v8::internal::Simulator::DoRuntimeCall
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_d8_v8_arm64_dbg&amp;range=93416:93417

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4839160910118912

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335797528</id>
        <title>Stringify bools consistently</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335797528"/>
        <updated>1970-01-01T00:28:33.541Z</updated>
        <summary>-</summary>
        <content type="html">Hundreds of files try to convert `bool`s to strings: https://source.chromium.org/search?q=%5C%20%5C%3F%5C%20%5C%22(true%5C%22%5C%20%5C:%5C%20%5C%22false%7Cyes%5C%22%5C%20%5C:%5C%20%5C%22no%7Con%5C%22%5C%20%5C:%5C%20%5C%22off%7C1%5C%22%5C%20%5C:%5C%20%5C%220)%5C%22%20lang:c%2B%2B%20(-f:third_party%20OR%20f:third_party%2Fblink)&amp;ss=chromium%2Fchromium%2Fsrc

Some of them even define bespoke helpers just to do this: https://source.chromium.org/search?q=(string%7Cchar%5C*)%5C%20BoolTo%20(-f:third_party%20OR%20f:third_party%2Fblink)%20lang:c%2B%2B%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc

After some discussion on #base, I think we should do the following:
* [P1] Convert `base::ToString()` to stringify `bool`s as "true"/"false" instead of the current "1"/"0". This is more human-readable and better matches `std::format()`.
* [P3] Audit sites above that use a different pair of strings, and where possible, change them to "true"/"false". (Claim: we should do this for anything that wouldn't break automated parsing in a way we can't trivially fix.)
* [P2] Convert sites that manually stringify as "true"/"false" to use `base::ToString()`. More useful than the bullet above, but listed after it to imply that anything it covers would then come under this too.

For posterity, it is possible to add configurability to how `ToString()` stringifies bools:
```
// Using an enum class forces casts to compose the values, and an enum without
// the struct exposes the member names namespace-wide.
struct Fmt {
  enum Flags {
    kNone = 0,
    kBoolYN = 1 &lt;&lt; 0,
    // Add more as needed
  };
};

template &lt;uint32_t Options = Fmt::kNone, typename... Ts&gt;
std::string ToString(const Ts&amp;... values) {
  std::ostringstream ss;
  ss.setf(std::ios_base::boolalpha);

  if constexpr (Options &amp; Fmt::kBoolYN) {
    struct BoolYN : std::numpunct&lt;char&gt; {
      using std::numpunct&lt;char&gt;::numpunct;
      std::string do_truename() const { return "yes"; }
      std::string do_falsename() const { return "no"; }
    };
    static auto* const bool_yn = new BoolYN(1);  // Would use NoDestructor
    ss.imbue(std::locale(ss.getloc(), bool_yn));
  }

  (...,
   internal::ToStringHelper&lt;std::remove_cvref_t&lt;decltype(values)&gt;&gt;::Stringify(
       values, ss));
  return ss.str();
}
```

I don't think this is worth doing. Making the API configurable has downsides that don't seem to really outweigh the upsides.</content>
    </entry>
    <entry>
        <id>335840076</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.GivenUpNextIsShown_WhenNewEventsMoreThanTwoHoursAwayAreFetched_UpNextViewShouldStillBeShown</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335840076"/>
        <updated>1970-01-01T00:28:33.540Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.GivenUpNextIsShown_WhenNewEventsMoreThanTwoHoursAwayAreFetched_UpNextViewShouldStillBeShown

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/187a2660e1cfcbceb29e92a02379d512

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335838014</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldFocusEventListCloseButton_WhenFocusMovedFromTodayButton</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335838014"/>
        <updated>1970-01-01T00:28:33.539Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewWithUpNextViewTest.ShouldFocusEventListCloseButton_WhenFocusMovedFromTodayButton

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/baa2dae09bf2f6dfccd768141f8add26

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335818069</id>
        <title>Whenever a dialog box appears it crashes Chromium.</title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335818069"/>
        <updated>1970-01-01T00:28:33.539Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to Chrome web store
2. Click on install extension
3. Chromium starts having a seizure

# Problem Description
Deleting bookmarks / reinstalling the browser doesn't work

# Summary
Whenever a dialog box appears it crashes Chromium.

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335782512</id>
        <title>Refactor parts of UserAgentUtilsTest given UA reduction</title>
        <author>
            <name>mi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335782512"/>
        <updated>1970-01-01T00:28:33.539Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834959</id>
        <title>Tests are failing: ninja://ash:ash_unittests/CalendarViewTest.InitDec</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834959"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://ash:ash_unittests/CalendarViewTest.InitDec

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bf2e6e840033d55e7f878ea31187ef28

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335834598</id>
        <title>Submit first PECP spec draft to WICG repo</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834598"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835345</id>
        <title>Address internal feedback.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835345"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335834632</id>
        <title>Send first spec draft for internal feedback.</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335834632"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335835283</id>
        <title>Write first spec draft</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335835283"/>
        <updated>1970-01-01T00:28:33.538Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
</feed>