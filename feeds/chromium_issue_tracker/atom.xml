<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-22T20:11:50.406Z</updated>
    <entry>
        <id>326462263</id>
        <title>[TabStripPerformance] Disable temporary tab strip removal</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326462263"/>
        <updated>2024-02-22T20:11:50.406Z</updated>
        <summary>-</summary>
        <content type="html">Disable temporary tab strip removal.

This was intended to reduce the visible scroll/flickering jank on startup by delaying the time until the "real" tab strip was seen. Since the placeholder tab strip on startup project is enabled on ToT, the delay is now obsolete.</content>
    </entry>
    <entry>
        <id>326298981</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326298981"/>
        <updated>2024-02-22T20:11:12.645Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263640:1263709:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=921cfed6-0500-4f13-957e-1125e75fb622

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=921cfed6-0500-4f13-957e-1125e75fb622

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/named-property-enumerator/named-property-enumerator.html
       13.50%: 29.3349 -&gt; 25.376 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/named-property-enumerator/named-property-enumerator.html
       13.50%: 29.3349 -&gt; 25.376 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326349124</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326349124"/>
        <updated>2024-02-22T20:11:09.252Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263640:1263709:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=365fc019-d699-46a0-9958-d99e631c2ae7

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=365fc019-d699-46a0-9958-d99e631c2ae7

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/append-child/append-child.html
       13.50%: 29.3349 -&gt; 25.376 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/append-child/append-child.html
       13.50%: 29.3349 -&gt; 25.376 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326462005</id>
        <title>Tests are failing: androidx.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError: 'is displayed on the screen to the user' doesn't match the selecte...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326462005"/>
        <updated>2024-02-22T20:10:27.519Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
androidx.test.espresso.base.DefaultFailureHandler$AssertionFailedWithCauseError: 'is displayed on the screen to the user' doesn't match the selected view.\nExpected: is displayed on the screen to the user\n     Got: \"ButtonCompat{id=2130772296, res-name=button_primary, visibility=GONE, width=0, height=144, has-focus=false, has-focusable=false, has-window-focus=true, is-clickable=true, is-enabled=true, is-focused=false, is-focusable=true, is-layout-requested=false, is-selected=false, root-is-layout-requested=false, has-input-connection=false, x=984.0, y=0.0, text=Yes, I'm in, input-type=0, ime-target=false, has-links=false}\"\n

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.signin.SyncConsentFragmentTest#testAutomotiveDevice_deviceLockRefused_syncRefused
- ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.signin.SyncConsentFragmentTest#testAutomotiveDevice_deviceLockCreated_syncAcceptedSuccessfully


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bd465c4ce909bed8036f6e7b51afbcd9

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326355045</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326355045"/>
        <updated>2024-02-22T20:10:17.693Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263633:1263648:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d6731534-265a-44a4-9e4e-7b3d65ffdd6f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d6731534-265a-44a4-9e4e-7b3d65ffdd6f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/css_animations_triggered_updating_class
        4.02%: 20.8571 -&gt; 21.695 

Top 1 affected measurements in android-pixel4-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/css_animations_triggered_updating_class
        4.02%: 20.8571 -&gt; 21.695 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326378044</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326378044"/>
        <updated>2024-02-22T20:10:09.502Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263597:1263626:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=51cd5a3d-c0d2-4770-b18a-765d0835871b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=51cd5a3d-c0d2-4770-b18a-765d0835871b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/blink_perf.bindings/get-elements-by-tag-name/get-elements-by-tag-name.html
        0.94%: 194.7566 -&gt; 192.93414 

Top 1 affected measurements in android-pixel2_webview-perf:
  - blink_perf.bindings/get-elements-by-tag-name/get-elements-by-tag-name.html
        0.94%: 194.7566 -&gt; 192.93414 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326462382</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326462382"/>
        <updated>2024-02-22T20:10:04.034Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263633:1263648:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=62e35c4c-212f-4a52-bede-a1636e61679a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=62e35c4c-212f-4a52-bede-a1636e61679a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/put_get_image_data
        4.02%: 20.8571 -&gt; 21.695 

Top 1 affected measurements in android-pixel4-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/put_get_image_data
        4.02%: 20.8571 -&gt; 21.695 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326459000</id>
        <title>WPT test_driver has incorrect event routing on aura</title>
        <author>
            <name>kh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459000"/>
        <updated>2024-02-22T20:08:08.878Z</updated>
        <summary>-</summary>
        <content type="html">The test driver code routes input events incorrectly if they are targeting a child window. The event is dispatched to the parent window instead.</content>
    </entry>
    <entry>
        <id>326360727</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326360727"/>
        <updated>2024-02-22T20:07:42.175Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1261224:1261244:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c17abad2-e781-402d-b994-d67c870a082f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c17abad2-e781-402d-b994-d67c870a082f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/infinite_scroll_root_n_layers_0
        2.69%: 8.5968 -&gt; 8.828 

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/infinite_scroll_root_n_layers_0
        2.69%: 8.5968 -&gt; 8.828 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326399456</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326399456"/>
        <updated>2024-02-22T20:05:41.853Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1261253:1261275:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cb452751-925c-43bc-bed6-a9f352e27973

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cb452751-925c-43bc-bed6-a9f352e27973

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/motionmark_ramp_canvas_lines
        1.26%: 28.7917 -&gt; 29.1554 

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/motionmark_ramp_canvas_lines
        1.26%: 28.7917 -&gt; 29.1554 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326355044</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326355044"/>
        <updated>2024-02-22T20:05:31.082Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1261253:1261275:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=06399c4e-0234-4f94-b15f-cc88fda7777f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=06399c4e-0234-4f94-b15f-cc88fda7777f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_20000_pixels_per_second
        1.26%: 28.7917 -&gt; 29.1554 

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_20000_pixels_per_second
        1.26%: 28.7917 -&gt; 29.1554 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326298980</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326298980"/>
        <updated>2024-02-22T20:05:23.586Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263807:1263825:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a7175bec-3453-402b-b591-524c67cac2ed

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a7175bec-3453-402b-b591-524c67cac2ed

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/new_tilings
        3.32%: 6.8411503 -&gt; 7.068 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/new_tilings
        3.32%: 6.8411503 -&gt; 7.068 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326378043</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326378043"/>
        <updated>2024-02-22T20:05:13.379Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1261234:1261261:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cd4e562e-3c39-4973-8383-a1936e82f335

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cd4e562e-3c39-4973-8383-a1936e82f335

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_20000_pixels_per_second
        1.26%: 28.7917 -&gt; 29.1554 

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_20000_pixels_per_second
        1.26%: 28.7917 -&gt; 29.1554 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326349123</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326349123"/>
        <updated>2024-02-22T20:05:05.183Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263640:1263709:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c7064937-7333-4ef0-a311-f74937eeb8b1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c7064937-7333-4ef0-a311-f74937eeb8b1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/insert-before/insert-before.html
       13.50%: 29.3349 -&gt; 25.376 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/insert-before/insert-before.html
       13.50%: 29.3349 -&gt; 25.376 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326452353</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326452353"/>
        <updated>2024-02-22T20:03:18.872Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263638:1263650:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1954e2fe-33dc-4666-9882-e9d8cee6bfbc

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1954e2fe-33dc-4666-9882-e9d8cee6bfbc

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/named-property-enumerator/named-property-enumerator.html
        6.92%: 32.4282 -&gt; 30.182652 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/named-property-enumerator/named-property-enumerator.html
        6.92%: 32.4282 -&gt; 30.182652 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>326460718</id>
        <title>Refactor Java PDM</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326460718"/>
        <updated>2024-02-22T20:02:33.865Z</updated>
        <summary>-</summary>
        <content type="html">Move out CreditCard and IBAN classes into their own files.</content>
    </entry>
    <entry>
        <id>326459535</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/views/win/hwnd_message_handler.cc:2792:  std::unique_ptr&amp;lt;TOUCHINPUT[]&amp;gt; input(new TOUCHINPUT[num_points])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459535"/>
        <updated>2024-02-22T19:57:53.783Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/views/win/hwnd_message_handler.cc:2792:  std::unique_ptr&lt;TOUCHINPUT[]&gt; input(new TOUCHINPUT[num_points]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459291</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/gl/test/gl_test_helper.cc:78:  std::unique_ptr&amp;lt;uint8_t[]&amp;gt; pixels(new uint8_t[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459291"/>
        <updated>2024-02-22T19:57:53.349Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/gl/test/gl_test_helper.cc:78:  std::unique_ptr&lt;uint8_t[]&gt; pixels(new uint8_t[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458900</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/gl/gl_surface_egl.cc:238:    std::unique_ptr&amp;lt;EGLConfig[]&amp;gt; matching_configs(new EGLConfig[num_configs])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458900"/>
        <updated>2024-02-22T19:57:52.919Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/gl/gl_surface_egl.cc:238:    std::unique_ptr&lt;EGLConfig[]&gt; matching_configs(new EGLConfig[num_configs]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459718</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/gfx/icon_util.cc:419:  std::unique_ptr&amp;lt;bool[]&amp;gt; opaque(new bool[num_pixels])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459718"/>
        <updated>2024-02-22T19:57:52.228Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/gfx/icon_util.cc:419:  std::unique_ptr&lt;bool[]&gt; opaque(new bool[num_pixels]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459076</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/gfx/harfbuzz_font_skia.cc:222:  std::unique_ptr&amp;lt;char[]&amp;gt; buffer(new char[table_size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459076"/>
        <updated>2024-02-22T19:57:51.717Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/gfx/harfbuzz_font_skia.cc:222:  std::unique_ptr&lt;char[]&gt; buffer(new char[table_size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458716</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/gfx/color_analysis.cc:647:  std::unique_ptr&amp;lt;uint32_t[]&amp;gt; image(new uint32_t[pixel_count])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458716"/>
        <updated>2024-02-22T19:57:50.502Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/gfx/color_analysis.cc:647:  std::unique_ptr&lt;uint32_t[]&gt; image(new uint32_t[pixel_count]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459261</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/base/ime/win/input_method_win_base.cc:86:  std::unique_ptr&amp;lt;HKL[]&amp;gt; layouts(new HKL[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459261"/>
        <updated>2024-02-22T19:57:49.890Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/base/ime/win/input_method_win_base.cc:86:  std::unique_ptr&lt;HKL[]&gt; layouts(new HKL[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459316</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/aura/gestures/gesture_recognizer_unittest.cc:2297:  std::unique_ptr&amp;lt;aura::Window* []&amp;gt; windows(new aura::Window*[kNumWindows])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459316"/>
        <updated>2024-02-22T19:57:49.421Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/aura/gestures/gesture_recognizer_unittest.cc:2297:  std::unique_ptr&lt;aura::Window* []&gt; windows(new aura::Window*[kNumWindows]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458917</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/aura/gestures/gesture_recognizer_unittest.cc:2291:  std::unique_ptr&amp;lt;gfx::Rect[]&amp;gt; window_bounds(new gfx::Rect[kNumWindows])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458917"/>
        <updated>2024-02-22T19:57:48.879Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/aura/gestures/gesture_recognizer_unittest.cc:2291:  std::unique_ptr&lt;gfx::Rect[]&gt; window_bounds(new gfx::Rect[kNumWindows]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459682</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: tools/imagediff/image_diff.cc:97:    std::unique_ptr&amp;lt;unsigned char[]&amp;gt; source(new unsigned char[byte_length])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459682"/>
        <updated>2024-02-22T19:57:47.823Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace tools/imagediff/image_diff.cc:97:    std::unique_ptr&lt;unsigned char[]&gt; source(new unsigned char[byte_length]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459620</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: ui/accessibility/platform/inspect/ax_inspect_utils_win.cc:883:  std::unique_ptr&amp;lt;VARIANT[]&amp;gt; children_variants(new VARIANT[count_])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459620"/>
        <updated>2024-02-22T19:57:48.274Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace ui/accessibility/platform/inspect/ax_inspect_utils_win.cc:883:  std::unique_ptr&lt;VARIANT[]&gt; children_variants(new VARIANT[count_]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459018</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: tools/android/md5sum/md5sum.cc:38:  std::unique_ptr&amp;lt;char[]&amp;gt; buf(new char[kBufferSize])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459018"/>
        <updated>2024-02-22T19:57:47.285Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace tools/android/md5sum/md5sum.cc:38:  std::unique_ptr&lt;char[]&gt; buf(new char[kBufferSize]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458696</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: tools/android/fincore/fincore.cc:56:  std::unique_ptr&amp;lt;uint8_t[]&amp;gt; page_residency(new uint8_t[total_pages])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458696"/>
        <updated>2024-02-22T19:57:46.655Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace tools/android/fincore/fincore.cc:56:  std::unique_ptr&lt;uint8_t[]&gt; page_residency(new uint8_t[total_pages]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459041</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/woff2/src/woff2_dec.cc:487:  std::unique_ptr&amp;lt;uint8_t[]&amp;gt; glyph_buf(new uint8_t[glyph_buf_size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459041"/>
        <updated>2024-02-22T19:57:46.134Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/woff2/src/woff2_dec.cc:487:  std::unique_ptr&lt;uint8_t[]&gt; glyph_buf(new uint8_t[glyph_buf_size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458943</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/tensorflow_models/src/research/seq_flow_lite/tf_ops/projection_util.cc:268:  auto target = std::unique_ptr&amp;lt;char[]&amp;gt;(new char[len * 4])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458943"/>
        <updated>2024-02-22T19:57:45.675Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/tensorflow_models/src/research/seq_flow_lite/tf_ops/projection_util.cc:268:  auto target = std::unique_ptr&lt;char[]&gt;(new char[len * 4]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459500</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/shell-encryption/src/prng/chacha_prng_util.cc:62:  std::unique_ptr&amp;lt;Uint8[]&amp;gt; buf(new Uint8[kChaChaKeyBytesSize])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459500"/>
        <updated>2024-02-22T19:57:45.064Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/shell-encryption/src/prng/chacha_prng_util.cc:62:  std::unique_ptr&lt;Uint8[]&gt; buf(new Uint8[kChaChaKeyBytesSize]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459378</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/sentencepiece/patches/0005-Fix-utf8towide.patch:83:-  std::unique_ptr&amp;lt;wchar_t[]&amp;gt; input_wide(new wchar_t[output_length + 1])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459378"/>
        <updated>2024-02-22T19:57:44.119Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/sentencepiece/patches/0005-Fix-utf8towide.patch:83:-  std::unique_ptr&lt;wchar_t[]&gt; input_wide(new wchar_t[output_length + 1]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459119</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/stubs/strutil.cc:614:  std::unique_ptr&amp;lt;char[]&amp;gt; dest(new char[dest_length])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459119"/>
        <updated>2024-02-22T19:57:43.457Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/stubs/strutil.cc:614:  std::unique_ptr&lt;char[]&gt; dest(new char[dest_length]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458981</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/stubs/strutil.cc:605:  std::unique_ptr&amp;lt;char[]&amp;gt; dest(new char[dest_length])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458981"/>
        <updated>2024-02-22T19:57:42.797Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/stubs/strutil.cc:605:  std::unique_ptr&lt;char[]&gt; dest(new char[dest_length]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459426</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/stubs/strutil.cc:454:  std::unique_ptr&amp;lt;char[]&amp;gt; unescaped(new char[src.size() + 1])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459426"/>
        <updated>2024-02-22T19:57:41.544Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/stubs/strutil.cc:454:  std::unique_ptr&lt;char[]&gt; unescaped(new char[src.size() + 1]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459220</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/stubs/strutil.cc:462:  std::unique_ptr&amp;lt;char[]&amp;gt; unescaped(new char[src.size() + 1])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459220"/>
        <updated>2024-02-22T19:57:42.149Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/stubs/strutil.cc:462:  std::unique_ptr&lt;char[]&gt; unescaped(new char[src.size() + 1]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459513</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/zero_copy_stream_unittest.cc:212:  std::unique_ptr&amp;lt;char[]&amp;gt; buffer(new char[str.size() + 1])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459513"/>
        <updated>2024-02-22T19:57:40.736Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/zero_copy_stream_unittest.cc:212:  std::unique_ptr&lt;char[]&gt; buffer(new char[str.size() + 1]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458695</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/io_win32_unittest.cc:583:  std::unique_ptr&amp;lt;wchar_t[]&amp;gt; cwd_str(new wchar_t[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458695"/>
        <updated>2024-02-22T19:57:40.068Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/io_win32_unittest.cc:583:  std::unique_ptr&lt;wchar_t[]&gt; cwd_str(new wchar_t[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459260</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/io_win32_unittest.cc:138:    std::unique_ptr&amp;lt;WCHAR[]&amp;gt; wcs(new WCHAR[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459260"/>
        <updated>2024-02-22T19:57:39.308Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/io_win32_unittest.cc:138:    std::unique_ptr&lt;WCHAR[]&gt; wcs(new WCHAR[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459159</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/io_win32_unittest.cc:122:    std::unique_ptr&amp;lt;WCHAR[]&amp;gt; wcs(new WCHAR[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459159"/>
        <updated>2024-02-22T19:57:38.910Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/io_win32_unittest.cc:122:    std::unique_ptr&lt;WCHAR[]&gt; wcs(new WCHAR[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459533</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/io_win32.cc:450:  std::unique_ptr&amp;lt;WCHAR[]&amp;gt; wstr(new WCHAR[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459533"/>
        <updated>2024-02-22T19:57:38.158Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/io_win32.cc:450:  std::unique_ptr&lt;WCHAR[]&gt; wstr(new WCHAR[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459499</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/io_win32.cc:431:  std::unique_ptr&amp;lt;CHAR[]&amp;gt; astr(new CHAR[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459499"/>
        <updated>2024-02-22T19:57:37.517Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/io_win32.cc:431:  std::unique_ptr&lt;CHAR[]&gt; astr(new CHAR[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459418</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/io_win32.cc:238:    std::unique_ptr&amp;lt;WCHAR[]&amp;gt; wcwd(new WCHAR[size])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459418"/>
        <updated>2024-02-22T19:57:36.942Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/io_win32.cc:238:    std::unique_ptr&lt;WCHAR[]&gt; wcwd(new WCHAR[size]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459118</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/compiler/command_line_interface_unittest.cc:2582:    std::unique_ptr&amp;lt;const char*[]&amp;gt; argv(new const char*[args.size()])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459118"/>
        <updated>2024-02-22T19:57:35.715Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/compiler/command_line_interface_unittest.cc:2582:    std::unique_ptr&lt;const char*[]&gt; argv(new const char*[args.size()]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458797</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/io/coded_stream_unittest.cc:733:  std::unique_ptr&amp;lt;uint8[]&amp;gt; buffer(new uint8[8])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458797"/>
        <updated>2024-02-22T19:57:36.319Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/io/coded_stream_unittest.cc:733:  std::unique_ptr&lt;uint8[]&gt; buffer(new uint8[8]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459358</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/private_membership/src/internal/aes_ctr_256_with_fixed_iv_test.cc:34:  std::unique_ptr&amp;lt;uint8_t[]&amp;gt; buf(new uint8_t[length])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459358"/>
        <updated>2024-02-22T19:57:34.592Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/private_membership/src/internal/aes_ctr_256_with_fixed_iv_test.cc:34:  std::unique_ptr&lt;uint8_t[]&gt; buf(new uint8_t[length]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459131</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/conformance/conformance_test_runner.cc:300:    std::unique_ptr&amp;lt;char[]&amp;gt; executable(new char[executable_.size() + 1])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459131"/>
        <updated>2024-02-22T19:57:34.911Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/conformance/conformance_test_runner.cc:300:    std::unique_ptr&lt;char[]&gt; executable(new char[executable_.size() + 1]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326458898</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/protobuf/src/google/protobuf/compiler/command_line_interface_unittest.cc:365:  std::unique_ptr&amp;lt;const char*[]&amp;gt; argv(new const char*[args.size()])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326458898"/>
        <updated>2024-02-22T19:57:35.295Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/protobuf/src/google/protobuf/compiler/command_line_interface_unittest.cc:365:  std::unique_ptr&lt;const char*[]&gt; argv(new const char*[args.size()]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
    <entry>
        <id>326459189</id>
        <title>Replace std::unique_ptr&amp;lt;T[]&amp;gt; with HeapArray for: third_party/mediapipe/src/mediapipe/framework/tool/encode_as_c_string.cc:38:  std::unique_ptr&amp;lt;char[]&amp;gt; buf(new char[kBufSize])</title>
        <author>
            <name>dh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459189"/>
        <updated>2024-02-22T19:57:33.632Z</updated>
        <summary>-</summary>
        <content type="html">We need to replace occurrences of std::unique_ptr&lt;T[]&gt; with base::HeapArray&lt;T&gt;. Using std::unique_ptr&lt;T[]&gt; does not automatically preserve the size of the allocation. This forces a need for ad-hoc bounds checks, leading to bugs which attackers use to compromise our users.

For this particular bug, please replace third_party/mediapipe/src/mediapipe/framework/tool/encode_as_c_string.cc:38:  std::unique_ptr&lt;char[]&gt; buf(new char[kBufSize]). 

One pager: https://docs.google.com/document/d/1YsPR8GoN8VTP1ABKCISaQkuBif1Cn80cTxTjsM8QT4s/edit?resourcekey=0-3qKCKgDwFwwjS7KI5XAcBQ&amp;tab=t.0 

Point of Contact: tsepez@chromium.org</content>
    </entry>
</feed>