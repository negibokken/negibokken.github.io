<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-04-22T20:10:04.000Z</updated>
    <entry>
        <id>336352264</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336352264"/>
        <updated>2024-04-22T20:10:04.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290561:1290569:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4f9da5e2-9d29-405b-8b20-c7f42be3dbcf

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4f9da5e2-9d29-405b-8b20-c7f42be3dbcf

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/typed-array-set-from-typed/typed-array-set-from-typed.html
       33.31%: 1411.66435 -&gt; 941.3736 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/typed-array-set-from-typed/typed-array-set-from-typed.html
       33.31%: 1411.66435 -&gt; 941.3736 unitless

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: haraken@chromium.org, japhet@chromium.org, jbroman@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/43e3fc4058146aca7d5ee7a08c55c1d059c0407e..1bc620ed060846435ab337d8f1f12934ac0f381a
  Chromium Commit Position: https://crrev.com/1290560..1290569
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..2eaa4a2641b0d19b79d02a83d1683e60894a6179
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336347910</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336347910"/>
        <updated>2024-04-22T20:08:26.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290561:1290569:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4f9da5e2-9d29-405b-8b20-c7f42be3dbcf

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4f9da5e2-9d29-405b-8b20-c7f42be3dbcf

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/typed-array-set-from-typed/typed-array-set-from-typed.html
       33.31%: 1411.66435 -&gt; 941.3736 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/typed-array-set-from-typed/typed-array-set-from-typed.html
       33.31%: 1411.66435 -&gt; 941.3736 unitless

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: haraken@chromium.org, japhet@chromium.org, jbroman@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/43e3fc4058146aca7d5ee7a08c55c1d059c0407e..1bc620ed060846435ab337d8f1f12934ac0f381a
  Chromium Commit Position: https://crrev.com/1290560..1290569
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..2eaa4a2641b0d19b79d02a83d1683e60894a6179
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336352689</id>
        <title>[Blink Layout]: 1 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336352689"/>
        <updated>2024-04-22T20:08:03.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290561:1290584:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=69e72fd2-1be8-4558-93ad-b983d92ac448

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=69e72fd2-1be8-4558-93ad-b983d92ac448

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.layout/css-contain-change-text-without-subtree-root/css-contain-change-text-without-subtree-root.html
       17.82%: 434.86 -&gt; 512.34 ms

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.layout/css-contain-change-text-without-subtree-root/css-contain-change-text-without-subtree-root.html
       17.82%: 434.86 -&gt; 512.34 ms

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: ikilpatrick@chromium.org, kojii@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/43e3fc4058146aca7d5ee7a08c55c1d059c0407e..18cec402dae41f17c0af10937fcf6abbba7fa084
  Chromium Commit Position: https://crrev.com/1290560..1290584
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..0eb99a5fd27ab7a29e4d8bc54b5f7bd97012c7c0
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336349648</id>
        <title>3 CSPP pings per day cap isn't being respected</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336349648"/>
        <updated>2024-04-22T20:07:00.000Z</updated>
        <summary>-</summary>
        <content type="html">The limit for ESB users is set [here](https://source.chromium.org/chromium/chromium/src/+/main:components/safe_browsing/core/common/features.cc;drc=aac75e1d42c143ae268bd6adfdec9191f2cc1c33;l=324) and checked [here](https://source.chromium.org/chromium/chromium/src/+/main:components/safe_browsing/content/browser/client_side_detection_service.cc;drc=aac75e1d42c143ae268bd6adfdec9191f2cc1c33;l=430) and triggered from [here](https://source.chromium.org/chromium/chromium/src/+/main:components/safe_browsing/content/browser/client_side_detection_host.cc;drc=aac75e1d42c143ae268bd6adfdec9191f2cc1c33;l=393).

Reviewing where the trigger for the check happens, in order for the check to actually happen, there is the following condition:

`!csd_service_-&gt;IsInCache(url_)`

That is, the URL shouldn't be in the cache.

In the cases, where notification permission prompt triggers the ping, the cache is skipped. And since, the permission prompt will usually come after the page fully loads and CSPP runs the first time, the above condition is likely to return false -- in which case, the over-the-limit check will be skipped. 


### Task

1. Verify that the above diagnosis is correct. 
2. If (1) holds, update condition to ignore the cache check in the event the trigger was a permission prompt.
</content>
    </entry>
    <entry>
        <id>336329411</id>
        <title>Support multiple providers in navigator.identity.get() request</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336329411"/>
        <updated>2024-04-22T20:05:45.000Z</updated>
        <summary>-</summary>
        <content type="html">Support multiple providers in navigator.identity.get() request</content>
    </entry>
    <entry>
        <id>336349916</id>
        <title>Reevaluate security</title>
        <author>
            <name>tm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336349916"/>
        <updated>2024-04-22T19:58:30.000Z</updated>
        <summary>-</summary>
        <content type="html">Before we can ship, we need to address any outstanding security questions. Specifically:

1. Either move Autofill to an isolated world, or consult security on the possibility of enabling x-frame filling in the page world. Our initial security analysis was based on the assumption that the move to an isolated world would happen before this project completed.

2. Reread the relevant section of the design doc and verify that all of the necessary security mitigations were implemented. In particular, I know I discussed potentially extracting some policies that pages can set in attributes and passing that information back to the core components code, and I know I haven't implemented that, but IIRC it was a nice-to-have.

3. Document any deviations from the approved doc that happened during the course of implementation.</content>
    </entry>
    <entry>
        <id>336349853</id>
        <title>336346437, 336000543, 336179079, 335774308, 335769272, 335774307, 335769271, 336000643, 335774305, 3</title>
        <author>
            <name>co...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336349853"/>
        <updated>2024-04-22T19:51:12.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 336346437, 336000543, 336179079, 335774308, 335769272, 335774307, 335769271, 336000643, 335774305, 335792590, 335774303, 335763896, 335763895, 335763891, 335544086, 335769259, 335704896, 335544085, 335580647, 335792576, 335764811, 335774296, 335633642, 335764807, 335792572
2. 
3. 

# Problem Description
336346437, 336000543, 336179079, 335774308, 335769272, 335774307, 335769271, 336000643, 335774305, 335792590, 335774303, 335763896, 335763895, 335763891, 335544086, 335769259, 335704896, 335544085, 335580647, 335792576, 335764811, 335774296, 335633642, 335764807, 335792572

# Summary
336346437, 336000543, 336179079, 335774308, 335769272, 335774307, 335769271, 336000643, 335774305, 3

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336347851</id>
        <title>Add IPH for RTL flip</title>
        <author>
            <name>kh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336347851"/>
        <updated>2024-04-22T19:47:59.000Z</updated>
        <summary>-</summary>
        <content type="html">Add IPH for RTL users where the direction for back/fwd is flipped.</content>
    </entry>
    <entry>
        <id>336345918</id>
        <title>Chrome Camera permissions- Camera is not displayed on Linux desktop - https://b.corp.google.com/issues/336345234</title>
        <author>
            <name>tu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336345918"/>
        <updated>2024-04-22T19:38:11.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336346437</id>
        <title>[Blink Shadow DOM]: 1 regressions in blink_perf.shadow_dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336346437"/>
        <updated>2024-04-22T19:33:35.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290471:1290500:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=636a3059-f975-4999-8f23-818e32cd9d37

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=636a3059-f975-4999-8f23-818e32cd9d37

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.shadow_dom/style-sheet-insert/style-sheet-insert.html
       13.97%: 26.62 -&gt; 30.34 ms

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.shadow_dom/style-sheet-insert/style-sheet-insert.html
       13.97%: 26.62 -&gt; 30.34 ms

Regressions grouped by blink_perf.shadow_dom includes data from the following benchmarks with listed owners:
  blink_perf.shadow_dom: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/aaee641ea7696f4d8aeb84b7e924d830f32fe94e..128c4567191f76f8d8b5423c6b7dd75e89559833
  Chromium Commit Position: https://crrev.com/1290470..1290500
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/83c84674a19490aaccae706a984743473d79ba40..83c84674a19490aaccae706a984743473d79ba40
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2dd6cf61fdcca1b6f7f660f4bc43296bab6fa702..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336339427</id>
        <title>RHS location bar indicator pops-up while in the "site-ask OS-block" flow as soon as the user grants site-level permission, which clashes with OS PEPC screen</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336339427"/>
        <updated>2024-04-22T19:04:16.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336338808</id>
        <title>Use modal views API as requested by views team</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336338808"/>
        <updated>2024-04-22T19:01:32.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336339060</id>
        <title>Add concept of focused Facility and modify checkActivePreconditions() to check only the focused facility</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336339060"/>
        <updated>2024-04-22T19:01:14.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336325111</id>
        <title>Deprecate v8::Object::SetAccessor() and v8::ObjectTemplate::SetAccessor().</title>
        <author>
            <name>is...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336325111"/>
        <updated>2024-04-22T18:55:22.000Z</updated>
        <summary>-</summary>
        <content type="html">V8 Api has `v8::Object::SetAccessor()` and `v8::ObjectTemplate::SetAccessor()` which allow defining writable properties without providing a setter. Setting to such a "malicious read-only" property works as a no-op which violates JavaScript spec (writing to a writable data property can't fail and should end up updating the value, see https://tc39.es/ecma262/#sec-validateandapplypropertydescriptor).

"Malicious read-only" properties defined by `SetAccessor()` Api should be fixed by one of the following approaches:

1) Define it as a true read-only JavaScript property (using `v8::ReadOnly` attribute). This will behave the same except that in strict mode attempts to write to such a property will throw `TypeError: Cannot assign to read only property 'x' of object 'obj'`.

2) Use `SetLazyDataProperty()` which will define it in such a way that the property will be replaced with an ordinary writable data property after first read. Subsequent reads will no longer trigger the getter callback and subsequent writes will update the data property.

3) Define it as a JavaScript accessor property using `SetAccessorProperty()` and providing `v8::FunctionTemplate` or `v8::Function` as getter/setter callbacks.

Note that using `SetNativeDataProperty()` with a no-op setter callback is a **bad** option since it would still violate semantics of the JavaScript `[[Set]]` [operation](https://tc39.es/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver) for data properties which is supposed to be just a write of a new value.

---

Eventually, V8 will prohibit data property getter/setter callbacks to produce observable side effects such as throwing exceptions or executing JavaScript code.

This will make the V8 Api closer to the JavaScript spec and make the V8 code cleaner.

---

Currently, [the following components](https://source.chromium.org/search?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc) in Chromium still use the old Api:

1) [extensions/renderer/bindings/api_last_error.cc](https://source.chromium.org/chromium/chromium/src/+/main:extensions/renderer/bindings/api_last_error.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

2) [chrome/renderer/loadtimes_extension_bindings.cc](https://source.chromium.org/chromium/chromium/src/+/main:chrome/renderer/loadtimes_extension_bindings.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

3) [third_party/blink/renderer/bindings/core/v8/local_window_proxy.cc](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/bindings/core/v8/local_window_proxy.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

4) [third_party/blink/renderer/bindings/core/v8/v8_throw_dom_exception.cc](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/bindings/core/v8/v8_throw_dom_exception.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

5) [third_party/blink/renderer/bindings/core/v8/v8_page_popup_controller_binding.cc](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/bindings/core/v8/v8_page_popup_controller_binding.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

6) [extensions/renderer/module_system.cc](https://source.chromium.org/chromium/chromium/src/+/main:extensions/renderer/module_system.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

7) [extensions/renderer/api/runtime_hooks_delegate.cc](https://source.chromium.org/chromium/chromium/src/+/main:extensions/renderer/api/runtime_hooks_delegate.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

8) [chrome/renderer/extensions/api/app_hooks_delegate.cc](https://source.chromium.org/chromium/chromium/src/+/main:chrome/renderer/extensions/api/app_hooks_delegate.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

9) [chrome/renderer/extensions/api/extension_hooks_delegate.cc](https://source.chromium.org/chromium/chromium/src/+/main:chrome/renderer/extensions/api/extension_hooks_delegate.cc?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)

10) [third_party/pdfium/fxjs/cfxjs_engine.cpp](https://source.chromium.org/chromium/chromium/src/+/main:third_party/pdfium/fxjs/cfxjs_engine.cpp?q=file:%28renderer%7Cgin%29%20%22SetAccessor%28%22%20case:yes&amp;ss=chromium%2Fchromium%2Fsrc)
</content>
    </entry>
    <entry>
        <id>336179079</id>
        <title>[Chrome Perf Accessibility Sheriff]: 2 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336179079"/>
        <updated>2024-04-22T18:50:04.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290556:1290577:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9ca5972c-60f5-4d4a-95ab-f8a90b7cdfbd

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9ca5972c-60f5-4d4a-95ab-f8a90b7cdfbd

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.accessibility/GetUpdatesAndEventsForSerialization_sum/build-table.html
       29.19%: 303.231 -&gt; 391.736 ms
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.accessibility/GetUpdatesAndEventsForSerialization_sum/many-text-changes-deep-block-subtree.html
       28.31%: 142.254 -&gt; 182.5215 ms

Top 2 affected measurements in android-pixel6-pro-perf:
  - blink_perf.accessibility/GetUpdatesAndEventsForSerialization_sum/build-table.html
       29.19%: 303.231 -&gt; 391.736 ms
  - blink_perf.accessibility/GetUpdatesAndEventsForSerialization_sum/many-text-changes-deep-block-subtree.html
       28.31%: 142.254 -&gt; 182.5215 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/f801d080e1e9241c7f325e6c9c42b2fbd874be30..3785f11c0f0dabe23549c46d41e002e347eb07e7
  Chromium Commit Position: https://crrev.com/1290555..1290577
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..0eb99a5fd27ab7a29e4d8bc54b5f7bd97012c7c0
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>335774308</id>
        <title>[V8 Speedometer2 Perf Sheriff]: 1 regressions in speedometer2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335774308"/>
        <updated>2024-04-22T18:47:55.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290556:1290577:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c1932d93-aece-40d6-995e-6129739081ae

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c1932d93-aece-40d6-995e-6129739081ae

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/speedometer2/Inferno-TodoMVC/Speedometer2
       13.45%: 140.32 -&gt; 159.19 ms

Top 1 affected measurements in android-pixel6-pro-perf:
  - speedometer2/Inferno-TodoMVC/Speedometer2
       13.45%: 140.32 -&gt; 159.19 ms

Regressions grouped by speedometer2 includes data from the following benchmarks with listed owners:
  speedometer2: cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/f801d080e1e9241c7f325e6c9c42b2fbd874be30..3785f11c0f0dabe23549c46d41e002e347eb07e7
  Chromium Commit Position: https://crrev.com/1290555..1290577
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..0eb99a5fd27ab7a29e4d8bc54b5f7bd97012c7c0
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336333963</id>
        <title>Implement functions for SCOPED_UMA_HISTOGRAM_TIMER &amp; SCOPED_UMA_HISTOGRAM_THREAD_TIMER</title>
        <author>
            <name>ri...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336333963"/>
        <updated>2024-04-22T18:47:39.000Z</updated>
        <summary>-</summary>
        <content type="html">Implement functions for SCOPED_UMA_HISTOGRAM_TIMER &amp; SCOPED_UMA_HISTOGRAM_THREAD_TIMER. These will replace macro usage in components/subresource_filter so that different filters can log metrics at the same callsite.

Sample usage that needs replacing: https://source.chromium.org/chromium/chromium/src/+/main:components/subresource_filter/content/shared/browser/ruleset_service.cc;drc=5407e6205d9a54ce49175771c80fcab7b2498b5e;l=345

Context CL: https://chromium-review.googlesource.com/c/chromium/src/+/5462941

Please see the discussion in uma-users: https://groups.google.com/a/google.com/g/uma-users/c/VMSMT_UtpG8

Macros file: https://source.chromium.org/chromium/chromium/src/+/main:base/metrics/histogram_macros.h;drc=a0782e8a696dc65f1bf525c5ded9df265eb3cd36;l=297

Functions file: https://source.chromium.org/chromium/chromium/src/+/main:base/metrics/histogram_functions.h

This is blocking for using the fingerprinting_protection filter because it would otherwise pollute subresource_filter metrics. </content>
    </entry>
    <entry>
        <id>336332581</id>
        <title>Link new internal repository to internal directory in c/b/resources/downloads</title>
        <author>
            <name>aw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336332581"/>
        <updated>2024-04-22T18:36:25.000Z</updated>
        <summary>-</summary>
        <content type="html">After creating a new internal repository found here: https://chrome-internal.googlesource.com/chrome/browser/resources/downloads_internal/ we need to link it to a directory in chrome/browser/resources/downloads/ so that we can place our internal gshield icon and reference it in c/b/r/downloads/item.html.</content>
    </entry>
    <entry>
        <id>336327119</id>
        <title>Remove Mac/iOS Builder "Or Mac13" Upstream</title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336327119"/>
        <updated>2024-04-22T18:18:03.000Z</updated>
        <summary>-</summary>
        <content type="html">now that upstream mac bots have all been upgraded to Mac14, we should remove the OR
</content>
    </entry>
    <entry>
        <id>336318588</id>
        <title>CORB issue impacting Miro.com</title>
        <author>
            <name>ka...@clevertech.biz</name>
        </author>
        <link href="https://issues.chromium.org/issues/336318588"/>
        <updated>2024-04-22T17:58:05.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 124.0.6367.60 (Official Build) (arm64)
URLs (if applicable) :https://miro.com/app/dashboard/
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you have tested this issue:
     Safari: OK
    Firefox: OK
       Edge: OK

What steps will reproduce the problem?
(1) I have a Miro account, I have signed out and in multiple times. Visiting the URL above I get an intermittent error 
(2) It goes into an endless load state, in the console I see the error attached. 

What is the expected result?
The page should load as expected

What happens instead?
I am stuck in a loading state 

Please provide any additional information below. Attach a screenshot if possible.

For graphics-related bugs, please save the contents of the about:gpu page to a text file and attach it to this bug report as an attachment.</content>
    </entry>
    <entry>
        <id>336318587</id>
        <title>Add ReconsiderProxyAfterError tests for QUIC proxy chains?</title>
        <author>
            <name>aw...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336318587"/>
        <updated>2024-04-22T17:56:18.000Z</updated>
        <summary>-</summary>
        <content type="html">For QUIC proxies it might be worth adding ReconsiderProxyAfterError tests like what we have for the other types of proxies in net/http/http_stream_factory_job_controller_unittest.cc. These test how the proxy fallback code handles a wide range of errors, including for nested proxies where we have tests for failures encountered when connecting to both the first and the second hop of a multi-proxy chain.

djmitche@: WDYT, do we have sufficient testing of this elsewhere that I'm not aware of?</content>
    </entry>
    <entry>
        <id>336322507</id>
        <title>SECURITY_DCHECK failure in CSSImageGeneratorValue::RemoveClient()</title>
        <author>
            <name>fu...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336322507"/>
        <updated>2024-04-22T17:47:51.000Z</updated>
        <summary>-</summary>
        <content type="html">Loading this site and resizing triggers DCHECK (need fix for issue 336164421 to reach this one):

https://kizu.dev/anchor-positioning-experiments/
</content>
    </entry>
    <entry>
        <id>336282133</id>
        <title>Mitigate UB with compiler options where possible</title>
        <author>
            <name>da...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336282133"/>
        <updated>2024-04-22T17:44:17.000Z</updated>
        <summary>-</summary>
        <content type="html">Some low-hanging fruit we've been ignoring:

* We should build with `-fsanitize=array-bounds -fsanitize-trap=array-bounds` so that C arrays are compatible to `std::array` in safety
* We should build with `-fwrapv` so that integer overflow is less scary
* We should build with `-fno-strict-enum` to mitigate the *extremely* confusing UB rules around unscoped `enum`s</content>
    </entry>
    <entry>
        <id>336222286</id>
        <title>~WidgetDelegate check in FindBarHost</title>
        <author>
            <name>sk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222286"/>
        <updated>2024-04-22T17:42:16.000Z</updated>
        <summary>-</summary>
        <content type="html">Here's recent crashes with this signature: https://crash.corp.google.com/browse?q=product_name%3D%27Chrome_Mac%27+AND+report_type.is_fatal+AND+ChromeMilestone%28product.Version%29+%3E%3D+123+AND+expanded_custom_data.ChromeCrashProto.ptype%3D%27browser%27+AND+NOT+%28expanded_custom_data.ChromeCrashProto.in_shutdown+OR+EXISTS+%28SELECT+1+FROM+UNNEST%28CrashedStackTrace.StackFrame%29+WHERE+FunctionName%3D%27content%3A%3AContentMainRunnerImpl%3A%3AShutdown%28%29%27%29+OR+EXISTS+%28SELECT+1+FROM+UNNEST%28productdata%29+WHERE+Key%3D%27browser_shutdown_hang%27+AND+Value%3D%27true%27%29%29+AND+NOT+%28expanded_custom_data.ChromeCrashProto.channel%3D%27unknown%27+OR+EXISTS+%28SELECT+1+FROM+UNNEST%28productdata%29+WHERE+Key%3D%27hwtest_suite_run%27+AND+Value%3D%27true%27%29%29+AND+expanded_custom_data.ChromeCrashProto.magic_signature_1.name%3D%27views%3A%3AWidgetDelegate%3A%3A%7EWidgetDelegate%27&amp;stbtiq=&amp;reportid=e8c55054bc548328&amp;index=3#0 . The issue may be mac specific, and it may be because shutdown ordering is different on a mac, causing the issue.</content>
    </entry>
    <entry>
        <id>336278667</id>
        <title>Tab switch animation in FedCM dialog is confusing</title>
        <author>
            <name>da...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336278667"/>
        <updated>2024-04-22T17:36:06.000Z</updated>
        <summary>-</summary>
        <content type="html">The FedCM dialog is rendered inside the web page and appears to be designed to look like a part of web content.

When switching tabs, the web content and other tab swap hide and appear instantly, but the FedCM dialog has a fade in/out animation. This is a bit jarring and distracting. I think, if it's designed to look like web content, it should transition in and out with the rest of web content.</content>
    </entry>
    <entry>
        <id>336222285</id>
        <title>Inability to view a CL in chromium/src using a Chromium account</title>
        <author>
            <name>so...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222285"/>
        <updated>2024-04-22T17:34:14.000Z</updated>
        <summary>-</summary>
        <content type="html">**Steps to reproduce** 
https://chromium-review.git.corp.google.com/c/chromium/src/+/5473422


**Expected behavior**
Ability to view the CL using a Chromium account.


**Observed behavior**
Inability to view the CL using a Chromium account.


**Timestamp when the error occurred (include timezone)**
2024-04-22 10:32:42 PST</content>
    </entry>
    <entry>
        <id>336318252</id>
        <title>Progress bar not conveyed by screen reader to users</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336318252"/>
        <updated>2024-04-22T17:30:22.000Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. There is lack of feedback by screen reader when progress bar is being shown after pressing Continue button to sign in. It does take a few seconds to sign in and during this time, screen reader is quiet

2. Screenshot: https://screenshot.googleplex.com/7aMNLZqGRKXJCzg.png

EXPECTED RESULTS:

- Ideally for progress bars, screen reader is able to convey status such as "Signing in" or "Logging in" (or in other cases, "Verifying")

STEPS TO REPRODUCE:

0. Enable screen reader
1. Visit https://fedcm-button.glitch.me and click the “Sign in with IdP” button
2. A native UI is displayed, select an id
3. Press Continue button
4. Observe focus/announcement


ENVIRONMENT DETAILS:

- CrOS Version Dev 125.0.6422.5
- Windows 11 Canary 126.0.5425.0
- macOS Sonoma 14.4.1 Canary 126.0.5425.0</content>
    </entry>
    <entry>
        <id>336222187</id>
        <title>Iframe promise hangs after iframe is destroyed</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222187"/>
        <updated>2024-04-22T17:29:17.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
A simple repro -- with a snippet of the salient code, as well as a link to the full demo -- can be found here: https://zlatkovsky.github.io/HungIframePromise/

To see the example yourself:
1. Click "Invoke iframe function" and wait 2 seconds. You'll see a log statement saying that the iframe execution completed: Host App: invokeSomethingOnIframe is done
2. Now click "Invoke iframe function" again, but immediately after click "Remove iframe". This time, the Host App: invokeSomethingOnIframe is done will fail to show up.

Our expectation is that if the "outside" window calls something on the iframe and gets a `Promise` returned, that `Promise` should either resolve or reject, but it shouldn't just hang indefinitely. If the iframe is destroyed and all code stops executing on the iframe -- which seems to be the case -- the Promise should reject with some sort of "Execution context is destroyed" error.

In our production-app case, the hanging Promise causes cleanup code -- which would otherwise run as soon as the Promise is resolved or rejected -- to not run. This, in turn, causes a massive memory leak.

# Problem Description
My team has encountered an unexpected "frozen-promise" behavior that occurs when code calls a long-running iframe function, and the iframe is destroyed before the function completes.

Our expectation is that if the "outside" window calls something on the iframe and gets a `Promise` returned, that `Promise` should either resolve or reject, but it shouldn't just hang indefinitely. If the iframe is destroyed and all code stops executing on the iframe -- which seems to be the case -- the Promise should reject with some sort of "Execution context is destroyed" error.

In our production-app case, the hanging Promise causes cleanup code -- which would otherwise run as soon as the Promise is resolved or rejected -- to not run. This, in turn, causes a massive memory leak.

# Summary
Iframe promise hangs after iframe is destroyed

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
The same thing happens in Firefox as well, so it perhaps falls into a gray-zone of unspec-ed behavior. But it still seems to be problematic, and in our case causes a massive memory leak because the cleanup code that would run after the Promise should have completed never happens.

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336318586</id>
        <title>rust-related linker error about __except_handler4_common on win32-official</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336318586"/>
        <updated>2024-04-22T17:28:55.000Z</updated>
        <summary>-</summary>
        <content type="html">https://ci.chromium.org/ui/p/chromium/builders/try/win32-official/1435/overview

```
[26464/104041] RUST(BIN) test_bin_crate.exe test_bin_crate.exe.pdb
C:/b/s/w/ir/cipd_bin_packages/cpython3/bin/python3.exe ../../build/rust/rustc_wrapper.py --target-wi...(too long)
error: linking with `..\..\third_party\llvm-build\Release+Asserts\bin\lld-link.exe` failed: exit code: 1
  |
  = note: "..\\..\\third_party\\llvm-build\\Release+Asserts\\bin\\lld-link.exe" "-flavor" "link" "/N...(too long)
  = note: lld-link: error: undefined symbol: __except_handler4_common
          &gt;&gt;&gt; referenced by D:\a\_work\1\s\src\vctools\crt\vcstartup\src\eh\i386\chandler4gs.c:94
          &gt;&gt;&gt;               msvcrt.lib(chandler4gs.obj):(__except_handler4)
```</content>
    </entry>
    <entry>
        <id>336316923</id>
        <title>Improper focus movement</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336316923"/>
        <updated>2024-04-22T17:26:45.000Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. After selecting an id to sign in and user presses Continue button, focus goes to "Privacy Policy" link in the disclosure which is not proper contextually as this causes screen reader to announce the link and users without vision may try to activate the link

2. Screenshot: https://screenshot.googleplex.com/8URWuszgDuTYoJX.png

EXPECTED RESULTS:

- Remove this focus movement in the user flow

STEPS TO REPRODUCE:

0. Enable screen reader
1. Visit https://fedcm-button.glitch.me and click the “Sign in with IdP” button
2. A native UI is displayed, select an id
3. Press Continue button
4. Observe focus/announcement


ENVIRONMENT DETAILS:

- CrOS Version Dev 125.0.6422.5
- Windows 11 Canary 126.0.5425.0
- macOS Sonoma 14.4.1 Canary 126.0.5425.0</content>
    </entry>
    <entry>
        <id>336314933</id>
        <title>Disclosure not conveyed by screen reader</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336314933"/>
        <updated>2024-04-22T17:17:39.000Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. After selecting an id to sing in, a disclosure information appears but this is not conveyed by screen reader to users. Focus jumps to the Continue button, therefore screen reader users without vision may not be aware of the textual information displayed 

2. Screenshot: https://screenshot.googleplex.com/7nwmDjmE62PR4zd.png

EXPECTED RESULTS:

- Screen reader users should be made aware of new content or update either through live region or proper focus movement. Focus can be set on the disclosure information. Typically in html elements, tabindex=-1 is used on the container element and proper script to set focus to it without adding it to the tab or focus order.

STEPS TO REPRODUCE:

0. Enable screen reader
1. Visit https://fedcm-button.glitch.me and click the “Sign in with IdP” button
2. A native UI is displayed, select an id
3. Observe announcement, focus movement


ENVIRONMENT DETAILS:

- CrOS Version Dev 125.0.6422.5
- Windows 11 Canary 126.0.5425.0
- macOS Sonoma 14.4.1 Canary 126.0.5425.0</content>
    </entry>
    <entry>
        <id>335769271</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.events</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335769271"/>
        <updated>2024-04-22T17:16:37.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290502:1290506:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e1bcb09f-ce53-4f2d-8f06-00419a616f1b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e1bcb09f-ce53-4f2d-8f06-00419a616f1b

Top 1 regressions (out of 3, with 2 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.events/is-input-pending-default-events/is-input-pending-default-events.html
       33.62%: 1241843.0276 -&gt; 824353.4157 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.events/is-input-pending-default-events/is-input-pending-default-events.html
       33.62%: 1241843.0276 -&gt; 824353.4157 unitless

Regressions grouped by blink_perf.events includes data from the following benchmarks with listed owners:
  blink_perf.events: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/128c4567191f76f8d8b5423c6b7dd75e89559833..b340347564a0c15dd7ea539a7c94161755556127
  Chromium Commit Position: https://crrev.com/1290500..1290513
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/83c84674a19490aaccae706a984743473d79ba40..83c84674a19490aaccae706a984743473d79ba40
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336222283</id>
        <title>Simplify logic in |Range::BoundaryShadowNodeChildrenWillBeRemoved|</title>
        <author>
            <name>si...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222283"/>
        <updated>2024-04-22T17:06:54.000Z</updated>
        <summary>-</summary>
        <content type="html">Current logic can sometimes have perf issues when the to-be removed container node has too many children because |Range::BoundaryShadowNodeChildrenWillBeRemoved| iterates through all the children of the container node and check every cached range if the child of container node is an ancestor container of the range.

We should do something similar to https://chromium-review.googlesource.com/c/chromium/src/+/5414145</content>
    </entry>
    <entry>
        <id>336222185</id>
        <title>I can't run reports in Quickbooks since the Chrome Update!</title>
        <author>
            <name>mp...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222185"/>
        <updated>2024-04-22T16:57:31.000Z</updated>
        <summary>-</summary>
        <content type="html">Device name:

From ""Settings &gt; About Chrome""
Application version:
Operating system:

URLs (if applicable):

Steps to reproduce:
(1) Login to QB Online
(2) Run Report
(3) Change time period - Chrome shuts down to AW SNAP! error

Expected result:

Actual result: 
</content>
    </entry>
    <entry>
        <id>336310279</id>
        <title>Focus does not move to dialog</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336310279"/>
        <updated>2024-04-22T16:55:45.000Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. Focus does not move to dialog when it appears

2. Screenshot: https://screenshot.googleplex.com/BJP4SHW6T43Bw35.png

EXPECTED RESULTS:

- Screen reader should be able to navigate to dialog when it appears, either by tabbing or in some cases Alt+Shift+A 

- Working fine on macOS but not on CrOS and Windows

STEPS TO REPRODUCE:

0. Enable screen reader (optional)
1. Visit https://fedcm-button.glitch.me and click the “Sign in with IdP” button
2. A native UI is displayed
3. Navigate to the dialog by keyboard only


ENVIRONMENT DETAILS:

- CrOS Version Dev 125.0.6422.5
- Windows 11 Canary 126.0.5425.0</content>
    </entry>
    <entry>
        <id>336309769</id>
        <title>Dialog not announced by screen reader</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336309769"/>
        <updated>2024-04-22T16:50:54.000Z</updated>
        <summary>-</summary>
        <content type="html">OBSERVED RESULTS:

1. Dialog not announced by screen reader when it appears

2. Screenshot: https://screenshot.googleplex.com/BJP4SHW6T43Bw35.png

EXPECTED RESULTS:

- Screen reader should be able to announce to users the presence of the dialog when it appears, ideally conveying the main title/heading and role="dialog"

- Working fine on macOS with VoiceOver but not on CrOS (CVox) and Windows (JAWS and NVDA). Consider setting focus on the dialog container like in macOS behavior.

STEPS TO REPRODUCE:

0. Enable screen reader
1. Visit https://fedcm-button.glitch.me and click the “Sign in with IdP” button
2. A native UI is displayed, observe announcement


ENVIRONMENT DETAILS:

- CrOS Version Dev 125.0.6422.5
- Windows 11 Canary 126.0.5425.0</content>
    </entry>
    <entry>
        <id>336222184</id>
        <title>driver 58#</title>
        <author>
            <name>ec...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222184"/>
        <updated>2024-04-22T16:48:38.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. You got me 
2. 
3. 

# Problem Description
AI

# Summary
driver 58#

# Custom Questions
#### Please select a label to classify your issue:
Cr-UI-I18N - Issue in translating UI to other languages

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>336000646</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336000646"/>
        <updated>2024-04-22T16:47:23.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290561:1290569:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b9983e73-fa82-4ef4-8479-1e37a1641158

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b9983e73-fa82-4ef4-8479-1e37a1641158

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/v8.browsing_mobile/API:duration_avg/browse_social/browse_social_facebook_infinite_scroll_2018
       17.15%: 63.099 -&gt; 73.92 ms

Top 1 affected measurements in android-pixel4_webview-perf:
  - v8.browsing_mobile/API:duration_avg/browse_social/browse_social_facebook_infinite_scroll_2018
       17.15%: 63.099 -&gt; 73.92 ms

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: cbruni@chromium.org, leszeks@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/43e3fc4058146aca7d5ee7a08c55c1d059c0407e..1bc620ed060846435ab337d8f1f12934ac0f381a
  Chromium Commit Position: https://crrev.com/1290560..1290569
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..2eaa4a2641b0d19b79d02a83d1683e60894a6179
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336298058</id>
        <title>Add config_url to IdentityCredential</title>
        <author>
            <name>np...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336298058"/>
        <updated>2024-04-22T16:30:13.000Z</updated>
        <summary>-</summary>
        <content type="html">Allows the caller to know which IDP the token is from in multi IDP</content>
    </entry>
    <entry>
        <id>336297144</id>
        <title>Compose dialog stops updating when result text is deleted</title>
        <author>
            <name>cu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336297144"/>
        <updated>2024-04-22T16:27:00.000Z</updated>
        <summary>-</summary>
        <content type="html">Copy from https://b.corp.google.com/issues/335456645

Deleting all content of a contenteditable div breaks the data binding defined on it. Consequence is that result text stops updating with response text changes in the dialog, showing a broken state to the user.
Saving a state with zero text also breaks assumptions of the existing model, i.e. mojo state being considered invalid if result text is empty, result container being hidden if the result text is empty.
Issue summary
</content>
    </entry>
    <entry>
        <id>336294737</id>
        <title>Launch text deduplication for AX inline text boxes via Finch </title>
        <author>
            <name>ke...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336294737"/>
        <updated>2024-04-22T16:20:35.000Z</updated>
        <summary>-</summary>
        <content type="html">As inline text boxes are not exposed as part of the a11y API, any optimization work to prune duplication should be transparent to the end user.  Launching being a Finch flag in order to be able to revert should an unwanted side effect be discovered. A second benefit to launching via Finch is to be able to track any performance improvements.</content>
    </entry>
    <entry>
        <id>336241886</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336241886"/>
        <updated>2024-04-22T16:16:58.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290561:1290569:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=22f338cb-fb43-4761-8694-ffc8b04c535c

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=22f338cb-fb43-4761-8694-ffc8b04c535c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.parser/css-parser-yui/css-parser-yui.html
       12.38%: 361.1619 -&gt; 316.44245 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.parser/css-parser-yui/css-parser-yui.html
       12.38%: 361.1619 -&gt; 316.44245 unitless

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/43e3fc4058146aca7d5ee7a08c55c1d059c0407e..1bc620ed060846435ab337d8f1f12934ac0f381a
  Chromium Commit Position: https://crrev.com/1290560..1290569
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..2eaa4a2641b0d19b79d02a83d1683e60894a6179
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336222282</id>
        <title>Uplift WebRTC remote-outbound-rtp timestamp fix to M125</title>
        <author>
            <name>ph...@meta.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222282"/>
        <updated>2024-04-22T16:09:59.000Z</updated>
        <summary>-</summary>
        <content type="html">https://webrtc-review.googlesource.com/c/src/+/347780 fixes the timestamp of webrtc's remote-outbound-rtp stats for video which is off by 70 years. This originally landed in M125, the fix is in M126 and needs to be uplifted to M125.</content>
    </entry>
    <entry>
        <id>336161247</id>
        <title>designville Merge et design lovers</title>
        <author>
            <name>bi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336161247"/>
        <updated>2024-04-22T15:57:27.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>336288005</id>
        <title>Investigate color format (RGBA/BGRA?) for Canvas2D-WebGPU interop</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336288005"/>
        <updated>2024-04-22T15:57:15.000Z</updated>
        <summary>-</summary>
        <content type="html">For WebGPU/Canvas2D interop to work without copying, we need to have a color format which is well supported for usage by both Canvas2D and WebGPU.

As things stand today, different places in the stack (Canvas2D, WebGPU, SharedImage) have fixed expectations of either RGBA8-unorm or BGRA8-unorm. They don't always agree, and we generally work around the disagreements with swizzled copies.

This bug tracks investigation of the problem as well as designing a proper fix.

b/40823053 is related; this bug suggests that ANGLE Metal will help unblock this work on Mac.

</content>
    </entry>
    <entry>
        <id>336283309</id>
        <title>Bottom-up group by Frame relies on old engine</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336283309"/>
        <updated>2024-04-22T15:17:40.000Z</updated>
        <summary>-</summary>
        <content type="html">The bottom-up (and similar) tables rely on the old TimelineModel for "group by frame".

This is because it uses EventOnTimelineData.frameId to group events by frame. We need to replace this.</content>
    </entry>
    <entry>
        <id>336164430</id>
        <title>chrome has blocked my gemini api key call from from working</title>
        <author>
            <name>su...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164430"/>
        <updated>2024-04-22T15:02:02.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;Copy from: 'about:version'&gt;
URLs (if applicable) :
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you have tested this issue:
     Safari:
    Firefox:
       Edge:

What steps will reproduce the problem?
(1)on my website i use api calls for an ai chat that api is geminis you just need to interact with the api
(2)
(3)

What is the expected result?
the respnse from bard

What happens instead?
no replies

Please provide any additional information below. Attach a screenshot if possible.

For graphics-related bugs, please save the contents of the about:gpu page to a text file and attach it to this bug report as an attachment.</content>
    </entry>
    <entry>
        <id>335680807</id>
        <title>Chrome FAILS to output audio through UAD Apollo x8p via Thunderbolt 3 (onboard speaker output OK)</title>
        <author>
            <name>em...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335680807"/>
        <updated>2024-04-22T14:44:46.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Macbook Pro 16" M2 Pro 2023, Sonoma 14.2.1 (will not update macOS yet due to reported failure of some 3rd party Logic plugins and iLok)
&gt;&gt;&gt; Before steps below, verify that your laptop will output chrome audio correctly through only the onboard speakers OR headphone jack when standalone.
1. Connect UA Apollo x8p audio interface through Thunderbolt 3 (proper software installation/registration required to use device)
2. Set System Settings &gt; Sound &gt; Output &amp; Input to "Universal Audio Thunderbolt"
3. In "Audio MIDI Setup" Application, for "Universal Audio Thunderbolt" audio device, set outputs L/R to "Virtual Output" 1/2.  
4. In "UAD Console" Application, link Virtual 1 and 2 into a stereo channel, ensure console output is "Mix" and that you are getting audio output from speaker system with other desktop applications (e.g. Spotify/Discord/iTunes/Logic/Ableton, etc.). 
5. Verify that Chrome audio WILL NOT PLAYBACK through the system like every other desktop application. 

# Problem Description
Chrome audio will not playback through Apollo x8p when routed correctly and when all other computer application audio is outputting just fine. 

# Additional Comments
I have cleared browsing data, Reset chrome, restarted laptop, shut down and left overnight then restarted in the morning, etc. Nothing changes this bug. 

# Summary
Chrome FAILS to output audio through UAD Apollo x8p via Thunderbolt 3 (onboard speaker output OK)

# Custom Questions
#### Does this work in other browsers?

Yes - This is just a Chromium problem

#### Contents of chrome://gpu: 

Graphics Feature Status
=======================
*   Canvas: Hardware accelerated
*   Canvas out-of-process rasterization: Enabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Hardware accelerated
*   Multiple Raster Threads: Enabled
*   OpenGL: Enabled
*   Rasterization: Hardware accelerated
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Video Decode: Hardware accelerated
*   Video Encode: Hardware accelerated
*   WebGL: Hardware accelerated
*   WebGL2: Hardware accelerated
*   WebGPU: Hardware accelerated
*   WebNN: Disabled

Driver Bug Workarounds
======================
*   clamp_texture_base_level_and_max_level
*   disable_2d_canvas_auto_flush
*   enable_webgl_timer_query_extensions
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent
*   disabled_extension_GL_MESA_framebuffer_flip_y

Problems Detected
=================
*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   Expose WebGL's disjoint_timer_query extensions on platforms with site isolation:
    (http://crbug.com/808744), (http://crbug.com/870491)
    Applied Workarounds: enable_webgl_timer_query_extensions

*   glFlush error on Mac:
    (http://crbug.com/841755)
    Applied Workarounds: disable_2d_canvas_auto_flush

*   Clamp texture's BASE_LEVEL/MAX_LEVEL for GenerateMipmap:
    (http://crbug.com/913301)
    Applied Workarounds: clamp_texture_base_level_and_max_level

*   Disable GL_MESA_framebuffer_flip_y for desktop GL:
    (http://crbug.com/964010)
    Applied Workarounds: disable(GL_MESA_framebuffer_flip_y)

ANGLE Features
==============
*   allowCompressedFormats (Frontend workarounds): Enabled
    condition: true
    Allow compressed formats

*   alwaysRunLinkSubJobsThreaded (Frontend features) (http://anglebug.com/8417): Disabled
    If true, sub tasks of the link job are always threaded, regardless of
    GL_KHR_parallel_shader_compile

*   cacheCompiledShader (Frontend features) (http://anglebug.com/7036): Disabled
    Enable to cache compiled shaders

*   compileJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Enabled
    condition: true
    If false, parts of the compile job cannot be parallelized

*   disableAnisotropicFiltering (Frontend workarounds): Disabled
    Disable support for anisotropic filtering

*   disableDrawBuffersIndexed (Frontend features) (http://anglebug.com/7724): Disabled
    Disable support for OES_draw_buffers_indexed and EXT_draw_buffers_indexed

*   disableProgramBinary (Frontend features) (http://anglebug.com/5007): Disabled
    Disable support for GL_OES_get_program_binary

*   disableProgramCaching (Frontend features) (http://anglebug.com/1423136): Disabled
    Disables saving programs to the cache

*   disableProgramCachingForTransformFeedback (Frontend workarounds): Disabled
    On some GPUs, program binaries don't contain transform feedback varyings

*   dumpShaderSource (Frontend features) (http://anglebug.com/7760): Disabled
    Write shader source to temp directory

*   dumpTranslatedShaders (Frontend features) (http://anglebug.com/8280): Disabled
    Write translated shaders to temp directory

*   emulatePixelLocalStorage (Frontend features) (http://anglebug.com/7279): Enabled
    condition: true
    Emulate ANGLE_shader_pixel_local_storage using shader images

*   enableCaptureLimits (Frontend features) (http://anglebug.com/5750): Disabled
    Set the context limits like frame capturing was enabled

*   enableProgramBinaryForCapture (Frontend features) (http://anglebug.com/5658): Disabled
    Even if FrameCapture is enabled, enable GL_OES_get_program_binary

*   enableShaderSubstitution (Frontend workarounds) (http://anglebug.com/7761): Disabled
    Check the filesystem for shaders to use instead of those provided through
    glShaderSource

*   enableTranslatedShaderSubstitution (Frontend workarounds) (http://anglebug.com/8280): Disabled
    Check the filesystem for translated shaders to use instead of the shader
    translator's

*   forceDepthAttachmentInitOnClear (Frontend workarounds) (https://anglebug.com/7246): Disabled
    Force depth attachment initialization on clear ops

*   forceGlErrorChecking (Frontend features) (https://issuetracker.google.com/220069903): Disabled
    Force GL error checking (i.e. prevent applications from disabling error
    checking

*   forceInitShaderVariables (Frontend features): Disabled
    Force-enable shader variable initialization

*   forceMinimumMaxVertexAttributes (Frontend features): Disabled
    condition: false
    Force the minimum GL_MAX_VERTEX_ATTRIBS that the context's client version
    allows.

*   forceRobustResourceInit (Frontend features) (http://anglebug.com/6041): Disabled
    Force-enable robust resource init

*   linkJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Disabled
    condition: false
    If false, parts of the link job cannot be parallelized

*   loseContextOnOutOfMemory (Frontend workarounds): Enabled
    condition: true
    Some users rely on a lost context notification if a GL_OUT_OF_MEMORY error
    occurs

*   singleThreadedTextureDecompression (Frontend workarounds): Disabled
    Disables multi-threaded decompression of compressed texture formats

*   uncurrentEglSurfaceUponSurfaceDestroy (Frontend workarounds) (https://issuetracker.google.com/292285899): Disabled
    Make egl surface uncurrent when calling eglDestroySurface(), if the
    surface is still bound by the context of current render thread

*   allowBufferReadWrite (Metal features): Disabled
    The renderer supports buffer read and write in the same shader

*   allowGenMultipleMipsPerPass (Metal features): Enabled
    condition: true
    The renderer supports generating multiple mipmaps per pass

*   allowInlineConstVertexData (Metal features): Disabled
    The renderer supports using inline constant data for small client vertex
    data

*   allowMultisampleStoreAndResolve (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1)
    The renderer supports MSAA store and resolve in the same pass

*   allowRenderpassWithoutAttachment (Metal features): Enabled
    condition: supportsEitherGPUFamily(4, 2)
    Allow creation of render passes without any attachments

*   allowRuntimeSamplerCompareMode (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1)
    The renderer supports changing sampler's compare mode outside shaders

*   allowSamplerCompareGradient (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1) &amp;&amp; !isAMD()
    The renderer supports sample_compare with gradients

*   allowSamplerCompareLod (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1)
    The renderer supports sample_compare with lod

*   allowSeparateDepthStencilBuffers (Metal features): Disabled
    condition: !isOSX &amp;&amp; !isCatalyst &amp;&amp; !isSimulator
    Some Apple platforms such as iOS allows separate depth and stencil
    buffers, whereas others such as macOS don't

*   alwaysPreferStagedTextureUploads (Metal features) (http://crbug.com/1380790): Enabled
    condition: true
    Always prefer to upload texture data via a staging buffer and avoid
    MTLTexture::replaceRegion.

*   alwaysResolveMultisampleRenderBuffers (Metal features) (http://crbug.com/1486094): Enabled
    condition: isARM
    Always automatically resolve MSAA render buffers to single sampled
    texture.

*   alwaysUseManagedStorageModeForBuffers (Metal features) (http://anglebug.com/7544): Disabled
    condition: isAMD()
    Metal buffers can be managed, shared, or private. Sometimes managed is
    fastest

*   alwaysUseSharedStorageModeForBuffers (Metal features) (http://anglebug.com/7544): Disabled
    condition: isIntel()
    Metal buffers can be managed, shared, or private. Sometimes shared is
    fastest

*   alwaysUseStagedBufferUpdates (Metal features) (http://anglebug.com/7544): Disabled
    condition: isAMD()
    Always update buffers by copying the data to a staging buffer and then
    blitting it to the actual buffer

*   avoidStencilTextureSwizzle (Metal features): Disabled
    condition: isIntel()
    Do not create swizzled views of stencil textures

*   compileMetalShaders (Metal features) (http://crbug.com/1423136): Disabled
    Compiles metal shaders using command line tools and saves to BlobCache.
    Requires using --no-sandbox and disabling
    enableParallelMtlLibraryCompilation.

*   copyIOSurfaceToNonIOSurfaceForReadOptimization (Metal workarounds) (http://anglebug.com/7117 http://anglebug.com/7573): Disabled
    condition: isIntel() || isAMD()
    some GPUs are faster to read an IOSurface texture by first copying the
    texture to a non-IOSurface texture

*   copyTextureToBufferForReadOptimization (Metal workarounds) (http://anglebug.com/7117): Disabled
    condition: isAMD()
    some GPUs are faster to read a texture by first copying the texture to a
    buffer

*   disableMetalOnNvidia (Metal features) (http://anglebug.com/8170): Enabled
    condition: true
    NVIDIA GPUs are unsupported due to scarcity of the hardware.

*   disableProgrammableBlending (Metal features) (http://anglebug.com/7279): Disabled
    Disable programmable blending in order to test read_write pixel local
    storage textures

*   disableRWTextureTier2Support (Metal features) (http://anglebug.com/7279): Disabled
    Disable tier2 read_write textures in order to test tier1 support

*   disableRasterOrderGroups (Metal features) (http://anglebug.com/7279): Disabled
    Disable raster order groups in order to test pixel local storage memory
    barriers

*   disableStagedInitializationOfPackedTextureFormats (Metal features) (http://anglebug.com/8092): Disabled
    condition: isIntel() || isAMD()
    Staged GPU upload of some packed texture formats such as RGB9_E5 fail on
    Intel GPUs.

*   emulateAlphaToCoverage (Metal workarounds): Disabled
    condition: isSimulator || !supportsAppleGPUFamily(1)
    Some GPUs ignore alpha-to-coverage when [[sample_mask]] is written

*   emulateTransformFeedback (Metal features): Enabled
    condition: true
    Turn this on to allow transform feedback in Metal using a 2-pass VS for
    GLES3.

*   enableInMemoryMtlLibraryCache (Metal features) (http://crbug.com/1385510): Enabled
    condition: true
    Cache MTLLibrary objects in memory.

*   enableParallelMtlLibraryCompilation (Metal features) (http://crbug.com/1385510): Enabled
    condition: true
    Compile MTLLibrary in multiple threads.

*   flushAfterStreamVertexData (Metal features): Disabled
    condition: isAMDBronzeDriver()
    Flush after calls to StreamVertexData to work around driver bugs.

*   forceBufferGPUStorage (Metal features): Disabled
    condition: false
    On systems that support both buffer' memory allocation on GPU and shared
    memory (such as macOS), force using GPU memory allocation for buffers
    everytime or not.

*   forceD24S8AsUnsupported (Metal features): Disabled
    condition: isAMD()
    Force Depth24Stencil8 format as unsupported.

*   forceNonCSBaseMipmapGeneration (Metal features): Disabled
    condition: isIntel()
    Turn this feature on to disallow Compute Shader based mipmap generation.
    Compute Shader based mipmap generation might cause GPU hang on some older
    iOS devices.

*   generateShareableShaders (Metal features) (http://crbug.com/1423136): Enabled
    condition: true
    Attempts to generate shaders that are shareable. More specifically,
    shaders end up with conditionals that are decided at run time via input
    parameters vs compile time. This results in bigger shaders.

*   hasBaseVertexInstancedDraw (Metal features): Enabled
    condition: isOSX || isCatalyst || supportsAppleGPUFamily(3)
    The renderer supports base vertex instanced draw

*   hasCheapRenderPass (Metal features): Disabled
    condition: (isOSX || isCatalyst) &amp;&amp; !isARM
    The renderer can cheaply break a render pass.

*   hasDepthAutoResolve (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 2)
    The renderer supports MSAA depth auto resolve at the end of render pass

*   hasEvents (Metal features): Enabled
    condition: supportsMetal2_1() &amp;&amp; !isNVIDIA()
    The renderer supports MTL(Shared)Event

*   hasExplicitMemBarrier (Metal features): Disabled
    condition: supportsMetal2_1() &amp;&amp; (isOSX || isCatalyst) &amp;&amp; !isARM
    The renderer supports explicit memory barrier

*   hasNonUniformDispatch (Metal features): Enabled
    condition: isOSX || isCatalyst || supportsAppleGPUFamily(4)
    The renderer supports non uniform compute shader dispatch's group size

*   hasShaderStencilOutput (Metal features): Enabled
    condition: supportsMetal2_1() &amp;&amp; !isIntel() &amp;&amp; !isNVIDIA()
    The renderer supports stencil output from fragment shader

*   hasStencilAutoResolve (Metal features): Enabled
    condition: supportsEitherGPUFamily(5, 2)
    The renderer supports MSAA stencil auto resolve at the end of render pass

*   hasTextureSwizzle (Metal features): Enabled
    condition: supportsMetal2_2() &amp;&amp; supportsEitherGPUFamily(3, 2) &amp;&amp; !isSimulator
    The renderer supports texture swizzle

*   injectAsmStatementIntoLoopBodies (Metal features) (http://crbug.com/1513738): Enabled
    condition: GetMacOSVersion() &gt;= OSVersion(12, 0, 0)
    Inject asm() statements into loop bodies to force all loops to be treated
    as having side effects and not optimized out.

*   intelDisableFastMath (Metal workarounds): Disabled
    condition: isIntel() &amp;&amp; GetMacOSVersion() &lt; OSVersion(12, 0, 0)
    Disable fast math in atan and invariance cases when running below macOS
    12.0

*   intelExplicitBoolCastWorkaround (Metal workarounds): Disabled
    condition: isIntel() &amp;&amp; GetMacOSVersion() &lt; OSVersion(11, 0, 0)
    Insert explicit casts for float/double/unsigned/signed int on macOS 10.15
    with Intel driver

*   limitMaxColorTargetBitsForTesting (Metal features) (http://anglebug.com/7280): Disabled
    Metal iOS has a limit on the number of color target bits per pixel.

*   limitMaxDrawBuffersForTesting (Metal features) (http://anglebug.com/7280): Disabled
    Used to check the backend works when the device's advertized limit is less
    than the code's limit

*   loadMetalShadersFromBlobCache (Metal features) (http://crbug.com/1423136): Disabled
    Loads metal shaders from blob cache. Useful if compile_metal_shaders was
    used to generate shaders.

*   multisampleColorFormatShaderReadWorkaround (Metal workarounds) (http://anglebug.com/7049): Disabled
    condition: isAMD()
    Add shaderRead usage to some multisampled texture formats

*   preTransformTextureCubeGradDerivatives (Metal workarounds): Enabled
    condition: supportsAppleGPUFamily(1)
    Apply a vendor-specific transformation to explicit cubemap derivatives

*   preemptivelyStartProvokingVertexCommandBuffer (Metal features) (http://anglebug.com/7635): Disabled
    condition: isAMD()
    AMD Metal Drivers appear to have a bug this works around

*   preferCpuForBuffersubdata (Metal features) (http://anglebug.com/7544): Disabled
    Makes bufferSubData always update via CPU

*   printMetalShaders (Metal features) (http://crbug.com/1423136): Disabled
    Prints the source to a shader before it's compiled.

*   requireGpuFamily2 (Metal features) (http://anglebug.com/7952): Enabled
    condition: true
    Mac GPU Family 2 is required to support all the features of OpenGL ES 2.0

*   requireMsl21 (Metal features) (http://anglebug.com/8258): Enabled
    condition: true
    MSL 2.1 is required to support all the features of OpenGL ES 2.0

*   rescopeGlobalVariables (Metal features) (http://anglebug.com/8311): Enabled
    condition: !isAMDFireProDevice()
    Rescope global variables that are only used in one function to be
    function-local.

*   uploadDataToIosurfacesWithStagingBuffers (Metal workarounds) (http://anglebug.com/7573): Disabled
    condition: isAMD()
    When uploading data to IOSurface-backed textures, use a staging buffer.

*   useShadowBuffersWhenAppropriate (Metal features) (http://anglebug.com/7544): Disabled
    condition: isIntel()
    On some architectures using a shadow buffer can be faster for certain size
    buffers

*   writeHelperSampleMask (Metal workarounds): Enabled
    condition: supportsAppleGPUFamily(1)
    Some GPUs produce incorrect derivatives unless [[sample_mask]] is written

Dawn Info
=========

&lt;Integrated GPU&gt;  Metal backend - Apple M2 Pro
----------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   msaa-render-to-single-sampled
*   norm16texture-formats
*   multi-planar-format-p010
*   multi-planar-render-targets
*   adapter-properties-memory-heaps
*   shared-texture-memory-io-surface
*   shared-fence-mtl-shared-event

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   metal_enable_vertex_pulling: 
    (https://crbug.com/dawn/480):
    Uses vertex pulling to protect out-of-bounds reads on Metal

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   metal_use_mock_blit_encoder_for_write_timestamp: 
    (https://crbug.com/dawn/1473):
    Add mock blit command to blit encoder when encoding writeTimestamp as
    workaround on Metal.This toggle is enabled by default on Metal backend
    where GPU counters cannot be stored tosampleBufferAttachments on empty
    blit encoder.

*   metal_fill_empty_occlusion_queries_with_zero: 
    (https://crbug.com/dawn/1707):
    Apple GPUs leave stale results in the visibility result buffer instead of
    writing zero if an occlusion query is empty. Workaround this by explicitly
    filling it with zero if there are no draw calls.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

&lt;CPU&gt;  Vulkan backend - SwiftShader Device (LLVM 10.0.0)
--------------------------------------------------------

[WebGPU Status]
---------------
*   Blocklisted

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   adapter-properties-memory-heaps
*   adapter-properties-vk
*   shared-texture-memory-opaque-fd

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Version Information
===================
Data exported              : 2024-04-22T14:43:31.044Z
Chrome version             : Chrome/124.0.6367.62
Operating system           : Mac OS X 14.2.1
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/8771130bd84f76d855ae42fbe02752b03e352f17/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/8771130bd84f76d855ae42fbe02752b03e352f17/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : c884489868f9
2D graphics backend        : Skia/124 e7bf161ff959268a2a2f37530a6ea61c27019d33
Command Line               : /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --flag-switches-begin --flag-switches-end

Driver Information
==================
Initialization time             : 221
In-process GPU                  : false
Passthrough Command Decoder     : true
Sandboxed                       : true
GPU0                            : VENDOR= 0x106b [Google Inc. (Apple)], DEVICE=0x0000 [ANGLE (Apple, ANGLE Metal Renderer: Apple M2 Pro, Version 14.2.1 (Build 23C71))], DRIVER_VENDOR=Apple, DRIVER_VERSION=14.2.1 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
GPU CUDA compute capability major version: 0
Pixel shader version            : 1.00
Vertex shader version           : 1.00
Max. MSAA samples               : 4
Machine model name              : Mac
Machine model version           : 14.10
GL implementation parts         : (gl=egl-angle,angle=metal)
Display type                    : ANGLE_METAL
GL_VENDOR                       : Google Inc. (Apple)
GL_RENDERER                     : ANGLE (Apple, ANGLE Metal Renderer: Apple M2 Pro, Version 14.2.1 (Build 23C71))
GL_VERSION                      : OpenGL ES 2.0.0 (ANGLE 2.1.22782 git hash: c884489868f9)
GL_EXTENSIONS                   : GL_AMD_performance_monitor GL_ANGLE_base_vertex_base_instance GL_ANGLE_base_vertex_base_instance_shader_builtin GL_ANGLE_client_arrays GL_ANGLE_compressed_texture_etc GL_ANGLE_depth_texture GL_ANGLE_framebuffer_blit GL_ANGLE_framebuffer_multisample GL_ANGLE_get_serialized_context_string GL_ANGLE_get_tex_level_parameter GL_ANGLE_instanced_arrays GL_ANGLE_memory_size GL_ANGLE_multi_draw GL_ANGLE_polygon_mode GL_ANGLE_program_cache_control GL_ANGLE_provoking_vertex GL_ANGLE_request_extension GL_ANGLE_robust_client_memory GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 GL_ANGLE_translated_shader_source GL_APPLE_clip_distance GL_ARB_sync GL_CHROMIUM_bind_generates_resource GL_CHROMIUM_bind_uniform_location GL_CHROMIUM_color_buffer_float_rgb GL_CHROMIUM_color_buffer_float_rgba GL_CHROMIUM_copy_texture GL_CHROMIUM_lose_context GL_EXT_base_instance GL_EXT_blend_func_extended GL_EXT_blend_minmax GL_EXT_clip_control GL_EXT_color_buffer_half_float GL_EXT_compressed_ETC1_RGB8_sub_texture GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_depth_clamp GL_EXT_discard_framebuffer GL_EXT_disjoint_timer_query GL_EXT_draw_buffers GL_EXT_float_blend GL_EXT_frag_depth GL_EXT_instanced_arrays GL_EXT_map_buffer_range GL_EXT_multi_draw_indirect GL_EXT_occlusion_query_boolean GL_EXT_polygon_offset_clamp GL_EXT_pvrtc_sRGB GL_EXT_read_format_bgra GL_EXT_robustness GL_EXT_sRGB GL_EXT_shader_texture_lod GL_EXT_texture_compression_bptc GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc_srgb GL_EXT_texture_filter_anisotropic GL_EXT_texture_format_BGRA8888 GL_EXT_texture_mirror_clamp_to_edge GL_EXT_texture_norm16 GL_EXT_texture_rg GL_EXT_texture_storage GL_IMG_texture_compression_pvrtc GL_KHR_debug GL_KHR_parallel_shader_compile GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_sliced_3d GL_NV_fence GL_NV_framebuffer_blit GL_NV_pixel_buffer_object GL_OES_EGL_image GL_OES_EGL_sync GL_OES_compressed_EAC_R11_signed_texture GL_OES_compressed_EAC_R11_unsigned_texture GL_OES_compressed_EAC_RG11_signed_texture GL_OES_compressed_EAC_RG11_unsigned_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_compressed_ETC2_RGB8_texture GL_OES_compressed_ETC2_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture GL_OES_compressed_ETC2_sRGB8_alpha8_texture GL_OES_compressed_ETC2_sRGB8_texture GL_OES_depth24 GL_OES_depth32 GL_OES_depth_texture GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_get_program_binary GL_OES_mapbuffer GL_OES_packed_depth_stencil GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_surfaceless_context GL_OES_texture_3D GL_OES_texture_float GL_OES_texture_float_linear GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_array_object
Disabled Extensions             : GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_MESA_framebuffer_flip_y
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x8261
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Compositor Information
======================
Tile Update Mode: Zero-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
R_16              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_88             : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_1616           : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGR_565           : Software only
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRA_1010102      : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_1010102      : Software only
BGRA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_F16          : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YVU_420           : Software only
YUV_420_BIPLANAR  : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YUVA_420_TRIPLANAR: GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
P010              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING

Display(s) Information
======================
Info                          : Display[1] bounds=[0,0 1728x1117], workarea=[0,38 1728x1079], scale=2, rotation=0, panel_rotation=0 internal detected
Color space (SDR)             : {primaries:P3, transfer:{0.0777*x + 0.0000 if abs(x) &lt; 0.0450 else sign(x)*((0.9495*abs(x) + 0.0495)**2.3955 + 0.0003)}, matrix:RGB, range:FULL}
Buffer format (SDR)           : BGRA_8888
Color space (HDR)             : {primaries:BT709, transfer:SRGB_HDR, matrix:RGB, range:FULL}
Buffer format (HDR)           : RGBA_F16
Color volume                  : {name:'p3', r:[0.6800, 0.3200], g:[0.2650, 0.6900], b:[0.1500, 0.3200], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1.0625
Bits per color component      : 10
Bits per pixel                : 30
Refresh Rate in Hz            : 60

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 16x16 to 4096x4096 pixels
Decode h264 main              : 16x16 to 4096x4096 pixels
Decode h264 extended          : 16x16 to 4096x4096 pixels
Decode h264 high              : 16x16 to 4096x4096 pixels
Decode vp9 profile0           : 16x16 to 4096x4096 pixels
Decode vp9 profile2           : 16x16 to 4096x4096 pixels
Decode hevc main              : 16x16 to 8192x8192 pixels
Decode hevc main 10           : 16x16 to 8192x8192 pixels
Decode hevc main still-picture: 16x16 to 8192x8192 pixels
Decode hevc range extensions  : 16x16 to 8192x8192 pixels
Encoding                      : 
Encode h264 baseline          : 0x0 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 baseline          : 2x2 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 main              : 0x0 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 main              : 2x2 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 high              : 0x0 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 high              : 2x2 to 4096x2304 pixels, and/or 120.000 fps (software codec).

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============
[843:259:0421/230221.750301:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230244.605876:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230246.506196:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230250.096649:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230258.065682:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230303.627861:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230319.637304:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230321.202677:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230337.929985:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230427.190426:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230541.074906:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230805.447091:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/231053.296131:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/231912.183780:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/232200.391224:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/232211.943812:ERROR:shared_image_manager.cc(276)] : SharedImageManager::ProduceOverlay: Trying to Produce a Overlay representation from a non-existent mailbox.
[843:259:0421/232211.943831:ERROR:skia_output_device_buffer_queue.cc(397)] : Invalid mailbox.
[843:259:0421/232211.949938:ERROR:shared_image_manager.cc(276)] : SharedImageManager::ProduceOverlay: Trying to Produce a Overlay representation from a non-existent mailbox.
[843:259:0421/232211.949954:ERROR:skia_output_device_buffer_queue.cc(397)] : Invalid mailbox.
[843:259:0421/232309.415770:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/094302.058173:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095619.030863:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095712.219417:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095735.949768:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095832.006782:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/100541.325473:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/100604.358198:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/100620.250818:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/104330.935640:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336164429</id>
        <title>Set scoreAd and generateBid browser signal lazily</title>
        <author>
            <name>xi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164429"/>
        <updated>2024-04-22T14:41:44.000Z</updated>
        <summary>-</summary>
        <content type="html">The fields of the browser signal argument of Protected Audience scoreAd and generateBid functions should be constructed lazily. The set implementation should be moved to:
content/services/auction_worklet/bidder_lazy_filler.h
content/services/auction_worklet/seller_lazy_filler.cc</content>
    </entry>
    <entry>
        <id>336222182</id>
        <title>css file link in devtool's computed style panel broken</title>
        <author>
            <name>st...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222182"/>
        <updated>2024-04-22T14:36:04.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open any web page with file stylesheet loaded
2. check the devtool, open the computed panel and expand any property
3. 

# Problem Description
css file links used to be anchors, but now they're buttons so button's default style is applied to them.

# Summary
css file link in devtool's computed style panel broken

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
</feed>