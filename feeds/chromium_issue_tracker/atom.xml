<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-15T00:49:59.058Z</updated>
    <entry>
        <id>325307458</id>
        <title>60%/300W of RTX3080 usage when playing YT at 1080p60fps</title>
        <author>
            <name>ga...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307458"/>
        <updated>2024-02-15T00:49:59.058Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Play YT video in fullscreen 
2. Observe very high GPU usage

# Problem Description
Hi there! I'm having a problem which seems to be a bug in Chromium.

Sample video: https://youtu.be/oHISLTg0C44

All tests were done by playing 1080p60fps:

Smallest-size player: https://i.imgur.com/tmjBUaj.png (30% avg load, 40W avg power)
Cinema mode: https://i.imgur.com/St0QL2E.png (23% avg load, 36W avg power)
Full screen: https://i.imgur.com/PBH1tVm.png (58% avg load, 296W avg power (sic!))

What is going on over here?

My specs:

P8Z77-V, i7 3770k @ 4.4Ghz, 16G RAM, Asus TUF RTX 3080 OC, AX860i PSU, two 1920x1200 screens.

I do have updated Nvidia drivers, Chrome and Windows.

I've also tested this on Edge and on Chrom Incognito without any plugins (both show same thing) and Firefox (no such thing there).

# Summary
60%/300W of RTX3080 usage when playing YT at 1080p60fps

# Custom Questions
#### Does this work in other browsers?

Yes - This is just a Chromium problem

# Additional Data
Category: Audio / Video \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325318436</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325318436"/>
        <updated>2024-02-15T00:33:33.402Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259957:1259998:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=41081490-6232-47b3-b502-fa7c5df58470

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=41081490-6232-47b3-b502-fa7c5df58470

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/blink_perf.parser/innerHTML-setter/innerHTML-setter.html
        1.12%: 958.60803 -&gt; 947.8712 

Top 1 affected measurements in android-pixel2-perf:
  - blink_perf.parser/innerHTML-setter/innerHTML-setter.html
        1.12%: 958.60803 -&gt; 947.8712 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325342140</id>
        <title>[TabGroupIndicators] Skip tab group bg highlights and reorder immediately</title>
        <author>
            <name>zh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325342140"/>
        <updated>2024-02-15T00:10:44.152Z</updated>
        <summary>-</summary>
        <content type="html">Skip tab group bg highlights and reorder immediately instead of having to hover for a moment to match desktop
</content>
    </entry>
    <entry>
        <id>325302836</id>
        <title>[shared storage] Implement cross-origin worklet</title>
        <author>
            <name>ya...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302836"/>
        <updated>2024-02-14T23:50:50.658Z</updated>
        <summary>-</summary>
        <content type="html">Explainer: https://github.com/WICG/shared-storage/pull/130
Spec: https://github.com/WICG/shared-storage/pull/131
</content>
    </entry>
    <entry>
        <id>325293261</id>
        <title>saif</title>
        <author>
            <name>sa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293261"/>
        <updated>2024-02-14T23:39:39.521Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;Copy from: 'about:version'&gt;
URLs (if applicable) :
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you have tested this issue:
     Safari:
    Firefox:
       Edge:

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?


Please provide any additional information below. Attach a screenshot if possible.

For graphics-related bugs, please save the contents of the about:gpu page to a text file and attach it to this bug report as an attachment.</content>
    </entry>
    <entry>
        <id>325340107</id>
        <title>[Graphics]: 2 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325340107"/>
        <updated>2024-02-14T23:33:35.176Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259781:1259977:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=72586aed-550f-4e87-b455-7d44780ae78b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=72586aed-550f-4e87-b455-7d44780ae78b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_20000_pixels_per_second
       18.22%: 14.22415 -&gt; 16.8158 unitless

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_20000_pixels_per_second
       18.22%: 14.22415 -&gt; 16.8158 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1259780..1259977
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ee50bc8415cbf6756bfa4cb078155e498c89a4f7..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325331788</id>
        <title>NavigationController::GoToIndex() should return a bool</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331788"/>
        <updated>2024-02-14T23:23:17.130Z</updated>
        <summary>-</summary>
        <content type="html">NavigationController::GoToIndex() should return a bool to signal that a navigation request is successfully created.</content>
    </entry>
    <entry>
        <id>325337396</id>
        <title>[PCCT] Clean up PCCT closing animation logic</title>
        <author>
            <name>ji...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325337396"/>
        <updated>2024-02-14T23:20:26.215Z</updated>
        <summary>-</summary>
        <content type="html">https://g-issues.chromium.org/issues/41491741#comment16 The logic that got complicated over time in PCCT that handles closing animation [1] is not necessary any more.  This bug will track the process of cleaning up the relevant code. 


[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/android/java/src/org/chromium/chrome/browser/customtabs/BaseCustomTabActivity.java;l=637;drc=1701fd99b91dd2ea8deb3d8744a0bbffc36d02fa</content>
    </entry>
    <entry>
        <id>325336527</id>
        <title>external/wpt/html/semantics/interactive-elements/the-dialog-element/dialog-open.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325336527"/>
        <updated>2024-02-14T23:14:21.661Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/html/semantics/interactive-elements/the-dialog-element/dialog-open.html

Harness Failure on Linux Tests (dbg)(1) builder

Test history Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fhtml%2Fsemantics%2Finteractive-elements%2Fthe-dialog-element%2Fdialog-open.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fhtml%2Fsemantics%2Finteractive-elements%2Fthe-dialog-element%2Fdialog-open.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 8.45% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>325331782</id>
        <title>Status bar elements are displayed in white (invisible) after force quitting the app.</title>
        <author>
            <name>vb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331782"/>
        <updated>2024-02-14T23:13:42.643Z</updated>
        <summary>-</summary>
        <content type="html">App Version: 123.0.6301.1 canary

iOS Version: 17.4 beta 3, 17.3, 16.6

Device: iPhone 15 pro max, iPhone 13 Pro, iPhone 14 Pro

URL: 


Steps to reproduce:

  1.   Launch chrome canary.

  2.   Force quit and relaunch the app.

 
Observed results:

Notice that the status bar elements (time, wifi, batter ) are displayed in white color and not visible clearly 


Expected results:

Status bar elements should be displayed clearly in black color.


Note: Once we perform an action like tapping on “Menu” the status bar elements are displayed in black


Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: Firefox: No, Safari: No
Bug reproducible on current stable build (App Version, iOS Version):  No on M121, 122
Bug reproducible on the current beta channel build (App Version, iOS Version): NA

Good Build : 123.0.6263.1 canary 
Revision : b549f65ab435...

Bad Build : 123.0.6264.1
Revision : 9bfdfbcf3983...

Link to video/image: https://drive.google.com/file/d/18_zuasDVqF3c61Dka7fYcThGDQTKVLlw/view?resourcekey=0-P-SQ6ZEIj0hLvf9NAsiB0g
</content>
    </entry>
    <entry>
        <id>325293260</id>
        <title>Infinite loop of transitions when overriding CSS file with local overrides</title>
        <author>
            <name>an...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293260"/>
        <updated>2024-02-14T22:46:56.315Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://www.welt-der-baustoffe.de/produkte/vinyl-designboden/vinylboden-stoneliving-spc-rigid-premium-designvinyl-click-fliese/p/1253755
2. Open devtools
3. Go to sources tabs
4. Enable local overrides
5. Open the CSS file stark.styles.css?v=5a582ff6
6. Right-click on the file name in the sidebar, then select override content
7. The website transitions, and every style, start looping

# Problem Description
Infinite loop of transitions when overriding CSS file with local overrides. After the website starts looping the CSS application, the only way to stop it is to disable local overrides, or to delete the local overridden file.

# Summary
Infinite loop of transitions when overriding CSS file with local overrides

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325331419</id>
        <title>Resource Attribution: Add an algorithm to group resource usage by same-origin frame clusters</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331419"/>
        <updated>2024-02-14T22:44:11.446Z</updated>
        <summary>-</summary>
        <content type="html">This would be useful to find the resources used by subsets of frames on a page that can be treated as a group, or frames from a common host that are shared by many pages. (Google-internal http://shortn/_fBtUS7Ng0s has some more motivation.)</content>
    </entry>
    <entry>
        <id>325331239</id>
        <title>Investigate unexpected large CDM storage file sizes</title>
        <author>
            <name>vp...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331239"/>
        <updated>2024-02-14T22:38:12.046Z</updated>
        <summary>-</summary>
        <content type="html">Chromium Bug counterpart of b/310029102:

We are observing some unreasonably huge reads from the MediaLicenseDatabase during experiments. This is occuring on beta Chrome, so we'd like to get more information in Beta through Chromium mechanisms and also use this bug to file merge requests so we do not use the mechanisms in stable.

</content>
    </entry>
    <entry>
        <id>325329998</id>
        <title>Enable pixel comparison for the b/f animation browser test</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325329998"/>
        <updated>2024-02-14T22:37:35.999Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325330345</id>
        <title>Resource Attribution: Get final CPU usage of a process</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325330345"/>
        <updated>2024-02-14T22:31:44.931Z</updated>
        <summary>-</summary>
        <content type="html">  There isn't a good way to get the process CPU usage after it exits in CPUMeasurementMonitor:

1. Attempts to measure it with GetCumulativeCPUUsage() will fail on some platforms because the process info is already reaped.

2. For these cases the ChildProcessTerminationInfo struct contains a final `cpu_usage` member. This needs to be collected by a RenderProcessHostObserver (either PM's RenderProcessUserData or a dedicated observer). But:

3. MeasureAndDistributeCPUUsage() distributes the process measurements among FrameNodes and by the time the final `cpu_usage` is available, the FrameNodes for the process are often gone already. The reason is that FrameNodes are removed on process exit by another RenderProcessHostObserver, and the observers can fire in any order.

For the record, the call stack that removes a FrameNode is:

```
performance_manager::PerformanceManagerImpl::DeleteNode()
performance_manager::PerformanceManagerTabHelper::RenderFrameDeleted()
content::WebContentsImpl::WebContentsObserverList::NotifyObservers&lt;&gt;()
content::WebContentsImpl::RenderFrameDeleted()
content::RenderFrameHostImpl::RenderFrameDeleted()
content::RenderFrameHostImpl::RenderProcessGone()
content::SiteInstanceGroup::RenderProcessExited() &lt;-- observer
```

So it's not possible to attribute the final CPU usage of a process to its frames without either a refactor of PerformanceManager to keep the FrameNodes alive slightly longer, or keeping a snapshot of the frame topology using FrameContext until after the ChildProcessTerminationInfo is received, and using that snapshot to distribute the measurements.</content>
    </entry>
    <entry>
        <id>325329453</id>
        <title>"url_unittests failed." failure seen on fuchsia-arm64-chromium-branded for the build-123.0.6301.0 of official desktop builder.</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325329453"/>
        <updated>2024-02-14T22:30:40.126Z</updated>
        <summary>-</summary>
        <content type="html">

1 Test Suite(s) failed.

url_unittests failed.

Link to builder:
https://ci.chromium.org/ui/p/chrome/builders/official/fuchsia-arm64-chromium-branded/3935/overview
Link to error log:
https://logs.chromium.org/logs/chrome/buildbucket/cr-buildbucket/8756102674106276097/+/u/url_unittests_on_Ubuntu-20.04/stdout

Requesting dev to take a look.
Thanks</content>
    </entry>
    <entry>
        <id>325328567</id>
        <title>Resource Attribution: implement caching and more flexible scheduling</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325328567"/>
        <updated>2024-02-14T22:18:29.040Z</updated>
        <summary>-</summary>
        <content type="html">The basic Resource Attribution API is done, but only implements queries on a fixed schedule. It should be extended to centrally manage the scheduling of overlapping queries to avoid duplicate work as more clients are added.</content>
    </entry>
    <entry>
        <id>325328331</id>
        <title>Limit the Cast overlay button's visibility</title>
        <author>
            <name>mu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325328331"/>
        <updated>2024-02-14T22:13:46.152Z</updated>
        <summary>-</summary>
        <content type="html">The Cast overlay button is supposed to help users discover the cast button when sites user their custom media controls UI and hide the default media controls.
However, cast buttons should not appear for videos that are used for advertisement or background because users are less likely to cast such content. The current implementation shows the Cast overlay button on certain user actions (tap, click, mouseover, mousemove). On websites using huge background videos, mousemove essentially means always show the cast overlay button. So it makes more sense to only show the cast overlay button on tap and click.</content>
    </entry>
    <entry>
        <id>325316128</id>
        <title>Accessibility Internals can't show the UIA AX Tree</title>
        <author>
            <name>ja...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325316128"/>
        <updated>2024-02-14T22:08:03.016Z</updated>
        <summary>-</summary>
        <content type="html">chrome://accessibility can only show either the blink AX tree or a single platform AX tree. On windows, with native UIA enabled, we support two different views of our AX Tree, IA2/MSAA and UIA at the same time. We should also have the ability for chrome://accessibility to view either tree.</content>
    </entry>
    <entry>
        <id>325310946</id>
        <title>Only fire Devtools issue for 3PCD mitigations if cookie is actually allowed</title>
        <author>
            <name>am...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325310946"/>
        <updated>2024-02-14T22:07:30.209Z</updated>
        <summary>-</summary>
        <content type="html">Context: https://github.com/GoogleChromeLabs/privacy-sandbox-dev-support/issues/252

The Devtools issue "Third-party websites are allowed to read cookies on this page" is fired for all cookies on figma.com because it has 3PCD mitigations enabled. But this message is confusing when the cookies are actually blocked, e.g. if the user sets "Block all third party cookies" in settings.

Changing the behavior to fire issue only when cookies are allowed.</content>
    </entry>
    <entry>
        <id>325310630</id>
        <title>refactor GetStringPiece() to GetStringView().</title>
        <author>
            <name>hj...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325310630"/>
        <updated>2024-02-14T21:57:25.103Z</updated>
        <summary>-</summary>
        <content type="html">follow up for https://crrev.com/c/5277251

refactor GetStringPiece() to GetStringView().

starting point: base/i18n/break_iterator.h

</content>
    </entry>
    <entry>
        <id>325307771</id>
        <title>NOTREACHED() reached when expanding starter pack </title>
        <author>
            <name>yo...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307771"/>
        <updated>2024-02-14T21:50:29.152Z</updated>
        <summary>-</summary>
        <content type="html">Currently, when there is an unknown starter pack ID, we reach a NOTREACHED(). This presents a problem when trying to expand the starter pack since someone running a newer version of chrome (e.g. on Canary) will have the new starter pack entry loaded in their database.  If they then sync that profile to an older version of Chrome (e.g. stable), that entry will persist despite the codebase not recognizing it as a potential ID.</content>
    </entry>
    <entry>
        <id>325324636</id>
        <title>Launch OOPPD</title>
        <author>
            <name>aw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325324636"/>
        <updated>2024-02-14T21:48:38.015Z</updated>
        <summary>-</summary>
        <content type="html">This is the umbrella bug for launching out-of-process print drivers.</content>
    </entry>
    <entry>
        <id>325323464</id>
        <title>Tests are failing: ninja://:blink\\_web\\_tests/%http/tests/navigation/back-to-redirect-with-frame.php%</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325323464"/>
        <updated>2024-02-14T21:40:14.049Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with a test name like: ninja://:blink\\_web\\_tests/%http/tests/navigation/back-to-redirect-with-frame.php%

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/682d4b9c3b69e09fa1ffe93ec3f9e14c

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325320816</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testLocalProfiles_NoRequiredFeatureFlags </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325320816"/>
        <updated>2024-02-14T21:21:50.675Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testLocalProfiles_NoRequiredFeatureFlags would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testLocalProfiles_NoRequiredFeatureFlags
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testLocalProfiles_NoRequiredFeatureFlags
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testLocalProfiles_NoRequiredFeatureFlags

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>325320674</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testAddProfile </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325320674"/>
        <updated>2024-02-14T21:21:48.241Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest#testAddProfile is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testAddProfile
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testAddProfile
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.autofill.settings.AutofillProfilesFragmentTest%23testAddProfile

</content>
    </entry>
    <entry>
        <id>325317377</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325317377"/>
        <updated>2024-02-14T21:19:47.085Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260361:1260387:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f5a6b7e5-f153-4cde-95b7-8a8af8c5b991

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f5a6b7e5-f153-4cde-95b7-8a8af8c5b991

Top 1 regressions (out of 3, with 2 improvements) in this group:
  - ChromiumPerf/android-go-wembley-perf/system_health.common_mobile/cwv:cumulative_layout_shift_avg/browse_search/browse_search_amp_2018
     1280.39%: 0.0102 -&gt; 0.1408 unitless

Top 1 affected measurements in android-go-wembley-perf:
  - system_health.common_mobile/cwv:cumulative_layout_shift_avg/browse_search/browse_search_amp_2018
     1280.39%: 0.0102 -&gt; 0.1408 unitless

Regressions grouped by system_health.common_mobile includes data from the following benchmarks with listed owners:
  system_health.common_mobile: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/a8d160ab123f07449f63d190953ac6d6e68ba562..384e2f064b87280614f39c64d07ee445e9b36671
  Chromium Commit Position: https://crrev.com/1260360..1260387
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/8520176308009ae785173e70261fc20e19e1fc60..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a..2bd4129e910683af471eefad320c755af4376e4a</content>
    </entry>
    <entry>
        <id>325307770</id>
        <title>location.reload() increases memory consumption</title>
        <author>
            <name>hu...@articulate.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307770"/>
        <updated>2024-02-14T21:10:35.109Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Disable all extensions
2. Open a new, empty tab
3. Open the console
4. Execute location.reload()
5. Use DevTools &gt; Memory to verify increased memory consumption
6. Repeat steps 4 and 5 several times to verify that memory consumption can exceed reasonable size

# Problem Description
Memory consumption appears to increase on each call to location.reload(). This can be especially problematic for local web development, as some build tools call location.reload() on each change.

# Summary
location.reload() increases memory consumption

# Additional Data
Category: JavaScript \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325307454</id>
        <title>Triggering a full-screen screenshot while in the new screencast menu crashes Chrome.</title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307454"/>
        <updated>2024-02-14T21:04:21.771Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open Screencast
2. Click 'New screencast'
3. Press [Ctrl] + [Show all windows button] to take a full-screen screenshot while in the new screencast menu

# Problem Description
Triggering a full-screen screenshot while in the new screencast menu crashes Chrome.

# Summary
Triggering a full-screen screenshot while in the new screencast menu crashes Chrome.

# Custom Questions
#### Crashed report ID: 
No, I'm a student and my school Chromebook has crash reporting disabled.

#### How much crashed? 
The whole browser

#### Is it a problem with a plugin?
No - It's the browser itself

# Additional Data
Category: Crashes \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>325313830</id>
        <title>Tests are failing: ninja://:chrome_wpt_tests/external/wpt/webdriver/tests/classic/perform_actions/pointer_mouse.py</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325313830"/>
        <updated>2024-02-14T20:54:56.872Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://:chrome_wpt_tests/external/wpt/webdriver/tests/classic/perform_actions/pointer_mouse.py

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f7989bfed15603b3e8672913e470936f

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325310944</id>
        <title>biblionix why</title>
        <author>
            <name>c5...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325310944"/>
        <updated>2024-02-14T20:52:12.446Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>325302181</id>
        <title>PersonalDataManager::GetCategoryBenefitByInstrumentIdAndCategory() ignores category parameter</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302181"/>
        <updated>2024-02-14T20:49:42.534Z</updated>
        <summary>-</summary>
        <content type="html">PersonalDataManager::GetCategoryBenefitByInstrumentIdAndCategory() ignores the `benefit_category` parameter

This behaviour was changed in https://chromium-review.googlesource.com/c/chromium/src/+/5289198</content>
    </entry>
    <entry>
        <id>325307453</id>
        <title>Tracking bug for prefetch changes</title>
        <author>
            <name>sp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307453"/>
        <updated>2024-02-14T20:42:53.221Z</updated>
        <summary>-</summary>
        <content type="html">For CLs, etc.</content>
    </entry>
    <entry>
        <id>325311644</id>
        <title>Omaha 4 looks at wrong managed preference</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325311644"/>
        <updated>2024-02-14T20:39:24.514Z</updated>
        <summary>-</summary>
        <content type="html">Per documentation here, managed preference for macOS is ChromeManagementEnrollmentToken.
https://support.google.com/chrome/a/answer/9301891?hl=en&amp;sjid=11138235734671463551-NC#zippy=%2Cenroll-browsers-on-macos%2Cenrollment-and-device-tokens-locations

Seems that Omaha 4 looks at EnrollmentToken instead which never exists which in turn causes the app to error out that enrollment token is not  present.</content>
    </entry>
    <entry>
        <id>325307452</id>
        <title>gpu_tests.expected_color_test.ExpectedColorTest.ExpectedColor_MediaRecorderFrom2DCanvas and gpu_tests.pixel_integration_test.PixelIntegrationTest.Pixel_VideoStreamFrom2DAlphaCanvas failed with SkiaGraphite on Windows</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307452"/>
        <updated>2024-02-14T20:32:56.511Z</updated>
        <summary>-</summary>
        <content type="html">CL https://chromium-review.googlesource.com/c/chromium/src/+/5277697 enable SkiaGraphite for some tests on Window.
gpu_tests.trace_integration_test.TraceIntegrationTest.WebGPUCachingTraceTest* failed

failed bot: https://ci.chromium.org/ui/p/chromium/builders/try/win-rel/500325/test-results?sortby=&amp;groupby=

Log:
*** WARNING: Unable to verify checksum for chrome.dll
RetAddr               : Args to Child                                                           : Call Site
00007ff8`2af5ddef     : 000000ce`bb3fbfe0 000000ce`bb3fbfe0 000000ce`bb3fbfe0 00000014`1dd76000 : chrome_elf!crash_reporter::DumpWithoutCrashing+0x37
00007ff8`2d3749bd     : 00007ff8`32fa3148 00000000`00000003 000072e8`002a5c40 000000ce`bb3fc1a0 : chrome!base::debug::DumpWithoutCrashing+0x18f
00007ff8`2664f970     : 00000000`00000001 000000ce`bb3fc358 000000ce`bb3fc370 000000ce`bb3fc2b0 : chrome!gpu::DawnContextProvider::OnError+0x2bf
00007ff8`2664fb6e     : 00000000`00000001 000072e8`00164000 00007ff8`2665f370 00007ff8`32f94413 : chrome!dawn::native::DeviceBase::HandleError+0x41e
00007ff8`2661a0b0     : 000072e8`002c4000 00007ff8`2af97685 00000000`00000000 0000dab7`04bc1443 : chrome!dawn::native::DeviceBase::ConsumeError+0x44
00007ff8`2669466b     : 01004e04`00378080 00000000`00000004 00004e04`00414000 00007ff8`34d13940 : chrome!dawn::native::DeviceBase::ConsumedError+0x5a
00007ff8`265e9cb1     : 00000000`00000000 000072e8`000f4998 00000000`00000000 00000000`00000000 : chrome!dawn::native::QueueBase::APIOnSubmittedWorkDone+0x61
00007ff8`26041e84     : 00000000`00000001 0000dab7`04bc1123 000072e8`0005e500 000000ce`bb3fc870 : chrome!dawn::native::NativeQueueOnSubmittedWorkDone+0x51
00007ff8`25ffb15a     : 00000000`00000000 00000000`00000000 00000000`00000000 00007ff8`25a6bf6a : chrome!skgpu::graphite::DawnQueueManager::onSubmitToGpu+0xc4
00007ff8`25fc7f9c     : 0000dab7`04bc1113 00000000`00000000 00000000`00000000 000000ce`bb3fc8c0 : chrome!skgpu::graphite::QueueManager::submitToGpu+0x10a
00007ff8`2fe0517f     : 00000000`3f800000 00000000`00000000 00000000`00000000 00000000`3f800000 : chrome!skgpu::graphite::Context::submit+0x5c
00007ff8`2fe0157f     : aaaaaaaa`aaaaaaaa aaaaaaaa`aaaaaaaa 00000000`00000000 0000dab7`04bc1f43 : chrome!gpu::CopySharedImageHelper::ReadPixels+0xc41
00007ff8`2fe0319c     : 0000dab7`04bc1fe3 000072e8`002d5880 0000dab7`04bc1f13 000072e8`003969e0 : chrome!gpu::CopySharedImageHelper::ConvertYUVAMailboxesToSkSurface+0x12f5
00007ff8`2fe146f4     : aaaaaaaa`aaaaaa01 0000dab7`04bc1833 000000ce`bb3fd038 000072e8`0004b0f8 : chrome!gpu::CopySharedImageHelper::CopySharedImage+0x13e0
00007ff8`2fe108f0     : 00000000`00000004 00007ff8`2fe0fe9c 000072e8`0079c000 00007ff8`2af97685 : chrome!gpu::raster::RasterDecoderImpl::DoCopySharedImageINTERNAL+0xd4
00007ff8`2fe13b3a     : fffffffc`00000000 000072e8`000fcbc8 000072e8`000fcbb8 00000000`00000000 : chrome!gpu::raster::RasterDecoderImpl::HandleCopySharedImageINTERNALImmediate+0x60
00007ff8`2fe132d5     : 00000000`00991680 000072e8`00075de0 0000dab7`04bc0563 00000000`0000006d : chrome!gpu::raster::RasterDecoderImpl::DoCommandsImpl&lt;0&gt;+0x11a
00007ff8`2cd0890b     : 000072e8`000fcc50 00007ff8`2cd06b88 000072e8`000c61c0 00000000`00000000 : chrome!gpu::raster::RasterDecoderImpl::DoCommands+0x25</content>
    </entry>
    <entry>
        <id>325308055</id>
        <title>[FedCM] Add InputEventActivationProtector to the modal UI</title>
        <author>
            <name>yi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325308055"/>
        <updated>2024-02-14T20:29:44.788Z</updated>
        <summary>-</summary>
        <content type="html">When the UI transits from the loading modal to the single account selector modal, based on the current mock [1], the continue button will appear at the same location as the cancel button from the previous UI.

Based on the feedback from Chrome UX, it's less desirable to change the button layout in this case. To mitigate this issue, we could add an input protector to make sure that the buttons on the modal can only be clickable after x ms, say 500ms similar to this patch[2].

[1] https://docs.google.com/presentation/d/1iURrPakaHgBfQ6mAefKijjxToiTTgBSPz1rtaV0od98/edit#slide=id.g2b48d02ff74_0_5
[2] https://chromium-review.googlesource.com/c/chromium/src/+/4184294</content>
    </entry>
    <entry>
        <id>325310627</id>
        <title>gpu_tests.trace_integration_test.TraceIntegrationTest.SwapChainTraceTest_* failed with SkiaGraphite on Windows</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325310627"/>
        <updated>2024-02-14T20:29:00.102Z</updated>
        <summary>-</summary>
        <content type="html">With CL https://chromium-review.googlesource.com/c/chromium/src/+/5277697

gpu_tests.trace_integration_test.TraceIntegrationTest.SwapChainTraceTest_* failed with SkiaGraphite on Windows

Looks like  it is overlay related problem

Bot: https://ci.chromium.org/ui/p/chromium/builders/try/win-rel/500325/test-results?sortby=&amp;groupby=

Log:

  disable_vp_auto_hdr
  disable_vp_super_resolution
  enable_webgl_timer_query_extensions
  exit_on_context_lost
  unpack_overlapping_rows_separately_unpack_buffer
  disabled_extension__gl__khr_blend_equation_advanced
  disabled_extension__gl__khr_blend_equation_advanced_coherent
  disabled_extension__gl__mesa_framebuffer_flip_y
The following expectations condition tags were generated ['win', 'target-cpu-64', 'graphite-enabled', 'nvidia-0x2184', 'nvidia_lt_31.0.15.4601', 'no-asan', 'angle-d3d11', 'passthrough', 'win10', 'unknown-gpu-0x8c', 'desktop', 'renderer-skia-gl', 'unknown-gpu', 'release', 'release-x64', 'clang-coverage', 'nvidia', 'oop-c']
Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\testing\serially_executed_browser_test_case.py", line 331, in &lt;lambda&gt;
    return lambda self: based_method(self, *args)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\gpu_integration_test.py", line 624, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\trace_integration_test.py", line 628, in RunActualGpuTest
    self._RunActualGpuTraceTest(test_path, params)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\trace_integration_test.py", line 620, in _RunActualGpuTraceTest
    results = getattr(self, prefixed_func_name)(args.category, event_iter,
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\trace_integration_test.py", line 859, in _EvaluateSuccess_CheckSwapChainPath
    self.fail(
AssertionError: Overlay expected but not found: matching DCLayerTree::VisualTree::UpdateOverlay events were not found
</content>
    </entry>
    <entry>
        <id>325309553</id>
        <title>gpu_tests.trace_integration_test.TraceIntegrationTest.WebGPUCachingTraceTest* test failed with SkiaGraphite on Windows</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325309553"/>
        <updated>2024-02-14T20:21:50.560Z</updated>
        <summary>-</summary>
        <content type="html">CL https://chromium-review.googlesource.com/c/chromium/src/+/5277697 enable SkiaGraphite for some tests on Window. 
gpu_tests.trace_integration_test.TraceIntegrationTest.WebGPUCachingTraceTest* failed 

failed bot: https://ci.chromium.org/ui/p/chromium/builders/try/win-rel/500325/test-results?sortby=&amp;groupby=

Seems it is because both WebGPU and Graphite will generate shader cache. It confuses the test.

Log:
```
  unpack_overlapping_rows_separately_unpack_buffer
  disabled_extension__gl__khr_blend_equation_advanced
  disabled_extension__gl__khr_blend_equation_advanced_coherent
  disabled_extension__gl__mesa_framebuffer_flip_y
The following expectations condition tags were generated ['win10', 'clang-coverage', 'unknown-gpu', 'nvidia_lt_31.0.15.4601', 'desktop', 'release', 'passthrough', 'nvidia-0x2184', 'target-cpu-64', 'no-asan', 'oop-c', 'release-x64', 'nvidia', 'renderer-skia-gl', 'unknown-gpu-0x8c', 'angle-d3d11', 'win', 'graphite-enabled']
Exception ignored in: &lt;finalize object at 0x2a93f6867e0; dead&gt;
Traceback (most recent call last):
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\weakref.py", line 566, in __call__
    return info.func(*info.args, **(info.kwargs or {}))
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\tempfile.py", line 817, in _cleanup
    cls._rmtree(name)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\tempfile.py", line 813, in _rmtree
    _shutil.rmtree(name, onerror=onerror)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\shutil.py", line 740, in rmtree
    return _rmtree_unsafe(path, onerror)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\shutil.py", line 613, in _rmtree_unsafe
    _rmtree_unsafe(fullname, onerror)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\shutil.py", line 618, in _rmtree_unsafe
    onerror(os.unlink, fullname, sys.exc_info())
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\tempfile.py", line 805, in onerror
    cls._rmtree(path)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\tempfile.py", line 813, in _rmtree
    _shutil.rmtree(name, onerror=onerror)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\shutil.py", line 740, in rmtree
    return _rmtree_unsafe(path, onerror)
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\shutil.py", line 599, in _rmtree_unsafe
    onerror(os.scandir, path, sys.exc_info())
  File "C:\b\s\w\ir\.task_template_vpython_cache\vpython\store\python_venv-o1ndskgbopr43m7s73b7uod39c\contents\lib\shutil.py", line 596, in _rmtree_unsafe
    with os.scandir(path) as scandir_it:
NotADirectoryError: [WinError 267] The directory name is invalid: 'C:\\b\\s\\w\\itoj_d2qsa\\tmp233s8o6v\\BrowserMetrics\\BrowserMetrics-65CA784D-1670.pma'
Traceback (most recent call last):
  File "C:\b\s\w\ir\third_party\catapult\telemetry\telemetry\testing\serially_executed_browser_test_case.py", line 331, in &lt;lambda&gt;
    return lambda self: based_method(self, *args)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\gpu_integration_test.py", line 624, in _RunGpuTest
    self.RunActualGpuTest(url, args)
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\trace_integration_test.py", line 636, in RunActualGpuTest
    self._RunActualGpuTraceTest(test_path,
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\trace_integration_test.py", line 620, in _RunActualGpuTraceTest
    results = getattr(self, prefixed_func_name)(args.category, event_iter,
  File "C:\b\s\w\ir\content\test\gpu\gpu_tests\trace_integration_test.py", line 1027, in _EvaluateSuccess_CheckWebGPUCacheHits
    self.fail('WebGPU cache hits (%d) is 0 or less than blobs stored (%d).' %
AssertionError: WebGPU cache hits (0) is 0 or less than blobs stored (1).
```
</content>
    </entry>
    <entry>
        <id>325307643</id>
        <title>Remove overdrawn quads should be rounded corner correct</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307643"/>
        <updated>2024-02-14T20:09:01.886Z</updated>
        <summary>-</summary>
        <content type="html">Right now remove overdrawn quads will remove nearly all overdrawn quads post surface aggregation
However this does not play well with aggregation and can lead to 
1 excessive overdraw
2 subtle fast rounded corner artifacts

We should be able to remove overdrawn quads even if they or what occluds them is rounded
We should also try to make the fast rounded corner shader/algorithm work better in these cases.</content>
    </entry>
    <entry>
        <id>325306788</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325306788"/>
        <updated>2024-02-14T20:05:33.331Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260004:1260023:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=924f32f7-a57c-4a5d-b44c-886c9782c8c2

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=924f32f7-a57c-4a5d-b44c-886c9782c8c2

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/stroke_shapes
        4.62%: 19.1601 -&gt; 20.045101 

Top 1 affected measurements in android-pixel4-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/stroke_shapes
        4.62%: 19.1601 -&gt; 20.045101 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325296798</id>
        <title>Clean up some vestigial code in overlay processor </title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325296798"/>
        <updated>2024-02-14T20:05:03.130Z</updated>
        <summary>-</summary>
        <content type="html">'GetPreviousFrameOverlaysBoundingRect' was intended to provide SurfaceAggregator with the area of the current overlays in the case of aggregate only damage. 

https://source.chromium.org/chromium/chromium/src/+/main:components/viz/service/display/overlay_processor_interface.h;l=133-137;drc=1701fd99b91dd2ea8deb3d8744a0bbffc36d02fa</content>
    </entry>
    <entry>
        <id>325306833</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325306833"/>
        <updated>2024-02-14T20:03:49.298Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260040:1260060:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=314aaf4f-fa32-4456-b05d-eb70475198ca

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=314aaf4f-fa32-4456-b05d-eb70475198ca

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/undefined-id-getter/undefined-id-getter.html
       16.65%: 584.0557 -&gt; 486.78775 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/undefined-id-getter/undefined-id-getter.html
       16.65%: 584.0557 -&gt; 486.78775 

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325293258</id>
        <title>Check fence fd signal in exo to avoid verification of sync tokens</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293258"/>
        <updated>2024-02-14T19:59:31.682Z</updated>
        <summary>-</summary>
        <content type="html">VerifySyncTokens is not required if the gpu fence (from the update) has been signaled.
We check this in lacos but it might make much more sense to check this in exo</content>
    </entry>
    <entry>
        <id>325302833</id>
        <title>Unable to find devices through Quick Share</title>
        <author>
            <name>ar...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302833"/>
        <updated>2024-02-14T19:55:29.133Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Connect android phone and windows pc to same wifi network. Enable bluetooh on both devices.
2. Open quick share app on windows 11. Set visibility to everyone
3. Select object to share through android, share via nearby share.
4. Start searching for devices.

# Problem Description
Unable to find devices while attempting to share via quick share. Stuck on 'looking for devices'. Attempted to share between android (non samsung) and windows 11 and vice versa. Also attempted between two androids (one device on android 13 and the other on android 10). Have tried reinstalling on windows. 
Issue seen ever since update to quick share. Had no issues while it was nearby share.  

# Additional Comments
Quick share for android not working

# Summary
Unable to find devices through Quick Share

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>325124070</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 1 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325124070"/>
        <updated>2024-02-14T19:51:51.161Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259724:1259977:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fc22ee2f-180a-484f-b237-7f4700b5c0a1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fc22ee2f-180a-484f-b237-7f4700b5c0a1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_miniclip_2018
       36.74%: 16265032.0 -&gt; 22240227.0 sizeInBytes

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_miniclip_2018
       36.74%: 16265032.0 -&gt; 22240227.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1259723..1259977
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ee50bc8415cbf6756bfa4cb078155e498c89a4f7..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/24ad9112102d4279c2e28ce6f4997ffdb94be9af..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325132961</id>
        <title>[Blink SVG]: 1 regressions in blink_perf.svg</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325132961"/>
        <updated>2024-02-14T19:49:53.104Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259962:1259993:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=420055f4-0be1-47dd-9df1-4a7ecfc364a5

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=420055f4-0be1-47dd-9df1-4a7ecfc364a5
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=420055f4-0be1-47dd-9df1-4a7ecfc364a5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/blink_perf.svg/France/France.html
       10.06%: 16.1 -&gt; 17.72 ms

Top 1 affected measurements in linux-perf:
  - blink_perf.svg/France/France.html
       10.06%: 16.1 -&gt; 17.72 ms

Regressions grouped by blink_perf.svg includes data from the following benchmarks with listed owners:
  blink_perf.svg: fs@opera.com, pdr@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1259961..1259993
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/8520176308009ae785173e70261fc20e19e1fc60..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325302432</id>
        <title>Customer's internal web app stopped work after Chrome browser update.</title>
        <author>
            <name>da...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302432"/>
        <updated>2024-02-14T19:44:36.970Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open Chrome browser from their Windows devices.
2. Attemting to open their internal web based application by browsing https://map4.hma.com
3. They receive the error: "PACS Image URL Unavailable". 

# Problem Description
The customer is reporting that their internal web based stopped to wotk after updating Chrome to ver. 120.* and 121.* 
When attempting to open their web app [https://map4.hma.com] they received the screen error: "PACS Image URL Unavailable". 
The customer confirmed that it was working fine in Chrome ver. 115.0.5790.171, however after updating their Windows devices to ver. 120 or 121 it stopped to work. 

# Additional Comments
As per the customer this still works in Edge v120.

# Summary
Customer's internal web app stopped work after Chrome browser update.

# Custom Questions
#### Example URL: 
https://map4.hma.com

#### Does the problem occur on multiple sites?
No - Just that one URL

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>325291986</id>
        <title>Google Chrome keeps crashing, a lot</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325291986"/>
        <updated>2024-02-14T19:43:58.031Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Restarted my computer. 
2. Made sure my computer software is up to date
3. Cleared my cache, cookies, browsing history, etc.
4. Disabled Google browser extensions
5. Made sure Chrome is up to date
6. Uninstalled Chrome and reinstalled Chrome 

# Problem Description
My Google Chrome started to crash all of a sudden and now every time I use it, it crashes after a while. I have tried to do anything to fix the problem, but nothing is helping. When it crashes I can't click on anything that is related to google chrome and I have to force quit. But it keeps happening over and over again. There doesn't seem to be any site in particular that triggers it. It happens randomly, even though only one page is open. 

# Summary
Google Chrome keeps crashing, a lot

# Additional Data
Category: Crashes \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325299147</id>
        <title>When tapping Tips notification, UI does not display if another modal is already open</title>
        <author>
            <name>sc...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325299147"/>
        <updated>2024-02-14T19:32:31.918Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325133349</id>
        <title>HDR gainmap image causes wrong background color to render when using opacity less than 1</title>
        <author>
            <name>eh...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325133349"/>
        <updated>2024-02-14T19:32:00.788Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open attached test file in Chrome on an HDR screen in macOS (I used version 14.1.2 (23B90))
2. View left box; it shows as gray but should be white

# Problem Description
When you render an HDR image inside of a white container, and that container has opacity less than 1, it will display the wrong color. See attached test file. The box renders as gray on Chrome (incorrect) and white on Safari (correct). Note also if you move the left position of the image so that it overlaps the left box, the color will change to white. See attached test file and video.

# Summary
HDR gainmap image causes wrong background color to render when using opacity less than 1

# Custom Questions
#### Which component does this fall under?
Blink&gt;Image

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
</feed>