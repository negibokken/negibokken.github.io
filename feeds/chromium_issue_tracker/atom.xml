<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-04-22T16:16:58.000Z</updated>
    <entry>
        <id>336241886</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336241886"/>
        <updated>2024-04-22T16:16:58.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290561:1290569:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=22f338cb-fb43-4761-8694-ffc8b04c535c

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=22f338cb-fb43-4761-8694-ffc8b04c535c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.parser/css-parser-yui/css-parser-yui.html
       12.38%: 361.1619 -&gt; 316.44245 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.parser/css-parser-yui/css-parser-yui.html
       12.38%: 361.1619 -&gt; 316.44245 unitless

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/43e3fc4058146aca7d5ee7a08c55c1d059c0407e..1bc620ed060846435ab337d8f1f12934ac0f381a
  Chromium Commit Position: https://crrev.com/1290560..1290569
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2eaa4a2641b0d19b79d02a83d1683e60894a6179..2eaa4a2641b0d19b79d02a83d1683e60894a6179
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/cb3f740525bca608b44fb2a5af2e8ee0190a789c..cb3f740525bca608b44fb2a5af2e8ee0190a789c</content>
    </entry>
    <entry>
        <id>336222282</id>
        <title>Uplift WebRTC remote-outbound-rtp timestamp fix to M125</title>
        <author>
            <name>ph...@meta.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222282"/>
        <updated>2024-04-22T16:09:59.000Z</updated>
        <summary>-</summary>
        <content type="html">https://webrtc-review.googlesource.com/c/src/+/347780 fixes the timestamp of webrtc's remote-outbound-rtp stats for video which is off by 70 years. This originally landed in M125, the fix is in M126 and needs to be uplifted to M125.</content>
    </entry>
    <entry>
        <id>336161247</id>
        <title>designville Merge et design lovers</title>
        <author>
            <name>bi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336161247"/>
        <updated>2024-04-22T15:57:27.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>336288005</id>
        <title>Investigate color format (RGBA/BGRA?) for Canvas2D-WebGPU interop</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336288005"/>
        <updated>2024-04-22T15:57:15.000Z</updated>
        <summary>-</summary>
        <content type="html">For WebGPU/Canvas2D interop to work without copying, we need to have a color format which is well supported for usage by both Canvas2D and WebGPU.

As things stand today, different places in the stack (Canvas2D, WebGPU, SharedImage) have fixed expectations of either RGBA8-unorm or BGRA8-unorm. They don't always agree, and we generally work around the disagreements with swizzled copies.

This bug tracks investigation of the problem as well as designing a proper fix.

b/40823053 is related; this bug suggests that ANGLE Metal will help unblock this work on Mac.

</content>
    </entry>
    <entry>
        <id>336283309</id>
        <title>Bottom-up group by Frame relies on old engine</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336283309"/>
        <updated>2024-04-22T15:17:40.000Z</updated>
        <summary>-</summary>
        <content type="html">The bottom-up (and similar) tables rely on the old TimelineModel for "group by frame".

This is because it uses EventOnTimelineData.frameId to group events by frame. We need to replace this.</content>
    </entry>
    <entry>
        <id>336164430</id>
        <title>chrome has blocked my gemini api key call from from working</title>
        <author>
            <name>su...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164430"/>
        <updated>2024-04-22T15:02:02.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;Copy from: 'about:version'&gt;
URLs (if applicable) :
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you have tested this issue:
     Safari:
    Firefox:
       Edge:

What steps will reproduce the problem?
(1)on my website i use api calls for an ai chat that api is geminis you just need to interact with the api
(2)
(3)

What is the expected result?
the respnse from bard

What happens instead?
no replies

Please provide any additional information below. Attach a screenshot if possible.

For graphics-related bugs, please save the contents of the about:gpu page to a text file and attach it to this bug report as an attachment.</content>
    </entry>
    <entry>
        <id>335680807</id>
        <title>Chrome FAILS to output audio through UAD Apollo x8p via Thunderbolt 3 (onboard speaker output OK)</title>
        <author>
            <name>em...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335680807"/>
        <updated>2024-04-22T14:44:46.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Macbook Pro 16" M2 Pro 2023, Sonoma 14.2.1 (will not update macOS yet due to reported failure of some 3rd party Logic plugins and iLok)
&gt;&gt;&gt; Before steps below, verify that your laptop will output chrome audio correctly through only the onboard speakers OR headphone jack when standalone.
1. Connect UA Apollo x8p audio interface through Thunderbolt 3 (proper software installation/registration required to use device)
2. Set System Settings &gt; Sound &gt; Output &amp; Input to "Universal Audio Thunderbolt"
3. In "Audio MIDI Setup" Application, for "Universal Audio Thunderbolt" audio device, set outputs L/R to "Virtual Output" 1/2.  
4. In "UAD Console" Application, link Virtual 1 and 2 into a stereo channel, ensure console output is "Mix" and that you are getting audio output from speaker system with other desktop applications (e.g. Spotify/Discord/iTunes/Logic/Ableton, etc.). 
5. Verify that Chrome audio WILL NOT PLAYBACK through the system like every other desktop application. 

# Problem Description
Chrome audio will not playback through Apollo x8p when routed correctly and when all other computer application audio is outputting just fine. 

# Additional Comments
I have cleared browsing data, Reset chrome, restarted laptop, shut down and left overnight then restarted in the morning, etc. Nothing changes this bug. 

# Summary
Chrome FAILS to output audio through UAD Apollo x8p via Thunderbolt 3 (onboard speaker output OK)

# Custom Questions
#### Does this work in other browsers?

Yes - This is just a Chromium problem

#### Contents of chrome://gpu: 

Graphics Feature Status
=======================
*   Canvas: Hardware accelerated
*   Canvas out-of-process rasterization: Enabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Hardware accelerated
*   Multiple Raster Threads: Enabled
*   OpenGL: Enabled
*   Rasterization: Hardware accelerated
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Video Decode: Hardware accelerated
*   Video Encode: Hardware accelerated
*   WebGL: Hardware accelerated
*   WebGL2: Hardware accelerated
*   WebGPU: Hardware accelerated
*   WebNN: Disabled

Driver Bug Workarounds
======================
*   clamp_texture_base_level_and_max_level
*   disable_2d_canvas_auto_flush
*   enable_webgl_timer_query_extensions
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent
*   disabled_extension_GL_MESA_framebuffer_flip_y

Problems Detected
=================
*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   Expose WebGL's disjoint_timer_query extensions on platforms with site isolation:
    (http://crbug.com/808744), (http://crbug.com/870491)
    Applied Workarounds: enable_webgl_timer_query_extensions

*   glFlush error on Mac:
    (http://crbug.com/841755)
    Applied Workarounds: disable_2d_canvas_auto_flush

*   Clamp texture's BASE_LEVEL/MAX_LEVEL for GenerateMipmap:
    (http://crbug.com/913301)
    Applied Workarounds: clamp_texture_base_level_and_max_level

*   Disable GL_MESA_framebuffer_flip_y for desktop GL:
    (http://crbug.com/964010)
    Applied Workarounds: disable(GL_MESA_framebuffer_flip_y)

ANGLE Features
==============
*   allowCompressedFormats (Frontend workarounds): Enabled
    condition: true
    Allow compressed formats

*   alwaysRunLinkSubJobsThreaded (Frontend features) (http://anglebug.com/8417): Disabled
    If true, sub tasks of the link job are always threaded, regardless of
    GL_KHR_parallel_shader_compile

*   cacheCompiledShader (Frontend features) (http://anglebug.com/7036): Disabled
    Enable to cache compiled shaders

*   compileJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Enabled
    condition: true
    If false, parts of the compile job cannot be parallelized

*   disableAnisotropicFiltering (Frontend workarounds): Disabled
    Disable support for anisotropic filtering

*   disableDrawBuffersIndexed (Frontend features) (http://anglebug.com/7724): Disabled
    Disable support for OES_draw_buffers_indexed and EXT_draw_buffers_indexed

*   disableProgramBinary (Frontend features) (http://anglebug.com/5007): Disabled
    Disable support for GL_OES_get_program_binary

*   disableProgramCaching (Frontend features) (http://anglebug.com/1423136): Disabled
    Disables saving programs to the cache

*   disableProgramCachingForTransformFeedback (Frontend workarounds): Disabled
    On some GPUs, program binaries don't contain transform feedback varyings

*   dumpShaderSource (Frontend features) (http://anglebug.com/7760): Disabled
    Write shader source to temp directory

*   dumpTranslatedShaders (Frontend features) (http://anglebug.com/8280): Disabled
    Write translated shaders to temp directory

*   emulatePixelLocalStorage (Frontend features) (http://anglebug.com/7279): Enabled
    condition: true
    Emulate ANGLE_shader_pixel_local_storage using shader images

*   enableCaptureLimits (Frontend features) (http://anglebug.com/5750): Disabled
    Set the context limits like frame capturing was enabled

*   enableProgramBinaryForCapture (Frontend features) (http://anglebug.com/5658): Disabled
    Even if FrameCapture is enabled, enable GL_OES_get_program_binary

*   enableShaderSubstitution (Frontend workarounds) (http://anglebug.com/7761): Disabled
    Check the filesystem for shaders to use instead of those provided through
    glShaderSource

*   enableTranslatedShaderSubstitution (Frontend workarounds) (http://anglebug.com/8280): Disabled
    Check the filesystem for translated shaders to use instead of the shader
    translator's

*   forceDepthAttachmentInitOnClear (Frontend workarounds) (https://anglebug.com/7246): Disabled
    Force depth attachment initialization on clear ops

*   forceGlErrorChecking (Frontend features) (https://issuetracker.google.com/220069903): Disabled
    Force GL error checking (i.e. prevent applications from disabling error
    checking

*   forceInitShaderVariables (Frontend features): Disabled
    Force-enable shader variable initialization

*   forceMinimumMaxVertexAttributes (Frontend features): Disabled
    condition: false
    Force the minimum GL_MAX_VERTEX_ATTRIBS that the context's client version
    allows.

*   forceRobustResourceInit (Frontend features) (http://anglebug.com/6041): Disabled
    Force-enable robust resource init

*   linkJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Disabled
    condition: false
    If false, parts of the link job cannot be parallelized

*   loseContextOnOutOfMemory (Frontend workarounds): Enabled
    condition: true
    Some users rely on a lost context notification if a GL_OUT_OF_MEMORY error
    occurs

*   singleThreadedTextureDecompression (Frontend workarounds): Disabled
    Disables multi-threaded decompression of compressed texture formats

*   uncurrentEglSurfaceUponSurfaceDestroy (Frontend workarounds) (https://issuetracker.google.com/292285899): Disabled
    Make egl surface uncurrent when calling eglDestroySurface(), if the
    surface is still bound by the context of current render thread

*   allowBufferReadWrite (Metal features): Disabled
    The renderer supports buffer read and write in the same shader

*   allowGenMultipleMipsPerPass (Metal features): Enabled
    condition: true
    The renderer supports generating multiple mipmaps per pass

*   allowInlineConstVertexData (Metal features): Disabled
    The renderer supports using inline constant data for small client vertex
    data

*   allowMultisampleStoreAndResolve (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1)
    The renderer supports MSAA store and resolve in the same pass

*   allowRenderpassWithoutAttachment (Metal features): Enabled
    condition: supportsEitherGPUFamily(4, 2)
    Allow creation of render passes without any attachments

*   allowRuntimeSamplerCompareMode (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1)
    The renderer supports changing sampler's compare mode outside shaders

*   allowSamplerCompareGradient (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1) &amp;&amp; !isAMD()
    The renderer supports sample_compare with gradients

*   allowSamplerCompareLod (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 1)
    The renderer supports sample_compare with lod

*   allowSeparateDepthStencilBuffers (Metal features): Disabled
    condition: !isOSX &amp;&amp; !isCatalyst &amp;&amp; !isSimulator
    Some Apple platforms such as iOS allows separate depth and stencil
    buffers, whereas others such as macOS don't

*   alwaysPreferStagedTextureUploads (Metal features) (http://crbug.com/1380790): Enabled
    condition: true
    Always prefer to upload texture data via a staging buffer and avoid
    MTLTexture::replaceRegion.

*   alwaysResolveMultisampleRenderBuffers (Metal features) (http://crbug.com/1486094): Enabled
    condition: isARM
    Always automatically resolve MSAA render buffers to single sampled
    texture.

*   alwaysUseManagedStorageModeForBuffers (Metal features) (http://anglebug.com/7544): Disabled
    condition: isAMD()
    Metal buffers can be managed, shared, or private. Sometimes managed is
    fastest

*   alwaysUseSharedStorageModeForBuffers (Metal features) (http://anglebug.com/7544): Disabled
    condition: isIntel()
    Metal buffers can be managed, shared, or private. Sometimes shared is
    fastest

*   alwaysUseStagedBufferUpdates (Metal features) (http://anglebug.com/7544): Disabled
    condition: isAMD()
    Always update buffers by copying the data to a staging buffer and then
    blitting it to the actual buffer

*   avoidStencilTextureSwizzle (Metal features): Disabled
    condition: isIntel()
    Do not create swizzled views of stencil textures

*   compileMetalShaders (Metal features) (http://crbug.com/1423136): Disabled
    Compiles metal shaders using command line tools and saves to BlobCache.
    Requires using --no-sandbox and disabling
    enableParallelMtlLibraryCompilation.

*   copyIOSurfaceToNonIOSurfaceForReadOptimization (Metal workarounds) (http://anglebug.com/7117 http://anglebug.com/7573): Disabled
    condition: isIntel() || isAMD()
    some GPUs are faster to read an IOSurface texture by first copying the
    texture to a non-IOSurface texture

*   copyTextureToBufferForReadOptimization (Metal workarounds) (http://anglebug.com/7117): Disabled
    condition: isAMD()
    some GPUs are faster to read a texture by first copying the texture to a
    buffer

*   disableMetalOnNvidia (Metal features) (http://anglebug.com/8170): Enabled
    condition: true
    NVIDIA GPUs are unsupported due to scarcity of the hardware.

*   disableProgrammableBlending (Metal features) (http://anglebug.com/7279): Disabled
    Disable programmable blending in order to test read_write pixel local
    storage textures

*   disableRWTextureTier2Support (Metal features) (http://anglebug.com/7279): Disabled
    Disable tier2 read_write textures in order to test tier1 support

*   disableRasterOrderGroups (Metal features) (http://anglebug.com/7279): Disabled
    Disable raster order groups in order to test pixel local storage memory
    barriers

*   disableStagedInitializationOfPackedTextureFormats (Metal features) (http://anglebug.com/8092): Disabled
    condition: isIntel() || isAMD()
    Staged GPU upload of some packed texture formats such as RGB9_E5 fail on
    Intel GPUs.

*   emulateAlphaToCoverage (Metal workarounds): Disabled
    condition: isSimulator || !supportsAppleGPUFamily(1)
    Some GPUs ignore alpha-to-coverage when [[sample_mask]] is written

*   emulateTransformFeedback (Metal features): Enabled
    condition: true
    Turn this on to allow transform feedback in Metal using a 2-pass VS for
    GLES3.

*   enableInMemoryMtlLibraryCache (Metal features) (http://crbug.com/1385510): Enabled
    condition: true
    Cache MTLLibrary objects in memory.

*   enableParallelMtlLibraryCompilation (Metal features) (http://crbug.com/1385510): Enabled
    condition: true
    Compile MTLLibrary in multiple threads.

*   flushAfterStreamVertexData (Metal features): Disabled
    condition: isAMDBronzeDriver()
    Flush after calls to StreamVertexData to work around driver bugs.

*   forceBufferGPUStorage (Metal features): Disabled
    condition: false
    On systems that support both buffer' memory allocation on GPU and shared
    memory (such as macOS), force using GPU memory allocation for buffers
    everytime or not.

*   forceD24S8AsUnsupported (Metal features): Disabled
    condition: isAMD()
    Force Depth24Stencil8 format as unsupported.

*   forceNonCSBaseMipmapGeneration (Metal features): Disabled
    condition: isIntel()
    Turn this feature on to disallow Compute Shader based mipmap generation.
    Compute Shader based mipmap generation might cause GPU hang on some older
    iOS devices.

*   generateShareableShaders (Metal features) (http://crbug.com/1423136): Enabled
    condition: true
    Attempts to generate shaders that are shareable. More specifically,
    shaders end up with conditionals that are decided at run time via input
    parameters vs compile time. This results in bigger shaders.

*   hasBaseVertexInstancedDraw (Metal features): Enabled
    condition: isOSX || isCatalyst || supportsAppleGPUFamily(3)
    The renderer supports base vertex instanced draw

*   hasCheapRenderPass (Metal features): Disabled
    condition: (isOSX || isCatalyst) &amp;&amp; !isARM
    The renderer can cheaply break a render pass.

*   hasDepthAutoResolve (Metal features): Enabled
    condition: supportsEitherGPUFamily(3, 2)
    The renderer supports MSAA depth auto resolve at the end of render pass

*   hasEvents (Metal features): Enabled
    condition: supportsMetal2_1() &amp;&amp; !isNVIDIA()
    The renderer supports MTL(Shared)Event

*   hasExplicitMemBarrier (Metal features): Disabled
    condition: supportsMetal2_1() &amp;&amp; (isOSX || isCatalyst) &amp;&amp; !isARM
    The renderer supports explicit memory barrier

*   hasNonUniformDispatch (Metal features): Enabled
    condition: isOSX || isCatalyst || supportsAppleGPUFamily(4)
    The renderer supports non uniform compute shader dispatch's group size

*   hasShaderStencilOutput (Metal features): Enabled
    condition: supportsMetal2_1() &amp;&amp; !isIntel() &amp;&amp; !isNVIDIA()
    The renderer supports stencil output from fragment shader

*   hasStencilAutoResolve (Metal features): Enabled
    condition: supportsEitherGPUFamily(5, 2)
    The renderer supports MSAA stencil auto resolve at the end of render pass

*   hasTextureSwizzle (Metal features): Enabled
    condition: supportsMetal2_2() &amp;&amp; supportsEitherGPUFamily(3, 2) &amp;&amp; !isSimulator
    The renderer supports texture swizzle

*   injectAsmStatementIntoLoopBodies (Metal features) (http://crbug.com/1513738): Enabled
    condition: GetMacOSVersion() &gt;= OSVersion(12, 0, 0)
    Inject asm() statements into loop bodies to force all loops to be treated
    as having side effects and not optimized out.

*   intelDisableFastMath (Metal workarounds): Disabled
    condition: isIntel() &amp;&amp; GetMacOSVersion() &lt; OSVersion(12, 0, 0)
    Disable fast math in atan and invariance cases when running below macOS
    12.0

*   intelExplicitBoolCastWorkaround (Metal workarounds): Disabled
    condition: isIntel() &amp;&amp; GetMacOSVersion() &lt; OSVersion(11, 0, 0)
    Insert explicit casts for float/double/unsigned/signed int on macOS 10.15
    with Intel driver

*   limitMaxColorTargetBitsForTesting (Metal features) (http://anglebug.com/7280): Disabled
    Metal iOS has a limit on the number of color target bits per pixel.

*   limitMaxDrawBuffersForTesting (Metal features) (http://anglebug.com/7280): Disabled
    Used to check the backend works when the device's advertized limit is less
    than the code's limit

*   loadMetalShadersFromBlobCache (Metal features) (http://crbug.com/1423136): Disabled
    Loads metal shaders from blob cache. Useful if compile_metal_shaders was
    used to generate shaders.

*   multisampleColorFormatShaderReadWorkaround (Metal workarounds) (http://anglebug.com/7049): Disabled
    condition: isAMD()
    Add shaderRead usage to some multisampled texture formats

*   preTransformTextureCubeGradDerivatives (Metal workarounds): Enabled
    condition: supportsAppleGPUFamily(1)
    Apply a vendor-specific transformation to explicit cubemap derivatives

*   preemptivelyStartProvokingVertexCommandBuffer (Metal features) (http://anglebug.com/7635): Disabled
    condition: isAMD()
    AMD Metal Drivers appear to have a bug this works around

*   preferCpuForBuffersubdata (Metal features) (http://anglebug.com/7544): Disabled
    Makes bufferSubData always update via CPU

*   printMetalShaders (Metal features) (http://crbug.com/1423136): Disabled
    Prints the source to a shader before it's compiled.

*   requireGpuFamily2 (Metal features) (http://anglebug.com/7952): Enabled
    condition: true
    Mac GPU Family 2 is required to support all the features of OpenGL ES 2.0

*   requireMsl21 (Metal features) (http://anglebug.com/8258): Enabled
    condition: true
    MSL 2.1 is required to support all the features of OpenGL ES 2.0

*   rescopeGlobalVariables (Metal features) (http://anglebug.com/8311): Enabled
    condition: !isAMDFireProDevice()
    Rescope global variables that are only used in one function to be
    function-local.

*   uploadDataToIosurfacesWithStagingBuffers (Metal workarounds) (http://anglebug.com/7573): Disabled
    condition: isAMD()
    When uploading data to IOSurface-backed textures, use a staging buffer.

*   useShadowBuffersWhenAppropriate (Metal features) (http://anglebug.com/7544): Disabled
    condition: isIntel()
    On some architectures using a shadow buffer can be faster for certain size
    buffers

*   writeHelperSampleMask (Metal workarounds): Enabled
    condition: supportsAppleGPUFamily(1)
    Some GPUs produce incorrect derivatives unless [[sample_mask]] is written

Dawn Info
=========

&lt;Integrated GPU&gt;  Metal backend - Apple M2 Pro
----------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   msaa-render-to-single-sampled
*   norm16texture-formats
*   multi-planar-format-p010
*   multi-planar-render-targets
*   adapter-properties-memory-heaps
*   shared-texture-memory-io-surface
*   shared-fence-mtl-shared-event

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   metal_enable_vertex_pulling: 
    (https://crbug.com/dawn/480):
    Uses vertex pulling to protect out-of-bounds reads on Metal

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   metal_use_mock_blit_encoder_for_write_timestamp: 
    (https://crbug.com/dawn/1473):
    Add mock blit command to blit encoder when encoding writeTimestamp as
    workaround on Metal.This toggle is enabled by default on Metal backend
    where GPU counters cannot be stored tosampleBufferAttachments on empty
    blit encoder.

*   metal_fill_empty_occlusion_queries_with_zero: 
    (https://crbug.com/dawn/1707):
    Apple GPUs leave stale results in the visibility result buffer instead of
    writing zero if an occlusion query is empty. Workaround this by explicitly
    filling it with zero if there are no draw calls.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

&lt;CPU&gt;  Vulkan backend - SwiftShader Device (LLVM 10.0.0)
--------------------------------------------------------

[WebGPU Status]
---------------
*   Blocklisted

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   adapter-properties-memory-heaps
*   adapter-properties-vk
*   shared-texture-memory-opaque-fd

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Version Information
===================
Data exported              : 2024-04-22T14:43:31.044Z
Chrome version             : Chrome/124.0.6367.62
Operating system           : Mac OS X 14.2.1
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/8771130bd84f76d855ae42fbe02752b03e352f17/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/8771130bd84f76d855ae42fbe02752b03e352f17/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : c884489868f9
2D graphics backend        : Skia/124 e7bf161ff959268a2a2f37530a6ea61c27019d33
Command Line               : /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --flag-switches-begin --flag-switches-end

Driver Information
==================
Initialization time             : 221
In-process GPU                  : false
Passthrough Command Decoder     : true
Sandboxed                       : true
GPU0                            : VENDOR= 0x106b [Google Inc. (Apple)], DEVICE=0x0000 [ANGLE (Apple, ANGLE Metal Renderer: Apple M2 Pro, Version 14.2.1 (Build 23C71))], DRIVER_VENDOR=Apple, DRIVER_VERSION=14.2.1 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
GPU CUDA compute capability major version: 0
Pixel shader version            : 1.00
Vertex shader version           : 1.00
Max. MSAA samples               : 4
Machine model name              : Mac
Machine model version           : 14.10
GL implementation parts         : (gl=egl-angle,angle=metal)
Display type                    : ANGLE_METAL
GL_VENDOR                       : Google Inc. (Apple)
GL_RENDERER                     : ANGLE (Apple, ANGLE Metal Renderer: Apple M2 Pro, Version 14.2.1 (Build 23C71))
GL_VERSION                      : OpenGL ES 2.0.0 (ANGLE 2.1.22782 git hash: c884489868f9)
GL_EXTENSIONS                   : GL_AMD_performance_monitor GL_ANGLE_base_vertex_base_instance GL_ANGLE_base_vertex_base_instance_shader_builtin GL_ANGLE_client_arrays GL_ANGLE_compressed_texture_etc GL_ANGLE_depth_texture GL_ANGLE_framebuffer_blit GL_ANGLE_framebuffer_multisample GL_ANGLE_get_serialized_context_string GL_ANGLE_get_tex_level_parameter GL_ANGLE_instanced_arrays GL_ANGLE_memory_size GL_ANGLE_multi_draw GL_ANGLE_polygon_mode GL_ANGLE_program_cache_control GL_ANGLE_provoking_vertex GL_ANGLE_request_extension GL_ANGLE_robust_client_memory GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 GL_ANGLE_translated_shader_source GL_APPLE_clip_distance GL_ARB_sync GL_CHROMIUM_bind_generates_resource GL_CHROMIUM_bind_uniform_location GL_CHROMIUM_color_buffer_float_rgb GL_CHROMIUM_color_buffer_float_rgba GL_CHROMIUM_copy_texture GL_CHROMIUM_lose_context GL_EXT_base_instance GL_EXT_blend_func_extended GL_EXT_blend_minmax GL_EXT_clip_control GL_EXT_color_buffer_half_float GL_EXT_compressed_ETC1_RGB8_sub_texture GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_depth_clamp GL_EXT_discard_framebuffer GL_EXT_disjoint_timer_query GL_EXT_draw_buffers GL_EXT_float_blend GL_EXT_frag_depth GL_EXT_instanced_arrays GL_EXT_map_buffer_range GL_EXT_multi_draw_indirect GL_EXT_occlusion_query_boolean GL_EXT_polygon_offset_clamp GL_EXT_pvrtc_sRGB GL_EXT_read_format_bgra GL_EXT_robustness GL_EXT_sRGB GL_EXT_shader_texture_lod GL_EXT_texture_compression_bptc GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc_srgb GL_EXT_texture_filter_anisotropic GL_EXT_texture_format_BGRA8888 GL_EXT_texture_mirror_clamp_to_edge GL_EXT_texture_norm16 GL_EXT_texture_rg GL_EXT_texture_storage GL_IMG_texture_compression_pvrtc GL_KHR_debug GL_KHR_parallel_shader_compile GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_sliced_3d GL_NV_fence GL_NV_framebuffer_blit GL_NV_pixel_buffer_object GL_OES_EGL_image GL_OES_EGL_sync GL_OES_compressed_EAC_R11_signed_texture GL_OES_compressed_EAC_R11_unsigned_texture GL_OES_compressed_EAC_RG11_signed_texture GL_OES_compressed_EAC_RG11_unsigned_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_compressed_ETC2_RGB8_texture GL_OES_compressed_ETC2_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture GL_OES_compressed_ETC2_sRGB8_alpha8_texture GL_OES_compressed_ETC2_sRGB8_texture GL_OES_depth24 GL_OES_depth32 GL_OES_depth_texture GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_get_program_binary GL_OES_mapbuffer GL_OES_packed_depth_stencil GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_surfaceless_context GL_OES_texture_3D GL_OES_texture_float GL_OES_texture_float_linear GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_array_object
Disabled Extensions             : GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_MESA_framebuffer_flip_y
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x8261
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Compositor Information
======================
Tile Update Mode: Zero-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
R_16              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_88             : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_1616           : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGR_565           : Software only
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRA_1010102      : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_1010102      : Software only
BGRA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_F16          : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YVU_420           : Software only
YUV_420_BIPLANAR  : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YUVA_420_TRIPLANAR: GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
P010              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING

Display(s) Information
======================
Info                          : Display[1] bounds=[0,0 1728x1117], workarea=[0,38 1728x1079], scale=2, rotation=0, panel_rotation=0 internal detected
Color space (SDR)             : {primaries:P3, transfer:{0.0777*x + 0.0000 if abs(x) &lt; 0.0450 else sign(x)*((0.9495*abs(x) + 0.0495)**2.3955 + 0.0003)}, matrix:RGB, range:FULL}
Buffer format (SDR)           : BGRA_8888
Color space (HDR)             : {primaries:BT709, transfer:SRGB_HDR, matrix:RGB, range:FULL}
Buffer format (HDR)           : RGBA_F16
Color volume                  : {name:'p3', r:[0.6800, 0.3200], g:[0.2650, 0.6900], b:[0.1500, 0.3200], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1.0625
Bits per color component      : 10
Bits per pixel                : 30
Refresh Rate in Hz            : 60

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 16x16 to 4096x4096 pixels
Decode h264 main              : 16x16 to 4096x4096 pixels
Decode h264 extended          : 16x16 to 4096x4096 pixels
Decode h264 high              : 16x16 to 4096x4096 pixels
Decode vp9 profile0           : 16x16 to 4096x4096 pixels
Decode vp9 profile2           : 16x16 to 4096x4096 pixels
Decode hevc main              : 16x16 to 8192x8192 pixels
Decode hevc main 10           : 16x16 to 8192x8192 pixels
Decode hevc main still-picture: 16x16 to 8192x8192 pixels
Decode hevc range extensions  : 16x16 to 8192x8192 pixels
Encoding                      : 
Encode h264 baseline          : 0x0 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 baseline          : 2x2 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 main              : 0x0 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 main              : 2x2 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 high              : 0x0 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 high              : 2x2 to 4096x2304 pixels, and/or 120.000 fps (software codec).

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============
[843:259:0421/230221.750301:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230244.605876:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230246.506196:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230250.096649:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230258.065682:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230303.627861:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230319.637304:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230321.202677:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230337.929985:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230427.190426:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230541.074906:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/230805.447091:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/231053.296131:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/231912.183780:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/232200.391224:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0421/232211.943812:ERROR:shared_image_manager.cc(276)] : SharedImageManager::ProduceOverlay: Trying to Produce a Overlay representation from a non-existent mailbox.
[843:259:0421/232211.943831:ERROR:skia_output_device_buffer_queue.cc(397)] : Invalid mailbox.
[843:259:0421/232211.949938:ERROR:shared_image_manager.cc(276)] : SharedImageManager::ProduceOverlay: Trying to Produce a Overlay representation from a non-existent mailbox.
[843:259:0421/232211.949954:ERROR:skia_output_device_buffer_queue.cc(397)] : Invalid mailbox.
[843:259:0421/232309.415770:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/094302.058173:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095619.030863:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095712.219417:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095735.949768:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/095832.006782:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the metal library cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/100541.325473:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/100604.358198:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/100620.250818:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.
[843:259:0422/104330.935640:WARNING:angle_platform_impl.cc(49)] : SizedMRUCache.h:150 (TrimCache): Overflowed the render pipeline cache limit of 64 elements, removing the least recently used to make room.

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336164429</id>
        <title>Set scoreAd and generateBid browser signal lazily</title>
        <author>
            <name>xi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164429"/>
        <updated>2024-04-22T14:41:44.000Z</updated>
        <summary>-</summary>
        <content type="html">The fields of the browser signal argument of Protected Audience scoreAd and generateBid functions should be constructed lazily. The set implementation should be moved to:
content/services/auction_worklet/bidder_lazy_filler.h
content/services/auction_worklet/seller_lazy_filler.cc</content>
    </entry>
    <entry>
        <id>336276471</id>
        <title>Bottom-up views do not re-render until resized</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336276471"/>
        <updated>2024-04-22T14:41:11.000Z</updated>
        <summary>-</summary>
        <content type="html">To reproduce (can reproduce on stable and canary):

1. Import a trace (I have been using `web-dev-with-commit.json.gz` from our fixtures)
2. Click on the bottom-up tab.
3. Change the grouping to anything other than "No grouping"
4. Note how the UI goes blank and does not show any events.
5. Resize the split pane in either direction, and see the grouped events appear.

I would expect that we are not correctly re-rendering immediately when the dropdown's value is changing.

@Alina would you mind taking a look at this please? Thanks.</content>
    </entry>
    <entry>
        <id>336222182</id>
        <title>css file link in devtool's computed style panel broken</title>
        <author>
            <name>st...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222182"/>
        <updated>2024-04-22T14:36:04.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open any web page with file stylesheet loaded
2. check the devtool, open the computed panel and expand any property
3. 

# Problem Description
css file links used to be anchors, but now they're buttons so button's default style is applied to them.

# Summary
css file link in devtool's computed style panel broken

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336140984</id>
        <title>Fix timestamp to not be global but relative to the time origin of the associated object.</title>
        <author>
            <name>ar...@intel.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336140984"/>
        <updated>2024-04-22T14:30:27.000Z</updated>
        <summary>-</summary>
        <content type="html">
based on this [spec issue](https://github.com/w3c/compute-pressure/issues/257), the timestamp should be relative to the associated object that created the observer.</content>
    </entry>
    <entry>
        <id>336164427</id>
        <title>Reverse Z-order in SoftwareRendererTest.ClipRoundRect</title>
        <author>
            <name>wd...@opera.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164427"/>
        <updated>2024-04-22T14:13:39.000Z</updated>
        <summary>-</summary>
        <content type="html">The render passes in `SoftwareRendererTest.ClipRoundRect` are appended to the list in reverse order: The smaller, red rect is occluded by the larger, green rect. As a result, the test passes (`output` is green at [2, 2]) even if corners are not rounded at all (checked by removing the `clipRRect()` call, or setting the corner radius to `0`, in `SoftwareRenderer::SetClipRect()`).

Attaching the output produced by the test as grabbed by
```cpp
  SkFILEWStream file("clip-round-rect-original.png");
  SkPngEncoder::Encode(&amp;file, output-&gt;pixmap(), {});
```</content>
    </entry>
    <entry>
        <id>335763900</id>
        <title>[Blink Layout]: 2 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335763900"/>
        <updated>2024-04-22T14:05:16.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290465:1290477:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ebf8046b-b378-4cd4-a48f-65810c301c16

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ebf8046b-b378-4cd4-a48f-65810c301c16

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.layout/large-table-with-collapsed-borders-and-colspans/large-table-with-collapsed-borders-and-colspans.html
       10.83%: 1012.5899999999999 -&gt; 1122.25 ms

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.layout/large-table-with-collapsed-borders-and-colspans/large-table-with-collapsed-borders-and-colspans.html
       10.83%: 1012.5899999999999 -&gt; 1122.25 ms

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: ikilpatrick@chromium.org, kojii@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/b917115e97a1f3e916bba9a3d7c06045fb7171d8..8091b63271af88cbbac594879104fe5f7d4dda65
  Chromium Commit Position: https://crrev.com/1290464..1290477
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/83c84674a19490aaccae706a984743473d79ba40..83c84674a19490aaccae706a984743473d79ba40
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2dd6cf61fdcca1b6f7f660f4bc43296bab6fa702..2dd6cf61fdcca1b6f7f660f4bc43296bab6fa702</content>
    </entry>
    <entry>
        <id>336164424</id>
        <title>fetch.Abort() returns string instead of DOMExceptionError</title>
        <author>
            <name>r1...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164424"/>
        <updated>2024-04-22T13:58:27.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Abort fetch request with a custom error string
2. Catch error
3. Error is a String, not a DOMExceptionError as it was previously

# Problem Description
We have a frontend code like this:

const ABORT_ERROR_TIMEOUT = 'AbortErrorTimeout'
const ABORT_ERROR_MANUAL = 'AbortErrorManual'
...
const controller = new AbortController()
const signal = controller.signal
...
try {
						let timeoutId
						const timeout = 'timeout' in config &amp;&amp; typeof config.timeout === 'number' ? config.timeout : globalConfig.timeout
						if (timeout &gt; 0) {
							timeoutId = setTimeout(() =&gt; controller.abort(ABORT_ERROR_TIMEOUT), timeout)
						}
						res = await fetch(url.toString(), fetchConfig)
						if (timeoutId) clearTimeout(timeoutId)
					} catch (error) {
						if ([ABORT_ERROR_TIMEOUT, ABORT_ERROR_MANUAL].includes(signal?.reason)) {
							error.config = {
								...fetchConfig,
								url: url.toString(),
								baseURL: globalConfig.baseUrl()
							}
						}
						throw error
					}

In the Chrome versions before this commit (https://chromium.googlesource.com/chromium/src/+/72c256e647e213f06a70665482ec436decd33757%5E%21/)
error in the catch was of the type DOMExceptionError, and because of that, it was possible to make error.config = { ... }
After this change error is a String and this code blows up. Is this an intentional thing or a bug?

# Summary
fetch.Abort() returns string instead of DOMExceptionError

# Custom Questions
#### Which component does this fall under?
Blink&gt;Network

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
undefined

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336266714</id>
        <title>Add Performance Panel ignoreList feature to track context menu</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336266714"/>
        <updated>2024-04-22T13:43:26.000Z</updated>
        <summary>-</summary>
        <content type="html">When we designed and planned the track context menu work, we always said that we would integrate the ignoreList functionality into this.

Right now when the ThreadAppender is trying to decide if to show an entry or not, it looks in multiple places and considers:

1. Is the entry on the ignore list?
2. Is the entry hidden due to a user's action in the track context menu? (e.g. hiding all children of a parent)

The problem is that (1) is not integrated into the UI: it is not clear from the performance panel how to add something to the ignore list. We should fix this and allow a user to add a URL to the ignore list easily from the track context menu. We had recent feedback on this: _It would be useful to add scripts to the ignore-list directly from the performance panel as well, similar to the ability to ignore-list through various context menus on sources in the Debugger, Console etc_.

At the very least, we should have an entry in the context menu that takes the user to the ignore list settings page. An even better UI would be to allow the user to add something to the ignore list inline, or at the very least add that event's URL to the ignore list.

Note that we shouldn't store these ignore listed entries in the trace's metadata as the ignoreList is a DevTools-global setting rather than per-panel.</content>
    </entry>
    <entry>
        <id>336164423</id>
        <title>Chrome driver version 123 doesn't kill all processes for the Chrome 124+</title>
        <author>
            <name>ni...@duallab.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164423"/>
        <updated>2024-04-22T13:40:07.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
https://github.com/SeleniumHQ/selenium/issues/13837

# Problem Description
I have issue with CPU when I run my selenide tests on Chrome 124+ version. I've found that some users have the same issue as well
here https://stackoverflow.com/questions/78349830/chromedriver-124-is-only-available-for-beta-and-that-is-giving-error-unable-to and here
https://stackoverflow.com/questions/78364960/selenium-java-script-suddenly-very-slow-on-my-mac-chrome-browser

# Additional Comments
appreciate your work, thanks

# Summary
Chrome driver version 123 doesn't kill all processes for the Chrome 124+

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336267855</id>
        <title>Launch optimization work for handling static animation properties</title>
        <author>
            <name>ke...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336267855"/>
        <updated>2024-04-22T13:38:49.000Z</updated>
        <summary>-</summary>
        <content type="html">The optimization work for static properties in an animation is behind an experimental flag (StaticAnimationOptimizationEnabled). There should be no visible change due to the optimizations.  Launching via Finch in order to be able to revert if a breaking regression is found. </content>
    </entry>
    <entry>
        <id>336266699</id>
        <title>Improve the track configuration UI</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336266699"/>
        <updated>2024-04-22T13:36:00.000Z</updated>
        <summary>-</summary>
        <content type="html">Let's revisit the track configuration UI and consider some improvements based on feedback:

* The pencil button on each track (that is used to enter edit mode) interferes with the muscle memory to click on the track's arrow (to expand and collapse the track). Previously, this track's expand arrow used to be the leftmost button on each track, and users would naturally not pay close attention to the exact click target area. Now it's not the leftmost button anymore, and users accidentally enter edit mode. Perhaps having a single button to enter and exit this edit mode would help?

* I couldn't figure out how to get out of this mode at all for absolutely ages. I was just about to ask in the CPQ chat when eventually I figured out it's the tick button to the right. That seems very counterintuitive to have the enter and exit buttons so far away from each other! Especially as it is so easy to get into this mode as noted by Victor's original comment. And Esc key also doesn't work when maybe it should?

* I'm also not convinced of the need for two modes. Why not just make the pencil icon a drag icon so you don't need the second mode at all, don't need to move track so far to right when entering this mode to fit in three columns of icons. It also de-risk the muscle memory issue as the cost of getting it wrong is negligible (it drags and you try again as opposed to entering a whole new mode, where things shift about and tracks collapse, and that you might not know how to get out of)? I presumed we'd be able to drag lanes up and down and was surprised to find I couldn't.

Some considerations/notes from me:

* In an ideal world, we would support drag and drop, but that would be a large undertaking right now that doesn't feel worth it compared to other priorities.
* I'm pretty convinced that we should at the very least solve the "muscle memory" problem that the pencil icon now sits exactly where the expand/collapse arrow once did.
* The attached design from Yuin seems to solve this: I like the idea of entering this mode and then having a button to confirm out of it, rather than having a myriad of icons on each row. But I will defer to Yuin on the specifics.</content>
    </entry>
    <entry>
        <id>336263731</id>
        <title>When closing tab in group, active tab should be the next one in the group</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336263731"/>
        <updated>2024-04-22T13:11:21.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336222178</id>
        <title>chrome://inspect has duplicate entry when debug webview.</title>
        <author>
            <name>fl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222178"/>
        <updated>2024-04-22T12:25:32.000Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:

Android OS version:

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")
123.0.6312.118
Application: (package name or Play Store URL)

Application version:

Steps to reproduce:

1.navigate url (eg. https://m.youtube.com/)  use Android WebView.
2.open chrome://inspect on PC Browser.
3.will see two target entry.

Expected result:

Actual result:

Did this work before? (last working WebView version, or N/A)

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>336251603</id>
        <title>In Google Meet,From camera and audio controls unable to add create with AI image, throwing an error that "something went wrong"</title>
        <author>
            <name>so...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336251603"/>
        <updated>2024-04-22T11:58:43.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: Ash-chrome  M126 canary #126.0.6427.0/15862.0.0 on Kano(Brya)- x86/lacros64 device
Lacros Version: Lacros Canary  #126.0.6428.0 lacros only]
OS: chrome

Pre-condition: Google Meet

Details:
1)Accounts: Test account
2)Enterprise Enrolled: NA
3)Devices:
Non-Corp device
Kano(Brya)-x86/lacros64 device

4)Repro on Ash-chrome: yes

5)Mode: NA

6)Frequency: Always

Enabled the lacros flags
#lacros-stability = canary
#lacros-only = Enabled

What steps will reproduce the problem?
(1) Launch Lacros
(2)Open Google Meet,In the shelf we can observe "camera and audio controls" click on it
(3)select "Image" and "use any of the theme" which was displayed and observed

What is the expected result?
Theme should get applied for Google Meet

What happens instead?
While applying a theme from camera and audio controls throwing an error "something went wrong"

Note:
1)Issue observed in both ash-chrome and lacros

Issue seems to be a new feature,"Image" option in "camera &amp; audio controls"

Attached screencast for the reference

Attached listnr feedback report
https://listnr.corp.google.com/report/91704591001</content>
    </entry>
    <entry>
        <id>336161239</id>
        <title>Bad mmap address hint </title>
        <author>
            <name>lu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336161239"/>
        <updated>2024-04-22T11:52:54.000Z</updated>
        <summary>-</summary>
        <content type="html">[`OS::GetRandomMmapAddr`](https://github.com/v8/v8/blob/main/src/base/platform/platform-posix.cc#L301) is used to generate an address hint for `mmap`, with the intent of randomizing allocations (as a security measure). Here a random value is truncated and aligned according to the platform's address space.

However, the [46-bits truncation for ARM64](https://github.com/v8/v8/blob/main/src/base/platform/platform-posix.cc#L336) is almost always too high. The default [kconfig setting](https://github.com/torvalds/linux/blob/v6.7/arch/arm64/Kconfig#L1262) for VA_BITS on ARM64 with 4K pages is 39. As a result the hint is ignored and allocations are not being correctly randomized.

We experienced a similar issue on Hermes and recently fixed that: [1](https://github.com/facebook/hermes/commit/d62b96ea44dd8850cd5f6e26d2de842177dc7c22)[2](https://github.com/facebook/hermes/commit/30a9eb6ff35418ec1e478ea94de4481bbdd7a9bc)

Here are some tests showing the issue (ran on an arm64-v8a android emulator).  
Mmap without hint (addresses are predictable):
```
(lldb) p (void*)mmap(0,0x100,0,34,-1,0)
(void *) 0x0000007b4d38e000
(lldb) p (void*)mmap(0,0x100,0,34,-1,0)
(void *) 0x0000007b4d38d000
(lldb) p (void*)mmap(0,0x100,0,34,-1,0)
(void *) 0x0000007b321a5000
```

Mmap with random hint truncated to 46-bit (address are still predictable):
```
(lldb) p/x (((uint64_t)(rand_u32()) &lt;&lt; 32) | ((uint64_t)((rand_u32())))) &amp; 0x3FFFFFFFF000
(uint64_t) 0x00001ccf8614c000
(lldb) p (void*)mmap(0x00001ccf8614c000,0x100,0,34,-1,0)
(void *) 0x0000007b32196000
(lldb) p/x (((uint64_t)(rand_u32()) &lt;&lt; 32) | ((uint64_t)((rand_u32())))) &amp; 0x3FFFFFFFF000
(uint64_t) 0x000029b110409000
(lldb) p (void*)mmap(0x000029b110409000,0x100,0,34,-1,0)
(void *) 0x0000007b32195000
```

Mmap with random hint truncated to 39-bit (hint is used correctly):
```
(lldb) p/x (((uint64_t)(rand_u32()) &lt;&lt; 32) | ((uint64_t)((rand_u32())))) &amp; 0x37FFFFF000
(uint64_t) 0x00000006d923a000
(lldb) p (void*)mmap(0x00000006d923a000,0x100,0,34,-1,0)
(void *) 0x00000006d923a000
(lldb) p/x (((uint64_t)(rand_u32()) &lt;&lt; 32) | ((uint64_t)((rand_u32())))) &amp; 0x37FFFFF000
(uint64_t) 0x000000213268e000
(lldb) p (void*)mmap(0x000000213268e000,0x100,0,34,-1,0)
(void *) 0x000000213268e000
```</content>
    </entry>
    <entry>
        <id>336164422</id>
        <title>Improve/simplify the SVG layout interface</title>
        <author>
            <name>fs...@opera.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164422"/>
        <updated>2024-04-22T11:52:20.000Z</updated>
        <summary>-</summary>
        <content type="html">With `LayoutObject::UpdateLayout()` having been renamed to `UpdateSVGLayout()` and made SVG-specific, we can allow ourselves to tailor it further to SVG needs to remove some architectural warts. Some ideas in this direction:

1) Simplify "downward" propagation of layout state by passing a struct to the function in question (c.f `SVGContentContainer`).

2) Add "upward" propagation of layout state by returning a struct from the function. This should allow, for example, the "boundaries update" (thus making progress on/fixing issue 41003266).</content>
    </entry>
    <entry>
        <id>336247830</id>
        <title>Tests are failing: web_ui_mocha_browser_test.cc(135): Value of: RunTestOnWebContents(web_contents, file, trigger, skip_test_loader)\n Actual: false (Mocha test failur...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336247830"/>
        <updated>2024-04-22T11:40:14.000Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
web_ui_mocha_browser_test.cc(135): Value of: RunTestOnWebContents(web_contents, file, trigger, skip_test_loader)\n  Actual: false (Mocha test failures detected in file: chromeos/settings/os_printing_page/cups_print_server_test.js, triggered by 'mocha.run()')\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/OSSettingsRevampMochaTest.OsPrintingPageCupsPrintServer/RevampParameterized.OsSettingsRevampWayfindingDisabled
- ninja://chrome/test:browser_tests/OSSettingsRevampMochaTest.OsPrintingPageCupsPrintServer/RevampParameterized.OsSettingsRevampWayfindingEnabled
- ninja://chrome/test:browser_tests/OSSettingsMochaTest.OsPrintingPageCupsPrintServer


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5654ecf628dbe871f73d5f093c5b7148

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>336222177</id>
        <title>The target with a specific name in window.open is not causing it to open in the same page (JS).</title>
        <author>
            <name>ga...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222177"/>
        <updated>2024-04-22T11:40:09.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Execute "const newTab = window.open("about:blank", 'New Tab Target');"
2. Execute "newTab.location = 'https://google.com'"
3. Repeat the same process.

# Problem Description
"If I execute 'window.open("about:blank", 'New Tab Target');' more than once, and if it has the same target, the behavior should be that this URL should open on the same page as the target. However, from some updates onwards, this stopped working, and every time it is executed, it opens a new tab instead of just overwriting the content of the previously opened page."

# Summary
The target with a specific name in window.open is not causing it to open in the same page (JS).

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336222176</id>
        <title>Meet bug when compile released chromium</title>
        <author>
            <name>sh...@intel.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222176"/>
        <updated>2024-04-22T11:30:02.000Z</updated>
        <summary>-</summary>
        <content type="html">**NOTE**: Changing the template (or component which causes a template change) may change the access level this bug defaults to and it may no longer be confidential.

Chrome Version: (copy from chrome://version) 126
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...) Windows

What steps will reproduce the problem?
(1) pull latest chromium
(2) compile released chromium
(3) meet error

What is the expected result?
Debug version chromium is ok, but released is not workable

What happens instead?

 ACTION //net/data/ssl/chrome_root_store:gen_root_store_inc(//build/toolchain/win:win_clang_x64)
FAILED: gen/net/data/ssl/chrome_root_store/chrome-root-store-inc.cc gen/net/data/ssl/chrome_root_store/chrome-ev-roots-inc.cc
C:/Users/76422/Desktop/depot_tools/bootstrap-2@3_11_8_chromium_35_bin/python3/bin/python3.exe ../../build/gn_run_binary.py root_store_tool.exe --root-store=../../net/data/ssl/chrome_root_store/root_store.textproto --certs=../../net/data/ssl/chrome_root_store/root_store.certs --write-cpp-root-store=gen/net/data/ssl/chrome_root_store/chrome-root-store-inc.cc --write-cpp-ev-roots=gen/net/data/ssl/chrome_root_store/chrome-ev-roots-inc.cc
root_store_tool.exe failed with exit code 3221225477


Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>336245553</id>
        <title>When I click on omnisearch box and start type "about:blank" persists</title>
        <author>
            <name>kt...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336245553"/>
        <updated>2024-04-22T11:24:34.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  open a new tab
2. click omnisearch bar, type any search term, say "foo"
3. text appears as "fooabout:blank", should be "foo"

# Problem Description
"about:blank" should be removed when I begin typing.

# Summary
When I click on omnisearch box and start type "about:blank" persists

# Additional Data
Category: UI \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336242844</id>
        <title>Hard to find saved groups without search/filter on group names</title>
        <author>
            <name>ro...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336242844"/>
        <updated>2024-04-22T11:10:52.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Click "&gt;&gt;" to expand groups
2. Too many groups there, some of them have similar name: it takes time to find my target group.
3. 

# Problem Description
There is no group name search or filter.  They are not even sorted.  It takes time to find a group among those unsorted names.

# Additional Comments
This is probably a feature request.

# Summary
Hard to find saved groups without search/filter on group names

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>336242247</id>
        <title>Add a sync passphrase promo in the bookmark/readinglist view?</title>
        <author>
            <name>jl...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336242247"/>
        <updated>2024-04-22T11:10:01.000Z</updated>
        <summary>-</summary>
        <content type="html">Related to issue 335234226.

When the user signs in using an account with a sync passphrase, do we want to add a promo in the bookmark/reading list view to invite the user to enter the sync passphrase?</content>
    </entry>
    <entry>
        <id>336241499</id>
        <title>Need to update the bookmark snackbar text</title>
        <author>
            <name>jl...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336241499"/>
        <updated>2024-04-22T11:07:43.000Z</updated>
        <summary>-</summary>
        <content type="html">Related to issue 335234226.

Do we want to update the snackbar text when adding a bookmark, while there mobile bookmarks folder doesn't exist?</content>
    </entry>
    <entry>
        <id>336164421</id>
        <title>DCHECK failure display:none ::before on anchor querying element</title>
        <author>
            <name>fu...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164421"/>
        <updated>2024-04-22T11:07:40.000Z</updated>
        <summary>-</summary>
        <content type="html">Loading this site and resizing triggers DCHECK:

https://kizu.dev/anchor-positioning-experiments/

Reduced case attached.
</content>
    </entry>
    <entry>
        <id>336242616</id>
        <title>No mobile bookmarks folder in the bookmark UI</title>
        <author>
            <name>jl...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336242616"/>
        <updated>2024-04-22T11:06:03.000Z</updated>
        <summary>-</summary>
        <content type="html">Related to issue 335234226.

When the user is signed using an account with a passphrase, and the passphrase has been given, in the UI is account storage is visible, but there is no mobile bookmarks folder.
</content>
    </entry>
    <entry>
        <id>336241885</id>
        <title>tint_wgsl_fuzzer: Ill in tint::fuzz::wgsl::TintInternalCompilerErrorReporter</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336241885"/>
        <updated>2024-04-22T10:45:04.000Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5104296894332928

Fuzzing Engine: libFuzzer
Fuzz Target: tint_wgsl_fuzzer
Job Type: libfuzzer_chrome_asan
Platform Id: linux

Crash Type: Ill
Crash Address: 0x5a0572c2f326
Crash State:
  tint::fuzz::wgsl::TintInternalCompilerErrorReporter
  tint::InternalCompilerError::~InternalCompilerError
  tint::spirv::writer::ASTPrinterFuzzer
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan&amp;range=1230075:1230088

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5104296894332928

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>336238898</id>
        <title>Bookmark with user signed-in and passphrase not entered. Check everything</title>
        <author>
            <name>ar...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336238898"/>
        <updated>2024-04-22T10:39:46.000Z</updated>
        <summary>-</summary>
        <content type="html">When the user is signed-in, our code assume there is an account storage.
However, if the user uses a passphrase and didn’t enter it, it may not be the case. So the entire UI should be checked for bug.

In particular:
* crbug/335234226 causes a crash
* the snackbar message with default folder gives the folder name, which shouldn’t be the case as it’s the default folder
* the folder selector display the name of the section "only on this device" and "in your google account", even allowing to create folder in account storage.</content>
    </entry>
    <entry>
        <id>336239705</id>
        <title>Change disused profiles suggestion logic</title>
        <author>
            <name>ji...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336239705"/>
        <updated>2024-04-22T10:34:40.000Z</updated>
        <summary>-</summary>
        <content type="html">Tracking the efforts of implementing go/autofill-disused-profiles-treatment</content>
    </entry>
    <entry>
        <id>336237398</id>
        <title>Implement backendNodeId resolution in new trace engine</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336237398"/>
        <updated>2024-04-22T10:33:47.000Z</updated>
        <summary>-</summary>
        <content type="html">The old tracing model is able to resolve relevant backendNodeIds for events, and we need to make sure all of those resolutions are implemented in the new engine.

The ones outstanding are: 

- Paint event: has nodeIds
- PaintImage event: has NodeIds
- ScrollLayer event: has NodeIds
- DecodeImage/ResizeImage: find nodeIds from the previous PaintImage event
- DrawLazyPixelRef: node ids from the previous PaintImage event
- MarkLCPCandidate: has nodeIds (but not sure we need this one: we never show this event on the timeline, so why bother?)</content>
    </entry>
    <entry>
        <id>336237374</id>
        <title>Regression: Black screen and Restore apps pop-up is not showing after Chrome restart(Only on Nami)</title>
        <author>
            <name>rn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336237374"/>
        <updated>2024-04-22T10:08:14.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version :126.0.6427.0 (Official Build) (64-bit)/15862.0.0 (Official Build) Canary-channel

OS: Chrome OS

Repro rate: 100%(Only on Nami)

**Steps to reproduce**:
1. Launch Chrome and perform Chrome://restart
2. Observe, Black screen and  Restore apps pop-up is not showing after Chrome restart.

**Actual Result** : Black screen and  Restore apps pop-up is not showing after Chrome restart.

**Expected Result** : Black screen and  Restore apps pop-up should be seen  after Chrome restart.



Note: 
1. Issue reproducible on Canary#126.0.6427.0(15862.0.0)
2. Issue is not reproducible on Stable #123.0.6312.112 (15786.48.0) &amp; #123.0.6312.132 (15786.58.0), Dev #125.0.6422.0 (15857.0.0), Beta #124.0.6367.75 (15823.36.0).
3. **Issue is reproducible on Nami only**
4. Issue is not reproducible on Hatch, Snappy, and Octopus




</content>
    </entry>
    <entry>
        <id>336167333</id>
        <title>Regression: Wrench menu(Three dot menu) on default/fullscreen window is not accessible to select the option Picture-in-Picture</title>
        <author>
            <name>kh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336167333"/>
        <updated>2024-04-22T10:05:39.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version : 125.0.6422.9/15853.8.0 (Official Build) dev (64-bit) -dev-channel


OS: Chrome OS

Repro rate: 100%

Steps to reproduce:

1.Launch chrome

2.Navigate to https://googlechrome.github.io/samples/picture-in-picture/

3.Play video and click on Wrench menu( three dot menu) and observe (both on default window player and full screen player)

**Actual Result** : Wrench menu(Three dot menu) on default/fullscreen window is not accessible to select the option Picture-in-Picture

**Expected Result** : Wrench menu(Three dot menu) on default/fullscreen window should be accessible to select the option Picture-in-Picture

Note:

1.Issue able to repro on Dev#125.0.6422.10/15853.9.0

2.Issue able to repro on Canary#126.0.6427.0/15862.0.0

3.Issue is not able to repro on Stable#123.0.6312.132/1786.58.08, /#123.0.6312.112/15786.48.0




</content>
    </entry>
    <entry>
        <id>336233883</id>
        <title>Chrome image creator ssh connection timeout</title>
        <author>
            <name>le...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336233883"/>
        <updated>2024-04-22T09:55:23.000Z</updated>
        <summary>-</summary>
        <content type="html">We Nest devinfra team has started to work on moving out Nest gWifi cBuildbot from ChromeOS infrastructure. For separating the resources, we created our own GCP project `nest-gwifi-cbuildbot` and reuses [Chrome image creator process](https://go/cros-infra-bot-creation-docs) to create ChromeOS specific images.

This process is expected to be triggered by [bots of atl97 data center](https://chrome-swarming.appspot.com/bot?id=vm91-m0) and ssh to our GCE instance with [this explicit exposure defined on MirACL](https://source.corp.google.com/piper///depot/google3/googledata/security/miracl/resources/gcp/gce/google.com/teams/nest-gwifi-cbuildbot/default/external/allow-tcp-for-atl97.exp), which has already been picked by our VPC firewall rules. Unfortunately, [it still fails with connection timeout error](https://ci.chromium.org/ui/p/infra-internal/builders/prod/ccompute-nest-gwifi-focal64/b8749989427509288481/overview).

Can someone help us to investigate this issue? Thanks.</content>
    </entry>
    <entry>
        <id>336161235</id>
        <title>Performance regression for WebContainer starting Chrome M123.</title>
        <author>
            <name>el...@gmx.net</name>
        </author>
        <link href="https://issues.chromium.org/issues/336161235"/>
        <updated>2024-04-22T09:53:37.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Use Chrome &gt;= 123 and visit https://stackblitz.com/edit/stackblitz-starters-bsxjbd
2. Keep an eye on the terminal at the bottom
3. Notice how slow the dependencies install and how slow the initial build is
4. Scroll through the terminal output and search for `Application bundle generation complete`
5. Notice how it takes (on my machine)  `19.335 seconds`

Now download 122 via `npx @puppeteer/browsers install chrome@122` and re-run the steps above.

Notice how the dependencies install much faster and the build is orders of magnitude faster.

On my end, dependencies are installed in `4s` and the build finishes in `2.990 seconds`.

# Problem Description
As described above, there seems to be a performance regression in Chrome starting from version 123. If I install an older version it's pretty fast. We asked multiple people internally to verify the issue and it seems to be affecting macOS, but hard to tell. So far Linux users haven't reported the issue. Some more information from our folks internally:

```
Mac (Venture 13.5)
13.769 seconds, Chrome Version 123.0.6312.122 (Official Build) (arm64)
18.779 seconds, Chrome Version Version 124.0.6367.62 (Official Build) (arm64)
1.874 seconds, Brave Version 1.64.122 Chromium: 123.0.6312.122 (Official Build) (arm64)
```

```
2.242 seconds, Arc on macOS (M1) - Chromium Engine Version 123.0.6312.123
2.855 seconds, Chrome on macOS (M1) Version 122.0.6261.128
11.028 seconds, Chrome on macOS (M1)  Version 123.0.6312.124
11.320 seconds, Chrome on macOS (M1) Version 124.0.6367.62
```

```
Intel Mac Sonoma 14.1.1
4.543 seconds, Chrome 124.0.6367.62
25.852 seconds, Chrome Canary 126.0.6423.0
4.097 seconds, Brave 1.64.122 (Chromium 123.0.6312.122)
```

```
1.934 seconds, Chrome Version 123.0.6312.123 (Official Build) (arm64) - M3
12.536 seconds, Chrome Version 125.0.6422.3 (Official Build) (arm64) - M3
```

Our customers are reporting the same issue so it's actually affecting quite a lot of people.

# Summary
Performance regression for WebContainer starting Chrome M123.

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336231716</id>
        <title>Regression: Unable to view ‘Show in folder’ option once recording is stopped through ‘Screen capture’. </title>
        <author>
            <name>th...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336231716"/>
        <updated>2024-04-22T09:44:01.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version : 126.0.6427.0 (Official Build) canary (64-bit) / 15862.0.0 (Official Build) canary-channel snappy

OS: Chrome OS

Repro rate : 100%

Steps to reproduce:

1. Launch Chrome and open device settings(Right side bottom panel).
2. Click on ‘Screen Capture’ and record any video.
3. Click on stop recording icon(red icon in the bottom panel)
4. Observe the Screen, Capture pop-up for ‘Show in Folder’ option.

Actual Result :  Unable to view ‘Show in folder’ option once recording is stopped through ‘Screen capture’. 

Expected Result :  Should be able to view ‘Show in folder’ option once recording is stopped through ‘Screen capture’. 

Note:
1. Issue is not reproducible on Stable #123.0.6312.112 (15786.48.0) &amp; #123.0.6312.132 (15786.58.0), Dev #125.0.6422.0 (15857.0.0), Beta #124.0.6367.75 (15823.36.0).
2. Issue is reproducible on Hatch, Nami, Snappy and Octopus

Thank You!


</content>
    </entry>
    <entry>
        <id>335763899</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335763899"/>
        <updated>2024-04-22T09:21:45.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290441:1290448:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=45f0db6a-255c-43bd-9e34-ffded43a49c3

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=45f0db6a-255c-43bd-9e34-ffded43a49c3

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/rendering.mobile/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/many_images
      194.44%: 4.5 -&gt; 13.25 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - rendering.mobile/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/many_images
      194.44%: 4.5 -&gt; 13.25 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/aee555852d57eac401c9067e410f1f89b836d972..b4ed60bae3bba99a0b13cb2ee4c7ee3a874d1952
  Chromium Commit Position: https://crrev.com/1290440..1290448
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/83c84674a19490aaccae706a984743473d79ba40..83c84674a19490aaccae706a984743473d79ba40
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2dd6cf61fdcca1b6f7f660f4bc43296bab6fa702..2dd6cf61fdcca1b6f7f660f4bc43296bab6fa702</content>
    </entry>
    <entry>
        <id>336164418</id>
        <title>When an element is partially out of bounds it is not rendered to PDF at all.</title>
        <author>
            <name>li...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164418"/>
        <updated>2024-04-22T09:18:13.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Use Puppeteer / print to PDF ( description and code: https://github.com/puppeteer/puppeteer/issues/12301 )
2. Set up a Footer Template
3. Make an element 1px out of the document's bounds
4. The whole element is missing from PDF

# Problem Description
I print an HTML to PDF, and attach a custom Footer with some dynamic elements being positioned.
Previously elements out of bounds got partially cut. Recently the elements got completely removed even if they are 1px out of the footer box.

# Summary
When an element is partially out of bounds it is not rendered to PDF at all.

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336225285</id>
        <title>Chrome Mac maps the alt-v to paste. This breaks keyboard mappings that define alt-v. </title>
        <author>
            <name>wi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336225285"/>
        <updated>2024-04-22T09:10:37.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Install a Macintosh keyboard mapping that defines alt-v as a dead-key, for instance: https://wiesmann.codiferes.net/wordpress/things/computer-resources/swiss-french-extended-keyboard
2. Start Chrome 
3. Go to a web-site with a textarea, like https://www.nvaccess.org/files/nvdaTracAttachments/388/textarea.html
4. Copy the word bug into the clipboard.
5. In the empty text area, type alt-v + s

# Problem Description
The expected result should be the character 'š', the alt-v sequence is handled by the keyboard into a dead key with the caron accent, followed by the s character, yielding š. Doing a paste on alt-v is incorrect behaviour on the Mac (this is command + v). 
Notes:
* Safari handles this perfectly.
* The behaviour is inconsistent with text inputs where alt-v is consumed, but does not produce a paste even. 

# Summary
Chrome Mac maps the alt-v to paste. This breaks keyboard mappings that define alt-v. 

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336223560</id>
        <title>Chromeperf regression issues are not being assigned anymore</title>
        <author>
            <name>ol...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336223560"/>
        <updated>2024-04-22T08:43:36.000Z</updated>
        <summary>-</summary>
        <content type="html">See https://g-issues.chromium.org/issues/333756602 for an example.

This is what we would expect to happen (and did happen in the past):

1. Chromeperf creates a performance alert and an associated issue.
2. An automatic bisection job is started.
3. When the job finishes the issue is either assigned the culprit CL author or to the current v8 performance gardener (if no culprit is found or the job fails).

What actually happens is that step (3) never happens.

I suspect that this could be related to the buganizer migration.

The result is that currently most performance alerts (i.e., any alert that does normally not need manual triaging) end up not being fixed.  This issue currently severely impacts V8's ability to deliver on our toplevel OKRs.

I discovered that due to this bug we currently have about 250 unresolved performance issues open pending assignment. see https://g-issues.chromium.org/issues?q=status:open%20componentid:1457332%20V8 . It would be really important for the jobs which already succeeded could be made to retroactively assign issues to the correct owners.

Here is an example of an email we used to get:

```
arquebus via monorail &lt;monorail+v2.3612081410@chromium.org&gt;
Wed, 17 Jan, 19:09
to me

Updates:
    Owner: dmercadier@google.com
    Status: Assigned

Comment #1 on issue 1518564 by arquebus@appspot.gserviceaccount.com: [V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop
https://bugs.chromium.org/p/chromium/issues/detail?id=1518564#c1

Issue update by Arquebus - [Task details]  
To stop Arquebus updating this issue, please add the label "Arquebus-Opt-Out".

-----------------------------------------------
Bisect was not started for some reasons. V8 performance sheriff PTAL

[Task details]: https://arquebus.appspot.com/assigner/v8-performance-sheriffs-auto-assigne-pinpoint-not-started/task/5021682547818496

-- 
You received this message because:
  1. You are the owner of the issue

You may adjust your notification preferences at:
https://bugs.chromium.org/hosting/settings

Reply to this email to add a comment or make updates.
```</content>
    </entry>
    <entry>
        <id>336222925</id>
        <title>Implement RPP metrics via DevTools visual logging</title>
        <author>
            <name>ja...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222925"/>
        <updated>2024-04-22T08:42:05.000Z</updated>
        <summary>-</summary>
        <content type="html">We now have a system in place to add logs to RPP:

https://chromium.googlesource.com/devtools/devtools-frontend/+/HEAD/docs/visual_logging.md

We need to implement this into the Performance panel and improve our understanding of it to best use it for all new features moving forwards.

For now, let's start with some basic logs:

1. When a user records a fresh trace.
2. When a user imports a saved trace.
3. When a user exports a trace to JSON.</content>
    </entry>
    <entry>
        <id>336222072</id>
        <title>Toggle buttons are Not printing While Perform Ctrl+P</title>
        <author>
            <name>su...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336222072"/>
        <updated>2024-04-22T08:36:21.000Z</updated>
        <summary>-</summary>
        <content type="html">deleted</content>
    </entry>
    <entry>
        <id>336164415</id>
        <title>Cyrillic encoding is broken on  F12-&amp;gt;Network-&amp;gt;preview</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336164415"/>
        <updated>2024-04-22T08:35:52.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. F12-&gt;Network-&gt;preview
2. write on PHP code var_dump('Русский текст');
3. see preview

# Problem Description
Cyrillic encoding is broken. Please fix me

# Summary
Cyrillic encoding is broken on  F12-&gt;Network-&gt;preview

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336167328</id>
        <title>The order of fields is inconsistent with the original data in network preview</title>
        <author>
            <name>je...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336167328"/>
        <updated>2024-04-22T08:20:07.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. open dev tools switch to network tab
2. click a request and click preview tab
3. look the response string and preview

# Problem Description
for example:
response string is { id: 1, create_time: "2024-04-22T07:23:37.347Z", update_time: "2024-04-22T07:23:37.347Z" }
preview object is { create_time: "2024-04-22T07:23:37.347Z", id: 1, update_time: "2024-04-22T07:23:37.347Z" }

# Summary
The order of fields is inconsistent with the original data in network preview

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336152476</id>
        <title>Dark blue Hightlight color after upgrading to latest version</title>
        <author>
            <name>vi...@blaze.today</name>
        </author>
        <link href="https://issues.chromium.org/issues/336152476"/>
        <updated>2024-04-22T08:15:51.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Create a line like &lt;div style="background: Highlight"&gt;lorem ipsum&lt;/div&gt;

# Problem Description
It used to be light blue same as regular text. After the upgrade it turned into this darkblue.

# Summary
Dark blue Hightlight color after upgrading to latest version

# Custom Questions
#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
</feed>