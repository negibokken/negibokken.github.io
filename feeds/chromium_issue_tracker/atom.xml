<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.298Z</updated>
    <entry>
        <id>335232045</id>
        <title>HTML harmfully deleted </title>
        <author>
            <name>ai...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335232045"/>
        <updated>1970-01-01T00:28:33.298Z</updated>
        <summary>-</summary>
        <content type="html">https://drive.google.com/file/d/1Z8MPN0qQ13E288bq8s2CSAcxuE88iEVg/view?usp=drivesdk
HTTPS://wwww.aibyjeffreyandgecompactron.com
4495 Main St suite 13 7 5
BUFFALO,NY 14226
AI delete all HTML FILES TO SUPERCOMPUTER FOR DELETE @INTEL.COM
</content>
    </entry>
    <entry>
        <id>335089891</id>
        <title>CHECK failure: current_offset == offset_end in shape_result.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335089891"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4843838389551104

Fuzzer: inferno_layout_test_unmodified
Job Type: linux_debug_content_shell_drt
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  current_offset == offset_end in shape_result.cc
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_debug_content_shell_drt&amp;range=1208686:1208689

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4843838389551104

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>335272907</id>
        <title>Price drop alerts over triggered.</title>
        <author>
            <name>wu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335272907"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Subscribe "Orijen Six Fish Dry Cat Food 12 lbs"
2. Wait for the alert email to be over triggered. 

# Problem Description
I keep receiving email like this:
https://screenshot.googleplex.com/83dEwuaG6MD7wvN
But the price did not change, the 4lb product costs $31.99 and the 12lb product costs $72.00.

# Summary
Price drop alerts over triggered.

# Custom Questions
#### Please select a label to classify your issue:
Type-Feature - Request for new or improved features

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>334965868</id>
        <title>Updated color of new tab group gets overridden back to original color when user edits title</title>
        <author>
            <name>ba...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334965868"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. (user) create new tab group
2. (extension code) in `chrome.tabGroup.onCreated` event, update the color of newly created tab group
3. (user) in the tab group editor popup, update the title of the tab group
You will see the tab group's color change back to the original color

# Problem Description
When a new tab group is created, if you update the color if it in the `chrome.tabGroup.onCreated` event, then the user edits the title of the tab group in the editor popup, the color of the tab group gets reset back to its original color.

I see two potential solutions for this, and as a Chrome extension developer and a user, I think the first solution is better:
1. properly fix this issue (i.e. don't override the color back to the original)
2. don't allow extensions to update tab groups while the tab group editor popup is open (I dont think this is necessary nor useful)

I have attached a video demo and a zip file of a demo extension to test this out. Here is the code in that extension:
`
background.js

// steps to reproduce the bug:
// 1. create a new tab group
// 2. in the tab group editor popup, update the title of the tab group
// you will see the tab group's color change back to the original color
chrome.tabGroups.onCreated.addListener(async (tabGroup) =&gt; {
  const originalColor = tabGroup.color;
  console.log("originalColor", originalColor)
  let newColorToSet = "orange";
  if(originalColor === newColorToSet) {
    newColorToSet = "blue";
  }
  await chrome.tabGroups.update(tabGroup.id, { color: newColorToSet });
  // editing the title of the tab group in the editor popup will now change the color back to the originalColor
});
`

# Summary
Updated color of new tab group gets overridden back to original color when user edits title

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>335272896</id>
        <title>Latency issue</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335272896"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html">Investigate the page load regression https://uma.googleplex.com/p/chrome/variations?sid=9b369f9e4c47b85b2ce97e905f86c6ef

One hypothesis on how to address the page load regression is to render the entry point after the page finished loading for both entry points (overflow menu and MTB). 

This would (most likely) eliminate the regression as there would not be a chance of impacting the page load (as the page load would happen before our entry point comes to play) </content>
    </entry>
    <entry>
        <id>335271981</id>
        <title>Tests are failing: interactive_test_internal.cc(174): Failed\nInteractive test failed on step 6 (ScreenshotSurface( \"EntireAppMenu\", \"5406870\" )) with reason kFai...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335271981"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
interactive_test_internal.cc(174): Failed\nInteractive test failed on step 6 (ScreenshotSurface( \"EntireAppMenu\", \"5406870\" )) with reason kFailedForTesting; step type kShown; id ElementIdentifier AppMenuModel::kMoreToolsMenuItem; element 00003C8801E81A80

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/InteractionTestUtilBrowserTest.CompareScreenshot_Surface


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/8fca264f85b48ed34b75331dcb38762b

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>335272078</id>
        <title>Swarming tasks in Pinpoint pool do not run in FIFO order</title>
        <author>
            <name>su...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335272078"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html">We recently had a huge congestion of swarming tasks on one of our Pinpoint device pools. During that time, our oncall (eduardoyap@) noticed that swarming tasks were not executing in FIFO order. The attached screenshot shows the task history of a specific mac-m1 device. It shows how tasks are running in a random order. This is a significant issue for us because we need tasks to execute in FIFO to minimize our false positive rates on Pinpoint. 

The swarming RBE scheduler migration doc suggests everything should still run in FIFO by default: https://docs.google.com/document/d/1pxM75HdUwV2pApbGHjpMsEoHW2yhyZH6dZAicw4ks3g/edit?tab=t.0#heading=h.t7fqsvcapjsc

Unfortunately this incident took place a few days ago so it's hard to observe in real time. Here is the link to the device: https://chrome-swarming.appspot.com/tasklist?c=name&amp;c=createdTs&amp;c=pendingTime&amp;c=duration&amp;c=bot&amp;c=pool-tag&amp;c=priority-tag&amp;c=state&amp;d=desc&amp;f=mac_model-tag%3AMacmini9%2C1&amp;f=os-tag%3AMac&amp;f=cpu-tag%3Aarm&amp;f=pool-tag%3Achrome.tests.pinpoint&amp;f=id-tag%3Amac-58-h7&amp;s=createdTs

Questions: 
- Should we expect FIFO?
- If yes, is this something that can be fixed in the short term? 
- If not, is there an ordering mechanism of any kind? We can live without FIFO and just accept a higher false positive rate but if there is some other type of ordering mechanism we can take advantage of, maybe we can guarantee tasks run in succession.</content>
    </entry>
    <entry>
        <id>335052790</id>
        <title>Compiling shaders and creating render pipelines are expensive with Graphite</title>
        <author>
            <name>pe...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335052790"/>
        <updated>1970-01-01T00:28:33.297Z</updated>
        <summary>-</summary>
        <content type="html">With Graphite, many tests become flaky on bot. I found compiling graphite shaders and creating pipelines are expensive. It could be the reason.  For a simple interactive_ui_tests `SignInViewControllerBrowserTest.EmailConfirmationDefaultFocus` issue 329415380. Graphite uses 12 shaders, Ganesh uses 8 shaders. Average graphite shaders is around 9000 bytes vs 300 bytes for Ganesh.

Graphite shaders: https://paste.googleplex.com/6099409498013696

Ganesh shaders: https://paste.googleplex.com/4841744423714816

Discussion in chat: https://chat.google.com/room/AAAA2HlH94I/IXbTCM_B5jk</content>
    </entry>
    <entry>
        <id>335267924</id>
        <title>Measure number of calls made to sharedStorage.selectURL per page</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335267924"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">We should measure how many calls each page is making to selectURL().</content>
    </entry>
    <entry>
        <id>335270082</id>
        <title>Move keyboard shortcut restore code into BrowserLiveTabContext to be shared with the RecentTabsSubmenu</title>
        <author>
            <name>dl...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335270082"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>335245349</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245349"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287527:1287569:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=81a89549-9d18-4d6d-9b05-dec65f459d00

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=81a89549-9d18-4d6d-9b05-dec65f459d00

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/v8.browsing_mobile-future/API:duration_avg/browse_tools/browse_tools_maps_2019
        3.15%: 79.083 -&gt; 81.57449 

Top 1 affected measurements in android-pixel2-perf:
  - v8.browsing_mobile-future/API:duration_avg/browse_tools/browse_tools_maps_2019
        3.15%: 79.083 -&gt; 81.57449 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>335245512</id>
        <title>[Graphics]: 1 regressions in blink_perf.image_decoder</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245512"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287609:1287622:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d1322fde-b960-4830-8d84-8d37fb0cf5da

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d1322fde-b960-4830-8d84-8d37fb0cf5da

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.image_decoder/decode-jpeg-h1v1/decode-jpeg-h1v1.html
        5.64%: 74.0775 -&gt; 78.255 

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.image_decoder/decode-jpeg-h1v1/decode-jpeg-h1v1.html
        5.64%: 74.0775 -&gt; 78.255 

Regressions grouped by blink_perf.image_decoder includes data from the following benchmarks with listed owners:
  blink_perf.image_decoder: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>335203259</id>
        <title>conformance2/wasm/ tests failing on multiple platforms</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335203259"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">This was originally reported in Issue 332743717, but is being moved to a separate bug since it shouldn't get lost.

The tests under conformance2/wasm fail on multiple platforms due to not being able to allocate memory. [Sample failure](https://ci.chromium.org/ui/p/chromium/builders/try/linux_optional_gpu_tests_rel/133116/test-results?q=ExactID%3Aninja%3A%2F%2Fchrome%2Ftest%3Atelemetry_gpu_integration_test%2Fgpu_tests.webgl2_conformance_integration_test.WebGL2ConformanceIntegrationTest.conformance2%2Fwasm%2Fbufferdata-16gb-wasm-memory.html+VHash%3Aa55ece39ab587dea)

```
webgl_conformance_integration_test_base.py(425): AssertionError: Uncaught RangeError: WebAssembly.Memory(): could not allocate memory
successfullyParsed should be true (of type boolean). Was undefined (of type undefined).
FAIL successfullyParsed should be true (of type boolean). Was undefined (of type undefined).
```

On Linux, the following tests fail consistently:

```
conformance2/wasm/bufferdata-16gb-wasm-memory.html
conformance2/wasm/buffersubdata-16gb-wasm-memory.html
conformance2/wasm/getbuffersubdata-16gb-wasm-memory.html
conformance2/wasm/readpixels-16gb-wasm-memory.html
conformance2/wasm/teximage2d-16gb-wasm-memory.html
conformance2/wasm/texsubimage2d-16gb-wasm-memory.html
```

Whereas on Pixel 4 devices, the following fail consistently:

```
conformance2/wasm/bufferdata-16gb-wasm-memory.html
conformance2/wasm/bufferdata-4gb-wasm-memory.html
conformance2/wasm/buffersubdata-16gb-wasm-memory.html
conformance2/wasm/buffersubdata-4gb-wasm-memory.html
conformance2/wasm/getbuffersubdata-16gb-wasm-memory.html
conformance2/wasm/getbuffersubdata-4gb-wasm-memory.html
conformance2/wasm/readpixels-16gb-wasm-memory.html
conformance2/wasm/readpixels-4gb-wasm-memory.html
conformance2/wasm/teximage2d-16gb-wasm-memory.html
conformance2/wasm/teximage2d-4gb-wasm-memory.html
conformance2/wasm/texsubimage2d-16gb-wasm-memory.html
conformance2/wasm/texsubimage2d-4gb-wasm-memory.html
```

There have also been flakes on Windows in:

```
conformance2/wasm/buffersubdata-16gb-wasm-memory.html
conformance2/wasm/readpixels-16gb-wasm-memory.html
conformance2/wasm/texsubimage2d-16gb-wasm-memory.html
```

so it's likely that all of the 16gb tests can flake there.</content>
    </entry>
    <entry>
        <id>335089890</id>
        <title>[Chrome Perf Accessibility Sheriff]: 11 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335089890"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1288011:1288045:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7eb88f81-97c5-429b-888f-ea2724e9ccea

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7eb88f81-97c5-429b-888f-ea2724e9ccea

Top 10 regressions (out of 33, with 22 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/textarea-append.html
     1666.94%: 0.369 -&gt; 6.52 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/line-breaks.html
       93.42%: 4.0440000000000005 -&gt; 7.822 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-nodes-toggle-content-visibility-hidden.html
       85.56%: 99.0885 -&gt; 183.8705 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-nodes-toggle-content-visibility-auto.html
       81.77%: 132.3545 -&gt; 240.57999999999998 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/GetUpdatesAndEventsForSerialization_sum/many-nodes-toggle-content-visibility-hidden.html
       59.34%: 1569.3964999999998 -&gt; 2500.6980000000003 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-text-changes-deep-inline-subtree.html
       45.45%: 5.339 -&gt; 7.765499999999999 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/text-changes-ignored-in-focusable.html
       45.37%: 40.286 -&gt; 58.563 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/build-table.html
       23.80%: 155.901 -&gt; 193.005 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/unassignable-slots-wide-tree.html
       20.90%: 8.568000000000001 -&gt; 10.359 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-text-changes-small-wait-between.html
       20.32%: 58.054 -&gt; 69.8485 ms

Top 3 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/textarea-append.html
     1666.94%: 0.369 -&gt; 6.52 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/line-breaks.html
       93.42%: 4.0440000000000005 -&gt; 7.822 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents2_sum/many-nodes-toggle-content-visibility-hidden.html
       85.56%: 99.0885 -&gt; 183.8705 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1288010..1288045
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/15b9756484d5bda98ba273ae13f8db58200db4db..15b9756484d5bda98ba273ae13f8db58200db4db
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/501c4f37bfee47b26999ee291c5355ad64554df7..501c4f37bfee47b26999ee291c5355ad64554df7</content>
    </entry>
    <entry>
        <id>334977830</id>
        <title>Cleanup Legacy Scroll Metrics</title>
        <author>
            <name>jo...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334977830"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html">There are various legacy/expired scroll metrics:
  - EventLatency.*.TotalLatency
  - Event.Latency.*

We should clean these up to reduce unnecessary work</content>
    </entry>
    <entry>
        <id>335267669</id>
        <title>Simplify ConfigInterpreter / Feature model version logic</title>
        <author>
            <name>ho...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335267669"/>
        <updated>1970-01-01T00:28:33.296Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335259053</id>
        <title>New Component for Fundamentals Opex</title>
        <author>
            <name>om...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335259053"/>
        <updated>1970-01-01T00:28:33.294Z</updated>
        <summary>-</summary>
        <content type="html">Please ensure all fields are provided; any missing information will cause a delay in processing.

NOTE: Before requesting a new component, please check with the Issue Admins of the parent component to make sure they are aware and approve of the suggested change. Please also make sure to cc them on this request bug.

Guideline 1 (Clarity): Component name should be descriptive beyond the core project team (i.e. please avoid using non-industry standard abbreviations, code words, project names, etc.)

Guideline 2 (Permanence): Component names should describe features/functions and not team names, code locations, etc., which are more subject to change and make the hierarchy less predictable for people triaging issues.

Guideline 3 (Specific): Components are meant to explicitly track functional work areas.  If you are trying to track a project or an ongoing effort, please create your own hotlist.

Guideline 4 (Discoverable/ Predictable): Components should be parented where people would logically expect to find them (i.e. follow product decomposition when naming versus team decomposition)

Please remove the above section before you submit the bug.
—-
Requested Action: [Create]

Justification (Why do you need this component): Track all engineering work for the iOS on Chrome Fundamentals team

Component Name: Fundamentals-Opex

Component ID: (only if modifying or archiving)

Component Description:Track all engineering work for the iOS on Chrome Fundamentals team

Parent Component: Chromium Public Trackers &gt; Chromium &gt; Mobile &gt; iOSWeb &gt; FundamentalsOpex

Issue Admins: 

Custom fields:
Include: name, description, type, default value, required/not required, field significance
Additional info can be found here:
For Googlers: go/buganizer/concepts/custom-fields
For External users: https://developers.google.com/issue-tracker/concepts/custom-fields 

Custom templates:
Please file a new bug for custom templates after the component is created

Access Control:
Should the component be set to Google Internal or Visible to Public
</content>
    </entry>
    <entry>
        <id>335263435</id>
        <title>launchctl can no longer restart usbmuxd on MacOS14+</title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335263435"/>
        <updated>1970-01-01T00:28:33.294Z</updated>
        <summary>-</summary>
        <content type="html">more details in https://b.corp.google.com/issues/332750044

```
689 2024-04-10 14:50:28.800 E: get_dimensions() threw
Traceback (most recent call last):
  File "/Volumes/Work/s/swarming_bot.1.zip/bot_code/bot_main.py", line 341, in _call_hook_safe
    return _call_hook(chained, botobj, name, *args)
  File "/Volumes/Work/s/swarming_bot.1.zip/bot_code/bot_main.py", line 194, in hook
    return func(chained, botobj, name, *args, **kwargs)
  File "/Volumes/Work/s/swarming_bot.1.zip/bot_code/bot_main.py", line 292, in _call_hook
    return hook(botobj, *args, **kwargs)
  File "injected.py", line 80, in get_dimensions
  File "injected.py", line 317, in _stop_usbmuxd
  File "/Users/chrome-bot/Library/Caches/.vpython-root/store/cpython+lue6jq2j57h6a1thte8akmh808/contents/lib/python3.8/subprocess.py", line 364, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['sudo', '/bin/launchctl', 'stop', 'com.apple.usbmuxd']' returned non-zero exit status 1.
689 2024-04-10 14:50:28.800 E: post_error(Failed to call hook get_dimensions(): Command '['sudo', '/bin/launchctl', 'stop', 'com.apple.usbmuxd']' returned non-zero exit status 1.
Traceback (most recent call last):
  File "/Volumes/Work/s/swarming_bot.1.zip/bot_code/bot_main.py", line 341, in _call_hook_safe
    return _call_hook(chained, botobj, name, *args)
  File "/Volumes/Work/s/swarming_bot.1.zip/bot_code/bot_main.py", line 194, in hook
    return func(chained, botobj, name, *args, **kwargs)
  File "/Volumes/Work/s/swarming_bot.1.zip/bot_code/bot_main.py", line 292, in _call_hook
    return hook(botobj, *args, **kwargs)
  File "injected.py", line 80, in get_dimensions
  File "injected.py", line 317, in _stop_usbmuxd
  File "/Users/chrome-bot/Library/Caches/.vpython-root/store/cpython+lue6jq2j57h6a1thte8akmh808/contents/lib/python3.8/subprocess.py", line 364, in check_call
    raise CalledProcessError(retcode, cmd)
subproce
```

we periodically restart usbmuxd to resolve flaky device connection issues. However, it seems that Apple has stopped allowing managing some of the system processes through launchtl</content>
    </entry>
    <entry>
        <id>334991052</id>
        <title>allow user to choose to never show the 'organize tabs' popup again</title>
        <author>
            <name>wf...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334991052"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html">See issue 330383761 for more context.

The 'organize tabs' popup might appear repeatedly for users, with a backoff.

It should be possible for users who never want to organize their tabs persistently opt out of this behavior either by a 'never show again' option, or a UI setting to disable this feature.</content>
    </entry>
    <entry>
        <id>335052787</id>
        <title>keep headers on redirect</title>
        <author>
            <name>yo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335052787"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. get any kind of redirector
2. go to any page
3. try redirecting any of the requests with (for example) authorization header and see it disappear

# Problem Description
Hi there,
Here's the scenario I'm dealing with:
I'm a backend developer working on a system with two distinct parts that typically don't intersect during development. The frontend is hosted online, and that's the only place I can access it. When something goes wrong on the backend I'm developing, I usually relied on re-routing my traffic to my localhost using a Chrome extension. This used to work fine, but recently, I've been encountering a 401 error due to the authorization header missing from the redirected request.
Now, I'm left with two options: either manually extract data from the developer console or use tools like Fiddler and send requests via Postman to a locally hosted server. Both methods are quite time-consuming compared to the previous setup.
I'm wondering if there's a way to configure Chrome to retain all headers on redirect, as it used to function before. This would streamline the debugging process significantly.
Thanks!

P.S.
Don't hesitate to contact me for more details

# Summary
keep headers on redirect

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>335245348</id>
        <title>[WPT] New failures introduced in external by import https://crrev.com/c/5457532</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245348"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5457532 introduced new failures in external:

List of new failures:
[ Mac-mac14-arm64 ] virtual/webnn-service-with-gpu/external/wpt/webnn/conformance_tests/gpu/arg_min_max.https.any.worker.html new failing tests: https://crrev.com/c/5457532/4/third_party/blink/web_tests/platform/mac-mac14-arm64/virtual/webnn-service-with-gpu/external/wpt/webnn/conformance_tests/gpu/arg_min_max.https.any.worker-expected.txt

See https://chromium-review.googlesource.com/c/chromium/src/+/5457532/1?checksPatchset=1&amp;tab=checks for details.

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/4053ce9c00547d634c60c16155ea5ced7fc7490f...5d0c33d0898e6a8c701ef00ed266271f9eb5c616
[css] Move "zoom" property tests to "css/css-viewport/zoom/": https://github.com/web-platform-tests/wpt/commit/5d0c33d0898e6a8c701ef00ed266271f9eb5c616
Bump minimum version of Python from 3.7 to 3.8 (#45575): https://github.com/web-platform-tests/wpt/commit/67d66b1a3b9ea3ce366aef50af63b676cb8e7459
Only allow absolute colors in @font-palette-values: https://github.com/web-platform-tests/wpt/commit/8a731b722f95f32481c0468302de3ed0d8f753a6
webnn: Migrate Conv2d validation tests to WPTs: https://github.com/web-platform-tests/wpt/commit/9fb925f79cc88c4fad7a9f3dc6bd5a3ef9bc3abb
Also allow a same-origin initiated iframe to get storage access from its parent: https://github.com/web-platform-tests/wpt/commit/a27e5527d803d4f848f8d97b50f4445b632e2413
Add notification tag WPT test and replace old ones: https://github.com/web-platform-tests/wpt/commit/dea5e0112131c79a484de31ecb5dde0f3097ce05
Use correct formatting in testharness.js result table: https://github.com/web-platform-tests/wpt/commit/a1fc962d2d916de51fc5234fce3f9a4bdc2a1e0e
css-ruby: Import rubyDOM-*-rt-block-*.html in WebKit/Blink: https://github.com/web-platform-tests/wpt/commit/b13bfb616d79e6e4063a71d80caa28e326bd1d30
Reland "webnn: Migrate ConvTranspose2d validation tests to WPTs": https://github.com/web-platform-tests/wpt/commit/20028ede941273e7eefb335e9afad034bbceefda
webnn: migrate matmul unit tests into WPTs: https://github.com/web-platform-tests/wpt/commit/6f358e6fd4e1a4b501279d578089850a62245368
Ensure nsContentUtils::IsPointInSelection works for point in selection that crosses the boundary: https://github.com/web-platform-tests/wpt/commit/6a3348345e625594c2a47f1bdcc12c40ba339e55
webnn: remove matmul conformance tests of 1D inputs: https://github.com/web-platform-tests/wpt/commit/2c6929696b41ca3b01ee6b8815d7a0abc097c33d
object-fit should use the "real" natural aspect ratio: https://github.com/web-platform-tests/wpt/commit/30a7e26a85a65544133fd257e8af644f785e04f7

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>335246098</id>
        <title>[WPT] New failures introduced in external/wpt/css by import https://crrev.com/c/5457532</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335246098"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5457532 introduced new failures in external/wpt/css:

List of new failures:
external/wpt/css/css-viewport/zoom/iframe-zoom-nested.html [ Failure ]: https://crrev.com/c/5457532/4/third_party/blink/web_tests/TestExpectations#2656
external/wpt/css/css-viewport/zoom/iframe-zoom.sub.html [ Failure ]: https://crrev.com/c/5457532/4/third_party/blink/web_tests/TestExpectations#2657

See https://chromium-review.googlesource.com/c/chromium/src/+/5457532/1?checksPatchset=1&amp;tab=checks for details.

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/4053ce9c00547d634c60c16155ea5ced7fc7490f...5d0c33d0898e6a8c701ef00ed266271f9eb5c616
[css] Move "zoom" property tests to "css/css-viewport/zoom/": https://github.com/web-platform-tests/wpt/commit/5d0c33d0898e6a8c701ef00ed266271f9eb5c616 [affecting this directory]
Bump minimum version of Python from 3.7 to 3.8 (#45575): https://github.com/web-platform-tests/wpt/commit/67d66b1a3b9ea3ce366aef50af63b676cb8e7459
Only allow absolute colors in @font-palette-values: https://github.com/web-platform-tests/wpt/commit/8a731b722f95f32481c0468302de3ed0d8f753a6 [affecting this directory]
webnn: Migrate Conv2d validation tests to WPTs: https://github.com/web-platform-tests/wpt/commit/9fb925f79cc88c4fad7a9f3dc6bd5a3ef9bc3abb
Also allow a same-origin initiated iframe to get storage access from its parent: https://github.com/web-platform-tests/wpt/commit/a27e5527d803d4f848f8d97b50f4445b632e2413
Add notification tag WPT test and replace old ones: https://github.com/web-platform-tests/wpt/commit/dea5e0112131c79a484de31ecb5dde0f3097ce05
Use correct formatting in testharness.js result table: https://github.com/web-platform-tests/wpt/commit/a1fc962d2d916de51fc5234fce3f9a4bdc2a1e0e
css-ruby: Import rubyDOM-*-rt-block-*.html in WebKit/Blink: https://github.com/web-platform-tests/wpt/commit/b13bfb616d79e6e4063a71d80caa28e326bd1d30 [affecting this directory]
Reland "webnn: Migrate ConvTranspose2d validation tests to WPTs": https://github.com/web-platform-tests/wpt/commit/20028ede941273e7eefb335e9afad034bbceefda
webnn: migrate matmul unit tests into WPTs: https://github.com/web-platform-tests/wpt/commit/6f358e6fd4e1a4b501279d578089850a62245368
Ensure nsContentUtils::IsPointInSelection works for point in selection that crosses the boundary: https://github.com/web-platform-tests/wpt/commit/6a3348345e625594c2a47f1bdcc12c40ba339e55
webnn: remove matmul conformance tests of 1D inputs: https://github.com/web-platform-tests/wpt/commit/2c6929696b41ca3b01ee6b8815d7a0abc097c33d
object-fit should use the "real" natural aspect ratio: https://github.com/web-platform-tests/wpt/commit/30a7e26a85a65544133fd257e8af644f785e04f7 [affecting this directory]

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>335008562</id>
        <title>[WPT] New failures introduced in external/wpt/storage-access-api by import https://crrev.com/c/5457532</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335008562"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5457532 introduced new failures in external/wpt/storage-access-api:

List of new failures:
external/wpt/storage-access-api/requestStorageAccess-cross-origin-iframe-navigation-relax.tentative.sub.https.window.html new failing tests: https://crrev.com/c/5457532/4/third_party/blink/web_tests/external/wpt/storage-access-api/requestStorageAccess-cross-origin-iframe-navigation-relax.tentative.sub.https.window-expected.txt

See https://chromium-review.googlesource.com/c/chromium/src/+/5457532/1?checksPatchset=1&amp;tab=checks for details.

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/4053ce9c00547d634c60c16155ea5ced7fc7490f...5d0c33d0898e6a8c701ef00ed266271f9eb5c616
[css] Move "zoom" property tests to "css/css-viewport/zoom/": https://github.com/web-platform-tests/wpt/commit/5d0c33d0898e6a8c701ef00ed266271f9eb5c616
Bump minimum version of Python from 3.7 to 3.8 (#45575): https://github.com/web-platform-tests/wpt/commit/67d66b1a3b9ea3ce366aef50af63b676cb8e7459
Only allow absolute colors in @font-palette-values: https://github.com/web-platform-tests/wpt/commit/8a731b722f95f32481c0468302de3ed0d8f753a6
webnn: Migrate Conv2d validation tests to WPTs: https://github.com/web-platform-tests/wpt/commit/9fb925f79cc88c4fad7a9f3dc6bd5a3ef9bc3abb
Also allow a same-origin initiated iframe to get storage access from its parent: https://github.com/web-platform-tests/wpt/commit/a27e5527d803d4f848f8d97b50f4445b632e2413 [affecting this directory]
Add notification tag WPT test and replace old ones: https://github.com/web-platform-tests/wpt/commit/dea5e0112131c79a484de31ecb5dde0f3097ce05
Use correct formatting in testharness.js result table: https://github.com/web-platform-tests/wpt/commit/a1fc962d2d916de51fc5234fce3f9a4bdc2a1e0e
css-ruby: Import rubyDOM-*-rt-block-*.html in WebKit/Blink: https://github.com/web-platform-tests/wpt/commit/b13bfb616d79e6e4063a71d80caa28e326bd1d30
Reland "webnn: Migrate ConvTranspose2d validation tests to WPTs": https://github.com/web-platform-tests/wpt/commit/20028ede941273e7eefb335e9afad034bbceefda
webnn: migrate matmul unit tests into WPTs: https://github.com/web-platform-tests/wpt/commit/6f358e6fd4e1a4b501279d578089850a62245368
Ensure nsContentUtils::IsPointInSelection works for point in selection that crosses the boundary: https://github.com/web-platform-tests/wpt/commit/6a3348345e625594c2a47f1bdcc12c40ba339e55
webnn: remove matmul conformance tests of 1D inputs: https://github.com/web-platform-tests/wpt/commit/2c6929696b41ca3b01ee6b8815d7a0abc097c33d
object-fit should use the "real" natural aspect ratio: https://github.com/web-platform-tests/wpt/commit/30a7e26a85a65544133fd257e8af644f785e04f7

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>335245347</id>
        <title>[WPT] New failures introduced in external/wpt/dom by import https://crrev.com/c/5457532</title>
        <author>
            <name>wp...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245347"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html">WPT import https://crrev.com/c/5457532 introduced new failures in external/wpt/dom:

List of new failures:
external/wpt/dom/ranges/Range-isPointInRange-shadowdom.html new failing tests: https://crrev.com/c/5457532/4/third_party/blink/web_tests/external/wpt/dom/ranges/Range-isPointInRange-shadowdom-expected.txt

See https://chromium-review.googlesource.com/c/chromium/src/+/5457532/1?checksPatchset=1&amp;tab=checks for details.

Expectations or baseline files [0] have been automatically added for the failing results to keep the bots green. Please investigate the new failures and triage as appropriate.

Upstream changes imported:
https://github.com/web-platform-tests/wpt/compare/4053ce9c00547d634c60c16155ea5ced7fc7490f...5d0c33d0898e6a8c701ef00ed266271f9eb5c616
[css] Move "zoom" property tests to "css/css-viewport/zoom/": https://github.com/web-platform-tests/wpt/commit/5d0c33d0898e6a8c701ef00ed266271f9eb5c616
Bump minimum version of Python from 3.7 to 3.8 (#45575): https://github.com/web-platform-tests/wpt/commit/67d66b1a3b9ea3ce366aef50af63b676cb8e7459
Only allow absolute colors in @font-palette-values: https://github.com/web-platform-tests/wpt/commit/8a731b722f95f32481c0468302de3ed0d8f753a6
webnn: Migrate Conv2d validation tests to WPTs: https://github.com/web-platform-tests/wpt/commit/9fb925f79cc88c4fad7a9f3dc6bd5a3ef9bc3abb
Also allow a same-origin initiated iframe to get storage access from its parent: https://github.com/web-platform-tests/wpt/commit/a27e5527d803d4f848f8d97b50f4445b632e2413
Add notification tag WPT test and replace old ones: https://github.com/web-platform-tests/wpt/commit/dea5e0112131c79a484de31ecb5dde0f3097ce05
Use correct formatting in testharness.js result table: https://github.com/web-platform-tests/wpt/commit/a1fc962d2d916de51fc5234fce3f9a4bdc2a1e0e
css-ruby: Import rubyDOM-*-rt-block-*.html in WebKit/Blink: https://github.com/web-platform-tests/wpt/commit/b13bfb616d79e6e4063a71d80caa28e326bd1d30
Reland "webnn: Migrate ConvTranspose2d validation tests to WPTs": https://github.com/web-platform-tests/wpt/commit/20028ede941273e7eefb335e9afad034bbceefda
webnn: migrate matmul unit tests into WPTs: https://github.com/web-platform-tests/wpt/commit/6f358e6fd4e1a4b501279d578089850a62245368
Ensure nsContentUtils::IsPointInSelection works for point in selection that crosses the boundary: https://github.com/web-platform-tests/wpt/commit/6a3348345e625594c2a47f1bdcc12c40ba339e55 [affecting this directory]
webnn: remove matmul conformance tests of 1D inputs: https://github.com/web-platform-tests/wpt/commit/2c6929696b41ca3b01ee6b8815d7a0abc097c33d
object-fit should use the "real" natural aspect ratio: https://github.com/web-platform-tests/wpt/commit/30a7e26a85a65544133fd257e8af644f785e04f7

[0]: https://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md

This bug was filed automatically due to a new WPT test failure for which you are marked an OWNER. If you do not want to receive these reports, please add "wpt { notify: NO }"  to the relevant DIR_METADATA file.</content>
    </entry>
    <entry>
        <id>335255175</id>
        <title> ParcelTracking Component Request</title>
        <author>
            <name>om...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335255175"/>
        <updated>1970-01-01T00:28:33.293Z</updated>
        <summary>-</summary>
        <content type="html">Please ensure all fields are provided; any missing information will cause a delay in processing.

NOTE: Before requesting a new component, please check with the Issue Admins of the parent component to make sure they are aware and approve of the suggested change. Please also make sure to cc them on this request bug.

Guideline 1 (Clarity): "Chromium Public Trackers &gt; Chromium &gt; UI &gt; Browser &gt; ParcelTracking

Guideline 2 (Permanence): Component names should describe features/functions and not team names, code locations, etc., which are more subject to change and make the hierarchy less predictable for people triaging issues.

Guideline 3 (Specific): Components are meant to explicitly track functional work areas.  If you are trying to track a project or an ongoing effort, please create your own hotlist.

Guideline 4 (Discoverable/ Predictable): Components should be parented where people would logically expect to find them (i.e. follow product decomposition when naming versus team decomposition)

Please remove the above section before you submit the bug.
—-
Requested Action: [Create]

Justification (To allow tracking of all Parcel Tracking work):

Component Name:ParcelTracking

Component ID: (only if modifying or archiving)

Component Description:Tracking all issues for Parcel Tracking 

Parent Component: (Please provide full path or component ID) Chromium Public Trackers &gt; Chromium &gt; UI &gt; Browser &gt; ParcelTracking

Issue Admins: @smcgruer

Custom fields:
Include: name, description, type, default value, required/not required, field significance
Additional info can be found here:
For Googlers: go/buganizer/concepts/custom-fields
For External users: https://developers.google.com/issue-tracker/concepts/custom-fields 

Custom templates:
Please file a new bug for custom templates after the component is created

Access Control:
Should the component be set to Google Internal or Visible to Public
</content>
    </entry>
    <entry>
        <id>334965867</id>
        <title>mdoc/openid4vp deep link use counter</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334965867"/>
        <updated>1970-01-01T00:28:33.292Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>335250164</id>
        <title>MerchantPromoCodeManager (a KeyedService) can sometimes not be present</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335250164"/>
        <updated>1970-01-01T00:28:33.292Z</updated>
        <summary>-</summary>
        <content type="html">crbug.com/327080273 occurs because merchant promo code suggestions can be shown (through the MerchantPromoCodeManager which is a KeyedService), but then when the suggestion is selected, the MerchantPromoCodeManager might not be present. 

The reason for MerchantPromoCodeManager not being present is unknown, as the MerchantPromoCodeManagerFactory (https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/autofill/merchant_promo_code_manager_factory.h) should always create one unless we are in a system profile, in which case the original MerchantPromoCodeManager to show suggestions should not have been present. </content>
    </entry>
    <entry>
        <id>335250447</id>
        <title>tabindex on &amp;lt;div contenteditable=true&amp;gt; is ignored</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335250447"/>
        <updated>1970-01-01T00:28:33.292Z</updated>
        <summary>-</summary>
        <content type="html">Copied from misfiled issue at https://crbug.com/monorail/12580.

Issue is reproducible on stable Chrome version on iOS IOS version: 17.2.1 Chrome IOS version from appstore: 123.0.6312.52

Bug report:
Vocabulary: DIV: `div contenteditable=true`

ARROWS (ARROW UP/DOWN): native iOS keyboard buttons for navigation INDEX: tabindex Demo: https://playcode.io/1828881 Issues:
1. DIVS are skipped when using ARROWS
1. If you focus DIV surrounded by 2 normal inputs, ARROW UP is disabled (in demo DIV with INDEX 3)
1. If you focus DIV which is the neighbour of another DIV, ARROWS does not work at all (ARROW DOWN is enabled, but pressing does no effect)

Reproduce:

1. Just try navigating with ARROWS
1. Reload page, first input that you focus should be DIV surrounded by normal inputs (in demo DIV with INDEX 3)
1. Reload page, first input focus should be DIV which has a DIV neighbour (in demo DIV with INDEX 6 and 7)

Expected behaviour: DIVS should not be ignored, just like in other browsers on IOS (ex. Safari) ARROWS should work correctly (not being disabled and navigate correctly) no matter which input is focused first</content>
    </entry>
    <entry>
        <id>335052786</id>
        <title>configURL:"any" causes CHECK-fail when no providers are registered</title>
        <author>
            <name>cb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/335052786"/>
        <updated>1970-01-01T00:28:33.291Z</updated>
        <summary>-</summary>
        <content type="html">Steps to reproduce:
1) Enable chrome://flags/#fedcm-idp-registration
2) Set up https://github.com/sjud/fedcm-example-rp
3) Load http://127.0.0.1:3000/
4) Click "Add login script"

Expected result:
Promise gets rejected + error in console

Actual result:
```
[3818897:3818897:0416/121849.793020:FATAL:federated_auth_request.mojom.cc(1295)] Check failed: !connected. FederatedAuthRequest::RequestTokenCallback was destroyed without first either being run or its corresponding binding being closed. It is an error to drop response callbacks which still correspond to an open interface pipe.
#0 0x7fc4db971f2c base::debug::CollectStackTrace() [../../base/debug/stack_trace_posix.cc:1039:7]
#1 0x7fc4db923d65 base::debug::StackTrace::StackTrace() [../../base/debug/stack_trace.cc:236:20]
#2 0x7fc4db923cf5 base::debug::StackTrace::StackTrace() [../../base/debug/stack_trace.cc:231:28]
#3 0x7fc4db63ea86 logging::LogMessage::Flush() [../../base/logging.cc:703:29]
#4 0x7fc4db63e9b7 logging::LogMessage::~LogMessage() [../../base/logging.cc:694:3]
#5 0x7fc4db5e67c5 logging::(anonymous namespace)::DCheckLogMessage::~DCheckLogMessage() [../../base/check.cc:166:3]
#6 0x7fc4db5e67e9 logging::(anonymous namespace)::DCheckLogMessage::~DCheckLogMessage() [../../base/check.cc:161:32]
#7 0x7fc4db5e75cc std::__Cr::default_delete&lt;&gt;::operator()() [../../third_party/libc++/src/include/__memory/unique_ptr.h:67:5]
#8 0x7fc4db5e6b2a std::__Cr::unique_ptr&lt;&gt;::reset() [../../third_party/libc++/src/include/__memory/unique_ptr.h:278:7]
#9 0x7fc4db5e610d logging::CheckError::~CheckError() [../../base/check.cc:349:16]
#10 0x7fc4c564cded blink::mojom::FederatedAuthRequest_RequestToken_ProxyToResponder::OnIsConnectedComplete() [gen/third_party/blink/public/mojom/webid/federated_auth_request.mojom.cc:1295:5]
#11 0x7fc4c415e485 base::internal::DecayedFunctorTraits&lt;&gt;::Invoke&lt;&gt;() [../../base/functional/bind_internal.h:671:12]
#12 0x7fc4c415e459 base::internal::InvokeHelper&lt;&gt;::MakeItSo&lt;&gt;() [../../base/functional/bind_internal.h:930:12]
#13 0x7fc4c415e425 _ZN4base8internal7InvokerINS0_13FunctorTraitsIOPFvbEJEEENS0_9BindStateILb0ELb1ELb0ES4_JEEES3_E7RunImplIS4_NSt4__Cr5tupleIJEEETpTnmJEEEvOT_OT0_NSB_16integer_sequenceImJXspT1_EEEEOb [../../base/functional/bind_internal.h:1067:14]
#14 0x7fc4c415e383 base::internal::Invoker&lt;&gt;::RunOnce() [../../base/functional/bind_internal.h:980:12]
#15 0x7fc4daf38001 base::OnceCallback&lt;&gt;::Run() [../../base/functional/callback.h:156:12]
#16 0x7fc4daf2ba56 mojo::(anonymous namespace)::DetermineIfEndpointIsConnected() [../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:236:23]
#17 0x7fc4daf2b97d mojo::(anonymous namespace)::ResponderThunk::IsConnectedAsync() [../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:314:7]
#18 0x7fc4c564cd23 blink::mojom::FederatedAuthRequest_RequestToken_ProxyToResponder::~FederatedAuthRequest_RequestToken_ProxyToResponder() [gen/third_party/blink/public/mojom/webid/federated_auth_request.mojom.cc:1281:19]
#19 0x7fc4c564cc9b std::__Cr::default_delete&lt;&gt;::operator()() [../../third_party/libc++/src/include/__memory/unique_ptr.h:67:5]
#20 0x7fc4c564cc6a std::__Cr::unique_ptr&lt;&gt;::reset() [../../third_party/libc++/src/include/__memory/unique_ptr.h:278:7]
#21 0x7fc4c564c329 std::__Cr::unique_ptr&lt;&gt;::~unique_ptr() [../../third_party/libc++/src/include/__memory/unique_ptr.h:248:71]
#22 0x7fc4c564ca05 std::__Cr::__tuple_leaf&lt;&gt;::~__tuple_leaf() [../../third_party/libc++/src/include/tuple:295:7]
#23 0x7fc4c564c9e5 std::__Cr::__tuple_impl&lt;&gt;::~__tuple_impl() [../../third_party/libc++/src/include/tuple:453:37]
#24 0x7fc4c564c9c5 std::__Cr::tuple&lt;&gt;::~tuple() [../../third_party/libc++/src/include/tuple:523:28]
#25 0x7fc4c564c99d base::internal::BindState&lt;&gt;::~BindState() [../../base/functional/bind_internal.h:1173:24]
#26 0x7fc4c564c8a7 base::internal::BindState&lt;&gt;::Destroy() [../../base/functional/bind_internal.h:1186:5]
#27 0x7fc4db61f8da base::internal::BindStateBaseRefCountTraits::Destruct() [../../base/functional/callback_internal.cc:27:3]
#28 0x7fc4db61fd8f base::RefCountedThreadSafe&lt;&gt;::Release() [../../base/memory/ref_counted.h:417:7]
#29 0x7fc4db61fd42 scoped_refptr&lt;&gt;::Release() [../../base/memory/scoped_refptr.h:384:8]
#30 0x7fc4db61fc7a scoped_refptr&lt;&gt;::~scoped_refptr() [../../base/memory/scoped_refptr.h:273:7]
#31 0x7fc4db61fa65 base::internal::BindStateHolder::~BindStateHolder() [../../base/functional/callback_internal.cc:51:35]
#32 0x7fc4d81bd915 base::OnceCallback&lt;&gt;::~OnceCallback() [../../base/functional/callback.h:98:27]
#33 0x7fc4d81ab8cd content::FederatedAuthRequestImpl::RequestToken() [../../content/browser/webid/federated_auth_request_impl.cc:1004:1]
#34 0x7fc4c56438f2 blink::mojom::FederatedAuthRequestStubDispatch::AcceptWithResponder() [gen/third_party/blink/public/mojom/webid/federated_auth_request.mojom.cc:2315:13]
#35 0x7fc4d81d7309 blink::mojom::FederatedAuthRequestStub&lt;&gt;::AcceptWithResponder() [gen/third_party/blink/public/mojom/webid/federated_auth_request.mojom.h:237:12]
#36 0x7fc4daf20de8 mojo::InterfaceEndpointClient::HandleValidatedMessage() [../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:990:56]
#37 0x7fc4daf20989 mojo::InterfaceEndpointClient::HandleIncomingMessageThunk::Accept() [../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:368:18]
#38 0x7fc4daf39ed6 mojo::MessageDispatcher::Accept() [../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:43:19]
#39 0x7fc4daf23118 mojo::InterfaceEndpointClient::HandleIncomingMessage() [../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:721:20]
#40 0x7fc4daf3e4ad mojo::internal::MultiplexRouter::ProcessIncomingMessage() [../../mojo/public/cpp/bindings/lib/multiplex_router.cc:1116:42]
#41 0x7fc4daf3d9b1 mojo::internal::MultiplexRouter::Accept() [../../mojo/public/cpp/bindings/lib/multiplex_router.cc:730:7]
#42 0x7fc4daf39ed6 mojo::MessageDispatcher::Accept() [../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:43:19]
#43 0x7fc4daf04a83 mojo::Connector::DispatchMessage() [../../mojo/public/cpp/bindings/lib/connector.cc:554:49]
#44 0x7fc4daf054ae mojo::Connector::ReadAllAvailableMessages() [../../mojo/public/cpp/bindings/lib/connector.cc:611:14]
#45 0x7fc4daf05287 mojo::Connector::OnHandleReadyInternal() [../../mojo/public/cpp/bindings/lib/connector.cc:444:3]
#46 0x7fc4daf051f0 mojo::Connector::OnWatcherHandleReady() [../../mojo/public/cpp/bindings/lib/connector.cc:410:3]
#47 0x7fc4daf0a94f base::internal::DecayedFunctorTraits&lt;&gt;::Invoke&lt;&gt;() [../../base/functional/bind_internal.h:738:12]
#48 0x7fc4daf0a8b2 base::internal::InvokeHelper&lt;&gt;::MakeItSo&lt;&gt;() [../../base/functional/bind_internal.h:930:12]
#49 0x7fc4daf0a825 base::internal::Invoker&lt;&gt;::RunImpl&lt;&gt;() [../../base/functional/bind_internal.h:1067:14]
#50 0x7fc4daf0a75e base::internal::Invoker&lt;&gt;::Run() [../../base/functional/bind_internal.h:987:12]
#51 0x7fc4daf0a1e6 base::RepeatingCallback&lt;&gt;::Run() [../../base/functional/callback.h:344:12]
#52 0x7fc4daf09bef mojo::SimpleWatcher::DiscardReadyState() [../../mojo/public/cpp/system/simple_watcher.h:192:14]
#53 0x7fc4daf09dff base::internal::DecayedFunctorTraits&lt;&gt;::Invoke&lt;&gt;() [../../base/functional/bind_internal.h:671:12]
#54 0x7fc4daf09dca base::internal::InvokeHelper&lt;&gt;::MakeItSo&lt;&gt;() [../../base/functional/bind_internal.h:930:12]
#55 0x7fc4daf09d6d base::internal::Invoker&lt;&gt;::RunImpl&lt;&gt;() [../../base/functional/bind_internal.h:1067:14]
#56 0x7fc4daf09cc6 base::internal::Invoker&lt;&gt;::Run() [../../base/functional/bind_internal.h:987:12]
#57 0x7fc4da7e508e base::RepeatingCallback&lt;&gt;::Run() [../../base/functional/callback.h:344:12]
#58 0x7fc4da7e3e64 mojo::SimpleWatcher::OnHandleReady() [../../mojo/public/cpp/system/simple_watcher.cc:278:14]
#59 0x7fc4da7e572b base::internal::DecayedFunctorTraits&lt;&gt;::Invoke&lt;&gt;() [../../base/functional/bind_internal.h:738:12]
#60 0x7fc4da7e5640 base::internal::InvokeHelper&lt;&gt;::MakeItSo&lt;&gt;() [../../base/functional/bind_internal.h:954:5]
#61 0x7fc4da7e555d base::internal::Invoker&lt;&gt;::RunImpl&lt;&gt;() [../../base/functional/bind_internal.h:1067:14]
#62 0x7fc4da7e54b7 base::internal::Invoker&lt;&gt;::RunOnce() [../../base/functional/bind_internal.h:980:12]
#63 0x7fc4db5d69c0 base::OnceCallback&lt;&gt;::Run() [../../base/functional/callback.h:156:12]
#64 0x7fc4db7b5b05 base::TaskAnnotator::RunTaskImpl() [../../base/task/common/task_annotator.cc:203:34]
#65 0x7fc4db822d50 base::TaskAnnotator::RunTask&lt;&gt;() [../../base/task/common/task_annotator.h:90:5]
#66 0x7fc4db8227d4 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl() [../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:473:23]
#67 0x7fc4db821c77 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() [../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:338:40]
#68 0x7fc4db822a73 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork()
#69 0x7fc4db9bbe05 base::MessagePumpGlib::Run() [../../base/message_loop/message_pump_glib.cc:694:48]
#70 0x7fc4db82348c base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run() [../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:644:12]
#71 0x7fc4db731366 base::RunLoop::Run() [../../base/run_loop.cc:134:14]
#72 0x7fc4d67b5569 content::BrowserMainLoop::RunMainMessageLoop() [../../content/browser/browser_main_loop.cc:1101:18]
#73 0x7fc4d67ca6eb content::BrowserMainRunnerImpl::Run() [../../content/browser/browser_main_runner_impl.cc:159:15]
#74 0x7fc4d67b1139 content::BrowserMain() [../../content/browser/browser_main.cc:34:28]
#75 0x7fc4d92ccfaa content::RunBrowserProcessMain() [../../content/app/content_main_runner_impl.cc:707:10]
#76 0x7fc4d92cee63 content::ContentMainRunnerImpl::RunBrowser() [../../content/app/content_main_runner_impl.cc:1298:10]
#77 0x7fc4d92ce695 content::ContentMainRunnerImpl::Run() [../../content/app/content_main_runner_impl.cc:1143:12]
#78 0x7fc4d92ca9ac content::RunContentProcess() [../../content/app/content_main.cc:329:36]
#79 0x7fc4d92cb026 content::ContentMain() [../../content/app/content_main.cc:342:10]
#80 0x56335bb8889c ChromeMain [../../chrome/app/chrome_main.cc:192:12]
#81 0x56335bb885a2 main
#82 0x7fc485a766ca (/usr/lib/x86_64-linux-gnu/libc.so.6+0x276c9)
#83 0x7fc485a76785 __libc_start_main
#84 0x56335bb884ba _start
Task trace:
#0 0x7fc4da7e39b2 mojo::SimpleWatcher::ArmOrNotify() [../../mojo/public/cpp/system/simple_watcher.cc:238:28]
#1 0x7fc4da7e523d mojo::SimpleWatcher::Context::Notify() [../../mojo/public/cpp/system/simple_watcher.cc:102:13]
Crash keys:
  "bad_message_reason" = "123"
  "num-extensions" = "0"
  "commandline-enabled-feature-2" = "FedCmMultipleIdentityProviders"
  "commandline-enabled-feature-1" = "FedCmIdPregistration"
  "reentry_guard_tls_slot" = "unused"
  "switch-1" = "--restart"
  "num-switches" = "6"
  "osarch" = "x86_64"
  "pid" = "3818897"
  "ptype" = "browser"

```</content>
    </entry>
    <entry>
        <id>335250663</id>
        <title>Tests are failing: websocket_server.py(73): RuntimeError: Websocket connection was not established</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335250663"/>
        <updated>1970-01-01T00:28:33.291Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
websocket_server.py(73): RuntimeError: Websocket connection was not established

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:api,operation,adapter,requestAdapter:requestAdapter:powerPreference=\"low-power\";forceFallbackAdapter=true
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:api,operation,adapter,requestDevice:features,known:feature=\"texture-compression-etc2\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:api,operation,adapter,requestAdapter:requestAdapter:powerPreference=\"_undef_\";forceFallbackAdapter=false
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:api,operation,adapter,requestDevice:features,known:feature=\"depth32float-stencil8\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:api,operation,adapter,requestAdapter:requestAdapter_no_parameters:


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/fcca08624adc9cd100eefbcd2fd3b97e

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334983290</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 1 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334983290"/>
        <updated>1970-01-01T00:28:33.291Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285946:1286444:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e1180871-7498-4576-b020-e159beb42758

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e1180871-7498-4576-b020-e159beb42758

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_social/load_social_vk_2018
       21.46%: 6490367.0 -&gt; 7883007.0 sizeInBytes

Top 1 affected measurements in win-11-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_social/load_social_vk_2018
       21.46%: 6490367.0 -&gt; 7883007.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1285945..1286444
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..a6857d71bd107af64d2245c68a280fe432cc179c
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/f591f2dcf1bfb00f25967d214776fee6b675e2ef..ae9e08dfffd5523ec17924f3b9fd1870d654d4fe</content>
    </entry>
    <entry>
        <id>335232637</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 1 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335232637"/>
        <updated>1970-01-01T00:28:33.291Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285946:1286767:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=0e13f88c-8e22-4e20-b38a-4236019672a5

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0e13f88c-8e22-4e20-b38a-4236019672a5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_news/load_news_bbc_2018
       38.82%: 5514883.0 -&gt; 7655593.0 sizeInBytes

Top 1 affected measurements in win-11-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_news/load_news_bbc_2018
       38.82%: 5514883.0 -&gt; 7655593.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1285945..1286767
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..d7b9eb181f7b87e499c58a50c70ecd4adf00396e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/f591f2dcf1bfb00f25967d214776fee6b675e2ef..83a1c92bb409cb16dfa2cb60f7f3064db388aca6</content>
    </entry>
    <entry>
        <id>335245682</id>
        <title>Parcel Tracking flow is shown on the webpage having no parcel info</title>
        <author>
            <name>hu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245682"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">App Version (from "Chrome Settings &gt; About Chrome"): 125.0.6422.1 Canary
iOS Version: 17.5
Device: iphone

Steps to reproduce: 
1. Visit https://en.m.wikipedia.org/wiki/File:Viet_Thanh_Nguyen_-_2015_National_Book_Festival.JPG

Observed behavior: 
The parcel tracking opt-in flow is shown.

Expected behavior: 
No parcel tracking opt-in flow is shown.

Frequency: 
5/5

Additional comments: 

Screenshots:
https://screenshot.googleplex.com/5CCCBdjSbssPDAs
https://screenshot.googleplex.com/AJPqHBJK8z3sjNQ</content>
    </entry>
    <entry>
        <id>335245511</id>
        <title>Flag expired : web-midi is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245511"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "web-midi" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245510</id>
        <title>Flag expired : vc-dlc-ui is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245510"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "vc-dlc-ui" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245509</id>
        <title>Flag expired : vc-background-replace is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245509"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "vc-background-replace" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245508</id>
        <title>Flag expired : use-fullscreen-insets-api-on-automotive is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245508"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "use-fullscreen-insets-api-on-automotive" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335008561</id>
        <title>Flag expired : use-fullscreen-insets-api is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335008561"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "use-fullscreen-insets-api" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245507</id>
        <title>Flag expired : upm-local-with-migration is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245507"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "upm-local-with-migration" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245346</id>
        <title>Flag expired : upm-local-no-migration is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245346"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "upm-local-no-migration" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245506</id>
        <title>Flag expired : upload-office-to-cloud is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245506"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "upload-office-to-cloud" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245505</id>
        <title>Flag expired : system-color-chooser is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245505"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "system-color-chooser" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245504</id>
        <title>Flag expired : sync-poll-immediately-on-every-startup is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245504"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "sync-poll-immediately-on-every-startup" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245503</id>
        <title>Flag expired : sync-chromeos-explicit-passphrase-sharing is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245503"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "sync-chromeos-explicit-passphrase-sharing" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245345</id>
        <title>Flag expired : spotlight-donate-new-intents is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245345"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "spotlight-donate-new-intents" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245344</id>
        <title>Flag expired : side-panel-pinning is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245344"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "side-panel-pinning" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245343</id>
        <title>Flag expired : shopping-icon-color-variant is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245343"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "shopping-icon-color-variant" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245502</id>
        <title>Flag expired : safe-browsing-new-gms-core-api-for-browse-url-database-check is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245502"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "safe-browsing-new-gms-core-api-for-browse-url-database-check" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245342</id>
        <title>Flag expired : restart-to-gain-access-to-keychain is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245342"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "restart-to-gain-access-to-keychain" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
    <entry>
        <id>335245341</id>
        <title>Flag expired : request-desktop-site-window-setting is expired in M126</title>
        <author>
            <name>ch...@chops-service-accounts.iam.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/335245341"/>
        <updated>1970-01-01T00:28:33.290Z</updated>
        <summary>-</summary>
        <content type="html">In accordance with //docs/flag_expiry.md, the flag "request-desktop-site-window-setting" has expired and been removed from the chrome://flags UI. This bug tracks cleaning up the code that implements this flag. Please help us clean up the codebase :) If you need help or more context please get in touch with flags-dev@chromium.org.

This bug should be used for removing the flag entry in the flag-metadata.json as well as the code related to the flag.

This bug is generated based on the list of expired flags in flag-metadata.json file as per refs/heads/main@{#1288173}

This flag has been marked as expiring in M126 or earlier. This bug has been opened for the Eng teams to clean up the references for the flag in the //chrome/browser/flag-metadata.json as well as references to that flag.

This is a friendly reminder to help get this clean up completed.

If you think this flag needs to be extended beyond this milestone, please follow these steps:
- If you see a flag listed as expiring that you want to keep, create a CL updating //chrome/browser/flag-metadata.json with an appropriate new expiration milestone.
- If you do this before the M126 branch you're all set; if you do it after the M126 branch you'll need to merge that CL to the M126 branch as well.

You can check the branch date for this milestone at https://chromiumdash.appspot.com/schedule</content>
    </entry>
</feed>