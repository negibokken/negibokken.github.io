<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.150Z</updated>
    <entry>
        <id>334281975</id>
        <title>When I open a new tab in Chrome, there is no Google search function anymore, only recent sites</title>
        <author>
            <name>sp...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334281975"/>
        <updated>1970-01-01T00:28:33.150Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open Chrome
2. New tab opens and search option is missing
3. 

# Problem Description
As above, very straightforward.  It has always worked for me on this PC, but stopped working today.

# Summary
When I open a new tab in Chrome, there is no Google search function anymore, only recent sites

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>334709645</id>
        <title>MetricsWebContentswObserver runs some event handlers with primary_page_ being nullptr</title>
        <author>
            <name>to...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334709645"/>
        <updated>1970-01-01T00:28:33.149Z</updated>
        <summary>-</summary>
        <content type="html">There seems to be a case that DidAcrivatedPreviewedPage() is called with primary_page_ being nullptr.
(See also crbug.com/333872739)
ReadyToCommitNavigation() may be done too as it already has a nullptr check.

We'd clarify what kind of combinations of conditions makes it happen.</content>
    </entry>
    <entry>
        <id>334275647</id>
        <title>Play store Eats all memory and CPU usage at 100%,  Updated to latest version no help.  </title>
        <author>
            <name>te...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334275647"/>
        <updated>1970-01-01T00:28:33.146Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Play store Eats all memory and CPU usage at 100%,  Uninstall Play store system returns to 14% CPU, and  low memory usage. 
  2. Updated system and play store to latest version,  no help.  
3.  problem occured after system update in October 2023,   Problem on multiple Chromebooks.  Even Brand new Chromebook on Ethernet

# Problem Description
Brand new Chromebook, OS updated to new version 123.0.6312.112 .  Anytime Play store is turned on CPU usage goes to 100% and stays there forever.  Extremely high memory usage too.  Uninstalling Play store brings the computer back to 14% cpu and Low memory usage.   Internet shows many people with same problem.     I have multiple Chromebooks and all are having the same problem. with Play store.       

# Additional Comments
Other chromebooks have the same problem.. Problem started in October... I see comments of people with the same issue. 

# Summary
Play store Eats all memory and CPU usage at 100%,  Updated to latest version no help.  

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334693405</id>
        <title>ninja 1.12.0 fails to build due to cmake requirement for tests</title>
        <author>
            <name>br...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334693405"/>
        <updated>1970-01-01T00:28:33.144Z</updated>
        <summary>-</summary>
        <content type="html">Unfortunately, we also use ninja to build cmake, which means there is a potential circular dependency.
</content>
    </entry>
    <entry>
        <id>334677245</id>
        <title>Fake Omnibox does not pin exactly when it reaches the top of the screen</title>
        <author>
            <name>th...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334677245"/>
        <updated>1970-01-01T00:28:33.141Z</updated>
        <summary>-</summary>
        <content type="html">When Scrolling, the fake omnibox should seamlessly pin to the top of the screen. But with #ios-magic-stack-collection-view  enabled, it has a noticeable glitch.</content>
    </entry>
    <entry>
        <id>334654429</id>
        <title>In Roblox I'm trying to edit the data-isunder13 varible and the code does not want to edit</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334654429"/>
        <updated>1970-01-01T00:28:33.141Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Make the code editable.
2. Tell me how do edit the HTML
3. 

# Problem Description
Ok I'm trying to set the data-isunder13 varible to false but it's not letting me, I tried going to the home file. Link is https://www.roblox.com/home and these stuff data-ispremiumuser="false"
          data-hasverifiedbadge="false"/&gt; I'm want to set it to true also but I just want it to permanently edit.

# Additional Comments
 data-isunder13 data-created data-ispremiumuser data-hasverifiedbadge Ok The is under 13 varibles would like to be set to false and the is premium user and verified badge I want to set it to true

# Summary
In Roblox I'm trying to edit the data-isunder13 varible and the code does not want to edit

# Custom Questions
#### Example URL: 
https://www.roblox.com/home

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: Content \
Chrome Channel: Dev \
Regression: No</content>
    </entry>
    <entry>
        <id>334279474</id>
        <title>[V8 Perf Sheriff]: 2 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279474"/>
        <updated>1970-01-01T00:28:33.140Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284827:1285282:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a51eff6e-8ecb-4429-8764-b745bfadf1e2

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a51eff6e-8ecb-4429-8764-b745bfadf1e2

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs_max/browse_media/browse_media_youtubetv_2019
       22.93%: 5.539 -&gt; 6.809 ms
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs/browse_media/browse_media_youtubetv_2019
       22.92%: 2.77 -&gt; 3.405 ms

Top 2 affected measurements in win-11-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs_max/browse_media/browse_media_youtubetv_2019
       22.93%: 5.539 -&gt; 6.809 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs/browse_media/browse_media_youtubetv_2019
       22.92%: 2.77 -&gt; 3.405 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: almuthanna@chromium.org, cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1284826..1285282
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/c2c9cf956aa38540e5a9731f91d0732d347a2d27..ac1a0c9ec71c6c9f7693767dc045f5494eb5d563
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/91b1cfbfa0fa689c0e73d3fe14fe85463f487329..ae53490d184c03116416a9c1025c40a34d37c3af</content>
    </entry>
    <entry>
        <id>334276822</id>
        <title>blink_webp_decoder_fuzzer: CHECK failure: WebPGetFeatures(consolidated_data_-&amp;gt;bytes(), consolidated_data_-&amp;gt;size(), &amp;featur</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334276822"/>
        <updated>1970-01-01T00:28:33.138Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=4858418696224768

Fuzzing Engine: libFuzzer
Fuzz Target: blink_webp_decoder_fuzzer
Job Type: libfuzzer_chrome_asan
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  WebPGetFeatures(consolidated_data_-&gt;bytes(), consolidated_data_-&gt;size(), &amp;featur
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=libfuzzer_chrome_asan&amp;range=1257008:1257014

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=4858418696224768

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>334110494</id>
        <title>Nested CSS back-drop filters do not work.</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334110494"/>
        <updated>1970-01-01T00:28:33.138Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to any Chromium-based browser and load your site.
2. View the area of your site that has a parent with a CSS backdrop-filter and a child with a different one.
3. Witness how the parent's backdrop filter completely negates any child backdrop blur from existing
3. 

# Problem Description
For any browser based on Chromium, whenever a user simply appends a child div (for example) to a parent div where both elements have different backdrop filter, the parent one works, and the child one is completely ignored due to some intentional design in Chromium which IS THE WRONG IMPLEMENTATION. This issue HAS BEEN REPORTED and is a huge issue for so many developers, but it is not being addressed. It works in FireFox and Safari, but not Chrome or Edge.

# Additional Comments
On behalf of all of the other developers behind this issue, we would seriously like to solve this. The way that it was implemented into Chromium makes it impossible to use correctly.

# Summary
Nested CSS back-drop filters do not work.

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>334110492</id>
        <title>ZWJ failed to be ligated in vertical texts.</title>
        <author>
            <name>si...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334110492"/>
        <updated>1970-01-01T00:28:33.137Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Create a textbox with vertical layout.
2. Download font TH-Times at http://cheonhyeong.com/English/download.html (in the package TH-Tshyn).
3. Put `こ ZWJ(U+200D) と` in that textbox (without space), and choose the font TH-Tshyn.
4. See if the two kana characters ligate or not.

# Problem Description
https://github.com/harfbuzz/harfbuzz/issues/4662

I discovered that, ZWJ (U+200D) could not be ligated with the characters with upright glyphs in vertical texts. For example, in my font, the sequence `こ ZWJ と` could be ligated as a single glyph (koto-ligature). In horizontal texts, it works well, however in vertical texts, it does not work.

Also, ZWJ is useful in Emoji sequences, and the Emoji characters have the value Vertical_Orientation=U, which should be shown as upright glyphs in vertical texts. Then, the Emoji sequences may also fail to ligate.

I would guess that maybe this is not an issue solely related to ZWJ, but all the characters with a rotated glyph could not be ligated with a upright glyph in vertical texts.

In #4661, Behdad Esfahbod told me that that issue is not a Harfbuzz issue but a Chrome issue. I would also like to ask whether this issue is a Harfbuzz issue or a Chrome issue. If it is a Harfbuzz issue, please check and fix it; or please notice me and I will post this issue to the Chrome issue registry. Thanks very much!

# Additional Comments
No.

# Summary
ZWJ failed to be ligated in vertical texts.

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334677306</id>
        <title>Tests are failing: ninja://chrome/test:browser_tests/PageLoadTrackerDecoratorTest.PageNodeLoadingState</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334677306"/>
        <updated>1970-01-01T00:28:33.136Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:browser_tests/PageLoadTrackerDecoratorTest.PageNodeLoadingState

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/1514813088fde516503944fa170cea1b

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334110491</id>
        <title>The default glyph forms with vo=Tr in vertical texts do not fit UAX#50.</title>
        <author>
            <name>si...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334110491"/>
        <updated>1970-01-01T00:28:33.133Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Create a textbox with vertical layout.
2. Put U+2329 and U+232A in that textbox, and choose a font without the OpenType `vert` feature to this two codepoints.
3. See the orientation of such characters (see the description below for detail).

# Problem Description
https://github.com/harfbuzz/harfbuzz/issues/4661

From http://www.unicode.org/reports/tr50/, we could know that, in vertical texts, the characters with a value Vertical_Orientation=Tr should be rotated 90 degrees clockwise as a fallback. That is, if we do not write anything in the OpenType `vert` feature, then a rotated glyph should be given, just the same as the characters with a value vo=R. But actually, Google Chrome show me an upright glyph for this kind of characters in default, which should be the behavior for the characters with a value vo=U or vo=Tu in principle.

Note that, when I proposed to add VS3 for Sibe form quotation marks, I also suggested to change their vo from R to Tr, and was agreed by the Script Encoding Working Group. If the issue I mentioned above still exists, then the quotation marks could not be shown as the expected glyphs in vertical texts, not only in Sibe texts, but also in English texts (if needed, for example a text mixing English and Chinese) and Chinese texts.

I used U+2329 `〈` and U+232A `〉` to test this issue. With vo=Tr and without any OpenType Layout, their default glyph form in vertical texts should be like `︿` and `﹀` but not `〈` and `〉`. Please check and fix this issue if possible.

# Additional Comments
No.

# Summary
The default glyph forms with vo=Tr in vertical texts do not fit UAX#50.

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334361201</id>
        <title>Ricardo Vega 9562580262 call me</title>
        <author>
            <name>ri...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334361201"/>
        <updated>1970-01-01T00:28:33.130Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:r="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xml:lang="en"&gt;
 &lt;head&gt;
  &lt;title&gt;Hedral's Home Page&lt;/title&gt;
  &lt;r:RDF&gt;
   &lt;Person xmlns="http://www.w3.org/2000/10/swap/pim/contact#"
           r:about="https://hedral.example.com/#"&gt;
    &lt;fullName&gt;Cat Hedral&lt;/fullName&gt;
    &lt;mailbox r:resource="mailto:hedral@damowmow.com"/&gt;
    &lt;personalTitle&gt;Sir&lt;/personalTitle&gt;
   &lt;/Person&gt;
  &lt;/r:RDF&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;My home page&lt;/h1&gt;
  &lt;p&gt;I like playing with string, I guess. Sister says squirrels are fun
  too so sometimes I follow her to play with them.&lt;/p&gt;
 &lt;/body&gt;
&lt;/html&gt;
from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>334275645</id>
        <title>Update </title>
        <author>
            <name>sz...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334275645"/>
        <updated>1970-01-01T00:28:33.126Z</updated>
        <summary>-</summary>
        <content type="html">Basic info:

* Build fingerprint: samsung/a53xnaeea/a53x:14/UP1A.231005.007/A536BXXS8DXC1:user/release-keys
* Android API level: 
* Crashed WebView version: 
* DevTools version: com.google.android.webview (124.0.6367.42/636704242)
* Application:  ()
* If this app is available on Google Play, please include a URL:

Steps to reproduce:

1.
2.
3.

Expected result:
(What should have happened?)

&lt;Any additional comments, you want to share&gt;"

---

**DO NOT CHANGE BELOW THIS LINE**

* Crash ID: http://crash/dd7f50423fd04ebc
* Instructions for triaging this report (Chromium members only): https://bit.ly/2SM1Y9t
</content>
    </entry>
    <entry>
        <id>334275644</id>
        <title>Pixel 6a NFC doesnt work</title>
        <author>
            <name>le...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334275644"/>
        <updated>1970-01-01T00:28:33.123Z</updated>
        <summary>-</summary>
        <content type="html">Pixel 6a NFC doesnt work. I made the Beta Update on Android 15 and now, some Apps report, that my phone doesnt use NFC technology. That isnt right. 

</content>
    </entry>
    <entry>
        <id>334275643</id>
        <title>New tab not visible if you have many pinned tabs and tab groups.</title>
        <author>
            <name>or...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334275643"/>
        <updated>1970-01-01T00:28:33.123Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  Create a dozen pinned tabs and tab groups
2.  Open a new tab

# Problem Description
The new tab does not become visible.

Video: https://drive.google.com/file/d/15aRmryurupY3eDeyNvc8WxZw4gAFVz7X/view?usp=drivesdk

# Summary
New tab not visible if you have many pinned tabs and tab groups.

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334278792</id>
        <title>app is imposter</title>
        <author>
            <name>rh...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334278792"/>
        <updated>1970-01-01T00:28:33.122Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:

Android OS version:

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")

Application: (package name or Play Store URL)

Application version:

Steps to reproduce:

1.
2.
3.

Expected result:

Actual result:

Did this work before? (last working WebView version, or N/A)

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>334251989</id>
        <title>Intl.Locale and the "und" language subtag</title>
        <author>
            <name>co...@renegade334.me.uk</name>
        </author>
        <link href="https://issues.chromium.org/issues/334251989"/>
        <updated>1970-01-01T00:28:33.119Z</updated>
        <summary>-</summary>
        <content type="html">The ICU C++ library has some special behaviour when parsing a Unicode BCP 47 locale identifier with language subtag "und", which most commonly arises when representing a BCP 47 language tag with no specified language.[[1]](https://unicode.org/reports/tr35/#Language_Tag_to_Locale_Identifier) ICU functions such as Locale::getLanguage() and uloc_getlanguage() will yield the empty string, rather than "und", when the underlying locale has the language subtag "und".

This causes a specification divergence in the current implementation of the Intl.Locale.prototype.language getter. In ECMA-402, this method asserts that the locale is a valid Unicode BCP 47 locale identifier (which by definition starts with a language subtag), and then returns the subtag; unlike the other Intl.Locale.prototype getters, the method should never return undefined.

The current V8 implementation calls Locale::getLanguage(), then runs a check for the empty string, in which case it returns undefined. The Intl.Locale constructor has already asserted that the locale identifier starts with a valid language subtag, so one would assume that this case would never occur, but the behaviour of "und" specifically violates this assumption.

```js
new Intl.Locale("und-US-u-co-emoji").language; // returns undefined; should return "und"
```</content>
    </entry>
    <entry>
        <id>334251988</id>
        <title>Google pay not working in UK</title>
        <author>
            <name>rw...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334251988"/>
        <updated>1970-01-01T00:28:33.118Z</updated>
        <summary>-</summary>
        <content type="html">Tried paying using my phone today and does not work. Tried going to NFC settings but cannot access them</content>
    </entry>
    <entry>
        <id>334278786</id>
        <title>def block_network_pattern(rows):     for i in range(rows):         for j in range(rows-i-1):             print(" ", end="")         for j in range(i+1):             print("*", end="")         print()  rows = 5 block_network_pattern(rows)def block_network_pattern(rows):     for i in range(rows):         for j in range(rows-i-1):             print(" ", end="")         for j in range(i+1):             print("*", end="")         print()  rows = 5 block_network_pattern(rows)def block_network_pattern(rows):     for i in range(rows):         for j in range(rows-i-1):             print(" ", end="")         for j in range(i+1):             print("*", end="")         print()  rows = 5 block_network_pattern(rows)def block_network_pattern(rows):     for i in range(rows):         for j in range(rows-i-1):             print(" ", end="")         for j in range(i+1):             print("*", end="")         print()  rows = 5 block_network_pattern(rows)def block_network_pattern(rows):     for i in range(rows):         for j in range(rows-i-1):             print(" ", end="")         for j in range(i+1):             print("*", end="")         print()  rows = 5 block_network_pattern(rows)def block_network_pattern(rows):     for i in range(rows):         for j in range(rows-i-1):             print(" ", end="")         for j in range(i+1):             print("*", end="")         print()  rows = 5 block_network_pattern(rows)V</title>
        <author>
            <name>va...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334278786"/>
        <updated>1970-01-01T00:28:33.109Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>334361200</id>
        <title>Detect DevTools using (new Error).message</title>
        <author>
            <name>aw...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334361200"/>
        <updated>1970-01-01T00:28:33.098Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 123.0.6312.123  
Lacros Version (if applicable): N/A  
OS: Win10, Linux  

## What steps will reproduce the problem?
1. Open test.html (in attachment).
2. In the page, open DevTools.

## What is the expected result?
Nothing happened.

## What happens instead?
`No DevTools` is shown.</content>
    </entry>
    <entry>
        <id>334556921</id>
        <title>Tests are failing: view_transition_browsertest.cc(158): Value of: static_cast&amp;lt;RenderWidgetHostViewBase*&amp;gt;( shell()-&amp;gt;web_contents()-&amp;gt;GetRenderWidgetHostView()) -&amp;gt;HasVie...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334556921"/>
        <updated>1970-01-01T00:28:33.094Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
view_transition_browsertest.cc(158): Value of: static_cast&lt;RenderWidgetHostViewBase*&gt;( shell()-&gt;web_contents()-&gt;GetRenderWidgetHostView()) -&gt;HasViewTransitionResourcesForTesting()\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://content/test:content_browsertests/ViewTransitionBrowserTest.OwnershipTransferredToNewRenderer


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/0cb6ebe55ae466e9a0ef2ffc9aae16b8

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334544007</id>
        <title>Tests are failing: ninja://chrome/test:browser_tests/AutoPictureInPictureWithVideoPlaybackBrowserTest.OverlaySettingViewIsShownForVideoPip</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334544007"/>
        <updated>1970-01-01T00:28:33.090Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:browser_tests/AutoPictureInPictureWithVideoPlaybackBrowserTest.OverlaySettingViewIsShownForVideoPip

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/ad1aa441493ed5f656db6508320a64ef

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334110485</id>
        <title>Google star rating aggregation mistake</title>
        <author>
            <name>gi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334110485"/>
        <updated>1970-01-01T00:28:33.089Z</updated>
        <summary>-</summary>
        <content type="html">Search this keyword in google "Reen naturals", in the rating section you could see 5 star, the review count is 6 which has a 1 star rating too, then how could it be 5 stars? this is partiality amongst your users
</content>
    </entry>
    <entry>
        <id>334279173</id>
        <title>CHECK failure: false. Should not try to serialize an invalid child: in blink_ax_tree_source.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279173"/>
        <updated>1970-01-01T00:28:33.088Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=6244788681506816

Fuzzer: marty_html_twiddler
Job Type: linux_asan_content_shell_drt
Platform Id: linux

Crash Type: CHECK failure
Crash Address: 
Crash State:
  false. Should not try to serialize an invalid child: in blink_ax_tree_source.cc
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=linux_asan_content_shell_drt&amp;range=1286968:1286969

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=6244788681506816

Issue filed automatically.

To reproduce this, please build the target in this report and run it against the reproducer testcase. Please use the GN arguments provided at bottom of this report when building the binary. 

If you have trouble reproducing, please also export the environment variables listed under "[Environment]" in the crash stacktrace.

If you have any feedback on reproducing test cases, let us know at https://forms.gle/Yh3qCYFveHj6E5jz5 so we can improve.
</content>
    </entry>
    <entry>
        <id>334539992</id>
        <title>Tests are failing: ninja://:blink\\_web\\_tests/%inspector-protocol/memory/sampling-native-profile-blink-gc.js%</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334539992"/>
        <updated>1970-01-01T00:28:33.088Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with a test name like: ninja://:blink\\_web\\_tests/%inspector-protocol/memory/sampling-native-profile-blink-gc.js%

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c057bc59db89efeb46b6cd5a97e6930f

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334535530</id>
        <title>Tests are failing: Failed to open unformatted USB drive: failed to OpenDir(USB Drive) on step 1: failed to call makeVisible() on the node: context deadline exceeded d...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334535530"/>
        <updated>1970-01-01T00:28:33.086Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
Failed to open unformatted USB drive: failed to OpenDir(USB Drive) on step 1: failed to call makeVisible() on the node: context deadline exceeded during a poll with timeout 2m0s; last error follows: Uncaught (in promise): \"failed to find node with properties: {name: /^USB Drive$/, role: treeItem, first: true, ancestor: {name: /^Files/, className: /\\\\bBrowserFrame\\\\b/, role: window, first: true}}\"

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chromeos:chrome_all_tast_tests/dlp.DataLeakPreventionRulesListFilesUSB.ash_blocked


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/7dfbde14e89fa88f8e009775301a2d6c

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334533036</id>
        <title>Tests are failing: Failed to delete file before pasting: failed to DeleteFileOrFolder(data.txt) on step 1: failed to select file on step 1: cdp.Runtime: CallFunctionO...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334533036"/>
        <updated>1970-01-01T00:28:33.085Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
Failed to delete file before pasting: failed to DeleteFileOrFolder(data.txt) on step 1: failed to select file on step 1: cdp.Runtime: CallFunctionOn: context deadline exceeded

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chromeos:chrome_all_tast_tests/dlp.DataLeakPreventionRulesListFilesUSB.ash_blocked


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/7cf747750b1f9536d395602d431f6acc

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334413741</id>
        <title>Nfc not working</title>
        <author>
            <name>d-...@hotmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334413741"/>
        <updated>1970-01-01T00:28:33.084Z</updated>
        <summary>-</summary>
        <content type="html">Nfc has no toggle or settings and I can't use Google wallet</content>
    </entry>
    <entry>
        <id>334413740</id>
        <title>Crash:Debug check failed: last_position.IsKnown() in ../src/profiler/profiler-listener.cc, line 418</title>
        <author>
            <name>qb...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334413740"/>
        <updated>1970-01-01T00:28:33.082Z</updated>
        <summary>-</summary>
        <content type="html">## Step
1. gn gen 0414 --args='is_debug=true use_afl=true is_asan=true optimize_for_fuzzing=true' --check 
2. ninja -C 0414 d8
3. ./d8 --allow-natives-syntax --fuzzing poc.js 

## PoC
```sh
console.profile();
for (let i = 0; i &lt; 5; i++) {
    async function* func(arg) {
      try {
        for (let j = 0; j &lt; 1; j++) {
          if (i == 4)
            %OptimizeOsr();
          func();
        }
      } catch (e) { }
      for (let j = 0; j &lt; 1; j++) {
        arg %= 0;
      }
    }
      %PrepareFunctionForOptimization(func);
    k = func();
    k.next();
  }
```
## Output
```sh
# Fatal error in ../src/profiler/profiler-listener.cc, line 418
# Debug check failed: last_position.IsKnown().

#FailureMessage Object: 0x7fc601d8f860
==== C stack trace ===============================

    /v8/0414/d8(__interceptor_backtrace+0x46) [0x564f3d38aec6]
    /v8/0414/libv8_libbase.so(v8::base::debug::StackTrace::StackTrace()+0x22) [0x7fc6056f4c72]
    /v8/0414/libv8_libplatform.so(+0x3567f) [0x7fc60562e67f]
    /v8/0414/libv8_libbase.so(V8_Fatal(char const*, int, char const*, ...)+0x2c8) [0x7fc6056b4178]
    /v8/0414/libv8_libbase.so(+0x4f68f) [0x7fc6056b368f]
    /v8/0414/libv8.so(v8::internal::ProfilerListener::AttachDeoptInlinedFrames(v8::internal::Handle&lt;v8::internal::Code&gt;, v8::internal::CodeDeoptEventRecord*)+0x96b) [0x7fc60a2883bb]
    /v8/0414/libv8.so(v8::internal::ProfilerListener::CodeDeoptEvent(v8::internal::Handle&lt;v8::internal::Code&gt;, v8::internal::DeoptimizeKind, unsigned long, int)+0x2b2) [0x7fc60a2878c2]
    /v8/0414/libv8.so(+0x3293a68) [0x7fc6089baa68]
    /v8/0414/libv8.so(+0x328b4a6) [0x7fc6089b24a6]
    /v8/0414/libv8.so(+0x1d970f2) [0x7fc6074be0f2]
Received signal 6
Aborted
```</content>
    </entry>
    <entry>
        <id>334179368</id>
        <title>Clean up kNoPreserveLastMutation feature</title>
        <author>
            <name>vm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334179368"/>
        <updated>1970-01-01T00:28:33.082Z</updated>
        <summary>-</summary>
        <content type="html">It looks like kNoPreserveLastMutation has been enabled by default for some time. Could we clean up and remove this feature flag to reduce feature checks?
</content>
    </entry>
    <entry>
        <id>334300041</id>
        <title>Extensions from Web Store cannot be installed on Headless New</title>
        <author>
            <name>cr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334300041"/>
        <updated>1970-01-01T00:28:33.080Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Visit an interactive version of --headless=new at https://browse.cloudtabs.net/signupless_sessions
2. Wait 15 seconds for the browser to load and go to (for example) https://chromewebstore.google.com/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh (Dark Reader) 
3. Click "Add to Chrome" and observe that no prompt is displayed, the the spinner never ends. 
4. Reload that page and observe "Add To Chrome" is unchanged.
5. Visit chrome://extensions and observe the extension is not installed as intended.
6. (optionally, but not advised unless using a burner account as this demo does not have security SLAs) sign in and confirm that the situation is again reproducible. Turn on developer mode and again observe the same surprising behavior.

# Problem Description
This will probably seem really unimportant, and like it violates key security, privacy and user consent concerns, but would it be a bad idea to enable some element of programmable extension installation?

Being able to simply install from client-side JS would introduce bad security, privacy and consent risks, and even enabling programmatic installation via existing extensions could be a cause for concern. But what if this capability was only enabled via a couple of command line flags, such as --headless=new --enable-extensions-devtools-domain, for example? 

Headless new enables the operation of extensions and their installation via the command line. In order to provide a better experience for users, extensions should be installable from the web store as normal. 

Chrome is the defacto platform for accessing the web, and it would benefit (albeit niche and minority) alternative markets for the use of chrome from a server for various purposes (RBI, reverse proxy, mashups, automation intervention, super-extensions, etc...) if Chrome was more open and programmable.

Overall, DevTools protocol provides a high degree of interoperability and instrumentability of chrome. Lacking however is any "Extensions" domain, or "UIDialog" domain, with useful methods such as for example, "Extensions.acceptInstallPrompt", or "UIDialog.closeDialog" to interact with the types of UI dialogs raised by webstore installs, bookmarks and crucial aspects of the browsing experience.

In our case, we could reinvent the wheel and build an alternative UI saga to permit extension installation with "close to native" UX, but it seems it would be better for openness, and support of these alternative approaches to running and using chrome that benefit the (again admittedly for now niche and minority) consumer in particular markets. 

If there's nothing you can do about this, I totally understand, and no worries if you're even too busy to reply, just thanks for reading this far!

# Summary
Extensions from Web Store cannot be installed on Headless New

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334508740</id>
        <title>Tests are failing: autofill_interactive_uitest.cc(3840): Mock function called more times than expected - returning directly.\n Function call: OnFormSubmittedImpl(@000...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334508740"/>
        <updated>1970-01-01T00:28:33.077Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
autofill_interactive_uitest.cc(3840): Mock function called more times than expected - returning directly.\n    Function call: OnFormSubmittedImpl(@0000786C01588B00 shipping https://127.0.0.1:51747/internal/test_url_path https://127.0.0.1:51747/success.html https://127.0.0.1:51747 Fields:label='Name:' unique_Id=7821B9E8621E069EE3A866B832592F83_4 origin='https://127.0.0.1:51747' name='name' id_attribute='name' name_attribute='' value='' control='kInputText' autocomplete='' parsed_autocomplete='' placeholder='' max_length=4294967295 css_classes='' autofilled=0 check_status=kNotCheckable is_focusable=0 should_autocomplete=1 role=kOther text_direction=2 is_enabled=1 is_readonly=0 user_input= properties_mask=4 label_source=kCombined bounds=0,0 0x0,label='Address:' unique_Id=7821B9E8621E069EE3A866B832592F83_5 origin='https://127.0.0.1:51747' name='address' id_attribute='address' name_attribute='' value='WA123 Main Road' control='kInputText' autocomplete='' parsed_autocomplete='' placeholder='' max_length=429496729...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.SameDocumentNavigation
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.ProbableSubmission
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.DomMutationAfterXhr
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.XhrSucceededAndHideForm
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.Submission


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/4944a640323f294f7c608dbe0e069777

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334251985</id>
        <title>chrome/electron cursor stuck at the default pointer arrow tested under kde wayland</title>
        <author>
            <name>wa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334251985"/>
        <updated>1970-01-01T00:28:33.077Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. start chromium with -enable-features=UseOzonePlatform -ozone-platform=wayland
2. Go to any webpage (eg. wikipedia)
3. select any chunk of text using the cursor
4. Drag the text inside and drop it anywhere inside chromium

# Problem Description
The cursor icon gets stuck as the default arrow. It doesn't change to the hand cursor anymore when hovering over hyperlinks, nor does it change to the vertical line cursor when in text mode. The only way to reset the cursor to normal behavior is to click on the panel or inside a different application, then return to Chromium.

This issue is sometimes triggered spontaneously, not necessarily with the above maneuver. However, I found that I can consistently replicate this behavior using that maneuver, hence I mentioned it in the reproduction section above.

# Additional Comments
This by the way doesn't happen under x11 it only happens under wayland. 

# Summary
chrome/electron cursor stuck at the default pointer arrow tested under kde wayland

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334275639</id>
        <title>Mobile App triggers frame-src Content-Security-Policy frame-src</title>
        <author>
            <name>da...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334275639"/>
        <updated>1970-01-01T00:28:33.076Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open a popup containing a pdf on a site with csp
2. Pdf is not loaded because of frame src violation

# Problem Description
I have the following CSP for frame-src:
frame-src  'self' *.MYWEBSITE.it *.youtube-nocookie.com *.youtube.com *.google.com *.paypal.com *.braintreegateway.com *.braintree-api.com;

When i try to load a popup iframe of a pdf file:
- It works fine on all Desktop Browser
- It works fine on all Mobile Browser:
       - expect Google Chrome

Google Chrome Mobile triggers a Content-Security-Policy violation on directive "frame-src". 

# Summary
Mobile App triggers frame-src Content-Security-Policy frame-src

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334276820</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 8 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334276820"/>
        <updated>1970-01-01T00:28:33.072Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286081:1286444:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=15287a8f-6f4d-4189-94a7-f32b0de8304b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=15287a8f-6f4d-4189-94a7-f32b0de8304b

Top 1 regressions (out of 2, with 1 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_search/load_search_amazon_2018
       22.84%: 4790797.0 -&gt; 5884968.0 sizeInBytes

Top 1 affected measurements in lacros-x86-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_search/load_search_amazon_2018
       22.84%: 4790797.0 -&gt; 5884968.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/af855c22b402aa717865c27c142bd76bf48a66e2..7157134631283d7cce35ae4c7c54ecddafbb0162
  Chromium Commit Position: https://crrev.com/1286107..1286384
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..f16922ec4c190b96c206d983f110ecb0c88f9561
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/0567fc17863c733a58907e561ef2fdcba53c17f8..41b4bf97c15b5dce6d5dd7dd0624c232889217ce</content>
    </entry>
    <entry>
        <id>334192359</id>
        <title>33446y</title>
        <author>
            <name>ta...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334192359"/>
        <updated>1970-01-01T00:28:33.072Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Gd
2. Hd7
3. Vf

# Problem Description
Singin

# Additional Comments
New

# Summary
33446y

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>334279470</id>
        <title>[Blink CSS]: 1 regressions in blink_perf.css</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279470"/>
        <updated>1970-01-01T00:28:33.072Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286627:1286681:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1d153a24-94fc-4099-9bfe-16a82058af22

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1d153a24-94fc-4099-9bfe-16a82058af22

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.css/CSSPropertyUpdateValue/CSSPropertyUpdateValue.html
       13.19%: 7518.8003 -&gt; 6526.7864 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.css/CSSPropertyUpdateValue/CSSPropertyUpdateValue.html
       13.19%: 7518.8003 -&gt; 6526.7864 unitless

Regressions grouped by blink_perf.css includes data from the following benchmarks with listed owners:
  blink_perf.css: andruud@chromium.org, futhark@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/111f01a8ae74e8e1d875cea64150d5306b677850..1903f25963be9df9cb3c9cfbb9d82766b1691dd4
  Chromium Commit Position: https://crrev.com/1286626..1286681
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a6857d71bd107af64d2245c68a280fe432cc179c..a6857d71bd107af64d2245c68a280fe432cc179c
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/bdfcaba85b3496ca1c799ecb306503fc40aff86b..bdfcaba85b3496ca1c799ecb306503fc40aff86b</content>
    </entry>
    <entry>
        <id>334281970</id>
        <title>issue</title>
        <author>
            <name>vo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334281970"/>
        <updated>1970-01-01T00:28:33.065Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>334300040</id>
        <title>Clicking the "Open Default Tab" button results in ERR_INVALID_URL and no default Chrome tab opening</title>
        <author>
            <name>ya...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334300040"/>
        <updated>1970-01-01T00:28:33.060Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open a new tab with Google Earth View installed
2. Click the three lines in the top right corner and click "Open Default Tab"

# Problem Description
The default Google Chrome tab should be opened when this button is clicked. Instead, it opens the page that looks like: https://i.imgur.com/cp7gjpj.png and has the text of: 
This site can’t be reached 
The webpage at chrome-search://local-ntp/local-ntp.html might be temporarily down or it may have moved permanently to a new web address.
ERR_INVALID_URL

The erroneous link in the URL is: chrome-search://local-ntp/local-ntp.html

# Additional Comments
The first image is the error page when clicking the button, and the second image is the new tab button that I clicked.

# Summary
Clicking the "Open Default Tab" button results in ERR_INVALID_URL and no default Chrome tab opening

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

#### WebStore page: 
https://chromewebstore.google.com/detail/earth-view-from-google-ea/bhloflhklmhfpedakmangadcdofhnnoh

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>334163257</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334163257"/>
        <updated>1970-01-01T00:28:33.060Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286385:1286449:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=06f45b11-3a4f-451e-8ee0-8c9e7489d0b6

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=06f45b11-3a4f-451e-8ee0-8c9e7489d0b6

Top 1 regressions (out of 2, with 1 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cwv:first_contentful_paint_avg/load_media/load_media_google_images_2018
      124.68%: 315.0 -&gt; 707.75 ms

Top 1 affected measurements in lacros-x86-perf:
  - system_health.common_desktop/cwv:first_contentful_paint_avg/load_media/load_media_google_images_2018
      124.68%: 315.0 -&gt; 707.75 ms

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/7157134631283d7cce35ae4c7c54ecddafbb0162..d9800f596e164d07d1ab428800d53f2053ea94f3
  Chromium Commit Position: https://crrev.com/1286384..1286449
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/f16922ec4c190b96c206d983f110ecb0c88f9561..a6857d71bd107af64d2245c68a280fe432cc179c
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/41b4bf97c15b5dce6d5dd7dd0624c232889217ce..ae9e08dfffd5523ec17924f3b9fd1870d654d4fe</content>
    </entry>
    <entry>
        <id>333961069</id>
        <title>Saved Mhtml of GitHub looks bad</title>
        <author>
            <name>ji...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961069"/>
        <updated>1970-01-01T00:28:33.060Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 123
Here is an Mhtml that I saved on my Chromebook.
Note that I have compressed it. You will need to uncompress it to have a look at it.
As you see the words "Open Location Code Specification" are jammed into the top of the page.</content>
    </entry>
    <entry>
        <id>334413739</id>
        <title>Malicious actors exploit browser vulnerabilities to induce users to download files unwittingly, risk</title>
        <author>
            <name>wa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334413739"/>
        <updated>1970-01-01T00:28:33.057Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Chrome_123.0.6312.100.apk
2. click https://tinyurl.com/bdctk22z
3. Note. There is no alert requesting permission to download this file

# Problem Description

Hello team chromuim,

 I've highlighted a technique potentially used by malicious actors to induce users to download files or malicious software without their consent by exploiting a browser-level vulnerability. 

For comparison, I also used another Android browser called Phoenix. I noticed a significant difference in behavior between the two browsers regarding file downloads. With Phoenix, users are informed before any download action, with a message indicating the name of the file to be downloaded.

However, with Chrome, the alert only appears if you try to download a file that you have already downloaded. It's only then that the user becomes aware of the existence of a similar file already downloaded. This difference in behavior could potentially expose Chrome users to additional security risks, as they may be misled about the nature of the files they are downloading.
For the purposes of these tests, I'm attaching the Phoenix application that I used to make comparisons with Chrome. I hope this information will be useful for evaluating and improving the security of Chrome.

# Summary
Malicious actors exploit browser vulnerabilities to induce users to download files unwittingly, risk

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333952131</id>
        <title>@tabs, @bookmarks, @history shortcuts NO longer editable which REDUCES productivity a lot.</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333952131"/>
        <updated>1970-01-01T00:28:33.056Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to Chrome settings
2. Click Search Engine menu from left 
3. Click Manage search engines and site search
4. Scroll down to Site Search section
5. There are not edit options for @tabs, @bookmarks and @history search shortcuts

# Problem Description
Previously @tabs, @bookmarks, and @history search shortcuts were editable. With the change option, a user could change the shortcuts to something easier to type and faster to get the results. 

For example, I changed them to single-character shortcuts, like @tabs -&gt; t, @bookmarks -&gt; b, and @history -&gt; h. 

The default shortcuts (@tabs, @bookmarks, and @history) require lots of typing costing time and energy. For power users who use these shortcuts ~100 times a day, this is a huge regression of user experience. 

The Chrome team can argue that by just typing @ - Chrome shows the list of search options starting with @, then the user needs to select the preferred shortcut option by arrow keys, and finally the user can start typing to get the desired results! Please understand this is hugely inefficient.

Also, to type the @ the user needs to press two keys (shift + number 2), requiring both ring fingers, those are not the strongest fingers to use after a long hours of typing.

Instead, like before, if we could change the shortcuts to a single character, we could just hit the character and space, and start typing to get the results. 

Chrome already had the feature. Please do a favor to us by bringing the edit feature for (@tabs, @bookmarks, and @history) shortcuts again. 

# Summary
@tabs, @bookmarks, @history shortcuts NO longer editable which REDUCES productivity a lot.

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333961068</id>
        <title>Inconsistent Support for fcitx5 in Google Chrome vs. Chromium on Linux Wayland Sway</title>
        <author>
            <name>li...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333961068"/>
        <updated>1970-01-01T00:28:33.054Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open a terminal in a Linux Wayland Sway environment.
2. Execute the following commands to try initiating fcitx5 in Google Chrome:
```
google-chrome-unstable --enable-wayland-ime --enable-feature=UseOzonPlatform --ozone-platform=wayland
google-chrome-unstable --gtk-version=4 --enable-feature=UseOzonPlatform --ozone-platform=wayland
```
Both commands fail to activate fcitx5.
3. Execute the following commands to try initiating fcitx5 in Chromium:
```
chromium --enable-wayland-ime --enable-feature=UseOzonPlatform --ozone-platform=wayland
chromium --gtk-version=4 --enable-feature=UseOzonPlatform --ozone-platform=wayland
```
The command with --gtk-version=4 successfully activates fcitx5 in Chromium.

# Problem Description
chrome-dev: 	125.0.6396.3
chromium: 124.0.6367.49

I am experiencing issues with fcitx5 (text-input-v3) support when using Google Chrome and Chromium on a Linux Wayland Sway environment. Similar launch parameters yield different results; fcitx5 cannot be activated in Chrome, whereas it works in Chromium.

# Summary
Inconsistent Support for fcitx5 in Google Chrome vs. Chromium on Linux Wayland Sway

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Dev \
Regression: Yes</content>
    </entry>
    <entry>
        <id>334279451</id>
        <title>[Skia Desktop Memory Sheriff]: 1 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279451"/>
        <updated>1970-01-01T00:28:33.054Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285946:1286273:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=71c9d1c6-7b41-48e9-ab5c-5ac0d82b5570

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=71c9d1c6-7b41-48e9-ab5c-5ac0d82b5570

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/browse_media/browse_media_youtubetv_watch_2020
       55.37%: 378009.0 -&gt; 587298.5 sizeInBytes

Top 1 affected measurements in win-11-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/browse_media/browse_media_youtubetv_watch_2020
       55.37%: 378009.0 -&gt; 587298.5 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1285945..1286273
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/f591f2dcf1bfb00f25967d214776fee6b675e2ef..69eafa67829f10ed19856b44b304629571069661</content>
    </entry>
    <entry>
        <id>333952130</id>
        <title>Crash when opening tapjoy in app</title>
        <author>
            <name>ka...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333952130"/>
        <updated>1970-01-01T00:28:33.052Z</updated>
        <summary>-</summary>
        <content type="html">Basic info:

* Build fingerprint: samsung/g0qsqw/g0q:14/UP1A.231005.007/S906USQS4DXBG:user/release-keys
* Android API level: 34
* Crashed WebView version: 125.0.6416.0
* DevTools version: com.google.android.webview.canary (125.0.6416.0/641600033)
* Application: jp.ne.ambition.googleplay_moe_glb (34)
* If this app is available on Google Play, please include a URL:

Steps to reproduce:

1. Open app
2. Press "Free AP" banner
3. Crash

Expected result:
Tapjoy should open and display offers for in-game currency.

&lt;Any additional comments, you want to share&gt;"

---

**DO NOT CHANGE BELOW THIS LINE**

* Crash ID: http://crash/77f9a7488889d6de
* Instructions for triaging this report (Chromium members only): https://bit.ly/2SM1Y9t
</content>
    </entry>
    <entry>
        <id>334408263</id>
        <title>Editing extension listing with updated homepage URL completely removes homepage URL from extension info</title>
        <author>
            <name>13...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334408263"/>
        <updated>1970-01-01T00:28:33.051Z</updated>
        <summary>-</summary>
        <content type="html">I submitted edits to the description page of several of my extensions in the following manner:

Extensions had homepage URL links to the code projects on Github.
 - Updated the homepage URL links to go to a site that was not the code hosting site such as Github.
Changes were approved, the new listing published, and **the homepage link disappeared completely from the extensions' listings**.
 - After the new homepage URL was not displayed at all, resubmitted edits to the extension pages, added back the previous homepage links that went to the code hosting site. Change was approved and listing published.

**Now there are no homepage links on any of the listings.**

The edits were made from the developer dashboard in Microsoft Edge.

I believe this is a regression likely caused by one of four things:
 - changing to a site that was not code hosting caused the homepage URL link to get removed, and it wasn't restored even after changing it back in the listing.
 - Using Microsoft Edge to edit caused the bug.
 - Editing only the extension listing content without uploading a new package version removed the homepage URL.
 - This is simply a regression and _all_ new extension updates will nuke the homepage URL, regardless of the homepage URL host, and whether a new package/version of the extension was uploaded.

[NO_TRAIN]::</content>
    </entry>
    <entry>
        <id>334281966</id>
        <title>Self protection and exploration </title>
        <author>
            <name>al...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334281966"/>
        <updated>1970-01-01T00:28:33.051Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Phishing 
2. 
3. 

# Problem Description
I have notice background checks for unauthorised access and account information collected 

# Summary
Self protection and exploration 

# Additional Data
Category: Developer Tools \
Chrome Channel: Canary \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334413737</id>
        <title>у от</title>
        <author>
            <name>ry...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334413737"/>
        <updated>1970-01-01T00:28:33.051Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:

Android OS version:

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")

Application: (package name or Play Store URL)

Application version:

Steps to reproduce:

1.
2.
3.

Expected result:

Actual result:

Did this work before? (last working WebView version, or N/A)

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
</feed>