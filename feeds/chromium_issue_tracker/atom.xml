<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-28T20:08:55.484Z</updated>
    <entry>
        <id>327247471</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247471"/>
        <updated>2024-02-28T20:08:55.484Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266167:1266183:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=dbc9fd5f-f44a-4367-ba3d-42289c7a4c55

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=dbc9fd5f-f44a-4367-ba3d-42289c7a4c55

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/css_transitions_triggered_new_element
        2.49%: 24.0465 -&gt; 24.64525 

Top 1 affected measurements in android-pixel4-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/css_transitions_triggered_new_element
        2.49%: 24.0465 -&gt; 24.64525 

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>327269145</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327269145"/>
        <updated>2024-02-28T20:05:01.812Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266321:1266338:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2c8c76e0-f271-4937-8be0-8ad9442d1373

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2c8c76e0-f271-4937-8be0-8ad9442d1373

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cwv:first_contentful_paint_avg/load_media/load_media_facebook_photos_2018
       33.33%: 205.5 -&gt; 274.0 ms

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - system_health.common_desktop/cwv:first_contentful_paint_avg/load_media/load_media_facebook_photos_2018
       33.33%: 205.5 -&gt; 274.0 ms

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/0b674d415f8758284cfca9432e2fcbbd46183b40..83f05c797a6051d6c4e2e66effb3012c75a8256d
  Chromium Commit Position: https://crrev.com/1266320..1266338
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/5517643d850250c24aa3f68fd2328c2e6018f28d..45524bc2f627d7733ed31196b8c1eb7d7db391e7
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2825f0a7bbd08f8ee466291d7ee7a77fa7838e03..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327458808</id>
        <title>Webdriver command for "Use Another Account" (single idp for now)</title>
        <author>
            <name>cb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327458808"/>
        <updated>2024-02-28T19:58:44.830Z</updated>
        <summary>-</summary>
        <content type="html">https://docs.google.com/document/d/1dRNKg-xEE9VlvTvuiu3cjN3FlAgoRwA4rPr8UOyiOsk/edit?tab=t.0

I think reusing ConfirmIdpLogin makes the most sense</content>
    </entry>
    <entry>
        <id>327457401</id>
        <title>PDF viewer doesn't load correctly when JavaScript is disabled</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327457401"/>
        <updated>2024-02-28T19:42:05.665Z</updated>
        <summary>-</summary>
        <content type="html">Repro steps:
1. Enable OOPIF PDF (chrome://flags/#pdf-oopif)
2. Don't allow sites to use JavaScript (chrome://settings/content/javascript)
3. Open a PDF (https://www.pdf995.com/samples/pdf.pdf)

Expected behavior: PDF viewer loads as normal.
Actual behavior: Only a gray page is loaded.

The PDF extension JavaScript isn't running, so the PDF viewer setup doesn't continue.</content>
    </entry>
    <entry>
        <id>327457581</id>
        <title>Cross-building official win/arm64 on a linux host vs v8 builtin PGO</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327457581"/>
        <updated>2024-02-28T19:41:21.160Z</updated>
        <summary>-</summary>
        <content type="html">```sh
$ cat out/gnwin/args.gn 
target_os = "win"
target_cpu = "arm64"
is_official_build = true
```

```sh
$ time ninja -C out/gnwin mini_installer.exe
ninja: Entering directory `out/gnwin'
[1081/66871] ACTION //chrome/common/win:eventlog_messages(//build/toolchain/win:win_clang_arm64)
/usr/local/google/home/thakis/src/chrome/src/out/gnwin/../../build/win/message_compiler.py:11: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives
  import distutils.dir_util
[66106/66871] ACTION //v8:run_mksnapshot_default(//build/toolchain/win:win_clang_arm64)
FAILED: gen/v8/embedded.S snapshot_blob.bin 
python3 ../../v8/tools/run.py ./clang_x64/mksnapshot --turbo_instruction_scheduling --stress-turbo-late-spilling --target_os=win --target_arch=arm64 --embedded_src gen/v8/embedded.S --turbo-profiling-input ../../v8/tools/builtins-pgo/profiles/x64-rl.profile --abort-on-bad-builtin-profile-data --reorder-builtins --embedded_variant Default --random-seed 314159265 --startup_blob snapshot_blob.bin --no-native-code-counters


#
# Fatal error in , line 0
# Rejected profile data for Call_ReceiverIsNullOrUndefined_Baseline_Compact due to function change. Please use tools/builtins-pgo/generate.py to refresh it.
#
#
#
#FailureMessage Object: 0x7fff623bfe50
==== C stack trace ===============================

    ./clang_x64/mksnapshot(+0x19b65b3) [0x55a435bf95b3]
Return code is -5
ninja: build stopped: subcommand failed.
```


Is this expected to work? https://source.chromium.org/chromium/chromium/src/+/main:v8/src/compiler/pipeline.cc;l=3460?q=%22Rejected%20profile%20data%20for%20%22&amp;ss=chromium sounds like as long as both host and target are 64-bit, things should be fine.</content>
    </entry>
    <entry>
        <id>327409885</id>
        <title>
Mouse events not firing when dragging from iframe to outer element in Chrome 122+</title>
        <author>
            <name>an...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327409885"/>
        <updated>2024-02-28T19:31:33.507Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Environment Setup:
• Browser Version: Chrome 122+
• Comparison Browser: Edge (Chromium version 121)

2. Initial State:
• Create a webpage containing an iframe. The iframe includes draggable elements, and the outer page includes drop targets outside the iframe.

3. Reproduction Steps:
• Start with dragging an element inside the iframe.
• Attempt to drag the element outside the iframe to interact with elements or targets on the outer page.

4. Expected Behavior:
• The mouse events (e.g., mouseover, drag, drop) should fire consistently, allowing for interaction between the dragged element from the iframe and the drop targets outside of it.

5. Observed Behavior:
• In Chrome 122+, mouse event handlers are not invoked when dragging from inside the iframe to outside, affecting interactions like hovering over or dropping onto outer elements. This behavior diverges from expected and differs from earlier versions (e.g., Chromium version 120 on Edge).

6. Additional Observations:
• The mouse events are not triggered during the drag operation outside the iframe, but if the mouse button is released, the events are then fired, leading to an inconsistent and unexpected user experience.

# Problem Description
Hello! 

My name is Tai, and I'm an engineer at Webflow. I wanted to report a regression we're noticing in our Designer editor app. 

Our application architecture involves rendering the design editor within an iframe and surrounding it with tools in the main document, some of which overlay the iframe to facilitate direct on-canvas manipulation. A feature affected by this update is our Grid overlay tool, which allows users to drag and drop elements into different grid cells directly on the canvas. 

Previously, our users could start a mousedown event within the iframe (e.g. selecting an element to move) and drag it to an overlay in the main document (e.g. our Grid overlay), where the mouseenter event on the overlay would fire, allowing them to drop the element into a new grid cell.  After the update, the mouseenter event on the overlay no longer fires when the mouse event starts within the Iframe. This prevents the grid overlay feature from recognizing elements being dragged into it, which breaks the drag-and-drop experience. Users can no longer effectively place elements into specific cells of the grid, limiting the usability of our design tool.

Here is a video walkthrough of the issue: https://cln.sh/sTw912yJ
I've attached a simple html file that outlines this issue that you can test on version 121 vs the latest.

# Summary

Mouse events not firing when dragging from iframe to outer element in Chrome 122+

# Custom Questions
#### Which component does this fall under?
Blink&gt;INPUT

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327447108</id>
        <title>Fonts completely changed</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327447108"/>
        <updated>2024-02-28T19:07:27.867Z</updated>
        <summary>-</summary>
        <content type="html">Upgraded to Android 14 and it's changed my default font which was a nice thin Sans to a thick chunky godawful looking font and i can't now find any other fonts the same as i had. Ruined my phone completely as it's also changed the clock so it's gigantic, which i absolutely hate. Not only that it's enlarged a lot of the app fonts too so they look massive and there's no way of changing it. Please sort this out.</content>
    </entry>
    <entry>
        <id>327446719</id>
        <title>Test failure in win-upload-clang due to profdata version mismatch</title>
        <author>
            <name>ay...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327446719"/>
        <updated>2024-02-28T19:05:33.500Z</updated>
        <summary>-</summary>
        <content type="html">example build: https://ci.chromium.org/ui/p/chromium/builders/try/win_upload_clang/4896/overview

```
 ********************
 Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90
 FAIL: LLVM :: tools/llvm-profdata/raw-64-bits-le.test (69244 of 74843)
 ******************** TEST 'LLVM :: tools/llvm-profdata/raw-64-bits-le.test' FAILED ********************
 Exit Code: 2
 
 Command Output (stdout):
 --
 # RUN: at line 1
 printf '\201rforpl\377' &gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\201rforpl\377'
 # RUN: at line 2
 printf '\12\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\12\0\0\0\0\0\0\0'
 # RUN: at line 3
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 4
 printf '\2\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\2\0\0\0\0\0\0\0'
 # RUN: at line 5
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 6
 printf '\3\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\3\0\0\0\0\0\0\0'
 # RUN: at line 7
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 8
 printf '\4\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\4\0\0\0\0\0\0\0'
 # RUN: at line 9
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 10
 printf '\20\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\20\0\0\0\0\0\0\0'
 # RUN: at line 11
 printf '\0\0\4\0\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\1\0\0\0'
 # RUN: at line 12
 printf '\0\0\4\0\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\3\0\0\0'
 # RUN: at line 13
 printf '\0\0\4\0\2\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\2\0\0\0'
 # RUN: at line 14
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 15
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 16
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 18
 printf '\254\275\030\333\114\302\370\134' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\254\275\030\333\114\302\370\134'
 # RUN: at line 19
 printf '\1\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\1\0\0\0\0\0\0\0'
 # RUN: at line 20
 printf '\0\0\4\0\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\1\0\0\0'
 # RUN: at line 21
 printf '\0\0\4\0\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\3\0\0\0'
 # RUN: at line 22
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 23
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 24
 printf '\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\1\0\0\0'
 # RUN: at line 25
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 26
 printf '\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\3\0\0\0'
 # RUN: at line 28
 printf '\067\265\035\031\112\165\023\344' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\067\265\035\031\112\165\023\344'
 # RUN: at line 29
 printf '\02\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\02\0\0\0\0\0\0\0'
 # RUN: at line 30
 printf '\xc8\xff\3\0\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\xc8\xff\3\0\1\0\0\0'
 # RUN: at line 31
 printf '\xc3\xff\3\0\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\xc3\xff\3\0\3\0\0\0'
 # RUN: at line 32
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 33
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 34
 printf '\02\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\02\0\0\0'
 # RUN: at line 35
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 36
 printf '\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\1\0\0\0'
 # RUN: at line 38
 printf '\023\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\023\0\0\0\0\0\0\0'
 # RUN: at line 39
 printf '\067\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\067\0\0\0\0\0\0\0'
 # RUN: at line 40
 printf '\101\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\101\0\0\0\0\0\0\0'
 # RUN: at line 41
 printf '\125\125\125\052' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\125\125\125\052'
 # RUN: at line 42
 printf '\7\0foo\1bar\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\7\0foo\1bar\0\0\0\0\0\0\0'
 # RUN: at line 44
 c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\llvm-profdata.exe show C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp -all-functions -counts | c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\filecheck.exe C:\b\s\w\ir\cache\builder\src\third_party\llvm\llvm\test\tools\llvm-profdata\raw-64-bits-le.test
 # executed command: 'c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\llvm-profdata.exe' show 'C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp' -all-functions -counts
 # .---command stderr------------
 # | error: C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp: raw profile version mismatch: Profile uses raw profile format version = 2573; expected version = 10
 # | PLEASE update this tool to version in the raw profile, or regenerate raw profile with expected version.
 # `-----------------------------
 # error: command failed with exit status: 1
 # executed command: 'c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\filecheck.exe' 'C:\b\s\w\ir\cache\builder\src\third_party\llvm\llvm\test\tools\llvm-profdata\raw-64-bits-le.test'
 # .---command stderr------------
 # | FileCheck error: '&lt;stdin&gt;' is empty.
 # | FileCheck command line:  c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\filecheck.exe C:\b\s\w\ir\cache\builder\src\third_party\llvm\llvm\test\tools\llvm-profdata\raw-64-bits-le.test
 # `-----------------------------
 # error: command failed with exit status: 2
 
 --
```</content>
    </entry>
    <entry>
        <id>327337532</id>
        <title>Cursor is loosing the focus while switching the IME and adding data in chrome web app.
</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337532"/>
        <updated>2024-02-28T19:02:02.102Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Execute the below batch file in chrome app from any online web app edit text field. After some times data will not enter into web app edit text field. Cursor looses the focus.

:loop
adb shell ime set com.touchtype.swiftkey/com.touchtype.KeyboardService

adb shell settings get secure default_input_method

adb shell input text "PrintingDataOnWebApp"

adb shell settings put secure default_input_method null
adb shell settings get secure default_input_method
goto loop
 
 

# Problem Description
From logs Its showing inputType is becoming null ,initialSelStart=-1 and  initialSelEnd=-1 which is causing the issue.

GoogleInpu...hodService com...gle.android.inputmethod.latin  I  GoogleInputMethodService.onStartInput():1930 onStartInput(EditorInfo{inputType=0x0(NULL) imeOptions=0x12000000 privateImeOptions=null actionName=UNSPECIFIED actionLabel=null actionId=0 initialSelStart=-1 initialSelEnd=-1 initialCapsMode=0x0 hintText=null label=null packageName=com.android.chrome fieldId=-1 fieldName=null extras=null}, false)

# Summary
Cursor is loosing the focus while switching the IME and adding data in chrome web app.

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>327446425</id>
        <title>roll clang again</title>
        <author>
            <name>ay...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327446425"/>
        <updated>2024-02-28T19:01:45.084Z</updated>
        <summary>-</summary>
        <content type="html">previous roll: https://issues.chromium.org/issues/326058931</content>
    </entry>
    <entry>
        <id>327442056</id>
        <title>external/wpt/webcodecs/image-decoder.https.any.worker.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327442056"/>
        <updated>2024-02-28T18:49:16.410Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/webcodecs/image-decoder.https.any.worker.html

Crash failure on Linux Tests(dbg)(1) builder

Test history Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fwebcodecs%2Fimage-decoder.https.any.worker.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fwebcodecs%2Fimage-decoder.https.any.worker.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 3.59% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>327337531</id>
        <title>Ignore Pen Id when only the Transducer Serial Number exists</title>
        <author>
            <name>sa...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337531"/>
        <updated>2024-02-28T18:42:33.622Z</updated>
        <summary>-</summary>
        <content type="html">Pen devices on Windows machines can transmit a PenId via PenDevice or a transducer serial number and vendor id. Currently, Chromium supports both the PenId and TSN/TVID. However, there is no guarantee when using the TSN/TVID that they will always return proper values (for example, some HP devices return multiple TSNs). Therefore, Chromium should ignore the TSN/TVID and only use PenId, which is supplied by windows when it has determined that the device is a Pen with a valid and unique id. </content>
    </entry>
    <entry>
        <id>327363330</id>
        <title>forced installation of extension in chrome but not applied in incognito mode </title>
        <author>
            <name>te...@faredestination.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327363330"/>
        <updated>2024-02-28T18:34:07.717Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Via GPO - User Configuration - Policy - Administrative Template - Google Chrome - Extension 
2. in extension management setting we forced to install chrome extention
3. 

# Problem Description
extension installed in chrome not working in incognito mode as well 

# Summary
forced installation of extension in chrome but not applied in incognito mode 

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>327247470</id>
        <title>[V8 Perf Sheriff]: 4 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247470"/>
        <updated>2024-02-28T18:32:36.841Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266193:1266284:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=baa3d14b-582d-419b-9bab-5895f3b2c1f5

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=baa3d14b-582d-419b-9bab-5895f3b2c1f5
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=baa3d14b-582d-419b-9bab-5895f3b2c1f5

Top 4 regressions (out of 4, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/API:duration_avg/browse_tools/browse_tools_docs_scrolling
       23.29%: 5.995 -&gt; 7.3915 ms
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/JavaScript:duration_avg/browse_tools/browse_tools_docs_scrolling
       14.79%: 693.5809999999999 -&gt; 796.178 ms
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/V8 C++:duration_avg/browse_tools/browse_tools_docs_scrolling
       11.14%: 173.393 -&gt; 192.71249999999998 ms
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/V8-Only-Main-Thread:duration_avg/browse_tools/browse_tools_docs_scrolling
       10.46%: 1425.5915 -&gt; 1574.728 ms

Top 3 affected measurements in linux-perf:
  - v8.browsing_desktop-future/API:duration_avg/browse_tools/browse_tools_docs_scrolling
       23.29%: 5.995 -&gt; 7.3915 ms
  - v8.browsing_desktop-future/JavaScript:duration_avg/browse_tools/browse_tools_docs_scrolling
       14.79%: 693.5809999999999 -&gt; 796.178 ms
  - v8.browsing_desktop-future/V8 C++:duration_avg/browse_tools/browse_tools_docs_scrolling
       11.14%: 173.393 -&gt; 192.71249999999998 ms

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266192..1266284
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..b53eb026438b102249f055de1af5d8aff5bb0779
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/a8c47276cb6d3188db8b5a4ba77abd07797c0071..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327434211</id>
        <title>Side Panel icon is no longer showing up beside the profile icon, is this expected?</title>
        <author>
            <name>ma...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327434211"/>
        <updated>2024-02-28T18:17:06.836Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version) 
124.0.6315.2 (Official Build) dev (64-bit) 
123.0.6312.4 (Official Build) beta (64-bit) 
122.0.6261.94 (Official Build) (64-bit) 

What steps will reproduce the problem?
(1) Launch Chrome and try to open side panel from the top chrome bar

What is the expected result?
Side panel icon should show right next to the profile icon

What happens instead?
Side panel icon doesn't exist in the top chrome bar

Note: this looks like a Chrome Linux only issue. I checked the same version on win and mac, it's working fine on win and mac</content>
    </entry>
    <entry>
        <id>327429507</id>
        <title>Add service support for modifying an existing group</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327429507"/>
        <updated>2024-02-28T18:03:20.285Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>327429413</id>
        <title>Update the UI when an existing group changes</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327429413"/>
        <updated>2024-02-28T18:02:51.005Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>327429436</id>
        <title>Support modifying existing groups</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327429436"/>
        <updated>2024-02-28T18:02:05.210Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>327428859</id>
        <title>Update results page header and footer</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327428859"/>
        <updated>2024-02-28T18:00:27.561Z</updated>
        <summary>-</summary>
        <content type="html">Includes updating the header text to show the number of groups, and adding a background to the footer</content>
    </entry>
    <entry>
        <id>327427506</id>
        <title>Tests are failing: quota_database.cc(475): Check failed: !bucket_id.is_null().</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327427506"/>
        <updated>2024-02-28T17:57:10.940Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
quota_database.cc(475): Check failed: !bucket_id.is_null().

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://content/test:content_unittests/IndexedDBTransactionTestMode.AbortTasks/IndexedDBTransactions.1
- ninja://content/test:content_unittests/IndexedDBTransactionTest.SchedulePreemptiveTask
- ninja://content/test:content_unittests/IndexedDBTransactionTestMode.AbortTasks/IndexedDBTransactions.0
- ninja://content/test:content_unittests/IndexedDBTransactionTest.PostedStartTaskRunAfterAbort


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c1b03e755d624009976a6676802b7c07

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327424755</id>
        <title>Replace instances of uint64_t with int64_t for memory savings</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327424755"/>
        <updated>2024-02-28T17:56:00.096Z</updated>
        <summary>-</summary>
        <content type="html">This came up in a code review and according to the style guide, they don't recommend using unsigned integer types unless you need the bit pattern or specific overflow behavior: https://google.github.io/styleguide/cppguide.html#Integer_Types

CL review where this came up: https://chromium-review.googlesource.com/c/chromium/src/+/5332595

In our code, we can also add assertions that the memory usage is not negative which would give clearer error messages for bugs like: crbug.com/326845945</content>
    </entry>
    <entry>
        <id>327245340</id>
        <title>Chrome leaks whether DevTools is open</title>
        <author>
            <name>st...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245340"/>
        <updated>2024-02-28T17:48:44.570Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open the attached HTML file
2. Open DevTools
3. See the alert open

# Problem Description
Error.message.get is only called when DevTools console is open, which can be used to check if it's open. Cloudflare Turnstile is currently using this to detect puppeteer, which uses the DevTools protocol. It can also make debugging harder by causing bugs to disappear depending on whether DevTools is open, since the get method can have side effects.

# Summary
Chrome leaks whether DevTools is open

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327245339</id>
        <title>Bug reproduction instructions are stale</title>
        <author>
            <name>ti...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245339"/>
        <updated>2024-02-28T17:38:58.680Z</updated>
        <summary>-</summary>
        <content type="html">From wtc@ over email:

The instructions on reproducing this bug locally do not work.

The bug report says:

See https://www.chromium.org/developers/testing/memorysanitizer#TOC-Reproducing-ClusterFuzz-Bugs
for instructions on reproducing this bug locally.

First, that URL seems out of date. I think the correct URL is
https://www.chromium.org/developers/testing/memorysanitizer/#reproducing-clusterfuzz-bugs.

Second, the end of that webpage says:

If you are on Rodete, you can try to reproduce them manually using
docker to run MSan by following [these
instructions](https://www.chromium.org/developers/testing/memorysanitizer#TOC-Running-on-other-distros-using-Docker).

But the URL in the "these instructions" link is broken. So we reach a
dead end now.</content>
    </entry>
    <entry>
        <id>327273599</id>
        <title>Deprecate and remove WebAPK install IPH</title>
        <author>
            <name>ei...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327273599"/>
        <updated>2024-02-28T17:36:25.882Z</updated>
        <summary>-</summary>
        <content type="html">The code has been around for a few years but we didn't launch it. Time to get rid of it :)</content>
    </entry>
    <entry>
        <id>327371657</id>
        <title>Error: "Remote bookmarks count exceed limit" but I have only 44 bookmarks</title>
        <author>
            <name>sm...@googlemail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327371657"/>
        <updated>2024-02-28T17:27:55.683Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Initiate sync on Mac and IPhone, will fail with the message

# Problem Description
I have seen numerous reports about this issue, but they are about people with &gt;25k bookmarks. I do only have 44 bookmarks (counted in the bookmarks file and reported on chrome://sync-internals on a Windows machine). I have a windows machine which just works fine, but my Mac and iOS always fail with the error "Remote bookmarks count exceed limit." I have resetted the sync accounts, etc. but nothing helped so far. The sync always worked and I "think" it started to fail when I added a new MacBook to my account and enabled sync.

The full error message is:

Error: OnInitialUpdateReceived@components/sync_bookmarks/bookmark_model_type_processor.cc:615, datatype error was encountered: Remote bookmarks count exceed limit.

# Summary
Error: "Remote bookmarks count exceed limit" but I have only 44 bookmarks

# Additional Data
Category: Sync \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327334165</id>
        <title>Compiler incorrectly suggests using DISPATCH_FALLTHROUGH in switch statements</title>
        <author>
            <name>me...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327334165"/>
        <updated>2024-02-28T17:06:34.025Z</updated>
        <summary>-</summary>
        <content type="html">For example in https://ci.chromium.org/ui/p/chromium/builders/try/mac_chromium_compile_dbg_ng/1893009/overview, the compiler suggest using DISPATCH_FALLTHROUGH to silence the implicit fallthrough warning. But the correct thing to do would be to use [[fallthrough]]. </content>
    </entry>
    <entry>
        <id>327410334</id>
        <title>LUCI Analysis filed a bug in fallback component due to permissions</title>
        <author>
            <name>dt...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327410334"/>
        <updated>2024-02-28T17:04:36.218Z</updated>
        <summary>-</summary>
        <content type="html">See issue 327293245, comment2

"This bug was filed in the fallback component instead of in component 1287811 because LUCI Analysis does not have permissions to that component." 

This seems incorrect.</content>
    </entry>
    <entry>
        <id>327341487</id>
        <title>Add Chrome to Meta Quest app store</title>
        <author>
            <name>co...@starbucks.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327341487"/>
        <updated>2024-02-28T17:03:59.554Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Add Chrome to Meta Quest app store
https://developer.oculus.com/resources/publish-introduction/

# Problem Description
feature request

# Summary
Add Chrome to Meta Quest app store

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327247560</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247560"/>
        <updated>2024-02-28T17:03:23.876Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266311:1266320:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=3bc56075-8c70-4ad8-827f-5275a86fcb4f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=3bc56075-8c70-4ad8-827f-5275a86fcb4f

Top 1 regressions (out of 3, with 2 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/motionmark_ramp_design
       10.97%: 35.51095 -&gt; 39.40805 unitless

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/motionmark_ramp_design
       10.97%: 35.51095 -&gt; 39.40805 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/d02cf8bfc8741310ba8d04042ea7a0c9dd1a884a..0b674d415f8758284cfca9432e2fcbbd46183b40
  Chromium Commit Position: https://crrev.com/1266278..1266320
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..5517643d850250c24aa3f68fd2328c2e6018f28d
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/55d33f1f6054879f44238cbe1eed52c45edb234f..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327337527</id>
        <title>Option to ignore specific path in heap snapshot retainer pane</title>
        <author>
            <name>se...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337527"/>
        <updated>2024-02-28T16:57:09.876Z</updated>
        <summary>-</summary>
        <content type="html">Once a web developer finds that an object should be removed to save memory, there is often a repetitive process to remove the object:

1. Reproduce the issue and take a heap snapshot
2. Determine a retainer which could be broken by a code change
3. Make the code change and rebuild
4. Goto 1

Often, objects are retained via many paths, and in a highly interconnected graph, it's impossible to fully understand all of those paths just by looking at the Retainers tree presented by DevTools.

It would be nice to provide an option in DevTools where a developer can ask, "If I removed X, what else would retain Y?"

Design doc: https://docs.google.com/document/d/1F5lcs3ZqUGR9pzalcEO8cTReSjD8qvBrCf78NufOTpg/edit?usp=sharing</content>
    </entry>
    <entry>
        <id>327341485</id>
        <title>[User Feedback - Stable] Users report notifications are not working as expected in M122 on Windows</title>
        <author>
            <name>cr...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327341485"/>
        <updated>2024-02-28T16:50:46.081Z</updated>
        <summary>-</summary>
        <content type="html">Affected Chrome Version(s): 122.0.6261.69, 122.0.6261.70, 122.0.6261.95

Affected Operating Systems: Multiple Windows (10.0.19044, 10.0.19045, 10.0.22621)

Issue Description + Insights/Patterns: We are seeing an increase in user feedback reports sharing that website notifications are not appearing as expected.

* Users are specifically referencing notifications sent from websites, through Chrome, to the Windows notification center. All reports are from Windows.
* The increase began on Monday, February 26th, which doesn't directly correlate with any new releases.
* Users mention this is impacting multiple websites, including Gmail and Youtube.
* Users mention the notifications continue to work as normal when configured in Microsoft Edge.
* We have a small number of reports from M120 related to a specific website (textus) but these appear unrelated to the larger trend impacting M122.

Speculative Repro Steps:
1) Install Chrome, sign in to Gmail.
2) Enable Gmail's desktop notifications, grant access.
3) Open a new tab, minimize Chrome.
4) Send an email to the signed-in account (from a different address).
5) Observe no desktop notification is displayed.

Feedback Visuals:
* Notifications not working: https://screenshot.googleplex.com/7T2RPrNBDKravfb.png

Highlighted User Voice Examples (Access: http://shortn/_0E2VFlfXQ2):
* https://listnr.corp.google.com/report/91592220825
* https://listnr.corp.google.com/report/91592146161
* https://listnr.corp.google.com/report/91592101141
* https://listnr.corp.google.com/report/91592000948
* https://listnr.corp.google.com/report/91591600330
* https://listnr.corp.google.com/report/91591502228
* https://listnr.corp.google.com/report/91591078833
* https://listnr.corp.google.com/report/91591076854
* https://listnr.corp.google.com/report/91591005447
* https://listnr.corp.google.com/report/91590960089
* https://listnr.corp.google.com/report/91590948510
* https://listnr.corp.google.com/report/91589635394
* https://listnr.corp.google.com/report/91589523949
* https://listnr.corp.google.com/report/91589509361
* https://listnr.corp.google.com/report/91589327536
* https://listnr.corp.google.com/report/91589274497
* https://support.google.com/chrome/thread/260857343?hl=en

Thanks!</content>
    </entry>
    <entry>
        <id>327248423</id>
        <title>Android Chromium not working in Windows Subsystem for Android on Windows 11</title>
        <author>
            <name>co...@starbucks.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327248423"/>
        <updated>2024-02-28T16:44:59.143Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Setup Windows Subsystem for Android on Windows 11
Enable developer mode
Download Android Chromium from https://www.chromium.org/getting-involved/download-chromium/ 
Use adb to install the Chromium .apk into Windows Subsystem for Android 
Open Chromium app

All of the above steps are successful.
After opening Chromium there are a series of errors and it won't connect to the internet.

# Problem Description
Android Chromium not working in Windows Subsystem for Android on Windows 11

# Summary
Android Chromium not working in Windows Subsystem for Android on Windows 11

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327334164</id>
        <title>Token based user profile management</title>
        <author>
            <name>co...@starbucks.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327334164"/>
        <updated>2024-02-28T16:35:46.181Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Please add the ability to add a management token to a user profile in the browser on an unmanaged device to only manage the user profile, but without having an accounts signed into the browser.
Let admins send users a special link and have a multi step process to safely add a token to a user profile for management.

# Problem Description
cross platform, feature request

# Summary
Token based user profile management

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327341484</id>
        <title>Add Zero Trust Network Access (ZTNA) in the browser</title>
        <author>
            <name>co...@starbucks.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327341484"/>
        <updated>2024-02-28T16:32:44.071Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Please add support for Zero Trust Network Access (ZTNA) private network access routing in the browser configurable with admin policies without an extension or an additional app (like a VPN)

# Problem Description
feature request, cross platform

# Summary
Add Zero Trust Network Access (ZTNA) in the browser

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327337526</id>
        <title>Migrate most of WebNN's blink unit tests to WPTs</title>
        <author>
            <name>as...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337526"/>
        <updated>2024-02-28T16:31:10.915Z</updated>
        <summary>-</summary>
        <content type="html">[Originally discussed here](https://chromium-review.googlesource.com/c/chromium/src/+/5322650/comments/d8b066c8_4f9b26dc) and somewhat related to issue 327337525

WPTs are generally preferred over blink unit tests to test web-exposed behavior. WebNN has a lot of blink unit tests, many of which would be better suited as WPTs. Once we get support for running WPT tests on TFLite on CQ (see issue 326356909), we should:

- Ensure that as much as possible of the blink unit tests is covered in WPTs
- Remove the blink unit tests which are redundant with our WPT coverage (tests which can't be expressed as a WPT can remain, of course)</content>
    </entry>
    <entry>
        <id>327341483</id>
        <title>Add Chrome to Apple App Store for macOS</title>
        <author>
            <name>co...@starbucks.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327341483"/>
        <updated>2024-02-28T16:30:18.884Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Add Chrome to Apple App Store for macOS
This is a trusted location for users to get apps
Even if it is just the iPad version.
This will allow for downloading a version of Chrome in locations where Google domains are restricted
This wil

# Problem Description
feature request

# Summary
Add Chrome to Apple App Store for macOS

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327334163</id>
        <title>Add Chrome to Microsoft Store app store for Windows</title>
        <author>
            <name>co...@starbucks.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327334163"/>
        <updated>2024-02-28T16:28:50.892Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Add Chrome to Microsoft Store app store for Windows
This is a trusted location for users to get apps
Windows 11 in S mode only runs apps from the Microsoft Store
This may allow users in locations where Google domains are blocked to download Chrome

# Problem Description
feature request

# Summary
Add Chrome to Microsoft Store app store for Windows

# Additional Data
Category: Enterprise \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327245337</id>
        <title>Network tab gone berserk, shows scrambled requests in wrong order, with nonsensical data</title>
        <author>
            <name>te...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245337"/>
        <updated>2024-02-28T16:26:26.120Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Why the f*** was issue 40281480 closed? Reopen and fix it please!

# Problem Description
Why the f*** was issue 40281480 closed? Reopen and fix it please!

# Summary
Network tab gone berserk, shows scrambled requests in wrong order, with nonsensical data

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327337525</id>
        <title>Exercise "unhappy paths" and edge cases in WebNN WPTs</title>
        <author>
            <name>as...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337525"/>
        <updated>2024-02-28T16:22:08.042Z</updated>
        <summary>-</summary>
        <content type="html">The existing [WebNN WPTs](https://crsrc.org/c/third_party/blink/web_tests/external/wpt/webnn/) rarely test anything outside of the "happy path". For instance, as of this writing, [there are no tests which expect a promise to be rejected or an exception to be thrown](https://source.chromium.org/search?q=(promise_rejects_js%20OR%20promise_rejects_dom%20OR%20promise_rejects_exactly%20OR%20assert_throws_dom%20OR%20assert_throws_js)%20-f:expected.txt&amp;ss=chromium%2Fchromium%2Fsrc:third_party%2Fblink%2Fweb_tests%2Fexternal%2Fwpt%2F&amp;start=1)!

This issue was [originally noted in this CL review about the `cast()` operator](https://chromium-review.googlesource.com/c/chromium/src/+/5322650/comments/d8b066c8_4f9b26dc), which suggested we add tests for:

- int -&gt; float casts, as well as float -&gt; int casts
- Overflowing casts. For example, casting int32 -&gt; int8 with a value larger than the max int8
- Signed -&gt; unsigned casts
- Edge cases. For example, what happens when you cast NaN? Infinity? Negative infinity?
- Passing invalid inputs

TODO:

1. Add similarly rigorous "unhappy path" and edge case tests for each operator, with the understanding that each operator will have its own set of edge cases (the above is just intended to be an example)
2. Adds tests for invalid use of WebNN objects. This includes things like passing `MLOperand`s to the wrong `MLGraphBuilder`, exercising the behavior of detached frames ([e.g.](https://crrev.com/c/5283123)), and calling `build()` multiple times (depending on the outcome of [webnn#567](https://github.com/webmachinelearning/webnn/issues/567))
3. The WPTs appear to only ever create a graph with one operation. We should consider adding tests for more complex graphs, especially in cases where we expect interesting interactions between operations

If while adding these tests we discover that the spec is unclear as to what the expected behavior should be, we should file spec issues to clarify!</content>
    </entry>
    <entry>
        <id>327398187</id>
        <title>Graduate WNP HaTS from Finch</title>
        <author>
            <name>mi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327398187"/>
        <updated>2024-02-28T16:16:30.399Z</updated>
        <summary>-</summary>
        <content type="html">The HaTS Finch configuration needs to be updated every few months to extend the expiration date. Since we want always want this survey, it should be graduated from Finch and incorporated directly in the client configuration.</content>
    </entry>
    <entry>
        <id>327395756</id>
        <title>A cancel fling still triggers the navigation in 3-button mode.</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327395756"/>
        <updated>2024-02-28T16:10:56.939Z</updated>
        <summary>-</summary>
        <content type="html">- Add loggings in `TabOnBackGestureHandler::OnBackProgressed` and `TabOnBackGestureHandler::OnBackInvoked`.
- Land on buzzfeed.com from google.com serp page.
- Start to swipe from the left edge of the screen and move the finger to ~70% of the screen.
- Do a fast left-fling.
- I can see OnGestureProgressed being called from progress=0.7 all the way to progress=0 to reflect the fling, but then OnGestureInvoked is also called to start the navigation.

Lijin, this seems to be buggy, (IIUC) as in 3-button mode we decide on whether to start the navigation (i.e., call OnGestureInvoked) based on where the user lifts the finger. In the fling case since we receive OnGestureProgressed with progress=0, I'd imagine Clank thinks the user lift the finger almost at the left edge thus not to start the navigation. Would you be able to confirm if this is an existing bug?

</content>
    </entry>
    <entry>
        <id>327269144</id>
        <title>[Chromium Perf Motionmark Sheriff]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327269144"/>
        <updated>2024-02-28T16:08:43.293Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266285:1266310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=36c02838-6a41-44df-b28b-6f81c08baa8f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=36c02838-6a41-44df-b28b-6f81c08baa8f

Top 1 regressions (out of 3, with 2 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/motionmark/motionmark_ramp_canvas_lines
       18.01%: 42363.8071 -&gt; 34732.44025 unitless

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - rendering.desktop/motionmark/motionmark_ramp_canvas_lines
       18.01%: 42363.8071 -&gt; 34732.44025 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/b724576c051ddf032e4855fa186aaac425e73bab..44dda042e945adb73fb4857dd6e23cc1151490f7
  Chromium Commit Position: https://crrev.com/1266284..1266310
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..5517643d850250c24aa3f68fd2328c2e6018f28d
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2825f0a7bbd08f8ee466291d7ee7a77fa7838e03..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327397007</id>
        <title>[Desktop Power Perf Sheriff]: 28 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327397007"/>
        <updated>2024-02-28T16:08:30.233Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266285:1266310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=6b656216-ffbe-47de-8a2c-9e8a3916e40d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=6b656216-ffbe-47de-8a2c-9e8a3916e40d

Top 10 regressions (out of 25, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_games/load_games_alphabetty_2018
       48.13%: 0.107 -&gt; 0.1585 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_yandex_2018
       47.31%: 0.093 -&gt; 0.137 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_2018
       38.78%: 0.147 -&gt; 0.20400000000000001 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_google_images_2018
       37.14%: 0.07 -&gt; 0.096 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_accessibility_media/load_accessibility_media_wikipedia_2018
       33.73%: 0.083 -&gt; 0.111 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_flickr_2018
       33.12%: 0.123 -&gt; 0.16373500000000002 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_desktop_2020
       30.07%: 0.153 -&gt; 0.199 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_ebay_2018
       28.78%: 0.172 -&gt; 0.2215 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_baidu_2018
       27.97%: 0.059 -&gt; 0.0755 n%
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_feed_desktop_2020
       25.83%: 0.147 -&gt; 0.184965 n%

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_games/load_games_alphabetty_2018
       48.13%: 0.107 -&gt; 0.1585 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_yandex_2018
       47.31%: 0.093 -&gt; 0.137 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_facebook_photos_2018
       38.78%: 0.147 -&gt; 0.20400000000000001 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/b724576c051ddf032e4855fa186aaac425e73bab..44dda042e945adb73fb4857dd6e23cc1151490f7
  Chromium Commit Position: https://crrev.com/1266284..1266310
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..5517643d850250c24aa3f68fd2328c2e6018f28d
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2825f0a7bbd08f8ee466291d7ee7a77fa7838e03..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327247559</id>
        <title>[Graphics]: 34 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247559"/>
        <updated>2024-02-28T16:07:43.775Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266285:1266310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b7f3ee21-5f6d-4c48-8543-98db4804204b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b7f3ee21-5f6d-4c48-8543-98db4804204b

Top 10 regressions (out of 36, with 13 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/canvas_to_canvas_draw
         inf%: 0.0 -&gt; 59.25 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/blogspot_2018
         inf%: 0.0 -&gt; 0.2 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/gmail_2018
         inf%: 0.0 -&gt; 9.0 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/wikipedia_2018
         inf%: 0.0 -&gt; 0.4 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/css_value_type_shadow
         inf%: 0.0 -&gt; 93.0 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/gmail_2018
         inf%: 0.0 -&gt; 2.5 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/static_webgl_to_hw_accelerated_canvas.html
         inf%: 0.0 -&gt; 0.5 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/web_animation_value_type_shadow
         inf%: 0.0 -&gt; 93.0 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/canvas_to_blob
     1400.00%: 0.5 -&gt; 7.5 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/google_docs_2018
      312.50%: 1.0 -&gt; 4.125 unitless

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/canvas_to_canvas_draw
         inf%: 0.0 -&gt; 59.25 unitless
  - rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/blogspot_2018
         inf%: 0.0 -&gt; 0.2 unitless
  - rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/gmail_2018
         inf%: 0.0 -&gt; 9.0 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/b724576c051ddf032e4855fa186aaac425e73bab..44dda042e945adb73fb4857dd6e23cc1151490f7
  Chromium Commit Position: https://crrev.com/1266284..1266310
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..5517643d850250c24aa3f68fd2328c2e6018f28d
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2825f0a7bbd08f8ee466291d7ee7a77fa7838e03..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327392182</id>
        <title>Merge profiling data from multiple reps</title>
        <author>
            <name>cb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327392182"/>
        <updated>2024-02-28T15:56:36.387Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327245462</id>
        <title>Dragging next to the settings icon shows a 'dragging' cursor but can't be dragged</title>
        <author>
            <name>je...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327245462"/>
        <updated>2024-02-28T15:52:58.349Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 124.0.6315.0 (Official Build) canary (arm64) 
OS                   : macOS Version 14.2 (Build 23C64)

What steps will reproduce the problem?
1. Open DevTools
2. Hover right next to the settings icon
3. Click and drag to resize DevTools

What is the expected result?
Either no cursor or it allows you to drag

What happens instead?
The arrow cursor shows up but when attempting to drag, nothing happens.
</content>
    </entry>
    <entry>
        <id>327386236</id>
        <title>Port gesture nav mode gesture logics to </title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327386236"/>
        <updated>2024-02-28T15:26:57.761Z</updated>
        <summary>-</summary>
        <content type="html">In gesture nav mode, a user's intention to start or to abort the navigation is calculated based off how the user swipes across the screen (start the nav for a right swipe and not start the nav for a left swipe). In 3-button mode, the intention is based on where the user lifts the finger.

This can lead to some subtle bugs in 3-button mode (e.g., https://b.corp.google.com/issues/326850774#comment5, do a left-fling in the "invoke region"). We should consider to port the gesture nav logic into 3-button mode.</content>
    </entry>
    <entry>
        <id>327387197</id>
        <title>Tests are failing: ninja://third_party/blink/renderer/platform:blink_platform_unittests/PaintRecordBuilderTest.LastingPaintController</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327387197"/>
        <updated>2024-02-28T15:26:01.230Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://third_party/blink/renderer/platform:blink_platform_unittests/PaintRecordBuilderTest.LastingPaintController

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e322cfdf60c30e9e8fa0ce77f1697ab7

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327273597</id>
        <title>Tab text tiny and unchangeable by any means used to change other Chrome text size.</title>
        <author>
            <name>bu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327273597"/>
        <updated>2024-02-28T15:24:48.961Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Problem occurs right at Chrome opening.
2. 
3. 

# Problem Description
Tab text is tiny.  Other text can be enlarged with Cntrl + but not tab text.  Previous report in history suggested report it again.

# Summary
Tab text tiny and unchangeable by any means used to change other Chrome text size.

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327249007</id>
        <title>[Loading Perf Sheriff]: 27 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327249007"/>
        <updated>2024-02-28T15:17:05.843Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266279:1266310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=458a5083-254c-4945-8d7f-49648b39beab

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=458a5083-254c-4945-8d7f-49648b39beab

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.common_desktop/cwv:first_contentful_paint_avg/load_tools/load_tools_drive_2019
       44.21%: 95.0 -&gt; 137.0 ms

Top 1 affected measurements in mac-m1_mini_2020-perf:
  - system_health.common_desktop/cwv:first_contentful_paint_avg/load_tools/load_tools_drive_2019
       44.21%: 95.0 -&gt; 137.0 ms

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/d02cf8bfc8741310ba8d04042ea7a0c9dd1a884a..44dda042e945adb73fb4857dd6e23cc1151490f7
  Chromium Commit Position: https://crrev.com/1266278..1266310
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..5517643d850250c24aa3f68fd2328c2e6018f28d
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/55d33f1f6054879f44238cbe1eed52c45edb234f..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
</feed>