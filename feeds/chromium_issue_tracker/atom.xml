<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:32.693Z</updated>
    <entry>
        <id>333445555</id>
        <title>Providing a 2+MB URL in an AuctionConfig results in renderer kills.</title>
        <author>
            <name>mm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445555"/>
        <updated>1970-01-01T00:28:32.693Z</updated>
        <summary>-</summary>
        <content type="html">When a URL is pass to FLEDGE in an AuctionConfig, if the URL is invalid, it is rejected.  Otherwise, the entire AuctionConfig is passed to the browser process, at which point the entire AuctionConfig is validated.  If it isn't valid, the renderer is killed due to a bad message.  This includes validating that all URLs has HTTPS and valid.  However, while GURL's constructor allows creating arbitrarily large URLs that it considers valid, when passed over Mojo, any GURL longer than 2MB is transformed into an empty, invalid GURL.  This unexpected behavior can lead to browser-side AuctionConfig validation resulting in renderer kills.</content>
    </entry>
    <entry>
        <id>333565619</id>
        <title>High report delivery failure rates on Android platforms</title>
        <author>
            <name>tq...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333565619"/>
        <updated>1970-01-01T00:28:32.693Z</updated>
        <summary>-</summary>
        <content type="html">Internal metrics show that around 4% of all reports completely fail to deliver on Android Chrome, which is much higher than other platforms. A majority of these failures come from NAME_NOT_RESOLVED error response codes our requests are receiving. The unreliability of mobile device connectivity may be the cause of the unexpected number of report delivery failures and difference in retry success rate we see in Android. We will conduct an experiment manipulating the retry delay periods between delivery attempts in order to figure out a more optimal set of delays and lower this rate of failure.</content>
    </entry>
    <entry>
        <id>333420625</id>
        <title>Side Panel Search is flashing in Dark Mode</title>
        <author>
            <name>me...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420625"/>
        <updated>1970-01-01T00:28:32.693Z</updated>
        <summary>-</summary>
        <content type="html">Canary Version 125.0.6404.0
macOS 14.4.1

STR:
1) Enable System Dark Mode
2) Open a new Canary Window
3) Visit any page
4) Open Search in Side Panel

Actual: A bright flash appears.

Expected: No flash.

A demo is attached.

Thanks for checking!
</content>
    </entry>
    <entry>
        <id>333414306</id>
        <title>[FedCM] Button flow request sometimes is not rejected upon user closing the pop-up</title>
        <author>
            <name>yi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333414306"/>
        <updated>1970-01-01T00:28:32.692Z</updated>
        <summary>-</summary>
        <content type="html">1. Trigger the button flow on https://fedcm-button.glitch.me/
2. Click the "use other account" button on the account UI (if not signed in to the IdP already, do so to trigger the account chooser)
3. Sign in with any account in the pop-up
4.The permission modal is displayed post signed-in, click the back button to go back to the account chooser
5. Click the "use other account" button again to trigger the pop-up
6. Close the pop-up without signing in

Expected: a log is printed out saying "error retrieving a token"
Actual: the API is still hanging and clicking the "Sign in with IdP" button would lead to a crash</content>
    </entry>
    <entry>
        <id>333460774</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333460774"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284267:1284310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2696ec99-b2eb-4ec7-a05a-801dae305327

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2696ec99-b2eb-4ec7-a05a-801dae305327

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahooanswers.html
        7.60%: 6.7955 -&gt; 7.312 

Top 1 affected measurements in android-pixel4-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahooanswers.html
        7.60%: 6.7955 -&gt; 7.312 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333559677</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333559677"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284267:1284310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1b93e5fd-2196-42a8-8e3a-ab20f57e411f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1b93e5fd-2196-42a8-8e3a-ab20f57e411f

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahoogames.html
        7.60%: 6.7955 -&gt; 7.312 

Top 1 affected measurements in android-pixel4-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahoogames.html
        7.60%: 6.7955 -&gt; 7.312 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333435029</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333435029"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284267:1284310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=773687f3-adc7-4e43-9a4a-a202e827aa80

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=773687f3-adc7-4e43-9a4a-a202e827aa80

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_gmail.html
        7.60%: 6.7955 -&gt; 7.312 

Top 1 affected measurements in android-pixel4-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_gmail.html
        7.60%: 6.7955 -&gt; 7.312 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333435028</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333435028"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284267:1284310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=abbd38f6-1090-4457-85eb-f6407d768ab5

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=abbd38f6-1090-4457-85eb-f6407d768ab5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahoonews.html
        7.60%: 6.7955 -&gt; 7.312 

Top 1 affected measurements in android-pixel4-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahoonews.html
        7.60%: 6.7955 -&gt; 7.312 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333494022</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333494022"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284267:1284310:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f55a9292-3848-4b52-b423-c1219e47182b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f55a9292-3848-4b52-b423-c1219e47182b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_weather.html
        7.60%: 6.7955 -&gt; 7.312 

Top 1 affected measurements in android-pixel4-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_weather.html
        7.60%: 6.7955 -&gt; 7.312 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333572160</id>
        <title>ProfileKeyedMap isn't cleaned up</title>
        <author>
            <name>wy...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333572160"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">Both in production and in tests, ProfileManager#onProfileDestroyed is never called. This is a problem for integration tests which have a LifetimeChecker present on a field in a service owned by PKM. My attempt[1] at fixing this is probably wrong, so cutting a bug to PKM owners to figure out a better way to get PKM working for integration tests.

[1] https://chromium-review.googlesource.com/c/chromium/src/+/5428148</content>
    </entry>
    <entry>
        <id>333572800</id>
        <title>Ash_unittests taking over twice as long on try</title>
        <author>
            <name>gu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333572800"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">This is causing pending times on the builder and eating up testing capacity. http://irm/i_egnA2NHdHz9UPA7CmfXU</content>
    </entry>
    <entry>
        <id>333511565</id>
        <title>Use wtf_size_t for HashMap::size() and capacity()</title>
        <author>
            <name>re...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333511565"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">`HashMap::size()` currently returns `unsigned` which I believe is equivalent to the `uint32_t` that `wtf_size_t` is defined as. Using `wtf_size_t` should be a no-op but would provide consistency and avoid the temptation by developers to insert casts when doing things like comparing the size of a `HashMap` to the size of a `Vector`.</content>
    </entry>
    <entry>
        <id>333571286</id>
        <title>SuperSize not Recognizing all synthetic symbol names</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333571286"/>
        <updated>1970-01-01T00:28:32.691Z</updated>
        <summary>-</summary>
        <content type="html">When doing M124 size review, many symbols are showing as `$APK/Outlined` when they should not be ([ref](https://chrome-supersize.firebaseapp.com/viewer.html?load_url=https%3A%2F%2Fstorage.googleapis.com%2Fchrome-supersize%2Fmilestones%2F124.0.6367.4%2Farm%2FTrichromeGoogle.size&amp;before_url=https%3A%2F%2Fstorage.googleapis.com%2Fchrome-supersize%2Fmilestones%2F123.0.6312.54%2Farm%2FTrichromeGoogle.size&amp;include=ExternalSynthetic&amp;exclude=%5C%3F%2F&amp;type=mx#focus=9079)).

It looks like this is because R8 is no longer adding "Lambda" to synthetics that are non-lambda related.</content>
    </entry>
    <entry>
        <id>333569740</id>
        <title>Excessive battery drain when closed</title>
        <author>
            <name>aa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333569740"/>
        <updated>1970-01-01T00:28:32.690Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  Unplug laptop from power, gnubby, and close the lid.
2.  Come back the next morning to a dead laptop

# Problem Description
Chrome appears to be draining down the battery on my macbook when it's left unplugged overnight (and without a gnubby plugged in).  The most recent occurrence was last night, while it was in my laptop bag.

The previous time this happened, the macbook applied an update while on battery, so I thought that was the cause, but last night it didn't appear to have applied an update.

# Additional Comments
When I first checked in Activity Monitor, Chrome was listed as having a "12h Power" value of over 120.  It's been dropping as I was taking screenshots for attaching to the bug.  The first screenshot clearly shows the draindown that happened overnight.

Laptop is an i9 MacBook Pro (2020) (`MacBookPro16,1`).

# Summary
Excessive battery drain when closed

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug - Software not working correctly

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>333567421</id>
        <title>[ios] Wait on clearing credentials on -teardown in password egtests</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333567421"/>
        <updated>1970-01-01T00:28:32.690Z</updated>
        <summary>-</summary>
        <content type="html">There are many test cases runs where there is still the credential cleaning spinner overlay from the previous test run

This is because the clearing task is dispatched asynchronously in the browser process and in a non-main task queue, where the egtest controller moves immediately to other operations without waiting on the browser</content>
    </entry>
    <entry>
        <id>333445554</id>
        <title>Touch input puts page into weird state upon successive tapping</title>
        <author>
            <name>wa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445554"/>
        <updated>1970-01-01T00:28:32.690Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
To reproduce, just take two fingers and alternately tap on the two dropdowns, over and over, swiping side to side a little.

# Problem Description
When reproduced, and it sometimes takes time, you are unable to interact with the page. However, you can drag an arrow over from the left, and clicking the arrow does nothing. In other browsers, such as Chromium Embedded Framework, one finger will then zoom the page, as if a finger is stuck down.

# Additional Comments
We were unable to reproduce the issue in Firefox.

# Summary
Touch input puts page into weird state upon successive tapping

# Custom Questions
#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333445553</id>
        <title>Implement accessibility green lines for Download ESB promotion row</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445553"/>
        <updated>1970-01-01T00:28:32.689Z</updated>
        <summary>-</summary>
        <content type="html">The ESB promotion row that appears on the items in the download manager need to implement the associated greenlines so that they will be a11y compliant.</content>
    </entry>
    <entry>
        <id>333452963</id>
        <title>Clean up feature flags for ESB Promotion Row after launch</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333452963"/>
        <updated>1970-01-01T00:28:32.689Z</updated>
        <summary>-</summary>
        <content type="html">Once we launch EsbDownloadRowPromo, we need to remove the feature flag and clean up the branches.

https://source.chromium.org/chromium/chromium/src/+/main:components/safe_browsing/core/common/features.cc;l=80-82;drc=d15b68f20364a4ceb65ff00d4250d4ad5bc3b210</content>
    </entry>
    <entry>
        <id>333566620</id>
        <title>Crash if suggestion is selection while pointer is selected</title>
        <author>
            <name>sc...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333566620"/>
        <updated>1970-01-01T00:28:32.689Z</updated>
        <summary>-</summary>
        <content type="html">Chrome crashes when an Autofill suggestion is selected while the pointer is locked.

This issue was originally reported by sas.kunz@gmail.com in issue 40056870.</content>
    </entry>
    <entry>
        <id>333508733</id>
        <title>Cookies doubling up in one domain while changing web/mobile version with open DevTools</title>
        <author>
            <name>fo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333508733"/>
        <updated>1970-01-01T00:28:32.688Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.Go to the web version of the site
2. Open Cookies in DevTools
3. Go to the mobile version of the site on the same window with DevTools open

# Problem Description
Cookies doubling up in one domain while changing web/mobile version with open DevTools

# Summary
Cookies doubling up in one domain while changing web/mobile version with open DevTools

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333525663</id>
        <title>Investigate slightly fewer clients marked as eligible for HPRT than expected</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333525663"/>
        <updated>1970-01-01T00:28:32.688Z</updated>
        <summary>-</summary>
        <content type="html">The feature was enabled by default in 125.0.6396.0, but later versions are not showing 100% eligible for SafeBrowsing.HPRT.Ineligible.IneligibleForSessionOrLocation: https://uma.googleplex.com/p/chrome/timeline_v2?sid=3d6c0ae389e6fd5a99b19e202e1484a0.

We should break down SafeBrowsing.HPRT.Ineligible.IneligibleForSessionOrLocation to see more specifically what's causing this.</content>
    </entry>
    <entry>
        <id>333443443</id>
        <title>Some URLs are truncated while sharing</title>
        <author>
            <name>le...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333443443"/>
        <updated>1970-01-01T00:28:32.688Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Here is an example for  target.com. 

1. Open
https://www.target.com/p/jockey-generation-men-s-stay-new-cotton-3pk-crew-neck-short-sleeve-t-shirt/-/A-54555291?preselect=54444811
This gets white M size.
Notice the ending "preselect=54444811"

2. Share this page. The shared URL becomes
https://www.target.com/p/jockey-generation-men-s-stay-new-cotton-3pk-crew-neck-short-sleeve-t-shirt/-/A-54555291

Ending "preselect=54444811" is missing and results a different size.

# Problem Description
See above. Looks like Chrome is trying to cleanup URL during sharing but sometimes this will mess things up. I noticed many URLs get truncated similarly but this one actually affects usage and becomes a bug.

# Summary
Some URLs are truncated while sharing

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333511562</id>
        <title>[Sandbox] Fatal error in src/sandbox/external-pointer-table-inl.h, line 287</title>
        <author>
            <name>da...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333511562"/>
        <updated>1970-01-01T00:28:32.687Z</updated>
        <summary>-</summary>
        <content type="html">Fatal error: DCHECK  for bool ExternalPointerTable::IsValidHandle on line 287 in src/sandbox/external-pointer-table-inl.h fails.

This was detected as of commit b13ea589 in the main branch, which is the latest commit, and we have not confirmed whether it occurs in earlier and later versions.

I have spent several hours attempting to reproduce the attached PoC, but unfortunately, on my device, only the reproduction with Fuzzer crashes and all attempts to reproduce without Fuzzer fail.

So, after auditioning the code based on what I can see in the stack trace, I believe the culprit is the value of handle being left in an abnormal state during a kExternalPointerIndexShift inside bool ExternalPointerTable::IsValidHandle(ExternalPointerHandle handle) at Line 280 in v8/src/sandbox/external-pointer-table-inl.h. 

Please consider that this analysis was done with only a cursory understanding of the recent Sandbox announcement and code additions.

The stack trace is as below.

// CRASH INFO
// ==========
// INSTANCE TAG: 13ea589
// TERMSIG: 6
// STDERR:
// # #
// # Fatal error in ../../src/sandbox/external-pointer-table-inl.h, line 287
// # Debug check failed: IsValidHandle(handle).
// #
// #
// # // #
// #FailureMessage Object: 0x7d78794cd460
// ==== C stack trace ===============================
// // 
// ../v8/out/fuzzbuild/d8(___interceptor_backtrace+0x46) [0x61aa55304866]
// ../v8/out/fuzzbuild/d8(+0x1f2bd72) [0x61aa555fcd72]
// ../v8/out/fuzzbuild/d8(+0x1f293ff) [0x61aa555fa3ff]
// ../v8/out/fuzzbuild/d8(+0x1f13998) [0x61aa555e4998]
// ../v8/out/fuzzbuild/d8(+0x1f12cbf) [0x61aa555e3cbf]
// ../v8/out/fuzzbuild/d8(+0x2bd1c26) [0x61aa562a2c26]
// ../v8/out/fuzzbuild/d8(+0x2bcd060) [0x61aa5629e060]
// ../v8/out/fuzzbuild/d8(+0x2c159a0) [0x61aa562e69a0]
// ../v8/out/fuzzbuild/d8(+0x2bb9849) [0x61aa5628a849]
// ../v8/out/fuzzbuild/d8(+0x2c86ff1) [0x61aa56357ff1]
// ../v8/out/fuzzbuild/d8(+0x1f311e8) [0x61aa556021e8]
// ../v8/out/fuzzbuild/d8(+0x1f474d5) [0x61aa556184d5]
// ../v8/out/fuzzbuild/d8(+0x1f2491f) [0x61aa555f591f]
// ../v8/out/fuzzbuild/d8(+0x1c87fb7) [0x61aa55358fb7]
// /lib/x86_64-linux-gnu/libc.so.6(+0x94ac3) [0x7d791b894ac3]
// /lib/x86_64-linux-gnu/libc.so.6(+0x126850) [0x7d791b926850]
// Received signal 6
// STDOUT:
// STDOUT. 
// fuzzer args: .build/x86_64-unknown-linux-gnu/debug/FuzzilliCli --profile=v8 ../v8/out/fuzzbuild/d8 --jobs=32 --logLevel=verbose --timeout=600 --storagePath=../v8_fuzzing_results --resume --exportStatistics --statisticsExportInterval=5 --diagnostics --tag=13ea589
// TARGET ARGS: ../v8/out/fuzzbuild/d8 --expose-gc --omit-quit --allow-natives-syntax --fuzzing --jit-fuzzing --future --harmony --js-staging
// CONTRIBUTORS: RegExpGenerator, InputMutator, ComparisonGenerator, IntArrayGenerator, CombineMutator, NumberComputationGenerator, ArrayGenerator, ObjectConstructorGenerator, CodeGenMutator, SpliceMutator
// EXECUTION TIME: 411ms
</content>
    </entry>
    <entry>
        <id>333561131</id>
        <title>Tests are failing: webgl_conformance_integration_test_base.py(422): AssertionError: GPU process crashed during test.\nshould be 51,102,102,51\nat (0, 0) expected: 51,...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333561131"/>
        <updated>1970-01-01T00:28:32.687Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgl_conformance_integration_test_base.py(422): AssertionError: GPU process crashed during test.\nshould be 51,102,102,51\nat (0, 0) expected: 51,102,102,51 was 0,0,0,0\nFAIL should be 51,102,102,51\nat (0, 0) expected: 51,102,102,51 was 0,0,0,0\nshould be 204,153,153,204\nat (0, 0) expected: 204,153,153,204 was 0,0,0,0\nFAIL should be 204,153,153,204\nat (0, 0) expected: 204,153,153,204 was 0,0,0,0\nshould be 51,102,102,204\nat (0, 0) expected: 51,102,102,204 was 0,0,0,0\nFAIL should be 51,102,102,204\nat (0, 0) expected: 51,102,102,204 was 0,0,0,0\nshould be 204,153,153,51\nat (0, 0) expected: 204,153,153,51 was 0,0,0,0\nFAIL should be 204,153,153,51\nat (0, 0) expected: 204,153,153,51 was 0,0,0,0

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/extensions/ext-blend-minmax.html


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/68b631f256f2024746e5daa4931491c5

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333424133</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424133"/>
        <updated>1970-01-01T00:28:32.686Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283664:1283676:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=84559ed8-9f78-497c-9a4e-c7b688318491

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=84559ed8-9f78-497c-9a4e-c7b688318491

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/v8.browsing_desktop/IC:duration_avg/browse_media/browse_media_tumblr_2018
       27.75%: 74.935 -&gt; 95.73 

Top 1 affected measurements in lacros-x86-perf:
  - v8.browsing_desktop/IC:duration_avg/browse_media/browse_media_tumblr_2018
       27.75%: 74.935 -&gt; 95.73 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333559672</id>
        <title>[Blink CSS]: 1 regressions in blink_perf.css</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333559672"/>
        <updated>1970-01-01T00:28:32.685Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284276:1284306:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cdfe3e89-bef5-47c2-9124-b3c1936338be

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cdfe3e89-bef5-47c2-9124-b3c1936338be

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.css/Document::updateStyle/ChangeStyleChildClassSelector.html
        6.43%: 8.56 -&gt; 9.110001 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.css/Document::updateStyle/ChangeStyleChildClassSelector.html
        6.43%: 8.56 -&gt; 9.110001 

Regressions grouped by blink_perf.css includes data from the following benchmarks with listed owners:
  blink_perf.css: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333557604</id>
        <title>end_of_stream() should not depend on only whether data is initialized.</title>
        <author>
            <name>fr...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333557604"/>
        <updated>1970-01-01T00:28:32.685Z</updated>
        <summary>-</summary>
        <content type="html">[end_of_stream()](https://source.chromium.org/chromium/chromium/src/+/main:media/base/decoder_buffer.h;drc=a169ebabcd533a7f5489ac17c1df80f8b89c6fee;l=211?q=decoder_buffer.h) should not depend on only whether data is initialized. \
The only way to create end of stream buffers should be through https://source.chromium.org/chromium/chromium/src/+/main:media/base/decoder_buffer.h;l=129;drc=a169ebabcd533a7f5489ac17c1df80f8b89c6fee?q=decoder_buffer.h.
</content>
    </entry>
    <entry>
        <id>333477761</id>
        <title>MojoPredictiveAllocation experiment broke CfT tests and build</title>
        <author>
            <name>kv...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333477761"/>
        <updated>1970-01-01T00:28:32.685Z</updated>
        <summary>-</summary>
        <content type="html">MojoPredictiveAllocation experiment introduced by https://crrev.com/c/5427497 broke Chrome for Testing tests (https://ci.chromium.org/ui/p/chrome/g/official.cft/builders) and Chrome for Testing build that cannot start unless  --disable-features=MojoPredictiveAllocation is specified.</content>
    </entry>
    <entry>
        <id>333473710</id>
        <title>Remove unused android cable authenticator module code</title>
        <author>
            <name>ns...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333473710"/>
        <updated>1970-01-01T00:28:32.685Z</updated>
        <summary>-</summary>
        <content type="html">Remove the old unused android cable authenticator module code that lets Chrome do hybrid, except for the USB stack that is still used.

5436294: [webauthn] Disable Chrome cable authenticator | https://chromium-review.googlesource.com/c/chromium/src/+/5436294 disabled it, and we should clean up the code after we're sure it's safe.</content>
    </entry>
    <entry>
        <id>333418179</id>
        <title>Out Of Memory detected in src/heap/base/basic-slot-set.h, line 60</title>
        <author>
            <name>da...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418179"/>
        <updated>1970-01-01T00:28:32.684Z</updated>
        <summary>-</summary>
        <content type="html">Out Of Memory detected in src/heap/base/basic-slot-set.h, line 60.

OOM reported by DCHECK in src/heap/base/basic-slot-set.h, line 60 for inline void* AlignedAlloc(size_t size, size_t alignment); DCHECK inside AlignedAlloc did not report anything else about this issue.

I have not done enough investigation to determine the version range in which this OOM occurs, but I have confirmed that the accompanying PoC works as of main branch commit ID 021a9219 and b13ea589 and 57c39ff5 are the most recent commits, respectively.

I found that it took about 30 minutes to detect the OOM on the Fuzzilli build, and 2 hours and 50 minutes on the x64.debug build. (Of course, the time to detection will vary significantly between devices attempting to reproduce it).

The stack backtrace is shown below.


&lt;--- Last few GCs ---&gt;

[561064:0x55a5fae41000] 10145717 ms: Scavenge 1.3 (2.5) -&gt; 0.3 (2.5) MB, pooled: 1 MB, 1.99 / 0.00 ms (average mu = 1.000, current mu = 1.000) allocation failure;
[561064:0x55a5fae41000] 10147690 ms: Scavenge 1.3 (2.5) -&gt; 0.3 (2.5) MB, pooled: 1 MB, 1.59 / 0.00 ms (average mu = 1.000, current mu = 1.000) allocation failure;
[561064:0x55a5fae41000] 10149690 ms: Scavenge 1.3 (2.5) -&gt; 0.3 (2.5) MB, pooled: 1 MB, 2.26 / 0.00 ms (average mu = 1.000, current mu = 1.000) allocation failure;


&lt;--- JS stacktrace ---&gt;



#.
# Fatal process out of memory: ExternalEntityTable::AllocateSegment
# # # Allocation failed.
==== C stack trace ===============================

    /home/error403/v8/out/x64.debug/libv8_libbase.so(v8::base::debug::StackTrace::StackTrace()+0x1e) [0x7f8efa3c29ee]
    /home/error403/v8/out/x64.debug/libv8_libplatform.so(+0x52e5d) [0x7f8efa317e5d]
    /home/error403/v8/out/x64.debug/libv8_libbase.so(v8::base::FatalOOM(v8::base::OOMType, char const*)+0x63) [0x7f8efa392a43]
    /home/error403/v8/out/x64.debug/libv8.so(v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, v8::OOMDetails const&amp;)+0x9c) [0x7f8f004555ac]
    /home/error403/v8/out/x64.debug/libv8.so(v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, v8::OOMDetails const&amp;)+0x593) [0x7f8f004554b3]
    v8/out/x64.debug/d8(v8::internal::ExternalEntityTable&lt;v8::internal::ExternalPointerTableEntry, 536870912ul&gt;::AllocateTableSegment()+0x64) [0x55a5f9b8d1e4]
    v8/out/x64.debug/d8(v8::internal::ExternalEntityTable&lt;v8::internal::ExternalPointerTableEntry, 536870912ul&gt;::Extend(v8::internal::ExternalEntityTable&lt;v8::internal::ExternalPointerTableEntry, 536870912ul&gt;::Space*)+0xf3) [0x55a5f9b8cba3]
    v8/out/x64.debug/d8(v8::internal::ExternalEntityTable&lt;v8::internal::ExternalPointerTableEntry, 536870912ul&gt;::AllocateEntry(v8::internal::ExternalEntityTable&lt;v8::internal::ExternalPointerTableEntry, 536870912ul&gt;::Space*)+0x171) [0x55a5f9b8c241]
    v8/out/x64.debug/d8(v8::internal::ExternalPointerTable::AllocateAndInitialiseEntry(v8::internal::ExternalPointerTable::Space*, unsigned long, v8::internal::ExternalPointerTag)+0x71) [0x55a5f9b8be61]
    /home/error403/v8/out/x64.debug/libv8.so(v8::internal::JSArrayBuffer::set_extension(v8::internal::ArrayBufferExtension*)+0x134) [0x7f8f012e1484]
    /home/error403/v8/out/x64.debug/libv8.so(v8::internal::JSArrayBuffer::EnsureExtension()+0x80) [0x7f8f012de9e0]
    /home/error403/v8/out/x64.debug/libv8.so(v8::internal::JSArrayBuffer::Attach(std::__Cr::shared_ptr&lt;v8::internal::BackingStore&gt;)+0x603) [0x7f8f012de8a3]
    /home/error403/v8/out/x64.debug/libv8.so(+0x61e56b7) [0x7f8f005bb6b7]
    /home/error403/v8/out/x64.debug/libv8.so(+0x61e229e) [0x7f8f005b829e]
    /home/error403/v8/out/x64.debug/libv8.so(v8::internal::Builtin_ArrayBufferConstructor(int, unsigned long*, v8::internal::Isolate*)+0x113) [0x7f8f005b7713]
    [0x7f8e7f7ab33d]
Received signal 6
zsh: IOT instruction v8/out/x64.debug/d8 --expose-gc --allow-natives-syntax --fuzzing --jit-fuzzing --future --harmony --js-staging
 

</content>
    </entry>
    <entry>
        <id>333511557</id>
        <title>Add toJSON() method to GeolocationCoordinates</title>
        <author>
            <name>re...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333511557"/>
        <updated>1970-01-01T00:28:32.684Z</updated>
        <summary>-</summary>
        <content type="html">Proposed in https://github.com/w3c/geolocation-api/pull/147.

This will help implement automated testing by providing an easier way to stringify a GeolocationCoordinates object. If we'd designed the API today this would be a WebIDL dictionary rather than an interface and so would get JSON conversion automatically. Adding an explicit `toJSON()` method is the next best option.</content>
    </entry>
    <entry>
        <id>333552288</id>
        <title>[OPTIONAL] Merge two strings to remove redundancy and to simplify the code</title>
        <author>
            <name>ai...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333552288"/>
        <updated>1970-01-01T00:28:32.683Z</updated>
        <summary>-</summary>
        <content type="html">**TL;DR**

Optional clean-up is possible in https://crsrc.org/c/chrome/browser/ui/webui/settings/browser_lifetime_handler.cc by replacing IDS_RELAUNCH_CONFIRMATION_DIALOG_BODY[1] with IDS_UPDATE_RECOMMENDED[2] since it is used only here and the strings are very similar. However an approval of the owner/all teams that use the handler should be received first.

This is a follow-up for b/41483125 and https://crrev.com/c/5279380 specifically.

---

IDS_RELAUNCH_CONFIRMATION_DIALOG_BODY is a plural string that was introduced as a part of relaunch-confirmation-dialog and looks like this when 1 incognito window is open: "Your Incognito window won't open after you relaunch".

It is very similar to IDS_UPDATE_RECOMMENDED - an older and much more used string: "A new update for Chrome is available and will be applied as soon as you relaunch. Your Incognito window won't reopen." The diff is that the older string has an extra sentence at the beginning that is always the same for any number of incognito windows open.

relaunch-confirmation-dialog is used right now in 5 other places[3] and changing the handler will affect all these UIs. We need to make sure all these teams are ok with this change before proceeding.

If we go with the optimization, the new code will look as short as:

```
base::Value description = base::Value(
        l10n_util::GetPluralStringFUTF16(IDS_UPDATE_RECOMMENDED, incognito_count));
```

---

[1] https://crsrc.org/c/chrome/app/settings_strings.grdp;l=24

[2] https://crsrc.org/c/chrome/app/google_chrome_strings.grd;l=1310

[3] https://source.chromium.org/search?q=%22relaunch-confirmation-dialog%22%20f:.html%20-f:out%2F%20-f:gen%2F</content>
    </entry>
    <entry>
        <id>333477760</id>
        <title>"generic-hand-select" profiles should fallback to "generic-hand" before "generic-button"</title>
        <author>
            <name>al...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333477760"/>
        <updated>1970-01-01T00:28:32.683Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>333418146</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333418146"/>
        <updated>1970-01-01T00:28:32.683Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284238:1284268:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9ee87aae-4baf-4cb9-a491-5863a2a69496

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9ee87aae-4baf-4cb9-a491-5863a2a69496

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/v8.browsing_mobile/Compile:duration_avg/browse_tools/browse_tools_maps_2019
        7.45%: 227.9095 -&gt; 244.886 

Top 1 affected measurements in android-pixel6-pro-perf:
  - v8.browsing_mobile/Compile:duration_avg/browse_tools/browse_tools_maps_2019
        7.45%: 227.9095 -&gt; 244.886 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333424132</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424132"/>
        <updated>1970-01-01T00:28:32.683Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1283987:1284036:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b8555059-79f7-466c-9609-316078f3635e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b8555059-79f7-466c-9609-316078f3635e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/v8.browsing_mobile/v8:gc:cycle:full_avg/browse_social/browse_social_facebook_infinite_scroll_2018
        5.14%: 133.23 -&gt; 140.076 

Top 1 affected measurements in android-pixel2-perf:
  - v8.browsing_mobile/v8:gc:cycle:full_avg/browse_social/browse_social_facebook_infinite_scroll_2018
        5.14%: 133.23 -&gt; 140.076 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333425974</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333425974"/>
        <updated>1970-01-01T00:28:32.683Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284238:1284268:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=24604b2b-8a13-45d7-a1c3-aaa17815020c

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=24604b2b-8a13-45d7-a1c3-aaa17815020c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/v8.browsing_mobile-future/IC:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
        2.66%: 145.806 -&gt; 149.69101 

Top 1 affected measurements in android-pixel6-pro-perf:
  - v8.browsing_mobile-future/IC:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
        2.66%: 145.806 -&gt; 149.69101 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333413842</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333413842"/>
        <updated>1970-01-01T00:28:32.682Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284072:1284142:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f3ae8f6e-5a52-4c18-9d78-e1e72c357b14

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f3ae8f6e-5a52-4c18-9d78-e1e72c357b14

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/v8.browsing_mobile-future/GC:duration_avg/browse_media/browse_media_googleplaystore_2019
       67.90%: 25.573 -&gt; 42.938 

Top 1 affected measurements in android-pixel6-perf:
  - v8.browsing_mobile-future/GC:duration_avg/browse_media/browse_media_googleplaystore_2019
       67.90%: 25.573 -&gt; 42.938 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333549220</id>
        <title>Fix Autofill.PerfectFilling.* metric</title>
        <author>
            <name>ji...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333549220"/>
        <updated>1970-01-01T00:28:32.682Z</updated>
        <summary>-</summary>
        <content type="html">The current implementation of the metric suffers from false negatives and missing negatives. This should be fixed, go/autofill-perfect-filling-metric is a one-pager suggesting a fix.</content>
    </entry>
    <entry>
        <id>333549430</id>
        <title>Improving naming of pixel devices (instead of codenames)</title>
        <author>
            <name>wn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333549430"/>
        <updated>1970-01-01T00:28:32.682Z</updated>
        <summary>-</summary>
        <content type="html">e.g. instead of raven, this should say "Pixel 6 Pro (raven)": https://chrome-swarming.appspot.com/botlist?c=id&amp;c=task&amp;c=os&amp;c=status&amp;d=asc&amp;f=device_type%3Araven&amp;k=device_type&amp;s=id</content>
    </entry>
    <entry>
        <id>333547147</id>
        <title>Implement a Download Row ESB Promo </title>
        <author>
            <name>aw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333547147"/>
        <updated>1970-01-01T00:28:32.681Z</updated>
        <summary>-</summary>
        <content type="html">Implement an ESB Promo on the most recent dangerous download on chrome://downloads with tests.</content>
    </entry>
    <entry>
        <id>333546355</id>
        <title>Wrong content is populated into URI bar after selecting from menu</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333546355"/>
        <updated>1970-01-01T00:28:32.680Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Have a account with Ukrainian as primary language and not Russian.
2. Start entering "теор" in the URI bar (screenshot #1)
3. See "Теорія великого вибуху" proposed
4. Select it. See "Теория большого взрыва" populated (screenshot #2)

# Problem Description
Text populated is different from text selected (wrong language)

# Summary
Wrong content is populated into URI bar after selecting from menu

# Custom Questions
#### Is it a problem with a plugin?
No - It's the browser itself

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333546300</id>
        <title>Add internal versions of Papercut extension ID to allowlist for mdns and system.network APIs.
</title>
        <author>
            <name>ko...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333546300"/>
        <updated>1970-01-01T00:28:32.680Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
'mdns' is not allowed for specified extension ID.

# Problem Description
Hi team, 
Public PaperCut extension "Mobility Print" is allowed to use mdns and system.network API. 
In corp we're running repackaged internal version of this extension  http://go/papercut-extension. Current version doesn't use these API yet, but the newly released 1.4.0.0 does. 

We want to test and deploy the new version in corp. 
1. Could you please add internal version to this Chrome allowlist? Extension ID is eemhhnpbjkhgacmkcieenkokbiancmic
2. Is it possible to add one of the development key ids to the allowlist too, so that we could test it internally first using one of those keys (http://google3/ops/security/chrome_extensions/docs/developer/README.md). 

# Summary
Add internal versions of Papercut extension ID to allowlist for mdns and system.network APIs.

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333424131</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333424131"/>
        <updated>1970-01-01T00:28:32.679Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1284189:1284219:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=60c6c52f-3fc2-442f-add4-60a2efde54eb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=60c6c52f-3fc2-442f-add4-60a2efde54eb

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/rasterize_and_record_micro.top_25/record_time/file___static_top_25_techcrunch.html
        5.44%: 0.1195 -&gt; 0.126 

Top 1 affected measurements in android-pixel4-perf:
  - rasterize_and_record_micro.top_25/record_time/file___static_top_25_techcrunch.html
        5.44%: 0.1195 -&gt; 0.126 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333423706</id>
        <title>[css-anchor-position] AnchorResults ignores position-anchor/inset-area</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423706"/>
        <updated>1970-01-01T00:28:32.678Z</updated>
        <summary>-</summary>
        <content type="html">The anchor query API (AnchorEvaluator+AnchorScope) allows evaluation of queries using a specified position-anchor and inset-area, but the accompanying cache (AnchorResults) ignores the position-anchor and inset-area part. This is fragile, because we're completely reliant on very careful use of the API, like queries happening in a specific order, in order to get the correct behavior.

I don't *think* we have any web-observable bugs currently, but I'd still like to fix it so it's a little more robust for the future.</content>
    </entry>
    <entry>
        <id>333541049</id>
        <title>Tests are failing: ninja://chrome/test:browser_tests/HistoryEmbeddingsBrowserTest.SearchFindsResultWithSourcePassage</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333541049"/>
        <updated>1970-01-01T00:28:32.678Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:browser_tests/HistoryEmbeddingsBrowserTest.SearchFindsResultWithSourcePassage

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f41a4caa4ded7486a453a47dc70cbfa3

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>333445552</id>
        <title>Pictograms to illustrate list of downloads</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333445552"/>
        <updated>1970-01-01T00:28:32.677Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  What if you replace icons/symbols with pictograms to illustrate list of downloads
2.  Take picture of website when starting download  ---&gt;  transform it into little pictogram
3. 

# Problem Description

Maybe making pictures of websites and creating pictograms isn't technically feasible yet.   /idk

# Summary
Pictograms to illustrate list of downloads

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333420623</id>
        <title>Autohide or remove X symbol from tabstrip as websites cannot close themselves and to save space</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333420623"/>
        <updated>1970-01-01T00:28:32.677Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  Autohide or remove X symbol from tabstrip as website cannot close themselves and to save vertical space
2.  Autohide or remove X symbol from the end of tab
3. 

# Problem Description
X symbol in the end of tab doesn't make sense as websites can't close themselves.
They can make sound  (speaker symbol) but not close themselves.

X symbol could autohide.

# Summary
Autohide or remove X symbol from tabstrip as websites cannot close themselves and to save space

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333423705</id>
        <title>100000</title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333423705"/>
        <updated>1970-01-01T00:28:32.677Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. 00000
2. 00000
3. 00000

# Problem Description
Nose

# Summary
100000

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333538609</id>
        <title>Synchronous platforms APIs which invoke JS callbacks (i.e. MutationObserver or web components), don't show UI feedback about why this call was scheduled in Tracing</title>
        <author>
            <name>mm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333538609"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html">There are many platform APIs which invoke JS callbacks.

For apis which are "asynchronous" or event based, there is a macrotask which is scheduled when the events trigger, and then the callback is invoked within that macrotask.  For example, addEventListener or XHR progress events.

But for synchronous apis, for example MutationObserver observe() callback or Web component instantiation, these are scheduled as a microtask that is included in an existing macrotask (i.e. perhaps a timer, or an input).  From the context of the macrotask flame graph-- its entirely unclear why this JS "FunctionCall" was invoked in the middle of microtask dispatch.

See one example screenshot.  Perfetto UI has the same issue.</content>
    </entry>
    <entry>
        <id>333537213</id>
        <title>Add help center link to Safety Check page</title>
        <author>
            <name>ai...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333537213"/>
        <updated>1970-01-01T00:28:32.676Z</updated>
        <summary>-</summary>
        <content type="html">Add an icon button to SH page that opens https://support.google.com/chrome/answer/10468685.</content>
    </entry>
</feed>