<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-29T00:37:37.154Z</updated>
    <entry>
        <id>327509275</id>
        <title>Deprecate allow_submit_with_open_deps</title>
        <author>
            <name>dd...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327509275"/>
        <updated>2024-02-29T00:37:37.154Z</updated>
        <summary>-</summary>
        <content type="html">`allow_submit_open_deps` allows users to trigger a full-run with open deps. However, this option no longer makes sense since go/chained-cq-votes have been introduced. That is, if a given dependent CL has open deps, which are unsubmitted ancestor CLs in a relation chain, chained-cq-votes will copy CQ+2 into each of the open deps, and then submit them in order.

Therefore, `allow_submit_open_deps` is noop. Please update documents and mark it as deprecated to indicate that the option is noop.

Note `allow_submit_open_deps` is allowed only if the CQ config is not set with combine_cl.
https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/cv/internal/configs/validation/project.go;l=207</content>
    </entry>
    <entry>
        <id>327506349</id>
        <title>[V8 JetStream2 Perf Sheriff]: 1 regressions in jetstream2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327506349"/>
        <updated>2024-02-29T00:11:26.614Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266434:1266449:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=40076809-747c-4126-ac39-dd20c1749d5d

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=40076809-747c-4126-ac39-dd20c1749d5d
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=40076809-747c-4126-ac39-dd20c1749d5d

Top 1 regressions (out of 5, with 4 improvements) in this group:
  - ChromiumPerf/win-10-perf/jetstream2/FlightPlanner.Average/JetStream2
       11.08%: 1045.024 -&gt; 929.25335 unitless

Top 1 affected measurements in win-10-perf:
  - jetstream2/FlightPlanner.Average/JetStream2
       11.08%: 1045.024 -&gt; 929.25335 unitless

Regressions grouped by jetstream2 includes data from the following benchmarks with listed owners:
  jetstream2: hablich@chromium.org, tcwang@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266425..1266456
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/1928f3476221cc48f16da476c2d3daf7a1082c8e..7160fc436c967688ec8c12bce5b96723089dc4b3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/dcc15347648366b826df15d7e06b11d8b11ca7a9..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327486154</id>
        <title>[Graphics]: 1 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327486154"/>
        <updated>2024-02-29T00:10:32.049Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1265969:1266099:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ff365876-b016-4b0d-815a-32b6cffec7bc

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ff365876-b016-4b0d-815a-32b6cffec7bc

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2_webview-perf/rendering.mobile/thread_total_rendering_cpu_time_per_frame/espn_2018
       37.18%: 18.6636 -&gt; 25.6029 unitless

Top 1 affected measurements in android-pixel2_webview-perf:
  - rendering.mobile/thread_total_rendering_cpu_time_per_frame/espn_2018
       37.18%: 18.6636 -&gt; 25.6029 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1265968..1266099
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/daf2644671561e92dc4c4a2220816b1a8e139ec5..b53eb026438b102249f055de1af5d8aff5bb0779
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/524a06bc5423ef2289bc6102ee5a2b9e747137cc..a8c47276cb6d3188db8b5a4ba77abd07797c0071</content>
    </entry>
    <entry>
        <id>327503979</id>
        <title>Tracking Prices toggles don’t sync while in multi-window mode</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327503979"/>
        <updated>2024-02-29T00:02:12.283Z</updated>
        <summary>-</summary>
        <content type="html">
App Version: 123.0.6312.18 Beta
iOS Version: 17.4, 16.7.2
Device: iPad Pro 4th Gen, iPad Mini 6th Gen (iPads only)

Steps to reproduce:
  1. Launch Chrome
  2. Open a new window
  3. In both windows navigate to Settings &gt; Notifications &gt; Tracking Price
  4. Toggle options and observe

Observed results:
Tracking Prices toggles don’t sync while in multi-window mode

Expected results:
Tracking Prices toggles should sync while in multi-window mode

Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: NA
Bug reproducible on current stable build (App Version, iOS Version): Yes M122
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes M123

Link to video:
https://drive.google.com/file/d/1Q05jD_LHTwH--1vX29fTqrgNfXg-z7tQ/view?usp=drive_link&amp;resourcekey=0-D9trP3PRkuRS7rvcem6b8g
</content>
    </entry>
    <entry>
        <id>327473664</id>
        <title>(Windows) DComp pending frames improvements</title>
        <author>
            <name>su...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473664"/>
        <updated>2024-02-28T23:51:51.971Z</updated>
        <summary>-</summary>
        <content type="html">DCompPresenter (like DirectCompositionChildSurfaceWin before it) uses D3D11 event queries to track GPU work for each frame. These queries are polled on the GPU main thread at vblank time (posted from VSyncThreadWin) and used to send PresentationFeedback back to Viz.

It might be better to instead use EnqueueSetEvent and either 1) poll the event handles on the vsync thread which can be done since there's no involvement of the D3D11 immediate context, or 2) use WaitableEventWatcher or similar to issue a callback when the event signals. The latter would be a larger change in behavior from the current implementation so I'm inclined to go with the first option.</content>
    </entry>
    <entry>
        <id>327502550</id>
        <title>updater: integration_tests_helper and absl command line args conflict</title>
        <author>
            <name>so...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327502550"/>
        <updated>2024-02-28T23:49:11.768Z</updated>
        <summary>-</summary>
        <content type="html">When `GTEST_HAS_ABSL` is defined, `--version` command line argument of `updater_integration_tests_helper.exe` conflicts with the `--version` defined by `absl` usage flags.</content>
    </entry>
    <entry>
        <id>327501273</id>
        <title>Tests are failing: web_app_browsertest.cc(1351): Value of: hit_the_bottom_right\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327501273"/>
        <updated>2024-02-28T23:40:57.646Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
web_app_browsertest.cc(1351): Value of: hit_the_bottom_right\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/WebAppBrowserTest.WindowsOffsetForMultiWindowPWA


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/169a9a97d247d4737b15fd62602c8af7

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327473151</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473151"/>
        <updated>2024-02-28T23:39:42.034Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260818:1263761:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=193536cb-8ddf-4d57-a82e-c3b55b2b3b83

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=193536cb-8ddf-4d57-a82e-c3b55b2b3b83

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/filter_terrain_svg
      262.11%: 5.3835 -&gt; 19.49435 unitless

Top 1 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/filter_terrain_svg
      262.11%: 5.3835 -&gt; 19.49435 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1260817..1263761
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/08294ff5efd6e8902f1988d405fa9501e496ee8d..bf8df6003bc7a88b912529e02450b49cf7023280
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/23c32da48ae3f5f146dbd60b8b7fe4416f3750b4..efea7bb8ccb67db20bc6c3cf85996ef1edcb895f</content>
    </entry>
    <entry>
        <id>327498504</id>
        <title>CastMediaNotificationItemTest.MediaPositionUpdate is flaky on win11-arm64-rel-tests</title>
        <author>
            <name>ku...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327498504"/>
        <updated>2024-02-28T23:31:31.811Z</updated>
        <summary>-</summary>
        <content type="html">The first test case for CastMediaNotificationItemTest.MediaPositionUpdate is flaky and failing 12% of the time.

https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Ftest%3Aunit_tests%2FCastMediaNotificationItemTest.MediaPositionUpdate?q=VHASH%3A99adc6826e0b01e1

```
  {
    // Test that media position updated correctly with playing video.
    auto status = MediaStatus::New();
    status-&gt;play_state = MediaStatus::PlayState::PLAYING;
    status-&gt;duration = duration;
    status-&gt;current_time = current_time;
    EXPECT_CALL(view_, UpdateWithMediaPosition(_))
        .WillOnce([&amp;](const media_session::MediaPosition&amp; position) {
          EXPECT_EQ(1.0, position.playback_rate());
          EXPECT_EQ(duration, position.duration());
          EXPECT_NEAR(current_time.InSecondsF(),
                      position.GetPosition().InSecondsF(), 1e-3);
        });
    item_-&gt;OnMediaStatusUpdated(std::move(status));
  }
```

The delta in the media position ranged from 0.005~0.001 when fail on win11-arm64-rel-tests. Maybe the bot is slower?

Hi David, based on your improvement in https://crrev.com/c/2945084, what's your suggestion for win11-arm builders?</content>
    </entry>
    <entry>
        <id>327468390</id>
        <title>file:///storage/emulated/0/Download/Wed%20Feb%2028%202024%2015_49_13%20GMT-0500%20(Eastern%20Standar</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327468390"/>
        <updated>2024-02-28T23:05:53.182Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. https://groups.google.com/a/chromium.org/d/msgid/blink-dev/CALEeEUCSym%2BRaquhSMyAjwEF09dWS3zLJk97kj8XaoCscL61Fg%40mail.gmail.com
2. 
3. 

# Problem Description
https://www.google.com/search?q=https+%2F%2Fwww.google.com%2Fandroid%2Fdevicemanager+u%3D0&amp;sca_esv=a1ed381ddb91d5f7&amp;sca_upv=1&amp;sxsrf=ACQVn09mpkark1qlgIhcTL6UPTjaESKGqA%3A1709160922251&amp;ei=2rnfZd2DD_i_kPIP6tWPiAo&amp;oq=https+%2F%2Fwww.google.com&amp;gs_lp=EhNtb2JpbGUtZ3dzLXdpei1zZXJwIhZodHRwcyAvL3d3dy5nb29nbGUuY29tKgIIAzIEECMYJzIKEAAYgAQYFBiHAjIQEAAYgAQYFBiHAhixAxiDATIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgAQyBRAAGIAESL52UMsRWMUscAB4AJABAJgBnASgAfAcqgEKMC4xNi4yLjUtMbgBAcgBAPgBAZgCCaACnw3CAgUQIRigAcICBhAAGBYYHpgDAIgGAZIHBTAuNi4z&amp;sclient=mobile-gws-wiz-serp

# Summary
file:///storage/emulated/0/Download/Wed%20Feb%2028%202024%2015_49_13%20GMT-0500%20(Eastern%20Standar

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327495464</id>
        <title>Tests are failing: privacy_budget_browsertest.cc(860): Value of: seen_metrics\nExpected: contains at least one element that has a first field that type (type: 8-byte ...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327495464"/>
        <updated>2024-02-28T22:56:20.457Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
privacy_budget_browsertest.cc(860): Value of: seen_metrics\nExpected: contains at least one element that has a first field that type (type: 8-byte object &lt;07-00 00-00 00-00 00-00&gt;), and has a second field that is equal to 201217\n  Actual: { (0, 0), (7, 2736387613), (256, 0), (263, 3586087975), (512, 1), (519, 8896980769124590340), (768, 33), (775, -3903604747494429437), (1031, 691201), (1287, 691457), (1543, 691713), (1799, 692225), (896956215682477568, 1), (11181185366848792576, 0) }

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PrivacyBudgetMetaExperimentBrowserTestWithUkmRecording.ReportsEncounteredSurfacesAndDocumentCreatedMetrics


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/749c45d2161724a7e884d37fab3f83d5

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327494278</id>
        <title>http/tests/xmlhttprequest/ontimeout-event-override-after-failure.html flaky on win11-arm and win-rel</title>
        <author>
            <name>ku...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327494278"/>
        <updated>2024-02-28T22:48:38.090Z</updated>
        <summary>-</summary>
        <content type="html">Web Test http/tests/xmlhttprequest/ontimeout-event-override-after-failure.html is flaky on Windows

The following web test is flaky on Windows:

http/tests/xmlhttprequest/ontimeout-event-override-after-failure.html

More than 50% of the runs were failing and causing build failures.

https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fxmlhttprequest%2Fontimeout-event-override-after-failure.html?q=VHASH%3A9b30675a77baf900
https://ci.chromium.org/ui/test/chromium/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fxmlhttprequest%2Fontimeout-event-override-after-failure.html?q=V%3Abuilder%3Dwin-rel+</content>
    </entry>
    <entry>
        <id>327493665</id>
        <title>Tests are failing: ax_tree.cc(1439): Check failed: false. After a tree update, there is a tree inconsistency.</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327493665"/>
        <updated>2024-02-28T22:41:04.132Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
ax_tree.cc(1439): Check failed: false. After a tree update, there is a tree inconsistency.

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.ViewerPropertiesDialog/All.0
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.ViewerPropertiesDialog/All.1
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.Fullscreen/All.1
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.Fullscreen/All.0


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5b40c92d30baee9feda7248acb0f8a25

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327457586</id>
        <title>Write unit tests for scrollbar dimension calculations</title>
        <author>
            <name>ga...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327457586"/>
        <updated>2024-02-28T22:18:23.227Z</updated>
        <summary>-</summary>
        <content type="html">Write unit tests for composited and non-composited scrollbar dimension calculations.
Follow up to https://crbug.com/327458810
</content>
    </entry>
    <entry>
        <id>327488620</id>
        <title>Make DeprecatedLayoutImmediately calls go away</title>
        <author>
            <name>dp...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327488620"/>
        <updated>2024-02-28T22:09:29.360Z</updated>
        <summary>-</summary>
        <content type="html">Most people should not be calling DeprecatedLayoutImmedately. We should update many (all?) of the callers to get the effect they need without requiring a synchronous layout.</content>
    </entry>
    <entry>
        <id>327458810</id>
        <title>Fluent overlay scrolllbar non-composited minimal mode thumb has wrong dimensions</title>
        <author>
            <name>ga...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327458810"/>
        <updated>2024-02-28T22:04:09.782Z</updated>
        <summary>-</summary>
        <content type="html">The non composited minimal mode thumb is missing the last step in the rect's size calculation, casting the rectF with the calculations to an enclosingRect. Currently, the results of the calculation are truncated.
Composited calculation: https://source.chromium.org/chromium/chromium/src/+/main:cc/layers/scrollbar_layer_impl_base.cc;l=149;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090;bpv=0;bpt=1
Non-composited: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/scroll/scrollbar_theme_fluent.cc;l=226?q=scrollbarthemefluent</content>
    </entry>
    <entry>
        <id>327467653</id>
        <title>Overlay timeout spinner is broken</title>
        <author>
            <name>al...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327467653"/>
        <updated>2024-02-28T21:58:20.535Z</updated>
        <summary>-</summary>
        <content type="html">The "spinner" which is supposed to appear when a page is about to, but hasn't yet, timed out appears to be broken. To the best of my memory, it doesn't appear on Desktop, and on Android we have to comment out the actual spinner binding, otherwise the overlay rendering appears to hang and never progress.</content>
    </entry>
    <entry>
        <id>327486153</id>
        <title>mediasource_MP4_AACLC_AVC_pipeline_integration_fuzzer.exe: CHECK failure: false. Unsupported pixel format: 73 in ffmpeg_common.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327486153"/>
        <updated>2024-02-28T21:51:47.443Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5969847157981184

Fuzzing Engine: libFuzzer
Fuzz Target: mediasource_MP4_AACLC_AVC_pipeline_integration_fuzzer
Job Type: windows_libfuzzer_chrome_asan
Platform Id: windows

Crash Type: CHECK failure
Crash Address: 
Crash State:
  false. Unsupported pixel format: 73 in ffmpeg_common.cc
  logging::NotReachedLogMessage::~NotReachedLogMessage
  media::AVPixelFormatToVideoPixelFormat
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=windows_libfuzzer_chrome_asan&amp;range=1264469:1264470

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5969847157981184

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>327485854</id>
        <title>Change re-auth bubble strings as per new UX alignment</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327485854"/>
        <updated>2024-02-28T21:51:24.325Z</updated>
        <summary>-</summary>
        <content type="html">Attached is the mock for the new strings for the mandatory re-auth opt-in bubble.</content>
    </entry>
    <entry>
        <id>327483127</id>
        <title>document.execCommand('copy') does not respect Browser Permission Policy clipboard-write</title>
        <author>
            <name>vi...@meta.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327483127"/>
        <updated>2024-02-28T21:31:45.641Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Restrict the clipboard-write permission on a page using Browser Permission Policy
2. Select text on the page then execute `document.execCommand('copy')` in the JS console
3. Note no permission policy violation is signalled in the JS console, no report is generated in the Reporting API tab, and the text is copied to the clipboard.

# Problem Description
document.execCommand('copy') does not respect Browser Permission Policy clipboard-write.

I didn't test the dual document.execCommand('paste') and clipboard-read, but I suspect they are also broken.

This is counterintuitive with the purpose of Permissions Policy to prevent JS access to the clipboard, because malicious actors (via XSS) will just use this API to do so, if the Clipboard API is blocked with a permission policy.

# Summary
document.execCommand('copy') does not respect Browser Permission Policy clipboard-write

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>327481717</id>
        <title>Implement plan for aborted promos</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327481717"/>
        <updated>2024-02-28T21:26:48.123Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327481701</id>
        <title>Propose plan for aborted promos</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327481701"/>
        <updated>2024-02-28T21:26:14.494Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327478398</id>
        <title>pytype presubmit timeouts</title>
        <author>
            <name>cb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327478398"/>
        <updated>2024-02-28T21:20:05.156Z</updated>
        <summary>-</summary>
        <content type="html">Pytype now regularly hits the 15min marks with the more updated version
https://ci.chromium.org/ui/p/v8/builders/try/crossbench_presubmit
This blocks me a bit at times with development (sometimes it gets a faster run, not sure why)

I see several ways to improve this (not sure what's feasible on the infra side):

- Dedicated tryjob so it can run on more threads
- Cache the pytype `.pytype/pyi` files between runs to speed up differential analysis</content>
    </entry>
    <entry>
        <id>327479959</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest#testExportHelpSite </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327479959"/>
        <updated>2024-02-28T21:19:58.677Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest#testExportHelpSite would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest%23testExportHelpSite
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest%23testExportHelpSite
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest%23testExportHelpSite

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>327479904</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testLaunchIncognitoURL </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327479904"/>
        <updated>2024-02-28T21:19:53.735Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testLaunchIncognitoURL is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testLaunchIncognitoURL
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testLaunchIncognitoURL
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testLaunchIncognitoURL

</content>
    </entry>
    <entry>
        <id>327480197</id>
        <title>support reduce user-agent android version and device model on webview</title>
        <author>
            <name>vi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327480197"/>
        <updated>2024-02-28T21:18:47.408Z</updated>
        <summary>-</summary>
        <content type="html">currently, webview use its own logic to construct the user-agent instead of using the unified platform under chrome flag.
adding support reduce the user-agent android version and device model, build number on webview.</content>
    </entry>
    <entry>
        <id>327468387</id>
        <title>this picture was deleted but it is still showing</title>
        <author>
            <name>my...@outlook.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327468387"/>
        <updated>2024-02-28T21:14:18.887Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result? DELETE THIS PICTURE


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>327478130</id>
        <title>Strange auto-update interaction with cipd depot_tools bootstrap on mac arm64</title>
        <author>
            <name>ia...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327478130"/>
        <updated>2024-02-28T21:14:00.224Z</updated>
        <summary>-</summary>
        <content type="html">See thread https://chat.google.com/room/AAAAXGgrwSo/i75UijcgQjU

It seems that something is going on between the mac arm64 and amd64 version of cipd.

This needs some investigation (including e.g. that the arm64 package might accidentally contain the amd64 binary?).</content>
    </entry>
    <entry>
        <id>327475231</id>
        <title>Trying to download my own app from github and download marked as suspicious.</title>
        <author>
            <name>vi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327475231"/>
        <updated>2024-02-28T20:56:44.910Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  open website : https://github.com/Victoare/SR-WLED-audio-server-win/releases/tag/v1.1.0
2.  download : https://github.com/Victoare/SR-WLED-audio-server-win/releases/download/v1.1.0/WledSRServer-v1.1.0.zip
3.  The download is partially blocked because it is suspicious. It let us scan and after a succesfull scan it allows the download.

# Problem Description
This is a Dotnet8 self containing exe, maybe the built in Microsoft famework download triggers it?
The source code can be found on the github page.
The previous versions are worked without flagging.

I had issues with other virus scanners (virustotal marked this file as malicious as well) but after submited the program to BitDeffender and McAfee the detections went from 17 down to 2.

# Summary
Trying to download my own app from github and download marked as suspicious.

# Additional Data
Category: Network / Downloading \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327473659</id>
        <title>filter css from parent should be shown on img and svg</title>
        <author>
            <name>ks...@icloud.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473659"/>
        <updated>2024-02-28T20:49:24.415Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 121.0.6167.185 (Official Build) (64-bit) (cohort: Stable) 
OS                   : Windows 10 Version 22H2 (Build 19045.3930)

What steps will reproduce the problem?
On a parent element add css styling attribute filter, with whatever valid value you want.
have a child of this element be an image element (&lt;img&gt; or &lt;svg&gt;)

What is the expected result?
Styles for the img or svg element include the filter attribute from the parent element.

What happens instead?
Styles for the img or svg element do not include the filter attribute from the parent. The developer will be confused why the image looks different than the source, having to first realize that a parent has a filter attribute and then hunt down where that filter attribute is.


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!

This is a simple example I wrote with w3schools editor:

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
body {
  filter: grayscale(100%);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;The filter Property&lt;/h1&gt;

&lt;p&gt;Convert the image to grayscale:&lt;/p&gt;

&lt;img src="https://www.w3schools.com/cssref/pineapple.jpg" alt="Pineapple" width="300" height="300"&gt;
&lt;svg width="200" height="200" xmlns="http://www.w3.org/2000/svg"&gt;
  &lt;rect width="100" height="100" x="50" y="50" fill="red" /&gt;
&lt;/svg&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The filter property is not supported in Edge 12 or Internet Explorer.&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
    </entry>
    <entry>
        <id>327473301</id>
        <title>Attribution Internals visual / accessibility improvements</title>
        <author>
            <name>ap...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473301"/>
        <updated>2024-02-28T20:48:18.935Z</updated>
        <summary>-</summary>
        <content type="html">We can make a variety of improvements here.</content>
    </entry>
    <entry>
        <id>327458809</id>
        <title>Chromoting must not use CGDisplayStream, CGDisplayCreateImage, CGWindowListCreateImage APIs</title>
        <author>
            <name>av...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327458809"/>
        <updated>2024-02-28T20:37:30.408Z</updated>
        <summary>-</summary>
        <content type="html">The CGDisplayStream, CGDisplayCreateImage, and CGWindowListCreateImage APIs are likely entirely going away in macOS 15. Chromoting must ensure that it (either directly or indirectly) only uses ScreenCaptureKit.</content>
    </entry>
    <entry>
        <id>327467399</id>
        <title>Typing code in console yields different results than pasting code.</title>
        <author>
            <name>fr...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327467399"/>
        <updated>2024-02-28T20:36:08.171Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open the console and manually TYPE the following three lines:
  var e = Error('old')
  e.message = 'new'
  throw e
2. Note that the output will be 'Uncaught Error: old'.
3. Now PASTE those three lines (or use the 'up' cursor key to fetch each of those three lines again) and execute them.
4. Note that the output will be 'Uncaught Error: new'.

# Problem Description
I believe that 'new' is the expected answer.  That's what Firefox returns in all cases.  My suspicion is that the helpful autocomplete or answer previews one gets while typing in the console is having some side effects that affect the final answer.

# Summary
Typing code in console yields different results than pasting code.

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327470257</id>
        <title>[Chrome-Fuchsia Perf Size Sheriff]: 2 regressions in sizes</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327470257"/>
        <updated>2024-02-28T20:34:27.130Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266514:1266560:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=72ca3d58-9600-4c49-8518-ad17618dc4b4

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=72ca3d58-9600-4c49-8518-ad17618dc4b4

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromeFYIInternal/fuchsia-fyi-arm64-size/sizes/web_engine_compressed
        0.53%: 42729472.0 -&gt; 42954752.0 sizeInBytes
  - ChromeFYIInternal/fuchsia-fyi-arm64-size/sizes/chrome_fuchsia_compressed
        0.49%: 43425792.0 -&gt; 43638784.0 sizeInBytes

Top 2 affected measurements in fuchsia-fyi-arm64-size:
  - sizes/web_engine_compressed
        0.53%: 42729472.0 -&gt; 42954752.0 sizeInBytes
  - sizes/chrome_fuchsia_compressed
        0.49%: 43425792.0 -&gt; 43638784.0 sizeInBytes

Regressions grouped by sizes includes data from the following benchmarks with listed owners:
  sizes: 
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/3a18c220052dac99ac728f3fee019d30adcf2412..cf1eae3ec49ea34e3ea49bf3d9d8ba630c941bf0
  Chromium Commit Position: https://crrev.com/1266513..1266560
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327467649</id>
        <title>WindowOcclusionTracker::ComputeTargetOcclusionForWindow may return the state that is different from final state.</title>
        <author>
            <name>os...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327467649"/>
        <updated>2024-02-28T20:22:04.815Z</updated>
        <summary>-</summary>
        <content type="html">This can cause inconsistent occlusion state between client and serve, causing issue like b/327079084. (The issue was fixed in different way)

Assigning to edcourtney@ for now, but please feel free to reassign.

</content>
    </entry>
    <entry>
        <id>327458808</id>
        <title>Webdriver command for "Use Another Account" (single idp for now)</title>
        <author>
            <name>cb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327458808"/>
        <updated>2024-02-28T19:58:44.830Z</updated>
        <summary>-</summary>
        <content type="html">https://docs.google.com/document/d/1dRNKg-xEE9VlvTvuiu3cjN3FlAgoRwA4rPr8UOyiOsk/edit?tab=t.0

I think reusing ConfirmIdpLogin makes the most sense</content>
    </entry>
    <entry>
        <id>327457401</id>
        <title>PDF viewer doesn't load correctly when JavaScript is disabled</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327457401"/>
        <updated>2024-02-28T19:42:05.665Z</updated>
        <summary>-</summary>
        <content type="html">Repro steps:
1. Enable OOPIF PDF (chrome://flags/#pdf-oopif)
2. Don't allow sites to use JavaScript (chrome://settings/content/javascript)
3. Open a PDF (https://www.pdf995.com/samples/pdf.pdf)

Expected behavior: PDF viewer loads as normal.
Actual behavior: Only a gray page is loaded.

The PDF extension JavaScript isn't running, so the PDF viewer setup doesn't continue.</content>
    </entry>
    <entry>
        <id>327457581</id>
        <title>Cross-building official win/arm64 on a linux host vs v8 builtin PGO</title>
        <author>
            <name>th...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327457581"/>
        <updated>2024-02-28T19:41:21.160Z</updated>
        <summary>-</summary>
        <content type="html">```sh
$ cat out/gnwin/args.gn 
target_os = "win"
target_cpu = "arm64"
is_official_build = true
```

```sh
$ time ninja -C out/gnwin mini_installer.exe
ninja: Entering directory `out/gnwin'
[1081/66871] ACTION //chrome/common/win:eventlog_messages(//build/toolchain/win:win_clang_arm64)
/usr/local/google/home/thakis/src/chrome/src/out/gnwin/../../build/win/message_compiler.py:11: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives
  import distutils.dir_util
[66106/66871] ACTION //v8:run_mksnapshot_default(//build/toolchain/win:win_clang_arm64)
FAILED: gen/v8/embedded.S snapshot_blob.bin 
python3 ../../v8/tools/run.py ./clang_x64/mksnapshot --turbo_instruction_scheduling --stress-turbo-late-spilling --target_os=win --target_arch=arm64 --embedded_src gen/v8/embedded.S --turbo-profiling-input ../../v8/tools/builtins-pgo/profiles/x64-rl.profile --abort-on-bad-builtin-profile-data --reorder-builtins --embedded_variant Default --random-seed 314159265 --startup_blob snapshot_blob.bin --no-native-code-counters


#
# Fatal error in , line 0
# Rejected profile data for Call_ReceiverIsNullOrUndefined_Baseline_Compact due to function change. Please use tools/builtins-pgo/generate.py to refresh it.
#
#
#
#FailureMessage Object: 0x7fff623bfe50
==== C stack trace ===============================

    ./clang_x64/mksnapshot(+0x19b65b3) [0x55a435bf95b3]
Return code is -5
ninja: build stopped: subcommand failed.
```


Is this expected to work? https://source.chromium.org/chromium/chromium/src/+/main:v8/src/compiler/pipeline.cc;l=3460?q=%22Rejected%20profile%20data%20for%20%22&amp;ss=chromium sounds like as long as both host and target are 64-bit, things should be fine.</content>
    </entry>
    <entry>
        <id>327409885</id>
        <title>
Mouse events not firing when dragging from iframe to outer element in Chrome 122+</title>
        <author>
            <name>an...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327409885"/>
        <updated>2024-02-28T19:31:33.507Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Environment Setup:
• Browser Version: Chrome 122+
• Comparison Browser: Edge (Chromium version 121)

2. Initial State:
• Create a webpage containing an iframe. The iframe includes draggable elements, and the outer page includes drop targets outside the iframe.

3. Reproduction Steps:
• Start with dragging an element inside the iframe.
• Attempt to drag the element outside the iframe to interact with elements or targets on the outer page.

4. Expected Behavior:
• The mouse events (e.g., mouseover, drag, drop) should fire consistently, allowing for interaction between the dragged element from the iframe and the drop targets outside of it.

5. Observed Behavior:
• In Chrome 122+, mouse event handlers are not invoked when dragging from inside the iframe to outside, affecting interactions like hovering over or dropping onto outer elements. This behavior diverges from expected and differs from earlier versions (e.g., Chromium version 120 on Edge).

6. Additional Observations:
• The mouse events are not triggered during the drag operation outside the iframe, but if the mouse button is released, the events are then fired, leading to an inconsistent and unexpected user experience.

# Problem Description
Hello! 

My name is Tai, and I'm an engineer at Webflow. I wanted to report a regression we're noticing in our Designer editor app. 

Our application architecture involves rendering the design editor within an iframe and surrounding it with tools in the main document, some of which overlay the iframe to facilitate direct on-canvas manipulation. A feature affected by this update is our Grid overlay tool, which allows users to drag and drop elements into different grid cells directly on the canvas. 

Previously, our users could start a mousedown event within the iframe (e.g. selecting an element to move) and drag it to an overlay in the main document (e.g. our Grid overlay), where the mouseenter event on the overlay would fire, allowing them to drop the element into a new grid cell.  After the update, the mouseenter event on the overlay no longer fires when the mouse event starts within the Iframe. This prevents the grid overlay feature from recognizing elements being dragged into it, which breaks the drag-and-drop experience. Users can no longer effectively place elements into specific cells of the grid, limiting the usability of our design tool.

Here is a video walkthrough of the issue: https://cln.sh/sTw912yJ
I've attached a simple html file that outlines this issue that you can test on version 121 vs the latest.

# Summary

Mouse events not firing when dragging from iframe to outer element in Chrome 122+

# Custom Questions
#### Which component does this fall under?
Blink&gt;INPUT

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327447108</id>
        <title>Fonts completely changed</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327447108"/>
        <updated>2024-02-28T19:07:27.867Z</updated>
        <summary>-</summary>
        <content type="html">Upgraded to Android 14 and it's changed my default font which was a nice thin Sans to a thick chunky godawful looking font and i can't now find any other fonts the same as i had. Ruined my phone completely as it's also changed the clock so it's gigantic, which i absolutely hate. Not only that it's enlarged a lot of the app fonts too so they look massive and there's no way of changing it. Please sort this out.</content>
    </entry>
    <entry>
        <id>327446719</id>
        <title>Test failure in win-upload-clang due to profdata version mismatch</title>
        <author>
            <name>ay...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327446719"/>
        <updated>2024-02-28T19:05:33.500Z</updated>
        <summary>-</summary>
        <content type="html">example build: https://ci.chromium.org/ui/p/chromium/builders/try/win_upload_clang/4896/overview

```
 ********************
 Testing:  0.. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90
 FAIL: LLVM :: tools/llvm-profdata/raw-64-bits-le.test (69244 of 74843)
 ******************** TEST 'LLVM :: tools/llvm-profdata/raw-64-bits-le.test' FAILED ********************
 Exit Code: 2
 
 Command Output (stdout):
 --
 # RUN: at line 1
 printf '\201rforpl\377' &gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\201rforpl\377'
 # RUN: at line 2
 printf '\12\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\12\0\0\0\0\0\0\0'
 # RUN: at line 3
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 4
 printf '\2\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\2\0\0\0\0\0\0\0'
 # RUN: at line 5
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 6
 printf '\3\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\3\0\0\0\0\0\0\0'
 # RUN: at line 7
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 8
 printf '\4\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\4\0\0\0\0\0\0\0'
 # RUN: at line 9
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 10
 printf '\20\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\20\0\0\0\0\0\0\0'
 # RUN: at line 11
 printf '\0\0\4\0\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\1\0\0\0'
 # RUN: at line 12
 printf '\0\0\4\0\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\3\0\0\0'
 # RUN: at line 13
 printf '\0\0\4\0\2\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\2\0\0\0'
 # RUN: at line 14
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 15
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 16
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 18
 printf '\254\275\030\333\114\302\370\134' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\254\275\030\333\114\302\370\134'
 # RUN: at line 19
 printf '\1\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\1\0\0\0\0\0\0\0'
 # RUN: at line 20
 printf '\0\0\4\0\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\1\0\0\0'
 # RUN: at line 21
 printf '\0\0\4\0\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\4\0\3\0\0\0'
 # RUN: at line 22
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 23
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 24
 printf '\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\1\0\0\0'
 # RUN: at line 25
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 26
 printf '\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\3\0\0\0'
 # RUN: at line 28
 printf '\067\265\035\031\112\165\023\344' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\067\265\035\031\112\165\023\344'
 # RUN: at line 29
 printf '\02\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\02\0\0\0\0\0\0\0'
 # RUN: at line 30
 printf '\xc8\xff\3\0\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\xc8\xff\3\0\1\0\0\0'
 # RUN: at line 31
 printf '\xc3\xff\3\0\3\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\xc3\xff\3\0\3\0\0\0'
 # RUN: at line 32
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 33
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 34
 printf '\02\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\02\0\0\0'
 # RUN: at line 35
 printf '\0\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\0\0\0\0\0\0\0\0'
 # RUN: at line 36
 printf '\1\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\1\0\0\0'
 # RUN: at line 38
 printf '\023\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\023\0\0\0\0\0\0\0'
 # RUN: at line 39
 printf '\067\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\067\0\0\0\0\0\0\0'
 # RUN: at line 40
 printf '\101\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\101\0\0\0\0\0\0\0'
 # RUN: at line 41
 printf '\125\125\125\052' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\125\125\125\052'
 # RUN: at line 42
 printf '\7\0foo\1bar\0\0\0\0\0\0\0' &gt;&gt; C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp
 # executed command: printf '\7\0foo\1bar\0\0\0\0\0\0\0'
 # RUN: at line 44
 c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\llvm-profdata.exe show C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp -all-functions -counts | c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\filecheck.exe C:\b\s\w\ir\cache\builder\src\third_party\llvm\llvm\test\tools\llvm-profdata\raw-64-bits-le.test
 # executed command: 'c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\llvm-profdata.exe' show 'C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp' -all-functions -counts
 # .---command stderr------------
 # | error: C:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\test\tools\llvm-profdata\Output\raw-64-bits-le.test.tmp: raw profile version mismatch: Profile uses raw profile format version = 2573; expected version = 10
 # | PLEASE update this tool to version in the raw profile, or regenerate raw profile with expected version.
 # `-----------------------------
 # error: command failed with exit status: 1
 # executed command: 'c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\filecheck.exe' 'C:\b\s\w\ir\cache\builder\src\third_party\llvm\llvm\test\tools\llvm-profdata\raw-64-bits-le.test'
 # .---command stderr------------
 # | FileCheck error: '&lt;stdin&gt;' is empty.
 # | FileCheck command line:  c:\b\s\w\ir\cache\builder\src\third_party\llvm-bootstrap\bin\filecheck.exe C:\b\s\w\ir\cache\builder\src\third_party\llvm\llvm\test\tools\llvm-profdata\raw-64-bits-le.test
 # `-----------------------------
 # error: command failed with exit status: 2
 
 --
```</content>
    </entry>
    <entry>
        <id>327337532</id>
        <title>Cursor is loosing the focus while switching the IME and adding data in chrome web app.
</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337532"/>
        <updated>2024-02-28T19:02:02.102Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Execute the below batch file in chrome app from any online web app edit text field. After some times data will not enter into web app edit text field. Cursor looses the focus.

:loop
adb shell ime set com.touchtype.swiftkey/com.touchtype.KeyboardService

adb shell settings get secure default_input_method

adb shell input text "PrintingDataOnWebApp"

adb shell settings put secure default_input_method null
adb shell settings get secure default_input_method
goto loop
 
 

# Problem Description
From logs Its showing inputType is becoming null ,initialSelStart=-1 and  initialSelEnd=-1 which is causing the issue.

GoogleInpu...hodService com...gle.android.inputmethod.latin  I  GoogleInputMethodService.onStartInput():1930 onStartInput(EditorInfo{inputType=0x0(NULL) imeOptions=0x12000000 privateImeOptions=null actionName=UNSPECIFIED actionLabel=null actionId=0 initialSelStart=-1 initialSelEnd=-1 initialCapsMode=0x0 hintText=null label=null packageName=com.android.chrome fieldId=-1 fieldName=null extras=null}, false)

# Summary
Cursor is loosing the focus while switching the IME and adding data in chrome web app.

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>327446425</id>
        <title>roll clang again</title>
        <author>
            <name>ay...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327446425"/>
        <updated>2024-02-28T19:01:45.084Z</updated>
        <summary>-</summary>
        <content type="html">previous roll: https://issues.chromium.org/issues/326058931</content>
    </entry>
    <entry>
        <id>327442056</id>
        <title>external/wpt/webcodecs/image-decoder.https.any.worker.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327442056"/>
        <updated>2024-02-28T18:49:16.410Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/webcodecs/image-decoder.https.any.worker.html

Crash failure on Linux Tests(dbg)(1) builder

Test history Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fwebcodecs%2Fimage-decoder.https.any.worker.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fwebcodecs%2Fimage-decoder.https.any.worker.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 3.59% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>327337531</id>
        <title>Ignore Pen Id when only the Transducer Serial Number exists</title>
        <author>
            <name>sa...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327337531"/>
        <updated>2024-02-28T18:42:33.622Z</updated>
        <summary>-</summary>
        <content type="html">Pen devices on Windows machines can transmit a PenId via PenDevice or a transducer serial number and vendor id. Currently, Chromium supports both the PenId and TSN/TVID. However, there is no guarantee when using the TSN/TVID that they will always return proper values (for example, some HP devices return multiple TSNs). Therefore, Chromium should ignore the TSN/TVID and only use PenId, which is supplied by windows when it has determined that the device is a Pen with a valid and unique id. </content>
    </entry>
    <entry>
        <id>327363330</id>
        <title>forced installation of extension in chrome but not applied in incognito mode </title>
        <author>
            <name>te...@faredestination.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327363330"/>
        <updated>2024-02-28T18:34:07.717Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Via GPO - User Configuration - Policy - Administrative Template - Google Chrome - Extension 
2. in extension management setting we forced to install chrome extention
3. 

# Problem Description
extension installed in chrome not working in incognito mode as well 

# Summary
forced installation of extension in chrome but not applied in incognito mode 

# Custom Questions
#### What kind of software had the problem?
Chrome Extension - Adds new browser functionality

# Additional Data
Category: Extensions / Themes \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>327247470</id>
        <title>[V8 Perf Sheriff]: 4 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327247470"/>
        <updated>2024-02-28T18:32:36.841Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266193:1266284:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=baa3d14b-582d-419b-9bab-5895f3b2c1f5

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=baa3d14b-582d-419b-9bab-5895f3b2c1f5
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=baa3d14b-582d-419b-9bab-5895f3b2c1f5

Top 4 regressions (out of 4, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/API:duration_avg/browse_tools/browse_tools_docs_scrolling
       23.29%: 5.995 -&gt; 7.3915 ms
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/JavaScript:duration_avg/browse_tools/browse_tools_docs_scrolling
       14.79%: 693.5809999999999 -&gt; 796.178 ms
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/V8 C++:duration_avg/browse_tools/browse_tools_docs_scrolling
       11.14%: 173.393 -&gt; 192.71249999999998 ms
  - ChromiumPerf/linux-perf/v8.browsing_desktop-future/V8-Only-Main-Thread:duration_avg/browse_tools/browse_tools_docs_scrolling
       10.46%: 1425.5915 -&gt; 1574.728 ms

Top 3 affected measurements in linux-perf:
  - v8.browsing_desktop-future/API:duration_avg/browse_tools/browse_tools_docs_scrolling
       23.29%: 5.995 -&gt; 7.3915 ms
  - v8.browsing_desktop-future/JavaScript:duration_avg/browse_tools/browse_tools_docs_scrolling
       14.79%: 693.5809999999999 -&gt; 796.178 ms
  - v8.browsing_desktop-future/V8 C++:duration_avg/browse_tools/browse_tools_docs_scrolling
       11.14%: 173.393 -&gt; 192.71249999999998 ms

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266192..1266284
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/b53eb026438b102249f055de1af5d8aff5bb0779..b53eb026438b102249f055de1af5d8aff5bb0779
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/a8c47276cb6d3188db8b5a4ba77abd07797c0071..2825f0a7bbd08f8ee466291d7ee7a77fa7838e03</content>
    </entry>
    <entry>
        <id>327434211</id>
        <title>Side Panel icon is no longer showing up beside the profile icon, is this expected?</title>
        <author>
            <name>ma...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327434211"/>
        <updated>2024-02-28T18:17:06.836Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version) 
124.0.6315.2 (Official Build) dev (64-bit) 
123.0.6312.4 (Official Build) beta (64-bit) 
122.0.6261.94 (Official Build) (64-bit) 

What steps will reproduce the problem?
(1) Launch Chrome and try to open side panel from the top chrome bar

What is the expected result?
Side panel icon should show right next to the profile icon

What happens instead?
Side panel icon doesn't exist in the top chrome bar

Note: this looks like a Chrome Linux only issue. I checked the same version on win and mac, it's working fine on win and mac</content>
    </entry>
    <entry>
        <id>327429507</id>
        <title>Add service support for modifying an existing group</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327429507"/>
        <updated>2024-02-28T18:03:20.285Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>327429413</id>
        <title>Update the UI when an existing group changes</title>
        <author>
            <name>em...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327429413"/>
        <updated>2024-02-28T18:02:51.005Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
</feed>