<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:33.183Z</updated>
    <entry>
        <id>334852728</id>
        <title>Number of tab group at start up</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334852728"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334851728</id>
        <title>Misc</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334851728"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334851422</id>
        <title>Group cell</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334851422"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334851532</id>
        <title>Tab group view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334851532"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334851046</id>
        <title>Creation view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334851046"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334850519</id>
        <title>Create a group from selection menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334850519"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334850334</id>
        <title>Create a group by long pressing a tab in tab grid</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334850334"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334850176</id>
        <title>Pin and unpin a tab from group</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334850176"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334849906</id>
        <title>Can't pin a tab group</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334849906"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334849743</id>
        <title>Edit a group from tab grid</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334849743"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334849559</id>
        <title>Edit a group from the tab group view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334849559"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334849581</id>
        <title>Close a tab in agroup from the long press menu in the tab group view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334849581"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334849990</id>
        <title>Close a tab in a group by pushing the cross from the tab group view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334849990"/>
        <updated>1970-01-01T00:28:33.183Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334845680</id>
        <title>Open a link to a new group from context menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334845680"/>
        <updated>1970-01-01T00:28:33.182Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334844907</id>
        <title>Open a link in a group from context menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334844907"/>
        <updated>1970-01-01T00:28:33.182Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334845188</id>
        <title>Merge 2 groups from selection menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334845188"/>
        <updated>1970-01-01T00:28:33.182Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334844779</id>
        <title>Add an existing tab to a new tab group from long press in grid</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334844779"/>
        <updated>1970-01-01T00:28:33.182Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334845193</id>
        <title>Add an existing tab to group from tab grid long press menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334845193"/>
        <updated>1970-01-01T00:28:33.182Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334844320</id>
        <title>Add a new tab from tab group view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334844320"/>
        <updated>1970-01-01T00:28:33.182Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334276824</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334276824"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286936:1286948:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a1250743-5ad6-41fc-a196-9f36c918dfb9

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a1250743-5ad6-41fc-a196-9f36c918dfb9

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googledocs.html
        1.03%: 0.388 -&gt; 0.392 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googledocs.html
        1.03%: 0.388 -&gt; 0.392 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334279176</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279176"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286854:1286925:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7cae75a5-85d3-4228-b9c3-94d161c77e65

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7cae75a5-85d3-4228-b9c3-94d161c77e65

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/v8.browsing_desktop/Parse:duration_avg/browse_search/browse_search_google_india_2021
       27.97%: 283.1325 -&gt; 362.312 

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - v8.browsing_desktop/Parse:duration_avg/browse_search/browse_search_google_india_2021
       27.97%: 283.1325 -&gt; 362.312 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334279476</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279476"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287007:1287020:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7cd05206-391c-4aed-a07e-b505ba2dcca5

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7cd05206-391c-4aed-a07e-b505ba2dcca5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_google.html
        1.94%: 23.385 -&gt; 23.839 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_google.html
        1.94%: 23.385 -&gt; 23.839 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334279454</id>
        <title>[Blink Layout]: 1 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334279454"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286614:1286656:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=20ab1f21-b274-4c25-871c-3a90b0d07978

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=20ab1f21-b274-4c25-871c-3a90b0d07978

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/blink_perf.layout/subtree-detaching/subtree-detaching.html
        5.90%: 449.5 -&gt; 476.02 

Top 1 affected measurements in android-pixel2-perf:
  - blink_perf.layout/subtree-detaching/subtree-detaching.html
        5.90%: 449.5 -&gt; 476.02 

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334842117</id>
        <title>Ungroup a group from group view</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334842117"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334841944</id>
        <title>Ungroup a group from tab grid</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334841944"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334842019</id>
        <title>Close all and undo all tabs and groups</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334842019"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334841651</id>
        <title>Close a group from selection menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334841651"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334840961</id>
        <title> Turn on Sync is coming out of Pop-up.</title>
        <author>
            <name>js...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334840961"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version:125.0.6420.0 (Official Build) (64-bit) 
b8d046961d3db4fb2fde0d6adfdb26e710d64464-refs/branch-heads/6420@{#1}

OS : Win(10,11).

Preconditions:
None

Steps to reproduce:
1.Launch Chrome and Open NTP
2.Navigate to chrome://settings/language
3.Make Malayalam as Chrome Language
4.Open NTP and click on Bookmarks on top right of Omnibox.
5.Observe that, Turn on Sync is coming out of Pop-up.

Actual Result: Turn on Sync is coming out of Pop-up.
Expected Result: Turn on Sync should be in  Pop-up.

This issue exists from M-115 Onwards. So, raising it as a NR issue.

Please refer to the Attached Screencast below:
https://somup.com/cZfoXgCJPv


Notes:
1)This issue able to repro on Stable RC #124.0.6367.62, Beta RC # 124.0.6367.42  and Dev RC#125.0.6396.2
2)As this being a Non-Regression issue,changing the status to Untriaged so that the issue would get addressed.


Thanks..!!</content>
    </entry>
    <entry>
        <id>334293674</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334293674"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286854:1286925:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=75861fcb-6c9d-46d4-85a5-cd343c054f22

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=75861fcb-6c9d-46d4-85a5-cd343c054f22

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/v8.browsing_desktop/Compile:duration_avg/browse_search/browse_search_google_india_2021
       16.65%: 457.435 -&gt; 533.611 

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - v8.browsing_desktop/Compile:duration_avg/browse_search/browse_search_google_india_2021
       16.65%: 457.435 -&gt; 533.611 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334842053</id>
        <title>Close a group from tab group view 3 dots menu</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334842053"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334841109</id>
        <title>Close a group cell from long press menu from tab grid</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334841109"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334213567</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.events</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334213567"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287102:1287113:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f3cc6d50-2838-41ba-9049-f76ba12d517d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f3cc6d50-2838-41ba-9049-f76ba12d517d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.events/is-input-pending-default-events/is-input-pending-default-events.html
       28.87%: 1168031.8 -&gt; 830834.3 

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.events/is-input-pending-default-events/is-input-pending-default-events.html
       28.87%: 1168031.8 -&gt; 830834.3 

Regressions grouped by blink_perf.events includes data from the following benchmarks with listed owners:
  blink_perf.events: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334840701</id>
        <title>Tests</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334840701"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334840538</id>
        <title>Metrics</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334840538"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334840706</id>
        <title>[Blink Layout]: 1 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334840706"/>
        <updated>1970-01-01T00:28:33.181Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1287084:1287099:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=3ac677b8-0586-4c62-a6e4-da5a2e4e76ef

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=3ac677b8-0586-4c62-a6e4-da5a2e4e76ef
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=3ac677b8-0586-4c62-a6e4-da5a2e4e76ef

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/blink_perf.layout/fit-content-change-available-size-blocks/fit-content-change-available-size-blocks.html
        2.40%: 16420.04 -&gt; 16025.269 

Top 1 affected measurements in linux-perf:
  - blink_perf.layout/fit-content-change-available-size-blocks/fit-content-change-available-size-blocks.html
        2.40%: 16420.04 -&gt; 16025.269 

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334682517</id>
        <title>Audio start autoplay without User Gesture</title>
        <author>
            <name>ya...@xiaomi.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334682517"/>
        <updated>1970-01-01T00:28:33.180Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Audio start autoplay without User Gesture in a WebView if invoke JavaScript AudioContext start api to play audio resourses.

Android device name: Redmi Note 10/Honor 80

Android OS version:11 RP1A.200720.011(Redmi Note 10), 12(Honor 80)

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")

123.0.6312.100(Redmi Note 10)

Application: (package name or Play Store URL) 

Application version: 

Steps to reproduce: 

1. load an url or a html fragment in a WebView with `WebView.loadUrl` or `WebView.loadDataWithBaseURL`;
2. setting `webView.getSettings().setMediaPlaybackRequiresUserGesture(true)` explicitly;
3. auto invoke JavaScript `AudioContext` start API in the url or html fragment that the WebView to load, eg:
```code
&lt;script&gt;
      const context = new AudioContext();
      const audioNode = context.createBufferSource();
      const compressor = context.createDynamicsCompressor();
      compressor.connect(context.destination);
      const masterGainNode = context.createGain();
      masterGainNode.connect(compressor);
      fetch('https://cdn.alsgp0.fds.api.mi-img.com/mi-ads-static/wrapper-utils/music.mp3').then(response =&gt; {
        return response.arrayBuffer();
      })
        .then((buffer) =&gt; context.decodeAudioData(buffer))
        .then((buffer) =&gt; {
          audioNode.buffer = buffer;
          audioNode.start(0, 0);
        });
      const gainNode = context.createGain();
      gainNode.gain.value = 1;
      audioNode.connect(gainNode);
      gainNode.connect(masterGainNode);
&lt;/script&gt;
```

Expected result: Audio should not autoplay until User Gesture

Actual result: Audio start autoplay

Did this work before? (last working WebView version, or N/A) N/A

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>334281987</id>
        <title>Chrome is crashing while moving to PIP mode ,after disabling PIP mode </title>
        <author>
            <name>de...@samsung.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334281987"/>
        <updated>1970-01-01T00:28:33.179Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. open https://m.video.360kan.com/player?q=%E7%AC%AC%E4%B8%80%E6%89%B9%E4%B8%81%E5%85%8B%E5%A4%AB%E5%A6%BB%E7%8E%B0%E7%8A%B6&amp;id=494ba1ab999f19fce3137cdef364a91f&amp;from=mso_video&amp;call=recom&amp;src=recommend-vd&amp;srcg=mohe-m-short_video

2. start video then disable pip permission in chrome info
3. back to video ,then choose pip mode,chrome got crashed

# Problem Description
Chrome is crashing while moving to PIP mode ,after disabling PIP permissions in chrome app info

# Summary
Chrome is crashing while moving to PIP mode ,after disabling PIP mode 

# Custom Questions
#### Does this work in other browsers?

Not sure - I don't know

#### Contents of chrome://gpu: 

Graphics Feature Status
=======================
*   Canvas: Hardware accelerated
*   Canvas out-of-process rasterization: Enabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Hardware accelerated
*   Multiple Raster Threads: Disabled
*   OpenGL: Enabled
*   Rasterization: Hardware accelerated
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Surface Control: Enabled
*   Video Decode: Hardware accelerated
*   Video Encode: Hardware accelerated
*   Vulkan: Disabled
*   WebGL: Hardware accelerated
*   WebGL2: Hardware accelerated
*   WebGPU: Hardware accelerated

Driver Bug Workarounds
======================
*   disable_program_caching_for_transform_feedback
*   disable_timestamp_queries
*   dont_delete_source_texture_for_egl_image
*   exit_on_context_lost
*   force_cube_map_positive_x_allocation
*   force_enable_color_buffer_float_except_rgb32f
*   max_copy_texture_chromium_size_1048576
*   max_msaa_sample_count_4
*   remove_dynamic_indexing_of_swizzled_vector
*   round_down_uniform_bind_buffer_range_size
*   unbind_egl_context_to_flush_driver_caches
*   use_copyteximage2d_instead_of_readpixels_on_multisampled_textures
*   use_virtualized_gl_contexts
*   wake_up_gpu_before_drawing
*   webgl_or_caps_max_texture_size_limit_4096
*   disabled_extension_GL_EXT_shader_framebuffer_fetch
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent

Problems Detected
=================
*   Raster is using a single thread.
    Disabled Features: multiple_raster_threads

*   Non-virtual contexts on Qualcomm sometimes cause out-of-order frames:
    (http://crbug.com/163464), (http://crbug.com/233612), (http://crbug.com/289461)
    Applied Workarounds: use_virtualized_gl_contexts

*   The first draw operation from an idle state is slow:
    (http://crbug.com/309734)
    Applied Workarounds: wake_up_gpu_before_drawing

*   glFinish doesn't clear caches on Android:
    (http://crbug.com/509727)
    Applied Workarounds: unbind_egl_context_to_flush_driver_caches

*   Android Adreno crashes on binding incomplete cube map texture to FBO:
    (http://crbug.com/518889)
    Applied Workarounds: force_cube_map_positive_x_allocation

*   CHROMIUM_copy_texture with 1MB copy per flush to avoid unwanted cache growth on Adreno:
    (http://crbug.com/542478)
    Applied Workarounds: max_copy_texture_chromium_size_1048576

*   Limit max texure size to 4096 on all of Android
    Applied Workarounds: webgl_or_caps_max_texture_size_limit_4096

*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   Program binaries don't contain transform feedback varyings on Qualcomm GPUs:
    (http://crbug.com/658074)
    Applied Workarounds: disable_program_caching_for_transform_feedback

*   Limit MSAA to 4x on Android devices:
    (http://crbug.com/797243)
    Applied Workarounds: max_msaa_sample_count_4

*   A deleted query id for GL_TIMESTAMP cannot be reused for other query targets:
    (http://crbug.com/858879)
    Applied Workarounds: disable_timestamp_queries

*   ReadPixels is broken with EXT_multisampled_render_to_texture on recent Adreno drivers.:
    (http://crbug.com/890002)
    Applied Workarounds: use_copyteximage2d_instead_of_readpixels_on_multisampled_textures

*   Round down glBindBufferRange size to a multiple of 4 on Qualcomm Adreno GPUs for uniform buffers:
    (http://crbug.com/906743)
    Applied Workarounds: round_down_uniform_bind_buffer_range_size

*   Crash on Adreno when using GL_EXT_shader_framebuffer_fetch:
    (http://crbug.com/1010338)
    Applied Workarounds: disable(GL_EXT_shader_framebuffer_fetch)

*   Remove dynamic indexing for swizzled vectors on Android:
    (http://crbug.com/709351)
    Applied Workarounds: remove_dynamic_indexing_of_swizzled_vector

*   Some drivers seem to require as to use original texture whenever possible:
    (http://crbug.com/1052114), (http://crbug.com/1117370)
    Applied Workarounds: dont_delete_source_texture_for_egl_image

*   Always assume float formats are renderable on Android except RGB32F:
    (http://crbug.com/1127387)
    Applied Workarounds: force_enable_color_buffer_float_except_rgb32f

*   Context lost recovery often fails on Adreno with SkiaRenderer GL.:
    (http://crbug.com/1079161)
    Applied Workarounds: exit_on_context_lost

ANGLE Features
==============
*   allowCompressedFormats (Frontend workarounds): Enabled
    condition: true
    Allow compressed formats

*   alwaysRunLinkSubJobsThreaded (Frontend features) (http://anglebug.com/8417): Disabled
    If true, sub tasks of the link job are always threaded, regardless of
    GL_KHR_parallel_shader_compile

*   cacheCompiledShader (Frontend features) (http://anglebug.com/7036): Disabled
    Enable to cache compiled shaders

*   compileJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Disabled
    condition: false
    If false, parts of the compile job cannot be parallelized

*   disableAnisotropicFiltering (Frontend workarounds): Disabled
    Disable support for anisotropic filtering

*   disableDrawBuffersIndexed (Frontend features) (http://anglebug.com/7724): Disabled
    Disable support for OES_draw_buffers_indexed and EXT_draw_buffers_indexed

*   disableProgramBinary (Frontend features) (http://anglebug.com/5007): Disabled
    condition: IsPowerVrRogue(functions)
    Disable support for GL_OES_get_program_binary

*   disableProgramCaching (Frontend features) (http://anglebug.com/1423136): Disabled
    Disables saving programs to the cache

*   disableProgramCachingForTransformFeedback (Frontend workarounds): Enabled
    condition: !isMesa &amp;&amp; isQualcomm
    On some GPUs, program binaries don't contain transform feedback varyings

*   dumpShaderSource (Frontend features) (http://anglebug.com/7760): Disabled
    Write shader source to temp directory

*   dumpTranslatedShaders (Frontend features) (http://anglebug.com/8280): Disabled
    Write translated shaders to temp directory

*   emulatePixelLocalStorage (Frontend features) (http://anglebug.com/7279): Enabled
    condition: true
    Emulate ANGLE_shader_pixel_local_storage using shader images

*   enableCaptureLimits (Frontend features) (http://anglebug.com/5750): Disabled
    Set the context limits like frame capturing was enabled

*   enableProgramBinaryForCapture (Frontend features) (http://anglebug.com/5658): Disabled
    Even if FrameCapture is enabled, enable GL_OES_get_program_binary

*   enableShaderSubstitution (Frontend workarounds) (http://anglebug.com/7761): Disabled
    Check the filesystem for shaders to use instead of those provided through
    glShaderSource

*   enableTranslatedShaderSubstitution (Frontend workarounds) (http://anglebug.com/8280): Disabled
    Check the filesystem for translated shaders to use instead of the shader
    translator's

*   forceDepthAttachmentInitOnClear (Frontend workarounds) (https://anglebug.com/7246): Disabled
    Force depth attachment initialization on clear ops

*   forceGlErrorChecking (Frontend features) (https://issuetracker.google.com/220069903): Disabled
    Force GL error checking (i.e. prevent applications from disabling error
    checking

*   forceInitShaderVariables (Frontend features): Disabled
    Force-enable shader variable initialization

*   forceMinimumMaxVertexAttributes (Frontend features): Disabled
    condition: false
    Force the minimum GL_MAX_VERTEX_ATTRIBS that the context's client version
    allows.

*   forceRobustResourceInit (Frontend features) (http://anglebug.com/6041): Disabled
    Force-enable robust resource init

*   linkJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Disabled
    condition: false
    If false, parts of the link job cannot be parallelized

*   loseContextOnOutOfMemory (Frontend workarounds): Enabled
    condition: true
    Some users rely on a lost context notification if a GL_OUT_OF_MEMORY error
    occurs

*   singleThreadedTextureDecompression (Frontend workarounds): Disabled
    Disables multi-threaded decompression of compressed texture formats

*   uncurrentEglSurfaceUponSurfaceDestroy (Frontend workarounds) (https://issuetracker.google.com/292285899): Disabled
    Make egl surface uncurrent when calling eglDestroySurface(), if the
    surface is still bound by the context of current render thread

*   RGBA4IsNotSupportedForColorRendering (OpenGL workarounds): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isIntel
    GL_RGBA4 is not color renderable

*   RGBDXT1TexturesSampleZeroAlpha (OpenGL workarounds) (http://anglebug.com/3729): Disabled
    condition: IsApple()
    Sampling BLACK texels from RGB DXT1 textures returns transparent black on
    Mac.

*   addAndTrueToLoopCondition (OpenGL workarounds): Disabled
    condition: IsApple() &amp;&amp; isIntel
    Calculation of loop conditions in for and while loop has bug

*   adjustSrcDstRegionForBlitFramebuffer (OpenGL workarounds) (http://crbug.com/830046): Disabled
    condition: IsLinux() || (IsAndroid() &amp;&amp; isNvidia) || (IsWindows() &amp;&amp; isNvidia) || (IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_ES)
    Many platforms have issues with blitFramebuffer when the parameters are
    large.

*   allowAstcFormats (OpenGL workarounds): Enabled
    condition: !isMesa || isIntel &amp;&amp; (Is9thGenIntel(device) || IsGeminiLake(device) || IsCoffeeLake(device) || Is11thGenIntel(device) || Is12thGenIntel(device))
    Enable ASTC on desktop OpenGL

*   allowClearForRobustResourceInit (OpenGL workarounds) (https://crbug.com/848952 http://crbug.com/883276): Disabled
    condition: IsApple()
    Using glClear for robust resource initialization is buggy on some drivers
    and leads to texture corruption. Default to data uploads except on MacOS
    where it is very slow.

*   allowETCFormats (OpenGL workarounds): Disabled
    condition: isIntel &amp;&amp; !IsSandyBridge(device) &amp;&amp; !IsIvyBridge(device) &amp;&amp; !IsHaswell(device)
    Enable ETC2/EAC on desktop OpenGL

*   alwaysCallUseProgramAfterLink (OpenGL workarounds) (http://crbug.com/110263): Enabled
    condition: true
    Always call useProgram after a successful link to avoid a driver bug

*   alwaysUnbindFramebufferTexture2D (OpenGL workarounds) (https://anglebug.com/5536): Disabled
    condition: isNvidia &amp;&amp; (IsWindows() || IsLinux())
    Force unbind framebufferTexture2D before binding renderbuffer to work
    around driver bug.

*   avoid1BitAlphaTextureFormats (OpenGL workarounds): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isAMD
    Issue with 1-bit alpha framebuffer formats

*   bindCompleteFramebufferForTimerQueries (OpenGL workarounds) (https://crbug.com/1356053): Disabled
    condition: isMali
    Some drivers require a complete framebuffer when beginQuery for
    TimeElapsed orTimestampis called.

*   bindTransformFeedbackBufferBeforeBindBufferRange (OpenGL workarounds) (https://anglebug.com/5140): Disabled
    condition: IsApple()
    Bind transform feedback buffers to the generic binding point before
    calling glBindBufferBase or glBindBufferRange.

*   clampArrayAccess (OpenGL workarounds) (http://anglebug.com/2978): Enabled
    condition: IsAndroid() || isAMD || !functions-&gt;hasExtension("GL_KHR_robust_buffer_access_behavior")
    Clamp uniform array access to avoid reading invalid memory.

*   clampFragDepth (OpenGL workarounds): Disabled
    condition: isNvidia
    gl_FragDepth is not clamped correctly when rendering to a floating point
    depth buffer

*   clampMscRate (OpenGL workarounds) (https://crbug.com/1042393): Disabled
    condition: IsLinux() &amp;&amp; IsWayland()
    Some drivers return bogus values for GetMscRate, so we clamp it to 30Hz

*   clampPointSize (OpenGL workarounds): Enabled
    condition: IsAndroid() || isNvidia
    The point size range reported from the API is inconsistent with the actual
    behavior

*   clearToZeroOrOneBroken (OpenGL workarounds) (https://crbug.com/710443): Disabled
    condition: IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 12, 6)
    Clears when the clear color is all zeros or ones do not work.

*   clipSrcRegionForBlitFramebuffer (OpenGL workarounds) (http://crbug.com/830046): Disabled
    condition: IsApple() || (IsLinux() &amp;&amp; isAMD)
    Issues with blitFramebuffer when the parameters don't match the
    framebuffer size.

*   corruptProgramBinaryForTesting (OpenGL workarounds) (https://anglebug.com/8471): Disabled
    Corrupt the program binary retrieved from the driver for testing purposes.

*   decodeEncodeSRGBForGenerateMipmap (OpenGL workarounds) (http://anglebug.com/4646): Disabled
    condition: IsApple()
    Decode and encode before generateMipmap for srgb format textures.

*   disableBaseInstanceVertex (OpenGL workarounds) (http://anglebug.com/8172): Disabled
    condition: IsMaliValhall(functions)
    Some drivers have buggy implementations of glDraw*BaseVertex*.

*   disableBlendFuncExtended (OpenGL workarounds) (http://anglebug.com/1085): Enabled
    condition: (!isMesa &amp;&amp; isQualcomm) || (IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 14, 0))
    ARB_blend_func_extended does not pass the tests

*   disableClipControl (OpenGL features) (http://crbug.com/1434317): Disabled
    condition: IsMaliG72OrG76OrG51(functions)
    Some devices genenerate errors when querying the clip control state

*   disableDrawBuffersIndexed (OpenGL workarounds): Disabled
    condition: IsWindows() &amp;&amp; isAMD
    Disable OES_draw_buffers_indexed extension.

*   disableGPUSwitchingSupport (OpenGL workarounds) (https://crbug.com/1091824): Disabled
    condition: isDualGPUMacWithNVIDIA
    Disable GPU switching support (use only the low-power GPU) on older
    MacBook Pros.

*   disableMultisampledRenderToTexture (OpenGL workarounds) (http://anglebug.com/2894): Enabled
    condition: isAdreno4xxOnAndroidLessThan51 || isAdreno4xxOnAndroid70 || isAdreno5xxOnAndroidLessThan70 || isAdreno5xxOnAndroid71 || isLinuxVivante || IsAndroid() || isWindowsNVIDIA
    Many drivers have bugs when using GL_EXT_multisampled_render_to_texture

*   disableNativeParallelCompile (OpenGL workarounds) (http://crbug.com/1094869): Disabled
    condition: isTSANBuild &amp;&amp; IsLinux() &amp;&amp; isNvidia
    Do not use native KHR_parallel_shader_compile even when available.

*   disableRenderSnorm (OpenGL workarounds) (https://anglebug.com/8315): Disabled
    condition: isMesa &amp;&amp; (mesaVersion &lt; (std::array&lt;int, 3&gt;{21, 3, 0}) || functions-&gt;standard == STANDARD_GL_ES)
    Disable EXT_render_snorm extension.

*   disableSemaphoreFd (OpenGL workarounds) (https://crbug.com/1046462): Disabled
    condition: IsLinux() &amp;&amp; isAMD &amp;&amp; isMesa &amp;&amp; mesaVersion &lt; (std::array&lt;int, 3&gt;{19, 3, 5})
    Disable GL_EXT_semaphore_fd extension

*   disableSyncControlSupport (OpenGL workarounds) (https://crbug.com/1137851): Disabled
    condition: IsLinux() &amp;&amp; isIntel &amp;&amp; isMesa &amp;&amp; mesaVersion[0] == 20
    Speculative fix for issues on Linux/Wayland where exposing
    GLX_OML_sync_control renders Chrome unusable

*   disableTextureClampToBorder (OpenGL workarounds) (https://anglebug.com/7405): Disabled
    condition: isImagination
    Imagination devices generate INVALID_ENUM when setting the texture border
    color.

*   disableTextureMirrorClampToEdge (OpenGL workarounds) (https://anglebug.com/8319): Disabled
    condition: functions-&gt;standard == STANDARD_GL_ES &amp;&amp; isMesa &amp;&amp; mesaVersion &lt; (std::array&lt;int, 3&gt;{23, 1, 7})
    Disable EXT_texture_mirror_clamp_to_edge extension.

*   disableTimestampQueries (OpenGL workarounds) (https://crbug.com/811661): Disabled
    condition: (IsLinux() &amp;&amp; isVMWare) || (IsAndroid() &amp;&amp; isNvidia) || (IsAndroid() &amp;&amp; GetAndroidSDKVersion() &lt; 27 &amp;&amp; IsAdreno5xxOrOlder(functions)) || (!isMesa &amp;&amp; IsMaliT8xxOrOlder(functions)) || (!isMesa &amp;&amp; IsMaliG31OrOlder(functions))
    Disable GL_EXT_disjoint_timer_query extension

*   doWhileGLSLCausesGPUHang (OpenGL workarounds) (http://crbug.com/644669): Disabled
    condition: IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 11, 0)
    Some GLSL constructs involving do-while loops cause GPU hangs

*   doesSRGBClearsOnLinearFramebufferAttachments (OpenGL workarounds): Disabled
    condition: isIntel || isAMD
    Issue clearing framebuffers with linear attachments when
    GL_FRAMEBUFFER_SRGB is enabled

*   dontInitializeUninitializedLocals (OpenGL workarounds) (http://anglebug.com/2046): Enabled
    condition: !isMesa &amp;&amp; isQualcomm
    Initializing uninitialized locals caused odd behavior in a few WebGL 2
    tests

*   dontUseLoopsToInitializeVariables (OpenGL workarounds) (http://crbug.com/809422): Enabled
    condition: (!isMesa &amp;&amp; isQualcomm) || (isIntel &amp;&amp; IsApple())
    For loops used to initialize variables hit native GLSL compiler bugs

*   emulateAbsIntFunction (OpenGL workarounds) (http://crbug.com/642227): Disabled
    condition: IsApple() &amp;&amp; isIntel
    abs(i) where i is an integer returns unexpected result

*   emulateAtan2Float (OpenGL workarounds) (http://crbug.com/672380): Disabled
    condition: isNvidia
    atan(y, x) may return a wrong answer

*   emulateClipDistanceState (OpenGL workarounds): Enabled
    condition: isQualcomm
    Some drivers ignore GL_CLIP_DISTANCEi_EXT state.

*   emulateClipOrigin (OpenGL workarounds): Disabled
    condition: !isMesa &amp;&amp; isQualcomm &amp;&amp; qualcommVersion &lt; 490 &amp;&amp; functions-&gt;hasGLESExtension("GL_EXT_clip_control")
    Some drivers incorrectly apply GL_CLIP_ORIGIN_EXT state.

*   emulateCopyTexImage2D (OpenGL workarounds): Disabled
    condition: isApple
    Replace CopyTexImage2D with TexImage2D + CopyTexSubImage2D.

*   emulateCopyTexImage2DFromRenderbuffers (OpenGL workarounds) (https://anglebug.com/4674): Disabled
    condition: IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_ES &amp;&amp; !(isAMD &amp;&amp; IsWindows())
    CopyTexImage2D spuriously returns errors on iOS when copying from
    renderbuffers.

*   emulateImmutableCompressedTexture3D (OpenGL workarounds) (https://crbug.com/1060012): Enabled
    condition: isQualcomm
    Use non-immutable texture allocation to work around a driver bug.

*   emulateIsnanFloat (OpenGL workarounds) (http://crbug.com/650547): Disabled
    condition: isIntel &amp;&amp; IsApple() &amp;&amp; IsSkylake(device) &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 13, 2)
    Using isnan() on highp float will get wrong answer

*   emulateMaxVertexAttribStride (OpenGL workarounds) (http://anglebug.com/1936): Disabled
    condition: IsLinux() &amp;&amp; functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isAMD
    Some drivers return 0 when MAX_VERTEX_ATTRIB_STRIED queried

*   emulatePackSkipRowsAndPackSkipPixels (OpenGL workarounds) (https://anglebug.com/4849): Disabled
    condition: IsApple()
    GL_PACK_SKIP_ROWS and GL_PACK_SKIP_PIXELS are ignored in Apple's OpenGL
    driver.

*   emulatePrimitiveRestartFixedIndex (OpenGL workarounds) (http://anglebug.com/3997): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; functions-&gt;isAtLeastGL(gl::Version(3, 1)) &amp;&amp; !functions-&gt;isAtLeastGL(gl::Version(4, 3))
    When GL_PRIMITIVE_RESTART_FIXED_INDEX is not available, emulate it with
    GL_PRIMITIVE_RESTART and glPrimitiveRestartIndex.

*   emulateRGB10 (OpenGL workarounds) (https://crbug.com/1300575): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP
    Emulate RGB10 support using RGB10_A2.

*   ensureNonEmptyBufferIsBoundForDraw (OpenGL features) (http://crbug.com/1456243): Enabled
    condition: IsApple() || IsAndroid()
    Apple OpenGL drivers crash when drawing with a zero-sized buffer bound
    using a non-zero divisor.

*   explicitFragmentLocations (OpenGL workarounds) (https://anglebug.com/8308): Enabled
    condition: isQualcomm
    Always write explicit location layout qualifiers for fragment outputs.

*   finishDoesNotCauseQueriesToBeAvailable (OpenGL workarounds): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isNvidia
    glFinish doesn't cause all queries to report available result

*   flushBeforeDeleteTextureIfCopiedTo (OpenGL workarounds) (http://anglebug.com/4267): Disabled
    condition: IsApple() &amp;&amp; isIntel
    Some drivers track CopyTex{Sub}Image texture dependencies incorrectly.
    Flush before glDeleteTextures in this case

*   flushOnFramebufferChange (OpenGL workarounds) (http://crbug.com/1181068): Disabled
    condition: IsApple() &amp;&amp; Has9thGenIntelGPU(systemInfo)
    Switching framebuffers without a flush can lead to crashes on Intel 9th
    Generation GPU Macs.

*   initFragmentOutputVariables (OpenGL workarounds) (http://crbug.com/1171371): Disabled
    condition: IsAdreno42xOr3xx(functions)
    No init gl_FragColor causes context lost

*   initializeCurrentVertexAttributes (OpenGL workarounds): Disabled
    condition: isNvidia
    During initialization, assign the current vertex attributes to the
    spec-mandated defaults

*   keepBufferShadowCopy (OpenGL workarounds): Disabled
    condition: !CanMapBufferForRead(functions)
    Maintain a shadow copy of buffer data when the GL API does not permit
    reading data back.

*   limitMax3dArrayTextureSizeTo1024 (OpenGL workarounds) (http://crbug.com/927470): Disabled
    condition: limitMaxTextureSize
    Limit max 3d texture size and max array texture layers to 1024 to avoid
    system hang

*   limitMaxMSAASamplesTo4 (OpenGL workarounds) (http://crbug.com/797243): Enabled
    condition: IsAndroid() || (IsApple() &amp;&amp; (isIntel || isAMD || isNvidia))
    Various rendering bugs have been observed when using higher MSAA counts

*   limitWebglMaxTextureSizeTo4096 (OpenGL workarounds) (http://crbug.com/927470): Enabled
    condition: IsAndroid() || limitMaxTextureSize
    Limit webgl max texture size to 4096 to avoid frequent out-of-memory
    errors

*   packLastRowSeparatelyForPaddingInclusion (OpenGL workarounds) (http://anglebug.com/1512): Disabled
    condition: IsApple() || isNvidia
    When uploading textures from an pack buffer, some drivers count an extra
    row padding

*   packOverlappingRowsSeparatelyPackBuffer (OpenGL workarounds): Disabled
    condition: isNvidia
    In the case of packing to a pixel pack buffer, pack overlapping rows row
    by row

*   passHighpToPackUnormSnormBuiltins (OpenGL workarounds) (http://anglebug.com/7527): Enabled
    condition: isQualcomm
    packUnorm4x8 fails on Pixel 4 if it is not passed a highp vec4.

*   preAddTexelFetchOffsets (OpenGL workarounds) (http://crbug.com/642605): Disabled
    condition: IsApple() &amp;&amp; isIntel
    Intel Mac drivers mistakenly consider the parameter position of nagative
    vaule as invalid even if the sum of position and offset is in range, so we
    need to add workarounds by rewriting texelFetchOffset(sampler, position,
    lod, offset) into texelFetch(sampler, position + offset, lod).

*   preTransformTextureCubeGradDerivatives (OpenGL workarounds): Disabled
    condition: isApple
    Apply a vendor-specific transformation to explicit cubemap derivatives

*   promotePackedFormatsTo8BitPerChannel (OpenGL workarounds) (http://anglebug.com/5469): Disabled
    condition: IsApple() &amp;&amp; hasAMD
    Packed color formats are buggy on Macs with AMD GPUs

*   queryCounterBitsGeneratesErrors (OpenGL workarounds) (http://anglebug.com/3027): Disabled
    condition: IsNexus5X(vendor, device)
    Drivers generate errors when querying the number of bits in timer queries

*   readPixelsUsingImplementationColorReadFormatForNorm16 (OpenGL workarounds) (http://anglebug.com/4214): Enabled
    condition: !isIntel &amp;&amp; functions-&gt;standard == STANDARD_GL_ES &amp;&amp; functions-&gt;isAtLeastGLES(gl::Version(3, 1)) &amp;&amp; functions-&gt;hasGLESExtension("GL_EXT_texture_norm16")
    Quite some OpenGL ES drivers don't implement readPixels for
    RGBA/UNSIGNED_SHORT from EXT_texture_norm16 correctly

*   reapplyUBOBindingsAfterUsingBinaryProgram (OpenGL workarounds) (http://anglebug.com/1637): Enabled
    condition: isAMD || IsAndroid()
    Some drivers forget about UBO bindings when using program binaries

*   regenerateStructNames (OpenGL workarounds) (http://crbug.com/403957): Disabled
    condition: IsApple()
    All Mac drivers do not handle struct scopes correctly. This workaround
    overwrites a structname with a unique prefix.

*   removeDynamicIndexingOfSwizzledVector (OpenGL workarounds) (http://crbug.com/709351): Enabled
    condition: IsApple() || IsAndroid() || IsWindows()
    Dynamic indexing of swizzled l-values doesn't work correctly on various
    platforms.

*   removeInvariantAndCentroidForESSL3 (OpenGL workarounds): Disabled
    condition: functions-&gt;isAtMostGL(gl::Version(4, 1)) || (functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isAMD)
    Fix spec difference between GLSL 4.1 or lower and ESSL3

*   resetTexImage2DBaseLevel (OpenGL workarounds) (https://crbug.com/705865): Disabled
    condition: IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &gt;= OSVersion(10, 12, 4)
    Reset texture base level before calling glTexImage2D to work around pixel
    comparison failure.

*   resyncDepthRangeOnClipControl (OpenGL workarounds) (https://anglebug.com/8381): Enabled
    condition: !isMesa &amp;&amp; isQualcomm
    Resync depth range to apply clip control updates.

*   rewriteFloatUnaryMinusOperator (OpenGL workarounds) (http://crbug.com/308366): Disabled
    condition: IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 12, 0)
    Using '-&lt;float&gt;' will get wrong answer

*   rewriteRepeatedAssignToSwizzled (OpenGL workarounds): Disabled
    condition: isNvidia
    Repeated assignment to swizzled values inside a GLSL user-defined function
    have incorrect results

*   rewriteRowMajorMatrices (OpenGL workarounds) (http://anglebug.com/2273): Disabled
    condition: false
    Rewrite row major matrices in shaders as column major as a driver bug
    workaround

*   sanitizeAMDGPURendererString (OpenGL workarounds) (http://crbug.com/1181193): Disabled
    condition: IsLinux() &amp;&amp; hasAMD
    Strip precise kernel and DRM version information from amdgpu renderer
    strings.

*   scalarizeVecAndMatConstructorArgs (OpenGL workarounds) (http://crbug.com/1420130): Disabled
    condition: isMali
    Rewrite vec/mat constructors to work around driver bugs

*   setPrimitiveRestartFixedIndexForDrawArrays (OpenGL workarounds) (http://anglebug.com/3997): Disabled
    condition: features-&gt;emulatePrimitiveRestartFixedIndex.enabled &amp;&amp; IsApple() &amp;&amp; isIntel
    Some drivers discard vertex data in DrawArrays calls when the fixed
    primitive restart index is within the number of primitives being drawn.

*   setZeroLevelBeforeGenerateMipmap (OpenGL workarounds): Disabled
    condition: IsApple()
    glGenerateMipmap fails if the zero texture level is not set on some Mac
    drivers.

*   shiftInstancedArrayDataWithOffset (OpenGL workarounds) (http://crbug.com/1144207): Disabled
    condition: IsApple() &amp;&amp; IsIntel(vendor) &amp;&amp; !IsHaswell(device)
    glDrawArraysInstanced is buggy on certain new Mac Intel GPUs

*   supportsFragmentShaderInterlockARB (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;isAtLeastGL(gl::Version(4, 5)) &amp;&amp; functions-&gt;hasGLExtension("GL_ARB_fragment_shader_interlock")
    Backend GL context supports ARB_fragment_shader_interlock extension

*   supportsFragmentShaderInterlockNV (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;isAtLeastGL(gl::Version(4, 3)) &amp;&amp; functions-&gt;hasGLExtension("GL_NV_fragment_shader_interlock")
    Backend GL context supports NV_fragment_shader_interlock extension

*   supportsFragmentShaderOrderingINTEL (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;isAtLeastGL(gl::Version(4, 4)) &amp;&amp; functions-&gt;hasGLExtension("GL_INTEL_fragment_shader_ordering")
    Backend GL context supports GL_INTEL_fragment_shader_ordering extension

*   supportsShaderFramebufferFetchEXT (OpenGL features) (http://anglebug.com/7279): Enabled
    condition: functions-&gt;hasGLESExtension("GL_EXT_shader_framebuffer_fetch")
    Backend GL context supports EXT_shader_framebuffer_fetch extension

*   supportsShaderFramebufferFetchNonCoherentEXT (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;hasGLESExtension("GL_EXT_shader_framebuffer_fetch_non_coherent")
    Backend GL context supports EXT_shader_framebuffer_fetch_non_coherent
    extension

*   supportsShaderPixelLocalStorageEXT (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;hasGLESExtension("GL_EXT_shader_pixel_local_storage")
    Backend GL context supports EXT_shader_pixel_local_storage extension

*   syncVertexArraysToDefault (OpenGL workarounds) (http://anglebug.com/5577): Disabled
    condition: !nativegl::SupportsVertexArrayObjects(functions)
    Only use the default VAO because of missing support or driver bugs

*   unbindFBOBeforeSwitchingContext (OpenGL workarounds) (http://crbug.com/1181193): Disabled
    condition: IsPowerVR(vendor)
    Imagination GL drivers are buggy with context switching.

*   unfoldShortCircuits (OpenGL workarounds) (http://anglebug.com/482): Disabled
    condition: IsApple()
    Mac incorrectly executes both sides of &amp;&amp; and || expressions when they
    should short-circuit.

*   unpackLastRowSeparatelyForPaddingInclusion (OpenGL workarounds) (http://anglebug.com/1512): Disabled
    condition: IsApple() || isNvidia
    When uploading textures from an unpack buffer, some drivers count an extra
    row padding

*   unpackOverlappingRowsSeparatelyUnpackBuffer (OpenGL workarounds): Disabled
    condition: isNvidia
    In the case of unpacking from a pixel unpack buffer, unpack overlapping
    rows row by row

*   unsizedSRGBReadPixelsDoesntTransform (OpenGL workarounds) (http://crbug.com/550292 http://crbug.com/565179): Enabled
    condition: !isMesa &amp;&amp; isQualcomm
    Drivers returning raw sRGB values instead of linearized values when
    calling glReadPixels on unsized sRGB texture formats

*   uploadTextureDataInChunks (OpenGL workarounds) (http://crbug.com/1181068): Disabled
    condition: IsApple()
    Upload texture data in &lt;120kb chunks to work around Mac driver hangs and
    crashes.

*   useUnusedBlocksWithStandardOrSharedLayout (OpenGL workarounds): Disabled
    condition: (IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_DESKTOP) || (IsLinux() &amp;&amp; isAMD)
    Unused std140 or shared uniform blocks will be treated as inactive

*   vertexIDDoesNotIncludeBaseVertex (OpenGL workarounds): Disabled
    condition: IsApple() &amp;&amp; isAMD
    gl_VertexID in GLSL vertex shader doesn't include base vertex value

Dawn Info
=========

&lt;Integrated GPU&gt;  Vulkan backend - Adreno (TM) 660
--------------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   norm16texture-formats
*   adapter-properties-memory-heaps
*   shared-texture-memory-a-hardware-buffer
*   shared-texture-memory-opaque-fd
*   shared-fence-vk-semaphore-sync-fd

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   vulkan_split_command_buffer_on_compute_pass_after_render_pass: 
    (https://crbug.com/dawn/1564):
    Splits any command buffer where a compute pass is recorded after a render
    pass. This toggle is enabled by default on Qualcomm GPUs, which have been
    observed experiencing a driver crash in this situation.

*   use_tint_ir: 
    (https://crbug.com/tint/1718):
    Enable the use of the Tint IR for backend codegen.

*   polyfill_packed_4x8_dot_product: 
    (https://crbug.com/tint/1497):
    Always use the polyfill version of dot4I8Packed() and dot4U8Packed().

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Version Information
===================
Data exported              : 2024-04-15T11:01:10.329Z
Chrome version             : Chrome/123.0.6312.118
Operating system           : Android 13
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/d5b1935d6a70f335f8b7fd7b5268c7975b7b91c0/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/d5b1935d6a70f335f8b7fd7b5268c7975b7b91c0/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : f6672dbbe223
2D graphics backend        : Skia/123 3d4e45907f9b239a54957001d619d2d4a6ca06b4
Command Line               : --use-mobile-user-agent --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5 --use-mobile-user-agent --enable-viewport --validate-input-event-stream --enable-longpress-drag-selection --touch-selection-strategy=direction --disable-composited-antialiasing --enable-dom-distiller --flag-switches-begin --flag-switches-end

Driver Information
==================
Initialization time             : 51
In-process GPU                  : false
Passthrough Command Decoder     : true
Sandboxed                       : false
GPU0                            : VENDOR= 0x0000 [Google Inc. (Qualcomm)], DEVICE=0x0000 [ANGLE (Qualcomm, Adreno (TM) 660, OpenGL ES 3.2 V@0530.0 (GIT@f736a2f309 Ifb18d83a4f 1662466801) (Date:09/06/22))], DRIVER_VENDOR=Qualcomm, DRIVER_VERSION=0530.0 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
GPU CUDA compute capability major version: 0
Pixel shader version            : 1.00
Vertex shader version           : 1.00
Max. MSAA samples               : 4
Machine model name              : SM-F711U
Machine model version           : 
GL implementation parts         : (gl=egl-angle,angle=opengles)
Display type                    : ANGLE_OPENGLES
GL_VENDOR                       : Google Inc. (Qualcomm)
GL_RENDERER                     : ANGLE (Qualcomm, Adreno (TM) 660, OpenGL ES 3.2 V@0530.0 (GIT@f736a2f309 Ifb18d83a4f 1662466801) (Date:09/06/22))
GL_VERSION                      : OpenGL ES 2.0.0 (ANGLE 2.1.22632 git hash: f6672dbbe223)
GL_EXTENSIONS                   : GL_AMD_performance_monitor GL_ANGLE_base_vertex_base_instance GL_ANGLE_base_vertex_base_instance_shader_builtin GL_ANGLE_client_arrays GL_ANGLE_compressed_texture_etc GL_ANGLE_depth_texture GL_ANGLE_framebuffer_blit GL_ANGLE_framebuffer_multisample GL_ANGLE_get_serialized_context_string GL_ANGLE_get_tex_level_parameter GL_ANGLE_instanced_arrays GL_ANGLE_memory_size GL_ANGLE_multi_draw GL_ANGLE_program_cache_control GL_ANGLE_request_extension GL_ANGLE_robust_client_memory GL_ANGLE_texture_external_update GL_ANGLE_translated_shader_source GL_ARB_sync GL_CHROMIUM_bind_generates_resource GL_CHROMIUM_bind_uniform_location GL_CHROMIUM_color_buffer_float_rgba GL_CHROMIUM_copy_texture GL_CHROMIUM_lose_context GL_CHROMIUM_sync_query GL_EXT_EGL_image_external_wrap_modes GL_EXT_base_instance GL_EXT_blend_minmax GL_EXT_clip_control GL_EXT_color_buffer_half_float GL_EXT_compressed_ETC1_RGB8_sub_texture GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_discard_framebuffer GL_EXT_disjoint_timer_query GL_EXT_draw_elements_base_vertex GL_EXT_float_blend GL_EXT_instanced_arrays GL_EXT_map_buffer_range GL_EXT_memory_object GL_EXT_memory_object_fd GL_EXT_multi_draw_indirect GL_EXT_occlusion_query_boolean GL_EXT_read_format_bgra GL_EXT_robustness GL_EXT_sRGB GL_EXT_shader_framebuffer_fetch GL_EXT_shadow_samplers GL_EXT_texture_border_clamp GL_EXT_texture_filter_anisotropic GL_EXT_texture_norm16 GL_EXT_texture_rg GL_EXT_texture_sRGB_decode GL_EXT_texture_type_2_10_10_10_REV GL_EXT_unpack_subimage GL_KHR_debug GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_sliced_3d GL_NV_depth_buffer_float2 GL_NV_fence GL_NV_framebuffer_blit GL_NV_pack_subimage GL_NV_pixel_buffer_object GL_NV_read_depth GL_NV_read_stencil GL_OES_EGL_image GL_OES_EGL_image_external GL_OES_EGL_sync GL_OES_compressed_EAC_R11_signed_texture GL_OES_compressed_EAC_R11_unsigned_texture GL_OES_compressed_EAC_RG11_signed_texture GL_OES_compressed_EAC_RG11_unsigned_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_compressed_ETC2_RGB8_texture GL_OES_compressed_ETC2_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture GL_OES_compressed_ETC2_sRGB8_alpha8_texture GL_OES_compressed_ETC2_sRGB8_texture GL_OES_depth24 GL_OES_draw_elements_base_vertex GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_get_program_binary GL_OES_mapbuffer GL_OES_packed_depth_stencil GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_surfaceless_context GL_OES_texture_3D GL_OES_texture_border_clamp GL_OES_texture_float GL_OES_texture_float_linear GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_array_object
Disabled Extensions             : GL_EXT_shader_framebuffer_fetch GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x8252
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Compositor Information
======================
Tile Update Mode: One-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : Software only
R_16              : Software only
RG_88             : Software only
RG_1616           : Software only
BGR_565           : GPU_READ, SCANOUT
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT
RGBA_8888         : GPU_READ, SCANOUT
BGRX_8888         : Software only
BGRA_1010102      : Software only
RGBA_1010102      : Software only
BGRA_8888         : Software only
RGBA_F16          : Software only
YVU_420           : Software only
YUV_420_BIPLANAR  : Software only
YUVA_420_TRIPLANAR: Software only
P010              : Software only

Display(s) Information
======================
Info                          : Display[0] bounds=[0,0 360x880], workarea=[0,0 360x880], scale=3, rotation=0, panel_rotation=0 external detected
Color space (all)             : {primaries:BT709, transfer:SRGB, matrix:RGB, range:FULL}
Buffer format (all)           : RGBA_8888
Color volume                  : {name:'srgb', r:[0.6400, 0.3300], g:[0.3000, 0.6000], b:[0.1500, 0.3300], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 96x96 to 8192x4320 pixels
Decode h264 baseline          : 96x96 to 4320x8192 pixels
Decode h264 baseline          : 96x96 to 4096x2160 pixels (encrypted)
Decode h264 baseline          : 96x96 to 2160x4096 pixels (encrypted)
Decode h264 baseline          : 2x2 to 4080x2048 pixels
Decode h264 baseline          : 2x2 to 2048x4080 pixels
Decode h264 main              : 96x96 to 8192x4320 pixels
Decode h264 main              : 96x96 to 4320x8192 pixels
Decode h264 main              : 96x96 to 4096x2160 pixels (encrypted)
Decode h264 main              : 96x96 to 2160x4096 pixels (encrypted)
Decode h264 main              : 2x2 to 4080x2048 pixels
Decode h264 main              : 2x2 to 2048x4080 pixels
Decode h264 high              : 96x96 to 8192x4320 pixels
Decode h264 high              : 96x96 to 4320x8192 pixels
Decode h264 high              : 96x96 to 4096x2160 pixels (encrypted)
Decode h264 high              : 96x96 to 2160x4096 pixels (encrypted)
Decode h264 high              : 2x2 to 4080x2048 pixels
Decode h264 high              : 2x2 to 2048x4080 pixels
Decode vp8                    : 2x2 to 2048x2048 pixels (encrypted)
Decode vp9 profile0           : 360x360 to 4096x2176 pixels
Decode vp9 profile0           : 360x360 to 2176x4096 pixels
Decode vp9 profile0           : 96x96 to 4096x2176 pixels (encrypted)
Decode vp9 profile0           : 96x96 to 2176x4096 pixels (encrypted)
Decode vp9 profile0           : 2x2 to 2048x2048 pixels (encrypted)
Decode vp9 profile2           : 96x96 to 4096x2176 pixels
Decode vp9 profile2           : 96x96 to 2176x4096 pixels
Decode vp9 profile2           : 96x96 to 4096x2176 pixels (encrypted)
Decode vp9 profile2           : 96x96 to 2176x4096 pixels (encrypted)
Decode vp9 profile2           : 2x2 to 2048x2048 pixels
Decode hevc main              : 96x96 to 8192x4320 pixels
Decode hevc main              : 96x96 to 4320x8192 pixels
Decode hevc main              : 96x96 to 4096x2160 pixels (encrypted)
Decode hevc main              : 96x96 to 2160x4096 pixels (encrypted)
Decode hevc main              : 2x2 to 4096x2176 pixels
Decode hevc main              : 2x2 to 2176x4096 pixels
Decode hevc main 10           : 96x96 to 8192x4320 pixels
Decode hevc main 10           : 96x96 to 4320x8192 pixels
Decode hevc main 10           : 96x96 to 4096x2160 pixels (encrypted)
Decode hevc main 10           : 96x96 to 2160x4096 pixels (encrypted)
Decode hevc main still-picture: 96x96 to 8192x4320 pixels
Decode hevc main still-picture: 96x96 to 4320x8192 pixels
Decode hevc main still-picture: 96x96 to 4096x2160 pixels (encrypted)
Decode hevc main still-picture: 96x96 to 2160x4096 pixels (encrypted)
Decode hevc main still-picture: 2x2 to 4096x2176 pixels
Decode hevc main still-picture: 2x2 to 2176x4096 pixels
Decode av1 profile main       : 2x2 to 2048x1024 pixels (encrypted)
Decode av1 profile main       : 2x2 to 1024x2048 pixels (encrypted)
Decode av1 profile main       : 2x2 to 2048x1024 pixels (encrypted)
Decode av1 profile main       : 2x2 to 1024x2048 pixels (encrypted)
Encoding                      : 
Encode h264 baseline          : 128x128 to 4096x4096 pixels, and/or 960.000 fps.
Encode h264 baseline          : 16x16 to 2048x1024 pixels, and/or 960.000 fps (software codec).
Encode h264 baseline          : 16x16 to 1024x2048 pixels, and/or 960.000 fps (software codec).
Encode h264 main              : 128x128 to 4096x4096 pixels, and/or 960.000 fps.
Encode h264 main              : 16x16 to 2048x1024 pixels, and/or 960.000 fps (software codec).
Encode h264 main              : 16x16 to 1024x2048 pixels, and/or 960.000 fps (software codec).
Encode h264 high              : 128x128 to 4096x4096 pixels, and/or 960.000 fps.

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334831693</id>
        <title>Pencil Icon is not visible While printing the page</title>
        <author>
            <name>su...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334831693"/>
        <updated>1970-01-01T00:28:33.179Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version:125.0.6420.0 (Official Build) (arm64)

b8d046961d3db4fb2fde0d6adfdb26e710d64464-refs/branch-heads/6420@{#1}


OS : Win(10,11)

Preconditions:
None

Steps to reproduce:
1.Launch Chrome and Open NTP
2.Navigate to chrome://settings/people
3.Click on Customize your Chrome profile
4.Now print the page(CTRL + P)
5.Observe that, Pencil Icon is not visible

Actual Result: Pencil Icon is not visible While printing the page.
Expected Result: Pencil icon should be Visible While printing the page.

This issue exists from M-115 Onwards. So, raising it as a NR issue.

Please refer to the Attached Screencast below:



Notes:
1)This issue able to repro on Stable RC #123.0.6312.61, Beta RC #124.0.6367.29 and Dev RC#125.0.6396.2
2)As this being a Non-Regression issue,changing the status to Untriaged so that the issue would get addressed.


Thanks..!!
</content>
    </entry>
    <entry>
        <id>334361214</id>
        <title>Allowed/Not allowed permission in omnibox appears with extra space</title>
        <author>
            <name>ys...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334361214"/>
        <updated>1970-01-01T00:28:33.179Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 125.0.6420.0 (Official Build) canary (arm64) 
b8d046961d3db4fb2fde0d6adfdb26e710d64464-refs/branch-heads/6420@{#1}

OS : Mac,Win(10,11),Linux

Preconditions:
None

Steps to reproduce:
1. Launch Chrome and navigate to https://permission.site/
2. Click on any permission (ex: Microphone,Location etc.)
3. Click on Allow/Block
4. Observe Allowed/Not allowed in omnibox appears with extra space

Actual Result: Allowed/Not allowed permission in omnibox appears with extra space

Expected Result: Allowed/Not allowed permission in omnibox must appear normally

Please find bisect info below:

This is a regression issue broken in M125, and please find per revision-bisect info below:

Good Build  : 125.0.6369.0 
Bad Build :    125.0.6370.0 

You are probably looking for a change made after 1275787 (known good), but no later than 1275788 (first known bad).

CHANGELOG URL:

The script might not always return single CL as suspect as some perf builds might get missing due to failure.

https://chromium.googlesource.com/chromium/src/+log/b716c5e03c00b18807490bc3ba21a3d2672c5eb7..50267fb6fc527f140dbff5a1bd02bc98c0a3f0d5

Suspect: https://chromium.googlesource.com/chromium/src/+/50267fb6fc527f140dbff5a1bd02bc98c0a3f0d5

@Elaine Chien: Could you please check whether this is caused with respect to your change, if not please help us in assigning it to the right owner.

Note
1.Issue repro on latest Canary #125.0.6420.0
2.Issue not repro on latest Dev #125.0.6396.3, Beta #124.0.6367.29 and Stable #123.0.6312.107
3.Issue is reproducible on Windows and Linux.

Kindly refer the screencasts attached below

Good Build : https://screencast.googleplex.com/cast/NTQyMjM4NTcyODU4NTcyOHw4MThiY2I0Mi1mZQ

Bad Build : https://screencast.googleplex.com/cast/NTc4OTUwNDU2Nzc3MTEzNnwxMjQyNGIyOS1hMw

Thanks!</content>
    </entry>
    <entry>
        <id>334377747</id>
        <title>Buttons are not visible in case of checking devtools in webview (android) </title>
        <author>
            <name>va...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334377747"/>
        <updated>1970-01-01T00:28:33.178Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?
- Connect a Samsung Galaxy A6 phone (SM-A600FN) via USB to computer
- open a mobile app for testing which is having a webview part
- open devtools with chrome://inspect/#devices 


What is the expected result?
- Buttons are visible

What happens instead?
- Buttons are looking like color squares. 

You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>334773322</id>
        <title>Various parsing issues in HSTS</title>
        <author>
            <name>ja...@cispa.de</name>
        </author>
        <link href="https://issues.chromium.org/issues/334773322"/>
        <updated>1970-01-01T00:28:33.176Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 123.0.6312.123 (Official Build) (arm64)

Chromium's parsing behavior for HSTS diverges from the specifications and from other browsers in several cases:

The [specifications](https://www.rfc-editor.org/rfc/rfc6797#section-6.1) state that:
&gt; UAs MUST ignore any STS header field containing directives, or
       other header field value data, that does not conform to the
       syntax defined in this specification.

It seems like Chromium is simply ignoring invalid directives and continues parsing, instead of ignoring the full STS header. Examples:

STS: `x, max-age=60; max-age=60; includeSubdomains` works in Chromium although a comma is not allowed according to the syntax. [Example URL](http://sub.headers.websec.saarland/_hp/tests/upgrade-hsts.sub.html?resp_type=parsing&amp;browser_id=1&amp;label=HSTS&amp;first_id=30988&amp;last_id=30988&amp;scheme=http&amp;t_resp_id=30988&amp;t_element_relation=direct_direct&amp;t_resp_origin=https://sub.headers.websec.saarland)

STS: `max-age=20; in"cludeSubDomains` works in Chromium although `"` is not allowed to be in a directive-name/token. [Example URL](http://sub.headers.websec.saarland/_hp/tests/upgrade-hsts.sub.html?resp_type=parsing&amp;browser_id=1&amp;label=HSTS&amp;first_id=32557&amp;last_id=32557&amp;scheme=http&amp;t_resp_id=32557&amp;t_element_relation=direct_direct&amp;t_resp_origin=https://sub.headers.websec.saarland)

---
In addition, Chromium does not allow leading `;` although they are allowed according to the syntax `[ directive ]  *( ";" [ directive ] )`. My assumption is that Chromium implemented something like ` directive   *( ";" [ directive ] )`. Example:

STS: `;max-age=20; includeSubDomains` does not work in Chromium. [Example URL](http://sub.headers.websec.saarland/_hp/tests/upgrade-hsts.sub.html?resp_type=parsing&amp;browser_id=1&amp;label=HSTS&amp;first_id=32928&amp;last_id=32928&amp;scheme=http&amp;t_resp_id=32928&amp;t_element_relation=direct_direct&amp;t_resp_origin=https://sub.headers.websec.saarland)</content>
    </entry>
    <entry>
        <id>334817145</id>
        <title>Regression -In sample audio file,while clicking upon 3 dot menu observed overlay of download and playback speed is seen misplaced</title>
        <author>
            <name>so...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334817145"/>
        <updated>1970-01-01T00:28:33.176Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: Ash-chrome M125 canary 125.0.6416.0/15852.0.0 on Dratini(hatch) device
Lacros Version: Lacros canary  #125.0.6420.0lacros only]
OS: chrome

Pre-condition: sample audio file

Details:
1)Accounts: Corp account and Test account
2)Enterprise Enrolled: Yes, enrolled with Corp account
3)Devices:
Corp device
Dratini(Hatch) - X86_lacros 64

4)Repro on Ash-chrome: yes

5)Mode: NA

6)Frequency: Always

Enabled the lacros flags
#lacros-stability = canary
#lacros-only = Enabled
#lacros-availability-ignore = Enabled

What steps will reproduce the problem?
(1) Launch Lacros
(2) Open NTP and try to serach for a sample audio file
(3) try to click on 3 dot menu and observe

What is the expected result?
 In sample audio file,while clicking upon 3 dot menu shouldn't observe misplace of overlay

What happens instead?
 In sample audio file,while clicking upon 3 dot menu observed overlay of download and playback speed is seen misplaced

Note:
1)Issue observed in both ash-chrome and lacros

Issue seems to be Regression, issue worked fine on Ash-beta M124 Beta #124.0.6367.34/15823.23.0 on Collis(Volteer) device - X86_lacros 64

Attached screencast for the reference

Attached listnr feedback report
https://listnr.corp.google.com/report/91689893755
</content>
    </entry>
    <entry>
        <id>334213566</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334213566"/>
        <updated>1970-01-01T00:28:33.175Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285277:1285452:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ff8812ae-8a0e-4d64-9e34-b330221827b5

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ff8812ae-8a0e-4d64-9e34-b330221827b5

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs/browse_social/browse_social_twitter_infinite_scroll_2018
       32.50%: 6.5745 -&gt; 8.711 

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:compile_rcs/browse_social/browse_social_twitter_infinite_scroll_2018
       32.50%: 6.5745 -&gt; 8.711 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334361212</id>
        <title>Regression: Chrome Browser getting crash after hit Space bar on tab group</title>
        <author>
            <name>bu...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334361212"/>
        <updated>1970-01-01T00:28:33.174Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version : 125.0.6419.0 (Official Build) canary (arm64) 
ca3f5bd687581c097589873e08de84f95d8db72f-refs/branch-heads/6419@%7B#1}

OS : Mac Arm (14.3 beta, 13.5 Beta, 11.4,13.4), Mac Intel(10.15.7)

**
Prerequisites (flags on/off) - None

Steps to reproduce :
1. Launch Chrome and open NTP
2. right click on the tab and click add tab to new group
3. enter name of the group and hit enter
4. Move the tab focus on the tab group
5. Hit space bar


Observed results: Browser getting crashed

Expected Result : Browser should not crashed

Number of times you were able to reproduce: 5/5 - Yes
Bug reproducible after clean install: Yes/No - Yes
Bug reproducible after clearing cache and cookies: Yes/No - Yes
Bug reproducible on Arm64 Macs: Yes/No - Yes
Bug reproducible on Intel Macs: Yes/No - Yes
Bug reproducible on Chrome for Windows or Linux: No
Bug reproducible on Safari/Firefox (When the issue is in Web Content): Firefox: No
Bug reproducible on current stable build (App Version, iOS Version): Yes
Chrome Version : Stable #122.0.6261.112
Mac OS : Mac(14.3 Beta,13.5 Beta, 10.15.7, 11.4)
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes
Chrome Version : Beta #123.0.6312.28
Mac OS : Mac(14.3 Beta,13.5 Beta, 10.15.7, 11.4)
Bug reproducible on the current Dev channel build (App Version, iOS Version): Yes
Chrome Version : Dev #124.0.6329.0
Mac OS : Mac(14.3 Beta,13.5 Beta, 10.15.7, 11.4)
Bug reproducible on the current Canary channel build (App Version, iOS Version): Yes
Chrome Version : Canary #124.0.6355.0
Mac OS :Mac(14.3 Beta,13.5 Beta, 10.15.7, 11.4)


Actual Result : https://drive.google.com/file/d/1wdITOBJK6Xa_mH5zkq3HZltToD-M1Ovh/view?usp=sharing

Expected Result: https://drive.google.com/file/d/1mgmY9F0WM9pPxukBv0LZBu3K7ElC_dLM/view?usp=sharing

Crash ID: 7144fa9329fab185

Good Build: 121.0.6128.0
Bad Build:  121.0.6129.0

You are probably looking for a change made after 1224617 (known good), but no later than 1224618 (first known bad).
CHANGELOG URL:
The script might not always return single CL as suspect as some perf builds might get missing due to failure.
  https://chromium.googlesource.com/chromium/src/+log/f180900beaaf487c5a88b2dc3241cbeb1285edaa..be4826d428fc5f64c6c8628bf3f39e8935b0c7ea

Suspect: https://chromium.googlesource.com/chromium/src/+log/f180900beaaf487c5a88b2dc3241cbeb1285edaa..be4826d428fc5f64c6c8628bf3f39e8935b0c7ea


@Aaron Leventhal: Could you please check whether this is caused with respect to your change, if not please help us in assigning it to the right owner.


Note:
1. Issue able to repro on latest Canary #125.0.6419.0 ,Dev #125.0.6396.3, Beta #124.0.6367.49, and Stable #123.0.6312.123							
2. Issue not repro on Win(10,11) and Linux

Thank You..!!</content>
    </entry>
    <entry>
        <id>334192367</id>
        <title>css `clip-path: rect` not rendering</title>
        <author>
            <name>tr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334192367"/>
        <updated>1970-01-01T00:28:33.171Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. open mdn https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path#try_it
2. click 5th demo in Try It, i.e. `clip-path: rect(5px 5px 160px 145px round 20%);`

# Problem Description
image was not rendering

# Summary
css `clip-path: rect` not rendering

# Custom Questions
#### Which component does this fall under?
Blink&gt;CSS

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>334792001</id>
        <title>The group view layout is not sync with the grid view layout when in multi window</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334792001"/>
        <updated>1970-01-01T00:28:33.171Z</updated>
        <summary>-</summary>
        <content type="html">https://drive.google.com/file/d/1RA4EMlJW7H0qChDr9bnYNafl4LN_Upxw/view?usp=drive_link&amp;resourcekey=0-D1bmTiqVhETNtVh6s47oFg</content>
    </entry>
    <entry>
        <id>334791920</id>
        <title>Tests are failing: ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.RememberUserInput</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334791920"/>
        <updated>1970-01-01T00:28:33.171Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.RememberUserInput

These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/9edc55f9eb74e2e253a36d565c7658d0

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334792159</id>
        <title>Closing a tab from the tab group menu doesn't update the grid UI</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334792159"/>
        <updated>1970-01-01T00:28:33.171Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334791586</id>
        <title>Ewann's bug</title>
        <author>
            <name>ew...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334791586"/>
        <updated>1970-01-01T00:28:33.171Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>334361209</id>
        <title>plakatraja.com</title>
        <author>
            <name>jo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334361209"/>
        <updated>1970-01-01T00:28:33.170Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
</feed>