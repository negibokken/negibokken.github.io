<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-04-24T08:06:14.000Z</updated>
    <entry>
        <id>336577744</id>
        <title>FedCM version of One Tap hijacks first click on page</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336577744"/>
        <updated>2024-04-24T08:06:14.000Z</updated>
        <summary>-</summary>
        <content type="html">This happened to our team, but I am also seeing it out in the wild on popular sites such as stackoverflow etc:

Issue: When FedCM One Tap appears on the page, it steals focus, potentially causing loss of revenue for pay-per-click oriented businesses.

Expectation: FedCM version of One Tap should behave the same as the non-FedCM version. It should not steal focus when it appears.

Repro Steps
1. Visit site
2. Observe Google One Tap FedCM version displays - do not click on anything yet
3. Hover your mouse on a link or button on the website
4. Try to click the link
result: nothing happens
expected result: You should be redirected to the button/link's location</content>
    </entry>
    <entry>
        <id>336592439</id>
        <title>Regression : Extra space is observed between elements in Chrome Settings</title>
        <author>
            <name>ys...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592439"/>
        <updated>2024-04-24T07:59:29.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 126.0.6437.0 (Official Build) canary (arm64)
d8c19b20cdfc64275699e9da8aeba46189637c52-refs/branch-heads/6437@{#1}

OS : Mac,Win(10,11),Linux

Preconditions:
None

Steps to reproduce:
1. Launch Chrome and open Settings
2. Navigate through different tabs like Performance, Privacy and Security, On startup etc.
3. Observe the abnormal extra space between elements

Actual Result: Extra space is observed between elements in Chrome Settings

Expected Result: Elements in Chrome Settings must be displayed normally

Please find bisect info below:

This is a regression issue broken in M126, and please find per revision-bisect info below:

Good Build  : 126.0.6434.0 
Bad Build :    126.0.6435.0 

You are probably looking for a change made after 1290868 (known good), but no later than 1290869 (first known bad).

CHANGELOG URL:

The script might not always return single CL as suspect as some perf builds might get missing due to failure.

https://chromium.googlesource.com/chromium/src/+log/f2b3391a6b7c3f5d8997b71e59b7d8b96cfca72a..3a5c66efc2c8e86c3a7ed4afd5f378b530dd93d3

Suspect: https://chromium.googlesource.com/chromium/src/+/3a5c66efc2c8e86c3a7ed4afd5f378b530dd93d3

@dpapad: Could you please check whether this is caused with respect to your change, if not please help us in assigning it to the right owner.

Note
1.Issue repro on latest Canary #126.0.6437.0
2.Issue not repro on latest Dev #126.0.6423.2, Beta #125.0.6422.14 and Stable #124.0.6367.80
3.Issue is reproducible on Windows and Linux.

Kindly refer the screencasts attached below

Good Build : https://screencast.googleplex.com/cast/NTg3ODQxMTUzMTY0OTAyNHxiOWY4N2VlYS0wNA

Bad Build : https://screencast.googleplex.com/cast/NDU2NDA5ODAxMTM2NTM3Nnw2MTM0NTJiOS05Zg

Thanks!</content>
    </entry>
    <entry>
        <id>336706549</id>
        <title>Lacros crashes when text is dragged from ChromeOS settings to Lacros html textbox</title>
        <author>
            <name>ac...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336706549"/>
        <updated>2024-04-24T07:55:42.000Z</updated>
        <summary>-</summary>
        <content type="html">We developed Data Leak Prevention features that may prevent copy/pasting or dnd-ing text from certain locations to others. After https://crrev.com/c/5378158 was landed we are currently experiencing issues when text is dragged from outside of Lacros to a Lacros html textbox and the drop is blocked.

Stack trace:

```
2024-04-22T14:00:17.699739Z FATAL chrome[31417:31417]: [wayland_data_drag_controller.cc(205)] Check failed: IsDragSource(). 
#0 0x56490a1e05e2 base::debug::CollectStackTrace()
#1 0x56490a1c50ce base::debug::StackTrace::StackTrace()
#2 0x56490a0a571c logging::LogMessage::Flush()
#3 0x56490a0a55ed logging::LogMessage::~LogMessage()
#4 0x56490a08963d logging::(anonymous namespace)::CheckLogMessage::~CheckLogMessage()
#5 0x56490a0896ae logging::(anonymous namespace)::CheckLogMessage::~CheckLogMessage()
#6 0x56490a089413 logging::CheckError::~CheckError()
#7 0x564904f3430c ui::WaylandDataDragController::CancelSession()
#8 0x564904f737c5 ui::WaylandWindow::CancelDrag()
#9 0x56490d88ccce views::DesktopDragDropClientOzone::DragCancel()
#10 0x5649043550cf base::OnceCallback&lt;&gt;::Run()
#11 0x56490a088d97 base::CallbackListSubscription::~CallbackListSubscription()
#12 0x56490d88dc9d base::internal::BindState&lt;&gt;::~BindState()
#13 0x56490d88dc77 base::internal::BindState&lt;&gt;::Destroy()
#14 0x564909428153 policy::DataTransferDlpController::ContinueDropIfAllowed()
#15 0x564909427c0e policy::DataTransferDlpController::DropIfAllowed()
#16 0x56490d88d713 views::DesktopDragDropClientOzone::OnDragDrop()
#17 0x564904f3710d ui::WaylandDataDragController::OnDragDrop()
#18 0x564904f3125a ui::WaylandDataDevice::OnDrop()
#19 0x7b24083af5f0 ffi_call_unix64
#20 0x7b24083aefc3 ffi_call
#21 0x56490ba2ac3f wl_closure_invoke
#22 0x56490ba2947f dispatch_event
#23 0x56490ba28da8 wl_display_dispatch_queue_pending
#24 0x564904fb2571 ui::WaylandEventWatcher::WlDisplayDispatchPendingQueueInternal()
#25 0x564904fb3184 ui::WaylandEventWatcherFdWatch::OnFileCanReadWithoutBlocking()
#26 0x56490a1f0405 base::MessagePumpLibevent::FdWatchController::OnFdReadable()
#27 0x56490a1f634a base::MessagePumpEpoll::HandleEvent()
#28 0x56490a1f57a2 base::MessagePumpEpoll::OnEpollEvent()
#29 0x56490a1f4ec2 base::MessagePumpEpoll::WaitForEpollEvents()
#30 0x56490a1f49c0 base::MessagePumpEpoll::Run()
#31 0x56490a15581b base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run()
#32 0x56490a0f17a5 base::RunLoop::Run()
#33 0x564907ad0b9e content::BrowserMainLoop::RunMainMessageLoop()
#34 0x564907ad2b9c content::BrowserMainRunnerImpl::Run()
#35 0x564907acd334 content::BrowserMain()
#36 0x5649093efb64 content::RunBrowserProcessMain()
#37 0x5649093f20e6 content::ContentMainRunnerImpl::RunBrowser()
#38 0x5649093f1825 content::ContentMainRunnerImpl::Run()
#39 0x5649093ee931 content::RunContentProcess()
#40 0x5649093eea6c content::ContentMain()
#41 0x56490433f557 ChromeMain
#42 0x7b2408116706 __libc_start_call_main
#43 0x7b24081167c2 __libc_start_main_alias_2
#44 0x56490433f261 _start
```

It looks like Lacros is crashing when [wayland_data_drag_controller.cc:205](https://b.corp.google.com/issues/333844407#:~:text=wayland_data_drag_controller.cc%3A205) is hit. In particular, both data_source_ and offered_exchange_data_provider_ are null in this scenario.

[wayland_data_drag_controller.cc:439](https://b.corp.google.com/issues/333844407#:~:text=wayland_data_drag_controller.cc%3A439) suggests that data_source_ may be null when data is dragged from another client (see also https://b.corp.google.com/issues/41492749). Maybe the newly added CHECK is then crashing because of this.
</content>
    </entry>
    <entry>
        <id>336648774</id>
        <title>Requirements for Widevine L1 Windows support</title>
        <author>
            <name>la...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336648774"/>
        <updated>2024-04-24T07:37:26.000Z</updated>
        <summary>-</summary>
        <content type="html">According to https://github.com/shaka-project/shaka-player/pull/6468: "I don't think it requires anything special, as long as HEVC is supported, then it should be supported:"

But using Windows 10 - Chrome 124 with Intel(R) Core(TM)2 Quad CPU Q8300@ 2.50GHz and NVIDIA GeForce 730, HEVC encrypted is not working, but HEVC clear yes.

According to chrome://media-internals

Hardware secure hasn't capabilities.

Can the requirements for encrypted HEVC support in Chrome be defined and clarified?

Thanks!
</content>
    </entry>
    <entry>
        <id>336577743</id>
        <title>Fuzztest failing to roll into V8</title>
        <author>
            <name>le...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336577743"/>
        <updated>2024-04-24T07:29:28.000Z</updated>
        <summary>-</summary>
        <content type="html">https://chromium-review.googlesource.com/c/v8/v8/+/5480010?tab=checks

Looks like a missing dependency, the error is:

```
ERROR at //third_party/fuzztest/BUILD.gn:298:5: Unable to load "/b/s/w/ir/cache/builder/v8/third_party/protobuf/BUILD.gn".
    "//third_party/protobuf:protobuf_lite",
```</content>
    </entry>
    <entry>
        <id>336577742</id>
        <title>CSS property aspect-ratio: 4/1 is throwing elements of screen</title>
        <author>
            <name>da...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336577742"/>
        <updated>2024-04-24T07:19:47.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Implement a css grid with cards
2. Set .card aspect-ratio: 4 / 1;
3. Cards are pushed semi-offscreen
4. Change aspect-ratio to for example 2 / 1 or 6 / 1 and everything is fine

# Problem Description
Without any changes on our end, the aspect-ratio of  4 / 1 stopped working in all of our environments since about 1-2 days. This issue is now also present in Microsoft Edge. Firefox on the other hand still works the same as expected. Something is wrong with aspect-ratio 4 / 1 not respecting widths anymore.

# Summary
CSS property aspect-ratio: 4/1 is throwing elements of screen

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336628720</id>
        <title>After CORS support, Samesite=lax cannot be response Set-Cookie header by Assertion API.</title>
        <author>
            <name>ke...@dena.jp</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628720"/>
        <updated>2024-04-24T07:14:12.000Z</updated>
        <summary>-</summary>
        <content type="html">### summary
The behavior of storing cookies in the UserAgent has changed in Chrome 125 after implementation of CORS support.

### description
Assertion API responses now instruct the UserAgent to store a cookie using Response Header Set-Cookie.
Cookies with Samesite=lax were not stored.

In Chrome 124, they are stored.

### quesion
Does CORS support also affect the Response Set-Cookie header?</content>
    </entry>
    <entry>
        <id>336628719</id>
        <title> [Tab Group Parity]-When changing  device orientation "Color picker" is not shown. </title>
        <author>
            <name>aa...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628719"/>
        <updated>2024-04-24T07:12:57.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 126.0.6436.4  
OS: Samsung Galaxy S7 (SM-G930F) / 8.O   

Pre-Conditions:  
Mobiles : #tab-group-parity-android -Enable  

What steps will reproduce the problem?  
1.Launch Chrome and complete the FRE.  
2.Enable the above-mentioned flag and restart Chrome twice.  
3.Launch '3' tabs in normal mode.  
4.Group the 1st and 2nd tab and then rotate the device into Landscape  
5.Now from '3 button navigation' tap on minimise button twice  &gt; Observe  

What happens instead?  
1.When changing  device orientation "Color picker" is not shown.  

What is the expected result?  
1.No such behavior should be found  

Frequency : 5/5  

Additional Comments:  
This issue is reproducible on:Samsung Galaxy S7 (SM-G930F) / 8.O   </content>
    </entry>
    <entry>
        <id>336589275</id>
        <title>Marybriones</title>
        <author>
            <name>he...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589275"/>
        <updated>2024-04-24T07:08:21.000Z</updated>
        <summary>-</summary>
        <content type="html">**NOTE**: Changing the template (or component which causes a template change) may change the access level this bug defaults to and it may no longer be confidential.

Chrome Version: (copy from chrome://version)
Lacros Version (if applicable): (copy from chrome://version)
OS: (e.g. Win10, MacOS 10.12, etc...)

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?



Please use hotlists and text to provide additional information.

If this is a regression (i.e., worked before), please consider using the bisect tool (https://www.chromium.org/developers/bisect-builds-py) to help us identify the root cause and more rapidly triage the issue.

For graphics-related bugs, please copy/paste the contents of the about://gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>336566538</id>
        <title>LinkPreview is annoying when you drag &amp; drop links</title>
        <author>
            <name>re...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336566538"/>
        <updated>2024-04-24T05:52:04.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to youtube
2. Try to drag &amp; drop a link to a video to the bookmark bar

# Problem Description
Some popup (the link-preview one) shows up for nothing. 
And this is *not cool* for people with epileptic issues

# Summary
LinkPreview is annoying when you drag &amp; drop links

# Additional Data
Category: UI \
Chrome Channel: Dev \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336628716</id>
        <title> Preloading triggered from new tab page Android</title>
        <author>
            <name>ro...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628716"/>
        <updated>2024-04-24T05:44:38.000Z</updated>
        <summary>-</summary>
        <content type="html">We propose to apply preloading techniques to new tab page Android to speed-up navigations.</content>
    </entry>
    <entry>
        <id>336592435</id>
        <title>[Windows][Video Encode] Specify encoding scenario for HW accelerators</title>
        <author>
            <name>ji...@intel.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592435"/>
        <updated>2024-04-24T05:43:48.000Z</updated>
        <summary>-</summary>
        <content type="html">MF VEA does not provide hint to encoder about video content being encoded.

We should let encoder know what type of content it is handling, for encoder to better select encode tools and tune parameters according to scenario.

For example, scenario should be set to VideoConferencing for camera stream, and DisplayRemoting for screen sharing, CameraRecord for recording.</content>
    </entry>
    <entry>
        <id>336628715</id>
        <title>Not set when attributeName of svg animate element is set to fill and values is set to var(--color)</title>
        <author>
            <name>ju...@juner.net</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628715"/>
        <updated>2024-04-24T05:28:50.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Create an svg element with a rect element that has an animate element
    * Set an appropriate size for rect.
2. Define --color: red as a CSS custom property.
3. Set fill as attibuteName and var(--color) as values to the animate element.
4. rect will be filled with black.

# Problem Description

sample
https://livecodes.io/?x=id/syxfkk2jc6k

# Additional Comments
```html
&lt;svg&gt;
  &lt;rect x=0 y=0 height=100 width=100 fill=var(--base) /&gt;
&lt;/svg&gt;
&lt;svg&gt;
  &lt;rect x=0 y=0 height=100 width=100 fill=var(--base)&gt;
    &lt;animate attributeName=fill values=var(--color) /&gt;
  &lt;/rect&gt;
&lt;/svg&gt;
&lt;style&gt;
:root {
  --base: green;
  --color: red;
  svg {
    width: 100px;
    height: 100px;
  }
}
&lt;/style&gt;
```

# Summary
Not set when attributeName of svg animate element is set to fill and values is set to var(--color)

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336592434</id>
        <title>Cracking sound while playing video on google chrome</title>
        <author>
            <name>de...@samsung.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592434"/>
        <updated>2024-04-24T04:43:07.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. open cnys.tv 
2. play any video(follow steps as of issue video)
3. cracking sound after few second

# Problem Description
Cracking sound while playing video on google chrome
only coming with Tablets,smartphone doesn't have this issue 

# Additional Comments
similar chromium bug
https://issues.chromium.org/issues/325757510

# Summary
Cracking sound while playing video on google chrome

# Custom Questions
#### Does this work in other browsers?

Not sure - I don't know

#### Contents of chrome://gpu: 

Graphics Feature Status
=======================
*   Canvas: Hardware accelerated
*   Canvas out-of-process rasterization: Enabled
*   Direct Rendering Display Compositor: Enabled
*   Compositing: Hardware accelerated
*   Multiple Raster Threads: Disabled
*   OpenGL: Enabled
*   Rasterization: Hardware accelerated
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Surface Control: Enabled
*   Video Decode: Hardware accelerated
*   Video Encode: Hardware accelerated
*   Vulkan: Disabled
*   WebGL: Hardware accelerated
*   WebGL2: Hardware accelerated
*   WebGPU: Hardware accelerated

Driver Bug Workarounds
======================
*   disable_program_caching_for_transform_feedback
*   disable_timestamp_queries
*   dont_delete_source_texture_for_egl_image
*   exit_on_context_lost
*   force_cube_map_positive_x_allocation
*   force_enable_color_buffer_float_except_rgb32f
*   max_copy_texture_chromium_size_1048576
*   max_msaa_sample_count_4
*   remove_dynamic_indexing_of_swizzled_vector
*   round_down_uniform_bind_buffer_range_size
*   unbind_egl_context_to_flush_driver_caches
*   use_copyteximage2d_instead_of_readpixels_on_multisampled_textures
*   use_virtualized_gl_contexts
*   wake_up_gpu_before_drawing
*   webgl_or_caps_max_texture_size_limit_4096
*   disabled_extension_GL_EXT_shader_framebuffer_fetch
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent

Problems Detected
=================
*   Raster is using a single thread.
    Disabled Features: multiple_raster_threads

*   Non-virtual contexts on Qualcomm sometimes cause out-of-order frames:
    (http://crbug.com/163464), (http://crbug.com/233612), (http://crbug.com/289461)
    Applied Workarounds: use_virtualized_gl_contexts

*   The first draw operation from an idle state is slow:
    (http://crbug.com/309734)
    Applied Workarounds: wake_up_gpu_before_drawing

*   glFinish doesn't clear caches on Android:
    (http://crbug.com/509727)
    Applied Workarounds: unbind_egl_context_to_flush_driver_caches

*   Android Adreno crashes on binding incomplete cube map texture to FBO:
    (http://crbug.com/518889)
    Applied Workarounds: force_cube_map_positive_x_allocation

*   CHROMIUM_copy_texture with 1MB copy per flush to avoid unwanted cache growth on Adreno:
    (http://crbug.com/542478)
    Applied Workarounds: max_copy_texture_chromium_size_1048576

*   Limit max texure size to 4096 on all of Android
    Applied Workarounds: webgl_or_caps_max_texture_size_limit_4096

*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   Program binaries don't contain transform feedback varyings on Qualcomm GPUs:
    (http://crbug.com/658074)
    Applied Workarounds: disable_program_caching_for_transform_feedback

*   Limit MSAA to 4x on Android devices:
    (http://crbug.com/797243)
    Applied Workarounds: max_msaa_sample_count_4

*   A deleted query id for GL_TIMESTAMP cannot be reused for other query targets:
    (http://crbug.com/858879)
    Applied Workarounds: disable_timestamp_queries

*   ReadPixels is broken with EXT_multisampled_render_to_texture on recent Adreno drivers.:
    (http://crbug.com/890002)
    Applied Workarounds: use_copyteximage2d_instead_of_readpixels_on_multisampled_textures

*   Round down glBindBufferRange size to a multiple of 4 on Qualcomm Adreno GPUs for uniform buffers:
    (http://crbug.com/906743)
    Applied Workarounds: round_down_uniform_bind_buffer_range_size

*   Crash on Adreno when using GL_EXT_shader_framebuffer_fetch:
    (http://crbug.com/1010338)
    Applied Workarounds: disable(GL_EXT_shader_framebuffer_fetch)

*   Remove dynamic indexing for swizzled vectors on Android:
    (http://crbug.com/709351)
    Applied Workarounds: remove_dynamic_indexing_of_swizzled_vector

*   Some drivers seem to require as to use original texture whenever possible:
    (http://crbug.com/1052114), (http://crbug.com/1117370)
    Applied Workarounds: dont_delete_source_texture_for_egl_image

*   Always assume float formats are renderable on Android except RGB32F:
    (http://crbug.com/1127387)
    Applied Workarounds: force_enable_color_buffer_float_except_rgb32f

*   Context lost recovery often fails on Adreno with SkiaRenderer GL.:
    (http://crbug.com/1079161)
    Applied Workarounds: exit_on_context_lost

Dawn Info
=========

&lt;Integrated GPU&gt;  Vulkan backend - Adreno (TM) 740
--------------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   norm16texture-formats
*   adapter-properties-memory-heaps
*   shared-texture-memory-a-hardware-buffer
*   shared-texture-memory-opaque-fd
*   shared-fence-vk-semaphore-sync-fd

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

*   vulkan_split_command_buffer_on_compute_pass_after_render_pass: 
    (https://crbug.com/dawn/1564):
    Splits any command buffer where a compute pass is recorded after a render
    pass. This toggle is enabled by default on Qualcomm GPUs, which have been
    observed experiencing a driver crash in this situation.

*   vulkan_use_image_robust_access_2: 
    (https://crbug.com/tint/1890):
    Disable Tint robustness transform on textures when VK_EXT_robustness2 is
    supported and robustImageAccess2 == VK_TRUE.

*   vulkan_use_buffer_robust_access_2: 
    (https://crbug.com/tint/1890):
    Disable index clamping on the runtime-sized arrays on buffers in Tint
    robustness transform when VK_EXT_robustness2 is supported and
    robustBufferAccess2 == VK_TRUE.

*   use_tint_ir: 
    (https://crbug.com/tint/1718):
    Enable the use of the Tint IR for backend codegen.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Version Information
===================
Data exported              : 2024-04-24T04:18:57.842Z
Chrome version             : Chrome/123.0.6312.99
Operating system           : Android 14
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/03fbddf498224f2bcca36d06c44df0d5f625067e/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/03fbddf498224f2bcca36d06c44df0d5f625067e/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : bbf1e1ea6bcf
2D graphics backend        : Skia/123 3d4e45907f9b239a54957001d619d2d4a6ca06b4
Command Line               : --top-controls-show-threshold=0.27 --top-controls-hide-threshold=0.17 --enable-viewport --validate-input-event-stream --enable-longpress-drag-selection --touch-selection-strategy=direction --disable-composited-antialiasing --enable-dom-distiller --flag-switches-begin --flag-switches-end

Driver Information
==================
Initialization time             : 228
In-process GPU                  : false
Passthrough Command Decoder     : false
Sandboxed                       : false
GPU0                            : VENDOR= 0x0000 [Qualcomm], DEVICE=0x0000 [Adreno (TM) 740], DRIVER_VERSION=0676.42 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
GPU CUDA compute capability major version: 0
Pixel shader version            : 3.20
Vertex shader version           : 3.20
Max. MSAA samples               : 4
Machine model name              : SM-X910
Machine model version           : 
GL implementation parts         : (gl=egl-gles2,angle=none)
Display type                    : DEFAULT
GL_VENDOR                       : Qualcomm
GL_RENDERER                     : Adreno (TM) 740
GL_VERSION                      : OpenGL ES 3.2 V@0676.42 (GIT@7b26bdd942, Iab69c31769, 1693222181) (Date:08/28/23)
GL_EXTENSIONS                   : GL_OES_EGL_image GL_OES_EGL_image_external GL_OES_EGL_sync GL_OES_vertex_half_float GL_OES_framebuffer_object GL_OES_rgb8_rgba8 GL_OES_compressed_ETC1_RGB8_texture GL_AMD_compressed_ATC_texture GL_KHR_texture_compression_astc_sliced_3d GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_hdr GL_OES_texture_compression_astc GL_EXT_texture_compression_s3tc GL_EXT_texture_compression_s3tc_srgb GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_bptc GL_OES_texture_npot GL_EXT_texture_filter_anisotropic GL_EXT_texture_format_BGRA8888 GL_EXT_read_format_bgra GL_OES_texture_3D GL_EXT_color_buffer_float GL_EXT_color_buffer_half_float GL_EXT_float_blend GL_QCOM_alpha_test GL_OES_depth24 GL_OES_packed_depth_stencil GL_OES_depth_texture GL_OES_depth_texture_cube_map GL_EXT_sRGB GL_OES_texture_float GL_OES_texture_float_linear GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_EXT_texture_type_2_10_10_10_REV GL_EXT_texture_sRGB_decode GL_EXT_texture_compression_astc_decode_mode GL_EXT_texture_mirror_clamp_to_edge GL_EXT_texture_format_sRGB_override GL_OES_element_index_uint GL_EXT_copy_image GL_EXT_geometry_shader GL_EXT_tessellation_shader GL_OES_texture_stencil8 GL_EXT_shader_io_blocks GL_OES_shader_image_atomic GL_OES_sample_variables GL_EXT_texture_border_clamp GL_EXT_EGL_image_external_wrap_modes GL_EXT_multisampled_render_to_texture GL_EXT_multisampled_render_to_texture2 GL_OES_shader_multisample_interpolation GL_EXT_texture_cube_map_array GL_EXT_draw_buffers_indexed GL_EXT_gpu_shader5 GL_EXT_robustness GL_EXT_texture_buffer GL_EXT_shader_framebuffer_fetch GL_ARM_shader_framebuffer_fetch_depth_stencil GL_OES_texture_storage_multisample_2d_array GL_OES_sample_shading GL_OES_get_program_binary GL_EXT_debug_label GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_QCOM_tiled_rendering GL_ANDROID_extension_pack_es31a GL_EXT_primitive_bounding_box GL_OES_standard_derivatives GL_OES_vertex_array_object GL_EXT_disjoint_timer_query GL_KHR_debug GL_EXT_YUV_target GL_EXT_sRGB_write_control GL_EXT_texture_norm16 GL_EXT_discard_framebuffer GL_OES_surfaceless_context GL_OVR_multiview GL_OVR_multiview2 GL_EXT_texture_sRGB_R8 GL_KHR_no_error GL_EXT_debug_marker GL_OES_EGL_image_external_essl3 GL_OVR_multiview_multisampled_render_to_texture GL_EXT_buffer_storage GL_EXT_external_buffer GL_EXT_blit_framebuffer_params GL_EXT_clip_cull_distance GL_EXT_protected_textures GL_EXT_shader_non_constant_global_initializers GL_QCOM_texture_foveated GL_QCOM_texture_foveated2 GL_QCOM_texture_foveated_subsampled_layout GL_QCOM_shader_framebuffer_fetch_noncoherent GL_QCOM_shader_framebuffer_fetch_rate GL_EXT_memory_object GL_EXT_memory_object_fd GL_EXT_EGL_image_array GL_NV_shader_noperspective_interpolation GL_KHR_robust_buffer_access_behavior GL_EXT_EGL_image_storage GL_EXT_blend_func_extended GL_EXT_clip_control GL_OES_texture_view GL_EXT_fragment_invocation_density GL_QCOM_motion_estimation GL_QCOM_validate_shader_binary GL_QCOM_YUV_texture_gather GL_QCOM_shading_rate GL_QCOM_frame_extrapolation GL_IMG_texture_filter_cubic GL_QCOM_render_shared_exponent GL_EXT_polygon_offset_clamp GL_EXT_texture_sRGB_RG8 GL_EXT_depth_clamp GL_EXT_fragment_shading_rate GL_EXT_fragment_shading_rate_primitive GL_EXT_fragment_shading_rate_attachment
Disabled Extensions             : GL_EXT_shader_framebuffer_fetch GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x8252
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Compositor Information
======================
Tile Update Mode: One-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : Software only
R_16              : Software only
RG_88             : Software only
RG_1616           : Software only
BGR_565           : GPU_READ, SCANOUT
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT
RGBA_8888         : GPU_READ, SCANOUT
BGRX_8888         : Software only
BGRA_1010102      : Software only
RGBA_1010102      : Software only
BGRA_8888         : Software only
RGBA_F16          : Software only
YVU_420           : Software only
YUV_420_BIPLANAR  : Software only
YUVA_420_TRIPLANAR: Software only
P010              : Software only

Display(s) Information
======================
Info                          : Display[0] bounds=[0,0 986x1579], workarea=[0,0 986x1579], scale=1.875, rotation=0, panel_rotation=0 external detected
Color space (all)             : {primaries:BT709, transfer:SRGB, matrix:RGB, range:FULL}
Buffer format (all)           : RGBA_8888
Color volume                  : {name:'srgb', r:[0.6400, 0.3300], g:[0.3000, 0.6000], b:[0.1500, 0.3300], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 96x96 to 4096x4096 pixels
Decode h264 baseline          : 96x96 to 4096x2160 pixels (encrypted)
Decode h264 baseline          : 96x96 to 2160x4096 pixels (encrypted)
Decode h264 baseline          : 2x2 to 4080x2048 pixels
Decode h264 baseline          : 2x2 to 2048x4080 pixels
Decode h264 main              : 96x96 to 4096x4096 pixels
Decode h264 main              : 96x96 to 4096x2160 pixels (encrypted)
Decode h264 main              : 96x96 to 2160x4096 pixels (encrypted)
Decode h264 main              : 2x2 to 4080x2048 pixels
Decode h264 main              : 2x2 to 2048x4080 pixels
Decode h264 high              : 96x96 to 4096x4096 pixels
Decode h264 high              : 96x96 to 4096x2160 pixels (encrypted)
Decode h264 high              : 96x96 to 2160x4096 pixels (encrypted)
Decode h264 high              : 2x2 to 4080x2048 pixels
Decode h264 high              : 2x2 to 2048x4080 pixels
Decode vp8                    : 2x2 to 2048x2048 pixels (encrypted)
Decode vp9 profile0           : 360x360 to 4096x2304 pixels
Decode vp9 profile0           : 360x360 to 2304x4096 pixels
Decode vp9 profile0           : 96x96 to 4096x2304 pixels (encrypted)
Decode vp9 profile0           : 96x96 to 2304x4096 pixels (encrypted)
Decode vp9 profile0           : 2x2 to 2048x2048 pixels (encrypted)
Decode vp9 profile2           : 96x96 to 4096x2304 pixels
Decode vp9 profile2           : 96x96 to 2304x4096 pixels
Decode vp9 profile2           : 96x96 to 4096x2304 pixels (encrypted)
Decode vp9 profile2           : 96x96 to 2304x4096 pixels (encrypted)
Decode vp9 profile2           : 2x2 to 2048x2048 pixels
Decode hevc main              : 96x96 to 4096x4096 pixels
Decode hevc main              : 96x96 to 4096x2160 pixels (encrypted)
Decode hevc main              : 96x96 to 2160x4096 pixels (encrypted)
Decode hevc main              : 2x2 to 4096x2176 pixels
Decode hevc main              : 2x2 to 2176x4096 pixels
Decode hevc main 10           : 96x96 to 4096x4096 pixels
Decode hevc main 10           : 96x96 to 4096x2160 pixels (encrypted)
Decode hevc main 10           : 96x96 to 2160x4096 pixels (encrypted)
Decode hevc main still-picture: 96x96 to 4096x4096 pixels
Decode hevc main still-picture: 96x96 to 4096x2160 pixels (encrypted)
Decode hevc main still-picture: 96x96 to 2160x4096 pixels (encrypted)
Decode hevc main still-picture: 2x2 to 4096x2176 pixels
Decode hevc main still-picture: 2x2 to 2176x4096 pixels
Decode av1 profile main       : 96x96 to 4096x4096 pixels
Decode av1 profile main       : 96x96 to 4096x2160 pixels (encrypted)
Decode av1 profile main       : 96x96 to 2160x4096 pixels (encrypted)
Decode av1 profile main       : 2x2 to 2048x1024 pixels (encrypted)
Decode av1 profile main       : 2x2 to 1024x2048 pixels (encrypted)
Encoding                      : 
Encode h264 baseline          : 128x128 to 4096x4096 pixels, and/or 480.000 fps.
Encode h264 baseline          : 16x16 to 2048x1024 pixels, and/or 960.000 fps (software codec).
Encode h264 baseline          : 16x16 to 1024x2048 pixels, and/or 960.000 fps (software codec).
Encode h264 main              : 128x128 to 4096x4096 pixels, and/or 480.000 fps.
Encode h264 main              : 16x16 to 2048x1024 pixels, and/or 960.000 fps (software codec).
Encode h264 main              : 16x16 to 1024x2048 pixels, and/or 960.000 fps (software codec).
Encode h264 high              : 128x128 to 4096x4096 pixels, and/or 480.000 fps.

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============

# Additional Data
Category: Audio / Video \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336628711</id>
        <title>the day of today's date is showing wrong</title>
        <author>
            <name>pl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628711"/>
        <updated>2024-04-24T04:21:01.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: &lt; Google Chrome 123.0.6312.107 &gt;
Chrome OS Version: &lt; Platform123.0.6312.107 &gt;
Chrome OS Platform: &lt;acer 10th generation&gt;
Lacros Version (if applicable): &lt;From about:version: Google Chrome123.0.6312.107  &gt;
Network info: &lt;network, encryption type, router model (if known)&gt;

Please specify Cr-* of the system to which this bug/feature applies (add the label below).

Steps To Reproduce:
(1)suppose if we search &lt;when is intermediate result 2024 in ts&gt;
(2)it showing &lt;The Telangana State Board of Intermediate Education (TSBIE) will declare the results of the 1st and 2nd-year Intermediate Public Examinations held in March 2024 on Thursday, April 24, 2024, at 11:00 AM.
(3)which the particular date &lt;april 24&gt; is not &lt;THURSDAY&gt; ITS WEDNESDAY.

Expected Result: The Telangana State Board of Intermediate Education (TSBIE) will declare the results of the 1st and 2nd-year Intermediate Public Examinations held in March 2024 on wednesday, April 24, 2024, at 11:00 AM.

Actual Result: The Telangana State Board of Intermediate Education (TSBIE) will declare the results of the 1st and 2nd-year Intermediate Public Examinations held in March 2024 on Thursday, April 24, 2024, at 11:00 AM.

How frequently does this problem reproduce? (Always)
always
What is the impact to the user, and is there a workaround? If so, what is it?
it may impact to students of telangana who are studying in intermediate as they are eagarly waiting for the results.
Please provide any additional information below. Attach a screen shot or log if possible.

For graphics-related bugs, please copy/paste the contents of the about:gpu page at the end of this report.</content>
    </entry>
    <entry>
        <id>336648772</id>
        <title>New update introduced some unneeded changes to UI, namely - black borders and a white line above.</title>
        <author>
            <name>mi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336648772"/>
        <updated>2024-04-24T04:11:30.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. I've just updated from 124.0.6367.60 to 124.0.6367.79 and it happened.

# Problem Description
As summary said - this update introduced some ridiculously oversized borders for no good reason, as well as GLARING white line on top side(it's especially jarring if you're using dark theme, which i do X_X)

# Additional Comments
Please revert those weird and unnecessary changes.

# Summary
New update introduced some unneeded changes to UI, namely - black borders and a white line above.

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336589271</id>
        <title>fghfggkjhghghghghghghghghghghghghghghghhhhghgusdhfjkhfksdhfsdghfskjdhfsjkf
</title>
        <author>
            <name>da...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589271"/>
        <updated>2024-04-24T04:10:10.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. fsdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
2. ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
3. fffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxc

# Problem Description
fffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxcfffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkk

# Additional Comments
fffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxc

# Summary
fghfggkjhghghghghghghghghghghghghghghghhhhghgusdhfjkhfksdhfsdghfskjdhfsjkf

# Custom Questions
#### Example URL: 
fffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxc

#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
Yes - Those darn plugins

#### Which plugin?
fffffffffffffffffffffffsjkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkksksldhskfjksdhfxjkbhvxckfhxcmnbvxcnmbvxcnbvxcnbvxmbvxnbvnmxbvnmxvnmbcvxnmcxvxc

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336648771</id>
        <title>Adding passkey to login to Google on Windows Chrome with Samsung S23 Ultra phone is not possible</title>
        <author>
            <name>mw...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336648771"/>
        <updated>2024-04-24T04:09:13.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  https://myaccount.google.com/signinoptions/passkeys on Windows/Chrome
2. Click "Create a passkey"
3. Click "Use another device"
4. Select phone
5. Follow prompts on the phone
- my Samsung phone always tries to use samsung pass even though I'm not using it, I have to touch "save another way" and select Google Password Manager.
- I have a video of this but can't share publicly
6. Choose Google Password Manager
7. Chose "Use Once" as there is no other option
8. Touch "Create" on confirmation screen

# Problem Description
"Something went wrong" dialog on Windows Chrome.

# Summary
Adding passkey to login to Google on Windows Chrome with Samsung S23 Ultra phone is not possible

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug - Software not working correctly

# Additional Data
Category: Other \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336673476</id>
        <title>Tests are failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.settings.MainSettingsFragmentTest#testRenderOnIdentityErrorForSignedInUsers</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336673476"/>
        <updated>2024-04-24T03:55:26.000Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.settings.MainSettingsFragmentTest#testRenderOnIdentityErrorForSignedInUsers

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/7b22220826e542c7a78f7547f19ecd88

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>336588274</id>
        <title>[Skia Desktop Memory Sheriff]: 12 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336588274"/>
        <updated>2024-04-24T03:48:07.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291494:1291535:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=06b53b5a-a6b0-4072-9ef1-cf697fa040e6

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=06b53b5a-a6b0-4072-9ef1-cf697fa040e6

Top 4 regressions (out of 4, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_alphabetty_2018
       50.02%: 76554075.5 -&gt; 114849733.0 sizeInBytes
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_bubbles_2020
       42.83%: 18749393.5 -&gt; 26779079.5 sizeInBytes
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/play_media/play_media_soundcloud_2018
       30.11%: 21234917.0 -&gt; 27627723.5 sizeInBytes
  - ChromiumPerf/mac-m1_mini_2020-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_miniclip_2018
       20.96%: 15618842.5 -&gt; 18892947.0 sizeInBytes

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_alphabetty_2018
       50.02%: 76554075.5 -&gt; 114849733.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/load_games/load_games_bubbles_2020
       42.83%: 18749393.5 -&gt; 26779079.5 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/play_media/play_media_soundcloud_2018
       30.11%: 21234917.0 -&gt; 27627723.5 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/a9e8ac66fb4d0ced9ce73922162e9cf79641c0d5..9b4661bd23cdd634562b95c69bd404670e4c538a
  Chromium Commit Position: https://crrev.com/1291493..1291535
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/400eba6495ec87aa04b646845ef62e21606f45bf..400eba6495ec87aa04b646845ef62e21606f45bf
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/fffd489d2e5be9f48d3d46ab753baa9b020f3652..fffd489d2e5be9f48d3d46ab753baa9b020f3652</content>
    </entry>
    <entry>
        <id>336592430</id>
        <title>activeTab permission does not work with setPanelBehavior openPanelOnActionClick:  true</title>
        <author>
            <name>vt...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592430"/>
        <updated>2024-04-24T03:35:33.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Can not get tab url and title with the tabs.query with activeTab permission

1. set in `background.js` `chrome.sidePanel.setPanelBehavior({ openPanelOnActionClick: true })`;
2. set in `mainfest.json` `"permissions": ["activeTab"]`
3. inside the `sidepanel.html` call `chrome.tabs.query({active: true, currentWindow: true})`

# Problem Description
If I change the background.js  in step 1 to

```
chrome.action.onClicked.addListener(async (tab) =&gt; {
  await chrome.sidePanel.open({ tabId: tab.id, windowId: tab.windowId });
});
```

everything will work fine except the sidepanel can not close when I click the extension icon again.

# Summary
activeTab permission does not work with setPanelBehavior openPanelOnActionClick:  true

# Custom Questions
#### Which component does this fall under?
Blink&gt;PermissionsAPI

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336589269</id>
        <title>PDF shows faded colors from the original</title>
        <author>
            <name>ko...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589269"/>
        <updated>2024-04-24T02:52:21.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Click Preview PDF on Chrome Browser
2. 
3. 

# Problem Description
Version 124.0.6367.62 . PDF shows faded colors from the original.in the attached file it can be seen that there are different colors. What is the solution so that the color returns to normal?

# Summary
PDF shows faded colors from the original

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336589268</id>
        <title>webnn: un-fuse ops when the given activation is not supported</title>
        <author>
            <name>sh...@intel.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589268"/>
        <updated>2024-04-24T02:52:15.000Z</updated>
        <summary>-</summary>
        <content type="html">The issue was raised by @dwayner@microsoft.com in the [CL review](https://chromium-review.googlesource.com/c/chromium/src/+/5471363/2/services/webnn/dml/graph_impl.cc#539):

&gt; A WebNN backend must execute the graph as two separate operators if the op can't be executed fused, regardless of which DML version. So if a `clamp` was stuffed into the `MLConv2dOptions::activation` field, then the Chromium DML backend should call `relu` followed by a `clamp` as if was specified as two separate calls in WebNN

The current implementation fuses standalone activations wherever possible, and we should also support un-fusing the ops if the given activation is not supported.</content>
    </entry>
    <entry>
        <id>336654216</id>
        <title>Unable to choose saved passwords</title>
        <author>
            <name>th...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336654216"/>
        <updated>2024-04-24T00:50:05.000Z</updated>
        <summary>-</summary>
        <content type="html">Device name: samsung s22+

From ""Settings &gt; About Chrome""
Application version:124.0.6367.54 (Official Build) (64-bit) 
Operating system:Android 14; SM-S906U Build/UP1A.231005.007

URLs (if applicable):

When going to a site in Chrome with a login, the password manager appears but does not allow clicking on the saved password. 

Steps to reproduce:
(1)
(2)
(3)

Expected result:

Actual result:</content>
    </entry>
    <entry>
        <id>336589466</id>
        <title>v8_inspector_fuzzer: Fatal error in Empty MaybeLocal</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589466"/>
        <updated>2024-04-24T00:35:11.000Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5144296333180928

Fuzzing Engine: libFuzzer
Fuzz Target: v8_inspector_fuzzer
Job Type: v8_libfuzzer_asan_linux_arm64_sim
Platform Id: linux

Crash Type: Fatal error
Crash Address: 
Crash State:
  Empty MaybeLocal
  v8::Utils::ReportApiFailure
  v8_inspector::V8SerializationDuplicateTracker::LinkExistingOrCreate
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=v8_libfuzzer_asan_linux_arm64_sim&amp;range=1240619:1240621

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5144296333180928

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>336649313</id>
        <title>java_cpp_template: carry over comments to the generated Java file</title>
        <author>
            <name>nt...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336649313"/>
        <updated>2024-04-24T00:29:40.000Z</updated>
        <summary>-</summary>
        <content type="html">I noticed that `java_cpp_template` will generate a Java file, but it doesn't carry over code comments to the generated file. Consider `BuildConfig.template` as an example:

```
// Copyright 2015 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package org.chromium.build;
...
/**
 *  Build configuration. Generated on a per-target basis.
 */
public class BuildConfig {
...
    // Value of android:versionCode.
#if defined(_VERSION_CODE)
    public static MAYBE_FINAL long VERSION_CODE = _VERSION_CODE;
#else
    public static MAYBE_FINAL long VERSION_CODE = 1;
#endif
...
}
```

The generated file is functional, however it's missing the useful comments:

```
package org.chromium.build;
public class BuildConfig {
...
    public static long VERSION_CODE = 1;
...
}
```

I know `gcc -E -C` or `gcc -E -CC` is supposed to keep the comments, so it may be possible to carry over these comments.</content>
    </entry>
    <entry>
        <id>336589264</id>
        <title>Find text on page, on View Source page, splits highlights, and browser eventually crashes, on searching long line</title>
        <author>
            <name>sw...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589264"/>
        <updated>2024-04-24T00:16:50.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 124.0.6367.62
Operating System: Mac OS X 14.4.1

URL (if applicable) where crash occurred:
view-source:https://www.linkedin.com/in/josiahkrutz/

Can you reproduce this crash?
Yes, every time

What steps will reproduce this crash? (If it's not reproducible, what were you doing just before the crash?)
1. View Source (Ctrl/Cmd-Alt/Option-U) on a LinkedIn profile page, e.g. https://linkedin.com/in/josiahkrutz/ (note: you may need to be logged into LinkedIn to see a profile page - I'm sure this happens with other pages too, I just haven't repro'd anywhere else yet)
2. Hit Ctrl/Cmd-F, and type 'meet'
3. Notice highlight is split into two parts, one is not highlighting the right word (see screenshot)
4. Backspace the last character, and type it again (e.g. 'meet' -&gt; 'mee' -&gt; 'meet')
5. Repeat step 4 over and over, notice the browser gets slow, and eventually crashes

Thank you for all your help! Chromium rocks!! -Me (Xoogler)

****DO NOT CHANGE BELOW THIS LINE****
Crash ID: crash/2b5d9258dc8f6fcc</content>
    </entry>
    <entry>
        <id>336648770</id>
        <title>PrefetchService::owned_prefetches_ should contain only prefetches with network request started</title>
        <author>
            <name>li...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336648770"/>
        <updated>2024-04-24T00:12:09.000Z</updated>
        <summary>-</summary>
        <content type="html">PrefetchService::owned_prefetches_ [1] should contain only prefetch containers for which the network request has started.
 
In PrefetchService::AddPrefetchContainer [2], the prefetch container is added to PrefetchService::owned_prefetches_ before its network request is started.
Before the prefetch network request is started, there are multiple conditions that could cancel the prefetch request all together. E.g. one of these conditions is if Preloading was disabled in Chrome.

PrefetchService::owned_prefetches_ is used to select the prefetch to be used by the navigation in PrefetchService::FindPrefetchContainerToServe[3]. Because PrefetchService::owned_prefetches_ is populated before successfully passing all conditions that could cancel the prefetch, PrefetchService::FindPrefetchContainerToServe is doing unnecessary work when trying to select a prefetch to be used by navigation because it is checking prefetches that haven't started a network request, and never will and as such they could never be used by the navigation.

PrefetchService::owned_prefetches_ should be populated when the network request for the prefetch is sent, after all conditions are met.

[1] https://source.chromium.org/chromium/chromium/src/+/main:content/browser/preloading/prefetch/prefetch_service.h;drc=a963a934b5420b3fa7eafdd96eb55844a9277559;l=375
[2] https://source.chromium.org/chromium/chromium/src/+/main:content/browser/preloading/prefetch/prefetch_service.cc;drc=81f4f2c7936cc451e4071b9b7b25d86040d869c7;l=378
[3] https://source.chromium.org/chromium/chromium/src/+/main:content/browser/preloading/prefetch/prefetch_service.cc;drc=81f4f2c7936cc451e4071b9b7b25d86040d869c7;l=1414</content>
    </entry>
    <entry>
        <id>336589262</id>
        <title>Remove uses of "api.path.checkout_dir" throughout chromium recipe code</title>
        <author>
            <name>bp...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589262"/>
        <updated>2024-04-24T00:12:05.000Z</updated>
        <summary>-</summary>
        <content type="html">When running recipe tests today in tools/build, the following recipe deprecation warning is printed:
```
Found 1 warning                                                                                                                                                                                                          
                                                                                                                                                                                                                         
**********************************************************************                                   
            WARNING: recipe_engine/CHECKOUT_DIR_DEPRECATED                                                                                                                                                               
               Found 382 call sites and 0 import sites                                                                                                                                                                   
**********************************************************************                                  
Description:                                                                                                
  api.path.checkout_dir is deprecated.                                                                      
                                                                                                                                                                                                                         
  This value acts like a global variable and leads to very                                            
  confusing code. Instead of this, prefer the following (in order                                                                                                                                                        
  from most to least desirable):                                                                                                                                                                                         
                                                                                                                                                                                                                         
  1) Modify functions which inspect api.path.checkout_dir to                                                                                                                                                             
  instead directly take the directory to operate on.                                                                                                                                                                     
                                                                                                                                                                                                                         
  2) Modify functions to use the recipe_engine/context module's                                                                                                                                                          
  cwd value. This can still be confusing if abused, because it                                                                                                                                                           
  changes the behavior of the function based on the context from                                                                                                                                                         
  which it's called. However, for some 'leaf' functions which are                                                                                                                                                        
  just directly invoking a tool in a directory, this can be                                                
  acceptable. Unlike the checkout_dir value in path, the context                                                                                                                                                         
  module keeps per-thread state, which means that concurrent                                                                                                                                                             
  futures in the recipe will each see their own value as                                                                                                                                                                 
  appropriate for their own call stack.                                                                     
                                                                                                            
  3) Introduce your own 'global' path to a module that you own,                                                                                                                                                          
  and then use this. This doesn't solve the code clarity problem                
  directly, but can be a useful transition for code which heavily                                 
  relies on the existing checkout_dir within its own codebase.                                     
  This will not solve the problem for common modules which use                                            
  the checkout_dir global variable without a way to explicitly                                            
  pass in a directory, however.                                                                             
                                                                                                                                                                                                                         
  If you pick this third path, please consider making this global            
  only assignable once, and making it a hard error (e.g. raise                     
  ValueError) if this is accessed prior to assignment.                                      
Deadline: 2024-06-15
```

This theoretically/ideally requires significant plumbing of the checkout_dir in a variety of callsites throughout the chromium recipe codebase. There are over a 100 different recipe files accessing `api.path.checkout_dir`, for a total of 382 call sites:  
https://paste.googleplex.com/5492404135657472?raw

Tentatively making this size-medium, but this could very well be size-large since it requires so much re-plumbing.</content>
    </entry>
    <entry>
        <id>336640739</id>
        <title>[Graphics]: 8 regressions in rendering.mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336640739"/>
        <updated>2024-04-24T00:07:48.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291245:1291302:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=86645b7a-3b61-48fb-a0b7-36436579ae71

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=86645b7a-3b61-48fb-a0b7-36436579ae71

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rendering.mobile/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/background_color_animation
      833.33%: 3.0 -&gt; 28.0 unitless

Top 1 affected measurements in android-pixel6-pro-perf:
  - rendering.mobile/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/background_color_animation
      833.33%: 3.0 -&gt; 28.0 unitless

Regressions grouped by rendering.mobile includes data from the following benchmarks with listed owners:
  rendering.mobile: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/ef6bbeefc92b34b430706e5f81461774c70addfd..34f1d48e18e2f70b0e1f60d08476d14661f71f1c
  Chromium Commit Position: https://crrev.com/1291244..1291302
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2bd5a47e1a3efe38367b7d9540cb7ab71787f29e..fd82d9a2134ce3ba2a225303332eb7dbb18fbed1
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3e7d35c55de137229862957359cfc7e28f3ec919..81f09d3db8e54250e90e829bc0c7fd928c4f893a</content>
    </entry>
    <entry>
        <id>336589261</id>
        <title>Webview error inquiry after One UI 6.1 update</title>
        <author>
            <name>zn...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589261"/>
        <updated>2024-04-24T00:02:01.000Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name: Galaxy s23 plus

Android OS version: 14

Android System WebView version: Flutter inapp webview

Application: https://play.google.com/store/apps/details?id=com.bemily.chat.befamily

Application version: 1.2.4

Steps to reproduce:

1. Webview is open
2. Run another app
3. Return to our app and check the webview

Expected result: The webview should not show a white screen.

Actual result: When resume app, the webview appears as a white screen.

Did this work before? 
Doesn't happen before samsung one ui update

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>336592422</id>
        <title>Webview error inquiry after One UI 6.1 update</title>
        <author>
            <name>zn...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592422"/>
        <updated>2024-04-24T00:00:12.000Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name: Galaxy s23 plus

Android OS version: 14

Android System WebView version: Flutter inapp webview

Application: https://play.google.com/store/apps/details?id=com.bemily.chat.befamily

Application version: 1.2.4

Steps to reproduce:

1. Webview is open
2. Run another app
3. Return to our app and check the webview

Expected result: The webview should not show a white screen.

Actual result: When resume app, the webview appears as a white screen.

Did this work before? 
Doesn't happen before samsung one ui update

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>336639734</id>
        <title>[V8 Perf Sheriff]: 6 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336639734"/>
        <updated>2024-04-23T23:36:16.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291310:1291354:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=db637e29-d941-4d68-82f7-73a0b614cc1b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=db637e29-d941-4d68-82f7-73a0b614cc1b

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop-future/GC:duration_avg/browse_news/browse_news_cnn_2021
       62.58%: 138.324 -&gt; 224.894 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop-future/V8-Only:duration_avg/browse_news/browse_news_cnn_2021
       15.41%: 3570.6059999999998 -&gt; 4120.853 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop-future/Total:duration_avg/browse_news/browse_news_cnn_2021
       12.60%: 4362.7205 -&gt; 4912.229 ms

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - v8.browsing_desktop-future/GC:duration_avg/browse_news/browse_news_cnn_2021
       62.58%: 138.324 -&gt; 224.894 ms
  - v8.browsing_desktop-future/V8-Only:duration_avg/browse_news/browse_news_cnn_2021
       15.41%: 3570.6059999999998 -&gt; 4120.853 ms
  - v8.browsing_desktop-future/Total:duration_avg/browse_news/browse_news_cnn_2021
       12.60%: 4362.7205 -&gt; 4912.229 ms

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: almuthanna@chromium.org, cbruni@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/2cd47a5341bcf34b4891c85dd036643484b5448f..1bbe6833095afef4cb08c2b3ca3a107bc1493513
  Chromium Commit Position: https://crrev.com/1291309..1291354
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/fd82d9a2134ce3ba2a225303332eb7dbb18fbed1..fd82d9a2134ce3ba2a225303332eb7dbb18fbed1
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/81f09d3db8e54250e90e829bc0c7fd928c4f893a..454d65196eccae44a9a64f3d02b26966edff9cba</content>
    </entry>
    <entry>
        <id>336639733</id>
        <title>[V8 Perf Sheriff]: 7 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336639733"/>
        <updated>2024-04-23T23:36:09.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291310:1291354:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=54d4fed1-e6da-4d91-a6e1-eeea81ea8e95

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=54d4fed1-e6da-4d91-a6e1-eeea81ea8e95

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/GC:duration_avg/browse_news/browse_news_cnn_2021
       57.28%: 140.611 -&gt; 221.154 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/V8-Only:duration_avg/browse_news/browse_news_cnn_2021
       14.71%: 3596.1045 -&gt; 4125.008 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/Total:duration_avg/browse_news/browse_news_cnn_2021
       12.32%: 4374.7970000000005 -&gt; 4913.639 ms

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - v8.browsing_desktop/GC:duration_avg/browse_news/browse_news_cnn_2021
       57.28%: 140.611 -&gt; 221.154 ms
  - v8.browsing_desktop/V8-Only:duration_avg/browse_news/browse_news_cnn_2021
       14.71%: 3596.1045 -&gt; 4125.008 ms
  - v8.browsing_desktop/Total:duration_avg/browse_news/browse_news_cnn_2021
       12.32%: 4374.7970000000005 -&gt; 4913.639 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: almuthanna@chromium.org, cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/2cd47a5341bcf34b4891c85dd036643484b5448f..1bbe6833095afef4cb08c2b3ca3a107bc1493513
  Chromium Commit Position: https://crrev.com/1291309..1291354
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/fd82d9a2134ce3ba2a225303332eb7dbb18fbed1..fd82d9a2134ce3ba2a225303332eb7dbb18fbed1
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/81f09d3db8e54250e90e829bc0c7fd928c4f893a..454d65196eccae44a9a64f3d02b26966edff9cba</content>
    </entry>
    <entry>
        <id>336639732</id>
        <title>[V8 Memory Perf Sheriff]: 34 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336639732"/>
        <updated>2024-04-23T23:33:20.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291310:1291409:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c46a415c-ee8c-4720-9130-360e5879944d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c46a415c-ee8c-4720-9130-360e5879944d

Top 10 regressions (out of 12, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:mark_max/browse_tools/browse_tools_photoshop_warm_2021
      379.07%: 13.4725 -&gt; 64.543 ms
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full_max/browse_tools/browse_tools_photoshop_warm_2021
      208.47%: 31.6175 -&gt; 97.5315 ms
  - ChromiumPerf/win-11-perf/v8.browsing_desktop/v8:gc:cycle:main_thread_max/browse_tools/browse_tools_photoshop_warm_2021
      208.47%: 31.6175 -&gt; 97.5315 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:mark_sum/browse_news/browse_news_cnn_2021
      133.55%: 48.622 -&gt; 113.5585 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle:full_sum/browse_news/browse_news_cnn_2021
      102.83%: 463.45399999999995 -&gt; 940.0375 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full_sum/browse_news/browse_news_cnn_2021
       97.51%: 88.98599999999999 -&gt; 175.756 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle:full:cpp_sum/browse_news/browse_news_cnn_2021
       96.12%: 59.6125 -&gt; 116.9095 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle:cpp_sum/browse_news/browse_news_cnn_2021
       96.12%: 59.6125 -&gt; 116.9095 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle_sum/browse_news/browse_news_cnn_2021
       76.81%: 619.5084999999999 -&gt; 1095.3775 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/v8:gc:cycle:main_thread_sum/browse_news/browse_news_cnn_2021
       74.76%: 118.0455 -&gt; 206.302 ms

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:mark_sum/browse_news/browse_news_cnn_2021
      133.55%: 48.622 -&gt; 113.5585 ms
  - v8.browsing_desktop/v8:gc:cycle:full_sum/browse_news/browse_news_cnn_2021
      102.83%: 463.45399999999995 -&gt; 940.0375 ms
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full_sum/browse_news/browse_news_cnn_2021
       97.51%: 88.98599999999999 -&gt; 175.756 ms


Top 3 affected measurements in win-11-perf:
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:mark_max/browse_tools/browse_tools_photoshop_warm_2021
      379.07%: 13.4725 -&gt; 64.543 ms
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full_max/browse_tools/browse_tools_photoshop_warm_2021
      208.47%: 31.6175 -&gt; 97.5315 ms
  - v8.browsing_desktop/v8:gc:cycle:main_thread_max/browse_tools/browse_tools_photoshop_warm_2021
      208.47%: 31.6175 -&gt; 97.5315 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: almuthanna@chromium.org, cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1291315..1291359
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/fd82d9a2134ce3ba2a225303332eb7dbb18fbed1..fd82d9a2134ce3ba2a225303332eb7dbb18fbed1
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/81f09d3db8e54250e90e829bc0c7fd928c4f893a..454d65196eccae44a9a64f3d02b26966edff9cba</content>
    </entry>
    <entry>
        <id>336592420</id>
        <title>Deep scan notice is not flag guarded</title>
        <author>
            <name>dr...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592420"/>
        <updated>2024-04-23T23:28:38.000Z</updated>
        <summary>-</summary>
        <content type="html">The deep scan notice can show for users who will not have their deep scanning behavior changed. This UX should be guarded by SafeBrowsingDeepScanningPromptRemoval </content>
    </entry>
    <entry>
        <id>336628702</id>
        <title>Add tests for PDF.LoadStatus metric</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628702"/>
        <updated>2024-04-23T23:22:59.000Z</updated>
        <summary>-</summary>
        <content type="html">PDF.LoadStatus is lacking in test coverage, which caused bug 336599994. This metric should have tests.</content>
    </entry>
    <entry>
        <id>336636127</id>
        <title>Umbrella tracker for Perf service deployments [Apr 23, 2024]</title>
        <author>
            <name>as...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336636127"/>
        <updated>2024-04-23T23:14:08.000Z</updated>
        <summary>-</summary>
        <content type="html">Umbrella tracker for Perf service deployment</content>
    </entry>
    <entry>
        <id>336589260</id>
        <title>[DNR] Re-evaluate which rule matches are recorded for response header matched rules</title>
        <author>
            <name>ke...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589260"/>
        <updated>2024-04-23T23:08:37.000Z</updated>
        <summary>-</summary>
        <content type="html">Giving feedback for the extension and developer on which DNR rules have been matched/have taken action on the request are tricky, especially with rules that match on different request phases, that can interact with previously matched rules.</content>
    </entry>
    <entry>
        <id>336595419</id>
        <title>[Blink Layout]: 6 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336595419"/>
        <updated>2024-04-23T23:02:04.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290838:1291011:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9c0ee6e6-1f54-493c-aed7-3eea519d7b22

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9c0ee6e6-1f54-493c-aed7-3eea519d7b22

Top 4 regressions (out of 4, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.layout/multicol_deeply-nested-tables-2/multicol_deeply-nested-tables-2.html
       17.79%: 440.72175000000004 -&gt; 362.3032 unitless
  - ChromiumPerf/android-pixel6-perf/blink_perf.layout/flexbox-input/flexbox-input.html
       10.56%: 19106.984 -&gt; 17088.3719 unitless
  - ChromiumPerf/android-pixel6-perf/blink_perf.layout/multicol_nested-forced-breaks/multicol_nested-forced-breaks.html
       10.06%: 1290.2285 -&gt; 1160.4613 unitless
  - ChromiumPerf/android-pixel6-perf/blink_perf.layout/attach-inlines/attach-inlines.html
       10.00%: 164.0729 -&gt; 147.6597 unitless

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.layout/multicol_deeply-nested-tables-2/multicol_deeply-nested-tables-2.html
       17.79%: 440.72175000000004 -&gt; 362.3032 unitless


Top 3 affected measurements in android-pixel6-perf:
  - blink_perf.layout/flexbox-input/flexbox-input.html
       10.56%: 19106.984 -&gt; 17088.3719 unitless
  - blink_perf.layout/multicol_nested-forced-breaks/multicol_nested-forced-breaks.html
       10.06%: 1290.2285 -&gt; 1160.4613 unitless
  - blink_perf.layout/attach-inlines/attach-inlines.html
       10.00%: 164.0729 -&gt; 147.6597 unitless

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: ikilpatrick@chromium.org, kojii@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/ae8394782abd88dccb14ed91ea127d9335dca346..d20049bbc7a4e5fe720b02c88690e802b478b361
  Chromium Commit Position: https://crrev.com/1290831..1290934
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/353397f27fce3ec3aae05b8f8be099644adae442..00a3072bd4d6631f239a7813593c4eafc14eca44
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/86298f7a84b13308d058c310f4d8058f2da714a5..15f40ec2fc4b64de391baff90f6318937af020bb</content>
    </entry>
    <entry>
        <id>336633543</id>
        <title>Cleanup: Unify the unique file name creation</title>
        <author>
            <name>dm...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336633543"/>
        <updated>2024-04-23T22:54:53.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336577735</id>
        <title>Downloading executables while Safe Browsing is turned off results in blocking almost all downloads.</title>
        <author>
            <name>jo...@googlemail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336577735"/>
        <updated>2024-04-23T22:42:25.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. turn of Safe Browsing
2. try to download a known safe executable (basically anything, the last one for me was Node.js)
3. file will not download unless you additionally confirm it, with chrome saying that they block it BECAUSE they cant check the file because Safe Browsing is turned off, when the entire reason why someone would turn off Safe Browsing is to never ever ever have to deal with that exact kind of hassle.

# Problem Description
see above, this is infantilizing and incredibly annoying.

# Summary
Downloading executables while Safe Browsing is turned off results in blocking almost all downloads.

# Custom Questions
#### Example URL: 
n/a

# Additional Data
Category: Network / Downloading \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336628701</id>
        <title>Devtools closes automatically</title>
        <author>
            <name>je...@paramount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628701"/>
        <updated>2024-04-23T22:34:38.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?

Have devtools open for 10-15min with log messages coming in.

What is the expected result?

devtools stays open

What happens instead?

devtools closes/crashes after 10-15min of use.  I'm guessing it's related to volume of console log messages, BUT this this only started happening after a Chrome update 2-3 months ago.  Previous versions of Chrome devtools were much more stable.  Chrome devtools should not get worse after an update.

You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>336628700</id>
        <title>Print Preview errors are cut off</title>
        <author>
            <name>rb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336628700"/>
        <updated>2024-04-23T22:21:38.000Z</updated>
        <summary>-</summary>
        <content type="html">On ToT (126.0.6437.0), Print Preview's error messages are cut off. Steps to reproduce:
(1) Open Print Preview (or chrome://print)
(2) Either set "Copies" to 0 or open "More settings" and set scaling to something invalid (e.g., 1)
(3) Observe red error text is cut off after the first line.

Bisect points to the shared vars lit migration CL at https://chromium-review.googlesource.com/c/chromium/src/+/5459353

From local inspection, it seems the adopted style sheet is prioritized over the &lt;style&gt; tag added by Print Preview's own vars file (which is using the Polymer vars template). Fix is likely to either make Print Preview's vars use the "Lit" adoptedStyleSheets template, or possibly to make all generated vars files use this template, in case there are similar regressions elsewhere.</content>
    </entry>
    <entry>
        <id>336589259</id>
        <title>Gmail: selecting text and deleting with "enter" incorrectly repositions cursor</title>
        <author>
            <name>kb...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589259"/>
        <updated>2024-04-23T21:58:32.000Z</updated>
        <summary>-</summary>
        <content type="html">Reproduction steps:

1) Start composing an email in Gmail and position the cursor in the middle of the email

2) Select some text and attempt to replace it with a newline by pressing the "enter" key

Expected:

The cursor should be placed after the newline that was just inserted.

Actual:

The cursor jumps to the end of the email.

This bug causes intermittent mis-edits for me; appreciate investigation and a potential fix.

Platform: 126.0.6433.1 (Official Build) canary-dcheck (arm64), on macOS on Apple Silicon. `about:version`, containing experiment state, attached.
</content>
    </entry>
    <entry>
        <id>336620323</id>
        <title>Error when attempting to read from serial port</title>
        <author>
            <name>na...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336620323"/>
        <updated>2024-04-23T21:57:06.000Z</updated>
        <summary>-</summary>
        <content type="html">Repro steps:

1. Pair a bluetooth device with a Chromebook
2. Call Serial.requestPort()
3. Invoke open() on the port returned by step #2
4. Read from the port

Expected: Read is successful

Actual: The following error occurs:
`An unknown system error has occurred.`

For more details and logs see: b/327064215\

The error could also be occurring during a write instead of a read. Not entirely clear from the logs.</content>
    </entry>
    <entry>
        <id>336592418</id>
        <title>Clean up InputStepCurrentValueValidation feature flag</title>
        <author>
            <name>tc...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592418"/>
        <updated>2024-04-23T21:51:13.000Z</updated>
        <summary>-</summary>
        <content type="html">This flag can be removed in M128 assuming no issues

Flag checked in:
https://chromium-review.googlesource.com/c/chromium/src/+/5474199
</content>
    </entry>
    <entry>
        <id>336589258</id>
        <title>Enable UsedColorSchemeRootScrollbars for overlay scrollbars</title>
        <author>
            <name>ga...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589258"/>
        <updated>2024-04-23T21:49:04.000Z</updated>
        <summary>-</summary>
        <content type="html">
When no `color-scheme` is defined in a web page, or the value `normal` is set, the page's color scheme defaults to light mode. If users have indicated a preference for a dark theme via settings, having the root scrollbar be light when they are expecting a dark themed one used to cause confusion. This issue was solved by the now on-by-default feature `UsedColorSchemeRootScrollbars`, which changes the color scheme for root scrollbars to match the users' preferences.

This feature was developed specifically for non-overlay scrollbars [[1](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/paint/paint_layer_scrollable_area.cc;l=1301?q=UsedColorSchemeRootScrollbars%20-path:out)].

This crbug was created to discuss the possibility to open the feature for root overlay scrollbars as well. Specifically, Fluent Overlay scrollbars are affected by the same issue that non-overlay scrollbars had before this feature was developed. Regular Overlay scrollbars have their own *overlay color theme* [[2](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/scroll/scrollbar.h;l=81?q=GetScrollbarOverlayColorTheme)] which gets set to a theme independent of what the page's defaults are, but Fluent Overlay scrollbars depend entirely on the regular computation of the color scheme, which makes Fluent Overlay Scrollbar susceptible to the same issue that was addressed by `UsedColorSchemeRootScrollbars`.

This issue was brought up in https://issues.chromium.org/issues/331335316</content>
    </entry>
    <entry>
        <id>336611742</id>
        <title>Icon does not convey an alternative text</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336611742"/>
        <updated>2024-04-23T21:40:49.000Z</updated>
        <summary>-</summary>
        <content type="html">This is for launch/4296344

OBSERVED RESULTS:

1. Icons that indicate a site is being managed is conveyed by screen reader as "blank" in the Automatic full screen subpage

2. Screenshot: https://screenshot.googleplex.com/AoJE6e2cz2bdiij.png

EXPECTED RESULTS:

- Screen reader should be able to convey the site name, image role, and the tooltip description.

Note: This was tested on Windows machine with NVDA only (video demo). Need to confirm this issue on macOS and CrOS as well.</content>
    </entry>
    <entry>
        <id>336615267</id>
        <title>UI is flashing at the corner of open NTP when swiping left/right</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336615267"/>
        <updated>2024-04-23T21:34:53.000Z</updated>
        <summary>-</summary>
        <content type="html">App Version: 125.0.6422.11 Beta
iOS Version: iOS 17.5, 16.7.2
Device: iPad Pro 4th Gen, iPad Mini 6th Gen (iPads only)

Steps to reproduce:
  1. Launch Chrome
  2. Open 20+ NTPs
  3. Start swiping left/right and observe the top right corner of the open tab

Observed results:
UI is flashing at the corner of open NTP when swiping left/right

Expected results:
UI shouldn’t be flashing at the corner of open NTP when swiping left/right

Number of times you were able to reproduce: 3/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: Firefox: NA
Bug reproducible on current stable build (App Version, iOS Version): New feature
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes M125

Link to video:
https://drive.google.com/file/d/1F72FNksGgAlP_ausaPYMSEVazJlE6xbg/view?usp=drive_link&amp;resourcekey=0-2T6fDuUCULdwc41JVIvf3A

Link to image:
https://drive.google.com/file/d/1wnH4mhIJNjutUa22o04RUk1ACRWNBSyr/view?usp=drive_link&amp;resourcekey=0-QwiPHiCjWpsSwDdHUr8uFw</content>
    </entry>
</feed>