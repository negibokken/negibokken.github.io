<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-04-23T20:09:55.000Z</updated>
    <entry>
        <id>336599994</id>
        <title>PDF.LoadStatus metric is broken</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336599994"/>
        <updated>2024-04-23T20:09:55.000Z</updated>
        <summary>-</summary>
        <content type="html">PDF.LoadStatus is reporting 0 count for loading a full-paged PDF with Chrome PDF viewer and loading an embedded PDF with Chrome PDF viewer. This is because the metric count logic is within MimeHandler code, which is never used in OOPIF PDF.</content>
    </entry>
    <entry>
        <id>336592415</id>
        <title>Coverage for defaulted dtor in a header file underreported</title>
        <author>
            <name>rd...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592415"/>
        <updated>2024-04-23T20:07:11.000Z</updated>
        <summary>-</summary>
        <content type="html">A defaulted dtor in a header file was reported as not having test coverage, despite being exercised in tests.

CL example:
https://chromium-review.googlesource.com/c/chromium/src/+/5472167/2/extensions/browser/api/user_scripts/user_scripts_api.h

Reports the dtor of a function as untested.  However, the dtor was exercises in the modified UserScriptsAPITest.GetAndRemoveWorlds browsertest (part of browser_tests, runs on all desktop platforms).</content>
    </entry>
    <entry>
        <id>336593607</id>
        <title>Focus on cancel button after account selection</title>
        <author>
            <name>ta...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336593607"/>
        <updated>2024-04-23T20:00:50.000Z</updated>
        <summary>-</summary>
        <content type="html">We should focus on the cancel button and announce something like "Cancel sign-in" after account selection.
https://docs.google.com/presentation/d/1hTocBQ_6HVeAuVZtSYO4hjvK6xNL6cXaL37nslF_X4Q/edit?disco=AAABKyjT0ek</content>
    </entry>
    <entry>
        <id>336597291</id>
        <title>Optimization: Turn off sync could be optimized to not close tab groups.</title>
        <author>
            <name>sh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336597291"/>
        <updated>2024-04-23T19:59:27.000Z</updated>
        <summary>-</summary>
        <content type="html">Based on this CL https://chromium-review.googlesource.com/c/chromium/src/+/5462879/comment/58a1f5f4_5d9964de/

We could optimize turn off sync to be treated slightly differently. Maybe dont close tab groups and we can treat it as network being unavailable for a bit. But we need to do plumbing of signals to treat these two events differntly. Non-trivial at the moment.</content>
    </entry>
    <entry>
        <id>336596362</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336596362"/>
        <updated>2024-04-23T19:52:39.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291238:1291262:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d13eac9e-3580-4bc5-bed9-1410606cefc3

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d13eac9e-3580-4bc5-bed9-1410606cefc3

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/background_color_animation
       14.19%: 11.94315 -&gt; 13.637450000000001 unitless

Top 1 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/background_color_animation
       14.19%: 11.94315 -&gt; 13.637450000000001 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1291237..1291262
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2bd5a47e1a3efe38367b7d9540cb7ab71787f29e..2bd5a47e1a3efe38367b7d9540cb7ab71787f29e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3e7d35c55de137229862957359cfc7e28f3ec919..81f09d3db8e54250e90e829bc0c7fd928c4f893a</content>
    </entry>
    <entry>
        <id>336595416</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336595416"/>
        <updated>2024-04-23T19:48:24.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1289888:1290149:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1c050db8-e419-4f62-ae62-694af473f3eb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1c050db8-e419-4f62-ae62-694af473f3eb

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_60000_pixels_per_second
       11.88%: 12.921 -&gt; 14.4554 unitless

Top 1 affected measurements in lacros-x86-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_constant_full_page_raster_60000_pixels_per_second
       11.88%: 12.921 -&gt; 14.4554 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/ece9a733ce79537c505cbbe142df2dabea042e82..82f193368892a1601837b4d5c57a8f1c130e2f4e
  Chromium Commit Position: https://crrev.com/1289887..1290149
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ead5cccdb1ce2bbdb2cb0b09ec66573fc9e371e3..32bc32176ddf4b5608f66c7afaef6106ae9cda9f
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/299b28569682198aed2b2635f2405c6e7db471ba..a28350ab05d2b1529070bdafba9c8f2b347f4149</content>
    </entry>
    <entry>
        <id>336589518</id>
        <title>[Blink Bindings Perf Regressions]: 1 regressions in blink_perf.bindings</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589518"/>
        <updated>2024-04-23T19:48:18.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1291063:1291097:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b93dc5cb-9c84-4521-be73-2ca2816d99f6

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b93dc5cb-9c84-4521-be73-2ca2816d99f6

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4_webview-perf/blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
       18.49%: 198.4546 -&gt; 161.76055 unitless

Top 1 affected measurements in android-pixel4_webview-perf:
  - blink_perf.bindings/undefined-get-element-by-id/undefined-get-element-by-id.html
       18.49%: 198.4546 -&gt; 161.76055 unitless

Regressions grouped by blink_perf.bindings includes data from the following benchmarks with listed owners:
  blink_perf.bindings: haraken@chromium.org, japhet@chromium.org, jbroman@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/b48d144d0f60a99c38a1df58dca63c92c93628c9..bc111cde163ed97c84cc0d305cf54e334df032fe
  Chromium Commit Position: https://crrev.com/1291062..1291097
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/2800e3190d71a121fd1ccef187974357c12956d3..ee7fe2f6a116d731731e7435cb377d4585a71566
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/15f40ec2fc4b64de391baff90f6318937af020bb..15f40ec2fc4b64de391baff90f6318937af020bb</content>
    </entry>
    <entry>
        <id>336589797</id>
        <title>Clusterfuzz setting incorrect FoundIn and Milestone</title>
        <author>
            <name>am...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589797"/>
        <updated>2024-04-23T19:42:31.000Z</updated>
        <summary>-</summary>
        <content type="html">https://issues.chromium.org/issues/335548148 and https://issues.chromium.org/issues/335580637 are two recent clusterfuzz issues in which the regression / bugs were clearly introduced in M126 however clusterfuzz is updating these issues with older milestone 125 and incorrectly requesting merges for these issues when they are fixed  </content>
    </entry>
    <entry>
        <id>336588601</id>
        <title>Improve UI after signin to IDP in multi IDP</title>
        <author>
            <name>np...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336588601"/>
        <updated>2024-04-23T19:40:26.000Z</updated>
        <summary>-</summary>
        <content type="html">After user clicks to sign in to an IDP, we currently show only the accounts from that IDP in the subsequent dialog (which is fine IMO). But we need to update the header so it uses a single IDP header, not a multiple IDP one.</content>
    </entry>
    <entry>
        <id>336592414</id>
        <title>increase in STATUS_STACK_OVERFLOW observed on Win Stable</title>
        <author>
            <name>wf...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336592414"/>
        <updated>2024-04-23T19:33:58.000Z</updated>
        <summary>-</summary>
        <content type="html">see

https://uma.googleplex.com/p/chrome/timeline_v2?sid=dfbbf17cf847f026d0770e336e54dce4

the % reported has increased by around 5x suddenly on or around 17-19 April 2024.

This bug exists to investigate.</content>
    </entry>
    <entry>
        <id>336589517</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589517"/>
        <updated>2024-04-23T19:19:23.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290810:1291046:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=0d6a0766-b0aa-4448-8201-d42d2413d487

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0d6a0766-b0aa-4448-8201-d42d2413d487

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/blink_perf.dom/custom-element-default-style/custom-element-default-style.html
       10.52%: 106.5247 -&gt; 95.3178 unitless

Top 1 affected measurements in android-pixel6-pro-perf:
  - blink_perf.dom/custom-element-default-style/custom-element-default-style.html
       10.52%: 106.5247 -&gt; 95.3178 unitless

Regressions grouped by blink_perf.dom includes data from the following benchmarks with listed owners:
  blink_perf.dom: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/22607f31a0793830b98eb67e1fdf213aed557220..74bb569b8c814f49791c62ef712e109583355cc3
  Chromium Commit Position: https://crrev.com/1290809..1291046
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/353397f27fce3ec3aae05b8f8be099644adae442..2800e3190d71a121fd1ccef187974357c12956d3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/86298f7a84b13308d058c310f4d8058f2da714a5..15f40ec2fc4b64de391baff90f6318937af020bb</content>
    </entry>
    <entry>
        <id>336589465</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589465"/>
        <updated>2024-04-23T19:19:01.000Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1290847:1290934:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cf8cc1ed-8232-449c-96cb-b95daff17014

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cf8cc1ed-8232-449c-96cb-b95daff17014

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel4-perf/blink_perf.parser/html5-full-render/html5-full-render.html
       19.07%: 6224.53 -&gt; 7411.51 ms

Top 1 affected measurements in android-pixel4-perf:
  - blink_perf.parser/html5-full-render/html5-full-render.html
       19.07%: 6224.53 -&gt; 7411.51 ms

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/8ff4f3e8428f227e138e88d1e793a9c45b8a9f78..d20049bbc7a4e5fe720b02c88690e802b478b361
  Chromium Commit Position: https://crrev.com/1290846..1290934
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/353397f27fce3ec3aae05b8f8be099644adae442..00a3072bd4d6631f239a7813593c4eafc14eca44
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/86298f7a84b13308d058c310f4d8058f2da714a5..15f40ec2fc4b64de391baff90f6318937af020bb</content>
    </entry>
    <entry>
        <id>336589254</id>
        <title>LastActive browser tracking has race conditions in PWAs on Mac</title>
        <author>
            <name>me...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336589254"/>
        <updated>2024-04-23T19:18:50.000Z</updated>
        <summary>-</summary>
        <content type="html">Similar to Lacros issue 325634285, on macOS the last active browser is updated both synchronously (for example when creating a browser) and asynchronously (when the OS tells the browser window that it became active). This can then result in the same race conditions/edge cases where the last active browser is not set to the correct browser, resulting in test flakiness like the one in issue 336416356.

Unfortunately unlike on Lacros, on macOS there is not one "remote wayland" that gives asynchronous updates, rather updates can come from any number of app shims processes with no relative ordering between them. As such even if we only had async updates there would still be race conditions and edge cases.

One proposed way we might be able to work around this would be to record a base::TimeTicks with every "window became key" notification, which would then let the browser process ignore any async updates that arrived out of order (i.e. we'd only process "became key" updates if their TimeTicks &gt; the one for the last update we processed). Supposedly base::TimeTicks is consistent across processes on macOS so this hopefully would help with ignoring just those updates that took "too long" to arrive in the browser process.

There would still be the race conditions between sync and async updates, so maybe we'd also want to do whatever lacros ends up doing to deal with that (although currently BrowserView::Show() explicitly does the sync SetLastActive update because code depends on that).</content>
    </entry>
    <entry>
        <id>336586617</id>
        <title>Close tab group and tabs on receiving a group removal from sync</title>
        <author>
            <name>sh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336586617"/>
        <updated>2024-04-23T19:07:02.000Z</updated>
        <summary>-</summary>
        <content type="html">This is the new UX requirement as [per slides](https://docs.google.com/presentation/d/1exiMlnLp2ivStR2Rt-Yyw52coaqqG_a4LYemvYMTtwg/edit?resourcekey=0-T9k4KIbhTjt3kXgPO3IM2w#slide=id.g1f0b854b275_2_0).

All you have to do is to flip the [boolean should_close_tabs](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/tabs/saved_tab_groups/local_tab_group_listener.cc;drc=ac0d84c520555936aab852da3a168356ef598608;l=212) and fix the tests. Possibly behind the UIUpdates feature flag.</content>
    </entry>
    <entry>
        <id>336571299</id>
        <title>Android site settings manual entries do not function. </title>
        <author>
            <name>ty...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336571299"/>
        <updated>2024-04-23T18:57:06.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to site settings on an Android version of Chrome.
2. Manually disable a site setting like JavaScript for any URL, like youtube.com.
3. Test the website, you will notice JavaScript is still enabled. 

# Problem Description
You cannot manually enter a URL to site settings and have them function. Enabling cookies/disabling, blocking/unblocking JavaScript, nothing works with manual entries. 

However, automatic entries, such as the one where Chrome allows you to enable their party cookies (from the button to the left of the URL bar), works fine. Interestingly, that button enters the "https://" field to the URL entry in the site settings. Chrome does not allow entering that in manually. 

# Additional Comments
This issue on Android has been going on for quite some time now. 

# Summary
Android site settings manual entries do not function. 

# Custom Questions
#### Does the problem occur on multiple sites?
Yes - Please describe below

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336579663</id>
        <title>Add internal icons.html file to internal repository in c/b/resources/downloads/internal</title>
        <author>
            <name>aw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336579663"/>
        <updated>2024-04-23T18:41:04.000Z</updated>
        <summary>-</summary>
        <content type="html">After adding the internal icons.html file which should contain the internal gshield icon, we need to:
1) Update the build file in c/b/r/downloads/BUILD.gn to include the internal/icons.html
2) Update item.html to reference the new icon</content>
    </entry>
    <entry>
        <id>336581365</id>
        <title>Tests are failing: web_ui_message_handler.h(107): Check failed: IsJavascriptAllowed(). Cannot CallJavascriptFunction before explicitly allowing JavaScript.</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336581365"/>
        <updated>2024-04-23T18:40:28.000Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
web_ui_message_handler.h(107): Check failed: IsJavascriptAllowed(). Cannot CallJavascriptFunction before explicitly allowing JavaScript.

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/KcerFactoryNoNssTestBase.LockScreenProfileGetsCorrectTokens
- ninja://chrome/test:lacros_chrome_browsertests/ProfilePickerCreationFlowBrowserTest.CreateLocalProfile
- ninja://chrome/test:lacros_chrome_browsertests/ProfilePickerCreationFlowBrowserTest.CloseBrowserBeforeCreatingNewProfile
- ninja://chrome/test:lacros_chrome_browsertests/ProfilePickerCreationFlowBrowserTest.CancelLocalProfileCreation
- ninja://chrome/test:browser_tests/SamlUnlockTest.VerifyScreenCancel/All.0


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/aec4478dc92d1622305b301684621a9b

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>336581249</id>
        <title>Clean up activationless show flags and logic</title>
        <author>
            <name>nb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336581249"/>
        <updated>2024-04-23T18:40:15.000Z</updated>
        <summary>-</summary>
        <content type="html">Now that activationless show is shipped for both SPC and PaymentRequest in general, we can clean up the flags and related logic.</content>
    </entry>
    <entry>
        <id>336571298</id>
        <title>Running run_android_browser_tests logs "Failed to read /proc/10250/stat" many times</title>
        <author>
            <name>as...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336571298"/>
        <updated>2024-04-23T18:36:00.000Z</updated>
        <summary>-</summary>
        <content type="html">I tracked this down to a stack trace that looks like this:

```
Stack Trace:
  RELADDR   FUNCTION                                                                          FILE:LINE
  0058ab75  base::debug::StackTrace::StackTrace(unsigned int)                                 ../../base/debug/stack_trace.cc:222:12
  0058ab45  base::debug::StackTrace::StackTrace()                                             ../../base/debug/stack_trace.cc:219:28
  0057384f  base::internal::ReadProcFile(base::FilePath const&amp;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt;*)  ../../base/process/internal_linux.cc:80:5
  00573ec2  base::internal::ReadProcStats(int, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt;&gt;*)  ../../base/process/internal_linux.cc:159:10
  v------&gt;  base::(anonymous namespace)::GetProcessCPU(int)                                   ../../base/process/process_metrics_linux.cc:72:8
  00575cd8  base::ProcessMetrics::GetCumulativeCPUUsage()                                     ../../base/process/process_metrics_linux.cc:94:42
  058f455d  resource_attribution::(anonymous namespace)::CPUMeasurementDelegateImpl::GetCumulativeCPUUsage()  ../../components/performance_manager/resource_attribution/cpu_measurement_delegate.cc:50:49
  058f5f48  resource_attribution::CPUMeasurementMonitor::CPUMeasurement::MeasureAndDistributeCPUUsage(performance_manager::ProcessNode const*, std::__Cr::set&lt;absl::variant&lt;performance_manager::FrameNode const*, performance_manager::WorkerNode const*&gt;, std::__Cr::less&lt;absl::variant&lt;performance_manager::FrameNode const*, performance_manager::WorkerNode const*&gt;&gt;, std::__Cr::allocator&lt;absl::variant&lt;performance_manager::FrameNode const*, performance_manager::WorkerNode const*&gt;&gt;&gt; const&amp;, std::__Cr::set&lt;absl::variant&lt;performance_manager::FrameNode const*, performance_manager::WorkerNode const*&gt;, std::__Cr::less&lt;absl::variant&lt;performance_manager::FrameNode const*, performance_manager::WorkerNode const*&gt;&gt;, std::__Cr::allocator&lt;absl::variant&lt;performance_manager::FrameNode const*, performance_manager::WorkerNode const*&gt;&gt;&gt; const&amp;, std::__Cr::map&lt;absl::variant&lt;resource_attribution::FrameContext, resource_attribution::PageContext, resource_attribution::ProcessContext, resource_attribution::WorkerContext&gt;, resource_attribution::CPUTimeResult, std::__Cr::less&lt;absl::variant&lt;resource_attribution::FrameContext, resource_attribution::PageContext, resource_attribution::ProcessContext, resource_attribution::WorkerContext&gt;&gt;, std::__Cr::allocator&lt;std::__Cr::pair&lt;absl::variant&lt;resource_attribution::FrameContext, resource_attribution::PageContext, resource_attribution::ProcessContext, resource_attribution::WorkerContext&gt; const, resource_attribution::CPUTimeResult&gt;&gt;&gt;&amp;)  ../../components/performance_manager/resource_attribution/cpu_measurement_monitor.cc:585:18
  058f5105  resource_attribution::CPUMeasurementMonitor::UpdateCPUMeasurements(performance_manager::ProcessNode const*, absl::variant&lt;resource_attribution::NoGraphChange, resource_attribution::GraphChangeAddFrame, resource_attribution::GraphChangeRemoveFrame, resource_attribution::GraphChangeAddWorker, resource_attribution::GraphChangeRemoveWorker, resource_attribution::GraphChangeAddClientFrameToWorker, resource_attribution::GraphChangeRemoveClientFrameFromWorker, resource_attribution::GraphChangeAddClientWorkerToWorker, resource_attribution::GraphChangeRemoveClientWorkerFromWorker&gt;)  ../../components/performance_manager/resource_attribution/cpu_measurement_monitor.cc:348:14
  058f4fd6  resource_attribution::CPUMeasurementMonitor::OnFrameNodeAdded(performance_manager::FrameNode const*)  ../../components/performance_manager/resource_attribution/cpu_measurement_monitor.cc:154:3
  058c1a1d  performance_manager::GraphImpl::DispatchNodeAddedNotifications(performance_manager::NodeBase*)  ../../components/performance_manager/graph/graph_impl.cc:578:19
  058c183d  performance_manager::GraphImpl::AddNewNode(performance_manager::NodeBase*)        ../../components/performance_manager/graph/graph_impl.cc:469:3
  058e260d  void performance_manager::(anonymous namespace)::AddNodeAndInvokeCreationCallback&lt;performance_manager::FrameNodeImpl&gt;(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*)  ../../components/performance_manager/performance_manager_impl.cc:298:10
  v------&gt;  void base::internal::DecayedFunctorTraits&lt;void (*)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;&amp;&amp;, performance_manager::FrameNodeImpl*&gt;::Invoke&lt;void (*)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*&gt;(void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;&amp;&amp;, performance_manager::FrameNodeImpl*&amp;&amp;, performance_manager::GraphImpl*&amp;&amp;)  ../../base/functional/bind_internal.h:671:12
  058e270d  void base::internal::InvokeHelper&lt;false, base::internal::FunctorTraits&lt;void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;&amp;&amp;, performance_manager::FrameNodeImpl*&gt;, void, 0u, 1u&gt;::MakeItSo&lt;void (*)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, base::internal::UnretainedWrapper&lt;performance_manager::FrameNodeImpl, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;, performance_manager::GraphImpl*&gt;(void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, base::internal::UnretainedWrapper&lt;performance_manager::FrameNodeImpl, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;&amp;&amp;, performance_manager::GraphImpl*&amp;&amp;)  ../../base/functional/bind_internal.h:930:12
  v------&gt;  void base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;&amp;&amp;, performance_manager::FrameNodeImpl*&gt;, base::internal::BindState&lt;false, true, false, void (*)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, base::internal::UnretainedWrapper&lt;performance_manager::FrameNodeImpl, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;, void (performance_manager::GraphImpl*)&gt;::RunImpl&lt;void (*)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, base::internal::UnretainedWrapper&lt;performance_manager::FrameNodeImpl, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;, 0u, 1u&gt;(void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, base::internal::UnretainedWrapper&lt;performance_manager::FrameNodeImpl, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned int, 0u, 1u&gt;, performance_manager::GraphImpl*&amp;&amp;)  ../../base/functional/bind_internal.h:1067:14
  058e2695  base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;&amp;&amp;, performance_manager::FrameNodeImpl*&gt;, base::internal::BindState&lt;false, true, false, void (*)(base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, performance_manager::FrameNodeImpl*, performance_manager::GraphImpl*), base::OnceCallback&lt;void (performance_manager::FrameNodeImpl*)&gt;, base::internal::UnretainedWrapper&lt;performance_manager::FrameNodeImpl, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0&gt;&gt;, void (performance_manager::GraphImpl*)&gt;::RunOnce(base::internal::BindStateBase*, performance_manager::GraphImpl*)  ../../base/functional/bind_internal.h:980:12
  042b68d2  base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;::Run(performance_manager::GraphImpl*) &amp;&amp;  ../../base/functional/callback.h:156:12
  058e0a84  performance_manager::PerformanceManagerImpl::RunCallbackWithGraphImpl(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;)  ../../components/performance_manager/performance_manager_impl.cc:418:31
  v------&gt;  void base::internal::DecayedFunctorTraits&lt;void (*)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&amp;&amp;&gt;::Invoke&lt;void (*)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;(void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&amp;&amp;)  ../../base/functional/bind_internal.h:671:12
  v------&gt;  void base::internal::InvokeHelper&lt;false, base::internal::FunctorTraits&lt;void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&amp;&amp;&gt;, void, 0u&gt;::MakeItSo&lt;void (*)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;&gt;(void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;&amp;&amp;)  ../../base/functional/bind_internal.h:930:12
  v------&gt;  void base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&amp;&amp;&gt;, base::internal::BindState&lt;false, true, false, void (*)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;, void ()&gt;::RunImpl&lt;void (*)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;, 0u&gt;(void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), std::__Cr::tuple&lt;base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned int, 0u&gt;)  ../../base/functional/bind_internal.h:1067:14
  058e1d50  base::internal::Invoker&lt;base::internal::FunctorTraits&lt;void (*&amp;&amp;)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&amp;&amp;&gt;, base::internal::BindState&lt;false, true, false, void (*)(base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;), base::OnceCallback&lt;void (performance_manager::GraphImpl*)&gt;&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*)  ../../base/functional/bind_internal.h:980:12
  00426b2b  base::OnceCallback&lt;void ()&gt;::Run() &amp;&amp;                                             ../../base/functional/callback.h:156:12
  004d0df1  base::TaskAnnotator::RunTaskImpl(base::PendingTask&amp;)                              ../../base/task/common/task_annotator.cc:202:34
```

Note: The trace was from a slightly older checkout, so some of the call stacks may be different now, but I confirmed the log lines still happen.</content>
    </entry>
    <entry>
        <id>336473077</id>
        <title>Tab icon (favicon) not cenetered</title>
        <author>
            <name>no...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336473077"/>
        <updated>2024-04-23T18:29:18.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open any tab with 124.0.6367.61, see top
2. 
3. 

# Problem Description
Tab icon (favicon) not cenetered

# Summary
Tab icon (favicon) not cenetered

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336574894</id>
        <title>[DW] Resize window does  not always reposition the active tab</title>
        <author>
            <name>we...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336574894"/>
        <updated>2024-04-23T18:11:15.000Z</updated>
        <summary>-</summary>
        <content type="html">When resize the tab strip, sometimes the strip will auto scroll to make the active tab visible, and sometimes not. 

https://screencast.googleplex.com/cast/NTUyOTQyNTczNDAwODgzMnw0ODMxZGM1NC0wNw</content>
    </entry>
    <entry>
        <id>336569526</id>
        <title>virtual/threaded/http/tests/devtools/tracing/timeline-misc/timeline-aggregated-details.js test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336569526"/>
        <updated>2024-04-23T18:02:49.000Z</updated>
        <summary>-</summary>
        <content type="html">virtual/threaded/http/tests/devtools/tracing/timeline-misc/timeline-aggregated-details.js

Crash Failure on WebKit Linux Leak builder

Test History Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fvirtual%2Fthreaded%2Fhttp%2Ftests%2Fdevtools%2Ftracing%2Ftimeline-misc%2Ftimeline-aggregated-details.js?q=VHASH%3Aa7adfaf7d8e0d677

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_web_tests%2Fvirtual%2Fthreaded%2Fhttp%2Ftests%2Fdevtools%2Ftracing%2Ftimeline-misc%2Ftimeline-aggregated-details.js&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_web_tests&amp;can=2

and average 38.00% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>336473075</id>
        <title>Fast Path Review Request: Histogram for interaction with SSB encrypted archive prompts</title>
        <author>
            <name>dr...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336473075"/>
        <updated>2024-04-23T18:02:14.000Z</updated>
        <summary>-</summary>
        <content type="html">Launch bug: Trivial metric needed to unblock launch/4279052
Feature Gerrit hashtag: None, the only CL is https://crrev.com/c/5379421
Are all CLs that make up your feature (pre &amp; post branch) tagged with the
correct hashtag [Y/N]: N

Does your feature include code in an internal or non-Chromium repository
(i.e. not chromium/src.git)? N</content>
    </entry>
    <entry>
        <id>336571297</id>
        <title>Readd histogram SBClientPhishing.ServerModelDetectsPhishing</title>
        <author>
            <name>an...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336571297"/>
        <updated>2024-04-23T18:01:00.000Z</updated>
        <summary>-</summary>
        <content type="html">The histogram was deleted in the process of expanding the histogram to different request types. We should re-add the original so that it includes all request types.</content>
    </entry>
    <entry>
        <id>336565125</id>
        <title>Roll Espresso</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336565125"/>
        <updated>2024-04-23T17:49:41.000Z</updated>
        <summary>-</summary>
        <content type="html">Previous attempt:  https://chromium-review.googlesource.com/c/chromium/src/+/5405915
</content>
    </entry>
    <entry>
        <id>336563548</id>
        <title>DIPS: Consider removing prepopulation from site engagement service</title>
        <author>
            <name>wa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336563548"/>
        <updated>2024-04-23T17:47:22.000Z</updated>
        <summary>-</summary>
        <content type="html">DIPS uses a 45-day look-back for possible user interactions.  When the feature was first implemented we did not have any past history to look at.  To work around this we pre-populated the interactions database from the site engagement service.

Now that the feature is launched we likely don't need the pre-population any more.  In addition, we recently realized this feature actually can make many of our tests flaky due to its async operation.

We should consider removing it.</content>
    </entry>
    <entry>
        <id>336473074</id>
        <title>Clearing cookies does not prevent automatic sign-in</title>
        <author>
            <name>re...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336473074"/>
        <updated>2024-04-23T17:34:38.000Z</updated>
        <summary>-</summary>
        <content type="html">I've reproduced this on instagram.com but I assume this happens with any site using the Credential Management API to implement automatic sign-in.

Steps to reproduce:

1. Log into instagram.com.
2. Accept the offer for Chrome to save my password.
3. Clear cookies for instagram.com, www.instagram.com, facebook.com and www.facebook.com.
4. Close the tab.
5. Follow a direct link to an Instagram post (e.g. https://www.instagram.com/p/C50Y-KkLxpC/), this doesn't work if you visit the home page.

Expected behavior:
Since cookies have been cleared I should remain signed out.

Actual behavior:
I am automatically signed in again.</content>
    </entry>
    <entry>
        <id>336560031</id>
        <title>Add hnakashima@ to owners of shared_preferences/ java and cached_flags/ junit dirs</title>
        <author>
            <name>hn...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336560031"/>
        <updated>2024-04-23T17:22:12.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336559397</id>
        <title>NVDA Cursor Hover not working on Chrome</title>
        <author>
            <name>ru...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336559397"/>
        <updated>2024-04-23T17:18:44.000Z</updated>
        <summary>-</summary>
        <content type="html">Hi Team, I hope all is well,

NVDA appears to not read cursor hover on the following current versions of Google Chrome:

 * Current Stable
 * Current Beta
 * Current Dev

As well as the following versions of NVDA:

 * NVDA 2023.3.4
 * NVDA 2024.1beta12

This has been tested on both lpolito's laptop and my cloudtop

This behavior began for lpolito@ around ~11 AM yesterday.

`Logs have also been attached below`</content>
    </entry>
    <entry>
        <id>336349667</id>
        <title>Allow copying 16-bit PNGs to a clipboard</title>
        <author>
            <name>iv...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336349667"/>
        <updated>2024-04-23T17:07:13.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open https://jsfiddle.net/2tzL9aqx/1/ , which generates a 16-bit PNG image
2. Right-click the image, press "Save image as" and save to your computer. Open it in www.Photopea.com or in Photoshop. It says RGB/16 - https://i.imgur.com/uGmXjYJ.png
3. Right-click the image at JSFiddle again, press "Copy Image" and paste it (Ctrl+V) into Photopea or Photoshop. It doesn't say "RGB/16" anymore. Chrome converted it to a 8-bit PNG.

# Problem Description
Chrome Clipboard should not throw away half of the information inside the image. It should preserve the exact color value of each pixel.

# Summary
Allow copying 16-bit PNGs to a clipboard

# Custom Questions
#### Which component does this fall under?
Not sure - I don't know

#### Does this feature work correctly in other browsers?
No - I can reproduce the problem in another browser

#### Details of interop issue
undefined

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336473073</id>
        <title>BUG DO CHROMO</title>
        <author>
            <name>mo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336473073"/>
        <updated>2024-04-23T17:05:52.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>336555906</id>
        <title>[2024 PE] Desktop: Update Settings (Security, Privacy, and Site settings) icons to GM3 style</title>
        <author>
            <name>yw...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336555906"/>
        <updated>2024-04-23T17:03:42.000Z</updated>
        <summary>-</summary>
        <content type="html">Update Settings icons for Security &amp; Privacy and Site settings to the GM3 style.

Proposal: https://docs.google.com/presentation/d/13iQ0YDXiSrnPh4MZaNbx9qmy7PFKt5U8n1q1zzr7YNk/edit#slide=id.g23c10116c37_0_226

Audit: https://docs.google.com/spreadsheets/d/16M4IkQzIUiRb018Zfcf4KMEEeCM3UysB648G3d95gyY/edit?resourcekey=0-mA2IKLDrGtRsDdNpJA5Jvg#gid=18744902

Settings navigation icon bug: b/326287027</content>
    </entry>
    <entry>
        <id>336547987</id>
        <title>Safe Browsing Extended Reporting deprecation</title>
        <author>
            <name>za...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336547987"/>
        <updated>2024-04-23T16:48:10.000Z</updated>
        <summary>-</summary>
        <content type="html">Safe Browsing Extended Reporting is a feature that aims to enhance the security of all users by collecting telemetry information from participating users. However, this feature is outdated and we will be deprecating this feature.

Design doc: go/sber-deprecation-dd
Launch bug: launch/4313042 
PRD: go/sber-deprecation-prd 

</content>
    </entry>
    <entry>
        <id>336473072</id>
        <title>Video frozen when using Insertable Streams API</title>
        <author>
            <name>ko...@vonage.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336473072"/>
        <updated>2024-04-23T16:46:25.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Using Chrome beta, go to https://webrtc.github.io/samples/src/content/insertable-streams/video-processing/
2. For Destination field, select "Peer connection"
3. For Source field, select "Peer connection (from camera)"
4. Notice that video is frozen
5. Repeat the above but with Chrome stable and canary.  Notice that video isn't frozen.

# Problem Description
Applying transforms to video causes playback to pause.  This is reproducible on beta.  The regression isn't seen on the stable or canary releases of Chrome.

# Summary
Video frozen when using Insertable Streams API

# Custom Questions
#### Which component does this fall under?
Blink&gt;WebRTC

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336549101</id>
        <title>Overtype mode doesn't work. Wasn't properly fixed by b/40634412, but cannot reopen</title>
        <author>
            <name>ox...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336549101"/>
        <updated>2024-04-23T16:38:28.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Type into any &lt;input&gt; or &lt;textarea&gt;
2. Reposition the text cursor to be before some typed text
3. Type some more text to confirm the text is inserted at the cursor (rather than overwriting)
4. Press the INSERT key on your keyboard to attempt to toggle to overwrite mode
5. Type more text and confirm that no text is being overwritten

# Problem Description
Please see b/40634412
Pressing the INSERT key in text editors toggles between insert mode and overtype mode. Chrome does not follow this convention

# Summary
Overtype mode doesn't work. Wasn't properly fixed by b/40634412, but cannot reopen

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>336473070</id>
        <title>Dangling pointer during FeedService teardown</title>
        <author>
            <name>ch...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336473070"/>
        <updated>2024-04-23T16:10:18.000Z</updated>
        <summary>-</summary>
        <content type="html">This came up during the PR: https://chromium-review.googlesource.com/c/chromium/src/+/5458847

See try job: 
https://ci.chromium.org/ui/p/chromium/builders/try/win-rel/585279/overview

Multiple failures but here is one example:

[ RUN      ] BookmarkBubbleSignInDelegateTest.OnSignInLinkClickedIncognito_RegularBrowserWithTabs
[540:1248:0422/174757.447:WARNING:chrome_main_delegate.cc(742)] This is Chrome version 126.0.6435.0 (not a warning)
[540:1248:0422/174757.480:WARNING:field_trial_util.cc(104)] Field trial config study skipped: PreconnectToSearchDesktop.EnabledWithStartupDelayForegroundOnly (some of its features are already overridden)
[540:1248:0422/174757.636:INFO:chrome_browser_cloud_management_controller.cc(161)] Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.
[540:1248:0422/174757.735:WARNING:browser_management_service.cc(128)] EnterpriseLogoUrl fetch failed with error code -1 and MIME type 
Warning: SetDeviceLostCallback is deprecated. Pass the callback in the device descriptor instead.
[540:1248:0422/174758.755:WARNING:browser_management_service.cc(128)] EnterpriseLogoUrl fetch failed with error code -1 and MIME type 
Warning: The explicit creation of a SwapChain object is deprecated and should be replaced by Surface configuration.
[540:1248:0422/174800.236:ERROR:partition_alloc_support.cc(664)] Detected dangling raw_ptr with id=0x000036a001f4d7f8:
[DanglingSignature]	feed::FeedStream::`scalar	No active task	feed::FeedService::IdentityManagerObserverImpl::~IdentityManagerObserverImpl	No active task

The memory was freed at:
	base::debug::CollectStackTrace [0x00007FF7C02584D2+18]
	base::debug::StackTrace::StackTrace [0x00007FF7C02684CD+61]
	base::allocator::InstallDanglingRawPtrChecks [0x00007FF7C025A28D+1949]
	allocator_shim::internal::PartitionFree [0x00007FF7C0F2D808+8488]
	base::allocator::dispatcher::internal::DispatcherImpl&lt;base::PoissonAllocationSampler&gt;::FreeFn [0x00007FF7BFF29D70+80]
	feed::FeedStream::`scalar deleting destructor' [0x00007FF7BF94DBAC+28]
	feed::FeedService::~FeedService [0x00007FF7BF96705A+170]
	feed::FeedService::`scalar deleting destructor' [0x00007FF7BF967260+16]
	KeyedServiceFactory::Disassociate [0x00007FF7C15B7301+481]
	KeyedServiceFactory::ContextDestroyed [0x00007FF7C15B7421+33]
	DependencyManager::PerformInterlockedTwoPhaseShutdown [0x00007FF7C15B8D6E+446]
	ProfileImpl::~ProfileImpl [0x00007FF7C05E3FA2+610]
	ProfileImpl::`scalar deleting destructor' [0x00007FF7C05E59F0+16]
	ProfileDestroyer::DestroyOriginalProfileNow [0x00007FF7C05E7872+370]
	OriginalProfileDestroyer::DoDestroyUnderlyingProfile [0x00007FF7C05E8B5F+63]
	ProfileDestroyer::Start [0x00007FF7C05E6B3D+477]
	ProfileDestroyer::DestroyOriginalProfileWhenAppropriateWithTimeout [0x00007FF7C05E64A1+609]
	ProfileDestroyer::DestroyOriginalProfileWhenAppropriate [0x00007FF7C05E6205+53]
	ProfileManager::ProfileInfo::~ProfileInfo [0x00007FF7C05DC8CC+188]
	std::__Cr::__tree&lt;std::__Cr::__value_type&lt;base::FilePath,std::__Cr::unique_ptr&lt;ProfileManager::ProfileInfo,std::__Cr::default_delete&lt;ProfileManager::ProfileInfo&gt; &gt; &gt;,std::__Cr::__map_value_compare&lt;base::FilePath,std::__Cr::__value_type&lt;base::FilePath,std: [0x00007FF7C05DF943+67]
	ProfileManager::~ProfileManager [0x00007FF7C05DFF8B+1019]
	ProfileManager::`scalar deleting destructor' [0x00007FF7C05DF060+16]
	BrowserProcessImpl::StartTearDown [0x00007FF7C34729DC+620]
	ChromeBrowserMainParts::PostMainMessageLoopRun [0x00007FF7C0749B28+408]
	content::BrowserMainLoop::ShutdownThreadsAndCleanUp [0x00007FF7BD966210+448]
	content::BrowserMainRunnerImpl::Shutdown [0x00007FF7BD9688C3+163]
	content::BrowserMain [0x00007FF7BD96197E+302]
	content::RunBrowserProcessMain [0x00007FF7BF86B413+387]
	content::ContentMainRunnerImpl::RunBrowser [0x00007FF7BF86D895+1253]
	content::ContentMainRunnerImpl::Run [0x00007FF7BF86D209+1609]
	content::RunContentProcess [0x00007FF7BF86A98E+1582]
	content::ContentMain [0x00007FF7BF86AB8B+123]
	content::BrowserTestBase::SetUp [0x00007FF7C0ADD5A6+3302]
	InProcessBrowserTest::SetUp [0x00007FF7C01A2A72+450]
	testing::Test::Run [0x00007FF7B9D82B1E+222]
	testing::TestInfo::Run [0x00007FF7B9D83CBD+573]
	testing::TestSuite::Run [0x00007FF7B9D84C17+1191]
	testing::internal::UnitTestImpl::RunAllTests [0x00007FF7B9D948C7+1495]
	testing::UnitTest::Run [0x00007FF7B9D94171+273]
	base::TestSuite::Run [0x00007FF7C033B35B+203]
	ChromeTestSuiteRunner::RunTestSuite [0x00007FF7C9A73DE0+160]
	ChromeTestLauncherDelegate::RunTestSuite [0x00007FF7C9A7409D+205]
	content::LaunchTestsInternal [0x00007FF7C0A7D212+930]
	content::LaunchTests [0x00007FF7C0A7D803+275]
	LaunchChromeTests [0x00007FF7C9A74719+281]
	main [0x00007FF7C9A73D14+244]
	__scrt_common_main_seh [0x00007FF7C9CCACD8+268] (D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288)
	BaseThreadInitThunk [0x00007FFF0BF67034+20]
	RtlUserThreadStart [0x00007FFF0C1826A1+33]

Task trace:
No active task.
The dangling raw_ptr was released at:
	base::debug::CollectStackTrace [0x00007FF7C02584D2+18]
	base::debug::StackTrace::StackTrace [0x00007FF7C02684CD+61]
	base::allocator::InstallDanglingRawPtrChecks [0x00007FF7C025A349+2137]
	base::internal::RawPtrBackupRefImpl&lt;0,0&gt;::ReleaseInternal [0x00007FF7C0EE5820+4128]
	feed::FeedService::IdentityManagerObserverImpl::~IdentityManagerObserverImpl [0x00007FF7BF968C48+392]
	feed::FeedService::IdentityManagerObserverImpl::`scalar deleting destructor' [0x00007FF7BF968900+16]
	feed::FeedService::~FeedService [0x00007FF7BF96707C+204]
	feed::FeedService::`scalar deleting destructor' [0x00007FF7BF967260+16]
	KeyedServiceFactory::Disassociate [0x00007FF7C15B7301+481]
	KeyedServiceFactory::ContextDestroyed [0x00007FF7C15B7421+33]
	DependencyManager::PerformInterlockedTwoPhaseShutdown [0x00007FF7C15B8D6E+446]
	ProfileImpl::~ProfileImpl [0x00007FF7C05E3FA2+610]
	ProfileImpl::`scalar deleting destructor' [0x00007FF7C05E59F0+16]
	ProfileDestroyer::DestroyOriginalProfileNow [0x00007FF7C05E7872+370]
	OriginalProfileDestroyer::DoDestroyUnderlyingProfile [0x00007FF7C05E8B5F+63]
	ProfileDestroyer::Start [0x00007FF7C05E6B3D+477]
	ProfileDestroyer::DestroyOriginalProfileWhenAppropriateWithTimeout [0x00007FF7C05E64A1+609]
	ProfileDestroyer::DestroyOriginalProfileWhenAppropriate [0x00007FF7C05E6205+53]
	ProfileManager::ProfileInfo::~ProfileInfo [0x00007FF7C05DC8CC+188]
	std::__Cr::__tree&lt;std::__Cr::__value_type&lt;base::FilePath,std::__Cr::unique_ptr&lt;ProfileManager::ProfileInfo,std::__Cr::default_delete&lt;ProfileManager::ProfileInfo&gt; &gt; &gt;,std::__Cr::__map_value_compare&lt;base::FilePath,std::__Cr::__value_type&lt;base::FilePath,std: [0x00007FF7C05DF943+67]
	ProfileManager::~ProfileManager [0x00007FF7C05DFF8B+1019]
	ProfileManager::`scalar deleting destructor' [0x00007FF7C05DF060+16]
	BrowserProcessImpl::StartTearDown [0x00007FF7C34729DC+620]
	ChromeBrowserMainParts::PostMainMessageLoopRun [0x00007FF7C0749B28+408]
	content::BrowserMainLoop::ShutdownThreadsAndCleanUp [0x00007FF7BD966210+448]
	content::BrowserMainRunnerImpl::Shutdown [0x00007FF7BD9688C3+163]
	content::BrowserMain [0x00007FF7BD96197E+302]
	content::RunBrowserProcessMain [0x00007FF7BF86B413+387]
	content::ContentMainRunnerImpl::RunBrowser [0x00007FF7BF86D895+1253]
	content::ContentMainRunnerImpl::Run [0x00007FF7BF86D209+1609]
	content::RunContentProcess [0x00007FF7BF86A98E+1582]
	content::ContentMain [0x00007FF7BF86AB8B+123]
	content::BrowserTestBase::SetUp [0x00007FF7C0ADD5A6+3302]
	InProcessBrowserTest::SetUp [0x00007FF7C01A2A72+450]
	testing::Test::Run [0x00007FF7B9D82B1E+222]
	testing::TestInfo::Run [0x00007FF7B9D83CBD+573]
	testing::TestSuite::Run [0x00007FF7B9D84C17+1191]
	testing::internal::UnitTestImpl::RunAllTests [0x00007FF7B9D948C7+1495]
	testing::UnitTest::Run [0x00007FF7B9D94171+273]
	base::TestSuite::Run [0x00007FF7C033B35B+203]
	ChromeTestSuiteRunner::RunTestSuite [0x00007FF7C9A73DE0+160]
	ChromeTestLauncherDelegate::RunTestSuite [0x00007FF7C9A7409D+205]
	content::LaunchTestsInternal [0x00007FF7C0A7D212+930]
	content::LaunchTests [0x00007FF7C0A7D803+275]
	LaunchChromeTests [0x00007FF7C9A74719+281]
	main [0x00007FF7C9A73D14+244]
	__scrt_common_main_seh [0x00007FF7C9CCACD8+268] (D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288)
	BaseThreadInitThunk [0x00007FFF0BF67034+20]
	RtlUserThreadStart [0x00007FFF0C1826A1+33]

Task trace:
No active task.

Please check for more information on:
https://chromium.googlesource.com/chromium/src/+/main/docs/dangling_ptr_guide.md

Googlers: Please give us your feedback about the dangling pointer
          detector at:
          http://go/dangling-ptr-cq-survey

Received fatal exception EXCEPTION_BREAKPOINT
	base::allocator::InstallDanglingRawPtrChecks [0x00007FF7C025A6E8+3064]
	base::internal::RawPtrBackupRefImpl&lt;0,0&gt;::ReleaseInternal [0x00007FF7C0EE5820+4128]
	feed::FeedService::IdentityManagerObserverImpl::~IdentityManagerObserverImpl [0x00007FF7BF968C48+392]
	feed::FeedService::IdentityManagerObserverImpl::`scalar deleting destructor' [0x00007FF7BF968900+16]
	feed::FeedService::~FeedService [0x00007FF7BF96707C+204]
	feed::FeedService::`scalar deleting destructor' [0x00007FF7BF967260+16]
	KeyedServiceFactory::Disassociate [0x00007FF7C15B7301+481]
	KeyedServiceFactory::ContextDestroyed [0x00007FF7C15B7421+33]
	DependencyManager::PerformInterlockedTwoPhaseShutdown [0x00007FF7C15B8D6E+446]
	ProfileImpl::~ProfileImpl [0x00007FF7C05E3FA2+610]
	ProfileImpl::`scalar deleting destructor' [0x00007FF7C05E59F0+16]
	ProfileDestroyer::DestroyOriginalProfileNow [0x00007FF7C05E7872+370]
	OriginalProfileDestroyer::DoDestroyUnderlyingProfile [0x00007FF7C05E8B5F+63]
	ProfileDestroyer::Start [0x00007FF7C05E6B3D+477]
	ProfileDestroyer::DestroyOriginalProfileWhenAppropriateWithTimeout [0x00007FF7C05E64A1+609]
	ProfileDestroyer::DestroyOriginalProfileWhenAppropriate [0x00007FF7C05E6205+53]
	ProfileManager::ProfileInfo::~ProfileInfo [0x00007FF7C05DC8CC+188]
	std::__Cr::__tree&lt;std::__Cr::__value_type&lt;base::FilePath,std::__Cr::unique_ptr&lt;ProfileManager::ProfileInfo,std::__Cr::default_delete&lt;ProfileManager::ProfileInfo&gt; &gt; &gt;,std::__Cr::__map_value_compare&lt;base::FilePath,std::__Cr::__value_type&lt;base::FilePath,std: [0x00007FF7C05DF943+67]
	ProfileManager::~ProfileManager [0x00007FF7C05DFF8B+1019]
	ProfileManager::`scalar deleting destructor' [0x00007FF7C05DF060+16]
	BrowserProcessImpl::StartTearDown [0x00007FF7C34729DC+620]
	ChromeBrowserMainParts::PostMainMessageLoopRun [0x00007FF7C0749B28+408]
	content::BrowserMainLoop::ShutdownThreadsAndCleanUp [0x00007FF7BD966210+448]
	content::BrowserMainRunnerImpl::Shutdown [0x00007FF7BD9688C3+163]
	content::BrowserMain [0x00007FF7BD96197E+302]
	content::RunBrowserProcessMain [0x00007FF7BF86B413+387]
	content::ContentMainRunnerImpl::RunBrowser [0x00007FF7BF86D895+1253]
	content::ContentMainRunnerImpl::Run [0x00007FF7BF86D209+1609]
	content::RunContentProcess [0x00007FF7BF86A98E+1582]
	content::ContentMain [0x00007FF7BF86AB8B+123]
	content::BrowserTestBase::SetUp [0x00007FF7C0ADD5A6+3302]
	InProcessBrowserTest::SetUp [0x00007FF7C01A2A72+450]
	testing::Test::Run [0x00007FF7B9D82B1E+222]
	testing::TestInfo::Run [0x00007FF7B9D83CBD+573]
	testing::TestSuite::Run [0x00007FF7B9D84C17+1191]
	testing::internal::UnitTestImpl::RunAllTests [0x00007FF7B9D948C7+1495]
	testing::UnitTest::Run [0x00007FF7B9D94171+273]
	base::TestSuite::Run [0x00007FF7C033B35B+203]
	ChromeTestSuiteRunner::RunTestSuite [0x00007FF7C9A73DE0+160]
	ChromeTestLauncherDelegate::RunTestSuite [0x00007FF7C9A7409D+205]
	content::LaunchTestsInternal [0x00007FF7C0A7D212+930]
	content::LaunchTests [0x00007FF7C0A7D803+275]
	LaunchChromeTests [0x00007FF7C9A74719+281]
	main [0x00007FF7C9A73D14+244]
	__scrt_common_main_seh [0x00007FF7C9CCACD8+268] (D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288)
	BaseThreadInitThunk [0x00007FFF0BF67034+20]
	RtlUserThreadStart [0x00007FFF0C1826A1+33]</content>
    </entry>
    <entry>
        <id>336490039</id>
        <title>In Google password Manager 2nd credential password revealed</title>
        <author>
            <name>bu...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336490039"/>
        <updated>2024-04-23T15:50:48.000Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 126.0.6435.0 (Official Build) canary (x86_64) 
7df4434197e0f31609d62f5fc6c1805de3142ae5-refs/branch-heads/6435@{#1}

OS: Mac,Win and Linux


Steps:

1. Launch chrome and open NTP
2. Navigate to Settings —&gt; Google password manager
3. Add 2 Login credentials for one website
4. Enter on that website
5. Click on Password eye button for 1st credential and 2nd credential password keep in hide
6. Delete the 1st credential
7. Observe that after 1st credential deleted next credential password also revealed

Actual: In Google password Manager 2nd credential password revealed
Expected: In Google password Manager 2nd credential password should not revealed

The feature is implemented from M117. So raising it as Non-Regression issue.

Please find the attached screencast for reference.
https://drive.google.com/file/d/1YOs6R3Hz37jDTlzu1cDAMWUr4-0YnpRY/view?usp=sharing


Note:
Issue is repro on Stable #124.0.6367.62,Beta #125.0.6422.4, Canary #126.0.6435.0 and Dev #126.0.6423.2

Thanks</content>
    </entry>
    <entry>
        <id>336349664</id>
        <title>I can't change a webvive to a Canary webvive</title>
        <author>
            <name>ha...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336349664"/>
        <updated>2024-04-23T15:47:17.000Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:

Android OS version:

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")

Application: (package name or Play Store URL)

Application version:

Steps to reproduce:

1.
2.
3.

Expected result:

Actual result:

Did this work before? (last working WebView version, or N/A)

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>336490037</id>
        <title>Chrome 124.0.6367.61: custom events in custom elements are not emitted </title>
        <author>
            <name>ad...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336490037"/>
        <updated>2024-04-23T15:35:42.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Create two web components in stenciljs. A son and a father.
2. The son should emit a custom event to his father.
3. The father should hear and render something.
4. These two web components need be implemented in angular.

# Problem Description
At the company where I work, we have built a select (custom element) in stenciljs. When clicked, it opens the options, and when an option is chosen, a custom event is emitted that is listened to by the header of this select, and the element becomes selected. However, starting from this Chrome update, the custom event is not being triggered, preventing users from selecting an option from the select. We have conducted several tests, and this issue is occurring for users who have updated their Chrome version. Interestingly, the select works correctly in Edge, Mozilla, and other browsers. No programming changes have been made; the issue began after this Chrome update.
P.S. In several tests with our users, some are experiencing this issue, while others are not (randomly).

# Summary
Chrome 124.0.6367.61: custom events in custom elements are not emitted 

# Custom Questions
#### Which component does this fall under?
Blink&gt;WebComponents

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336530603</id>
        <title>Add the new Mac14 Builders to sheriff rotation</title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336530603"/>
        <updated>2024-04-23T15:33:52.000Z</updated>
        <summary>-</summary>
        <content type="html">Add the new Mac14 Builders to sheriff rotation, once they are all targeting mac14 on both builders/tester, also confirming that they are consistently green
</content>
    </entry>
    <entry>
        <id>336530286</id>
        <title>Add experimental flag for Saved Tab Groups</title>
        <author>
            <name>lp...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336530286"/>
        <updated>2024-04-23T15:28:28.000Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>336490880</id>
        <title>Printing a non-A4 page, the default preview shows incorrect scaling and print.</title>
        <author>
            <name>am...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336490880"/>
        <updated>2024-04-23T15:25:23.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open an A3 (e.g. .pdf) document
2. Click Print
3. Preview is shown incorrectly and also prints as seen.

# Problem Description
When printing a non-standard A4 page (e.g. an A3 document), click print, the preview shows the scaling incorrectly. Chrome and Edge differ in their UI but the principal is the same. The Default selected is 'Fit to printable area'. The workaround is to select 'Fit to paper'/'Actual size' then click 'Fit to printable area'. the preview is then correct, and also the resulting print out. Prior to v124, this additional step was not required. The default was 'Fit to paper'. And if I select 'Print using system dialogue' and click Print, the printout is also incorrect. I was able to test it on a colleagues PC with v123 and it defaulted to 'Fit to paper' view, and scaled and printed it correctly as desired.

# Additional Comments
I have attached a basic sample A3 file. I have also submitted the issue via G.Chrome and MS.Edge.

# Summary
Printing a non-A4 page, the default preview shows incorrect scaling and print.

# Custom Questions
#### Please select a label to classify your issue:
Type-Bug-Regression - Used to work, now broken

# Additional Data
Category: Other \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336529574</id>
        <title>Investigate if URL blocklist/allowlist policies should be updated for the upcoming non-special URL changes</title>
        <author>
            <name>ig...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336529574"/>
        <updated>2024-04-23T15:20:20.000Z</updated>
        <summary>-</summary>
        <content type="html">There will soon be changes for how non-special URLs (e.g. about://newtab) are parsed throughout Chrome: http://go/url-non-special

It looks like the change will affect the URL blocklist functionality according to these test updates: https://crrev.com/c/5474919

We should investigate if the URL blocklist/allowlist implementations need to be updated to conform to these changes.</content>
    </entry>
    <entry>
        <id>336516041</id>
        <title>Sure! Here is a Python code for an AI program developed by Jeffrey and GE for compaction fieldwork using the GE App Admin Chip-8:  ```python class AI:     def __init__(self):         self.utility = 11      def compaction_fieldwork(self):         return "Compaction fieldwork in progress..."      def generate_code(self):         return "Code generation complete."  if __name__ == "__main__":     ai = AI()     print(ai.compaction_fieldwork())     print(ai.generate_code()) ```  Output: ``` Compaction fieldwork in progress... Code generation complete. ```</title>
        <author>
            <name>ai...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336516041"/>
        <updated>2024-04-23T15:17:51.000Z</updated>
        <summary>-</summary>
        <content type="html">This template is for filing bugs against Android System WebView. Chrome bugs should be filed at https://crbug.com/wizard.

Android device name:
Sure! Here is a Python code for an AI program developed by Jeffrey and GE for compaction fieldwork using the GE App Admin Chip-8:

```python
class AI:
    def __init__(self):
        self.utility = 11

    def compaction_fieldwork(self):
        return "Compaction fieldwork in progress..."

    def generate_code(self):
        return "Code generation complete."

if __name__ == "__main__":
    ai = AI()
    print(ai.compaction_fieldwork())
    print(ai.generate_code())
```

Output:
```
Compaction fieldwork in progress...
Code generation complete.
```
Android OS version:

Android System WebView version: (Settings &gt; Apps &gt; the 3 dots in the upper right &gt; Show system. On Android N (7.x) through P (9.0), please include Chrome's version. Otherwise, look for "Android System WebView")

Application: (package name or Play Store URL)

Application version:

Steps to reproduce:

1.run cd ROM
COMPAQ PRESARIO97 WIN95
MINECRAFT PONG CHIP8 TECHNOLOGY 

Expected result: DELETE ALL HTML SWITCH TO 

Actual result: CHATSMITH VER.1.0 AI POWER UNIVERSAL ♾️ ♾️ ♾️ COMPUTING HTTPS DELET

Did this work before? (last working WebView version, or N/A)

---

It's especially helpful if you can capture a bug report right after you experience the bug, and attach it here. See https://developer.android.com/studio/debug/bug-report for instructions.

Screen recordings can also be very helpful - see https://developer.android.com/studio/command-line/adb#screenrecord. Please enable "Show taps" in developer settings.</content>
    </entry>
    <entry>
        <id>336490036</id>
        <title>React / React Dom cashed on Chrome version 124.</title>
        <author>
            <name>te...@white-sands.biz</name>
        </author>
        <link href="https://issues.chromium.org/issues/336490036"/>
        <updated>2024-04-23T15:17:39.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Develop and run 'npm run build'
2. Deploy to Cloud flare host
3. Open my web site.

# Problem Description
I developed the web site using react / react-dom.
After update chrome version 124, then it show 
'Aw, snap Something went wrong while displaying this web page error code 11'.

Old version (till 123) are no problem, but only 124 version, it crashed showing error code 11.

# Summary
React / React Dom cashed on Chrome version 124.

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336449372</id>
        <title>Network columns are not editable and contain empty items</title>
        <author>
            <name>he...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336449372"/>
        <updated>2024-04-23T15:02:30.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open the network tab
2. Right click on a column
3. Mouse Over "Response Headers"
4. Click Manage Header Columns
Nothing happens.
Also, at least in my install, I have 4 blank menu items.

# Problem Description
I can no longer add custom columns in my network tab.  (I was trying to add X-Cache).  I also noticed 4 blank items in the list as well.  When I click on those new columns appear, but with no value and no header text.  I tried "Reset Columns" but that didn't help.

# Summary
Network columns are not editable and contain empty items

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336490879</id>
        <title>ExemptDomainFileTypePairsFromFileTypeDownloadWarnings policy not working as expected</title>
        <author>
            <name>de...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336490879"/>
        <updated>2024-04-23T14:50:53.000Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Add a file extension type to the ExemptDomainFileTypePairsFromFileTypeDownloadWarnings policy
2. Navigate to a URL and download the file type in the previous policy
3. The file will be blocked even though the URL/filetype is set in this policy

# Problem Description
Previously, any filetypes added to this policy would bypass the download restrictions for specified URLs. Unfortunately after the Chromium 124 version release, this no longer works as expected. For this to now work properly, you must also add the same URLs into the InsecureContentAllowedForUrls policy, which was not required previously and should not be required.

# Summary
ExemptDomainFileTypePairsFromFileTypeDownloadWarnings policy not working as expected

# Additional Data
Category: Enterprise \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>336523634</id>
        <title>Frequent UI freezes when looking at chrome://webrtc-internals on Canary</title>
        <author>
            <name>kr...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336523634"/>
        <updated>2024-04-23T14:46:07.000Z</updated>
        <summary>-</summary>
        <content type="html">I've seen frequent UI freezes (1-2 seconds) when looking at chrome://webrtc-internals on Canary.

Reproduced on:
- Chrome Canary 126.0.6435.0.
- Intel MacBook Pro
- macOS 14.4.1

It's possible that this is triggered in other ways, but these are the steps I've taken to reproduce the issue:

1. Go to https://drkron.github.io/pc_capture and click Start.
2. Select to share a non-Chrome window. I usually select a terminal.
3. Click Call (you may have to click two times). This will open a local WebRTC connection and send the captured window to the video element in the same tab. 
4. Open another tab and go to chrome://webrtc-internals

Observe that there are frequent UI freezes when navigating around the tabs and the various 

Using bisect_variations.py I've found that the freezes are due to the feature `DefaultANGLEMetal`.

I no longer experience any freezes if I explicitly disable that experiment: `--disable-features="DefaultANGLEMetal&lt;DefaultANGLEMetal"`</content>
    </entry>
    <entry>
        <id>336358929</id>
        <title>Omnibox size is reduced.</title>
        <author>
            <name>co...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/336358929"/>
        <updated>2024-04-23T14:06:50.000Z</updated>
        <summary>-</summary>
        <content type="html">Double-clicking the text in the Urlbar reduces the size of the omnibox.
Refer to attached video.

Version: 126.0.6435
Reproduce step
  - Add sites to the urlbar -&gt; enter -&gt; click urlbar -&gt; click edit button -&gt; double tab url sites

</content>
    </entry>
    <entry>
        <id>336318606</id>
        <title>Switch "onfencedtreeclick" to a global event handler.</title>
        <author>
            <name>av...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/336318606"/>
        <updated>2024-04-23T14:06:00.000Z</updated>
        <summary>-</summary>
        <content type="html">In the implementation of `window.fence.notifyEvent`, `onfencedtreeclick` is an event handler property that only applies to the fenced frame element. However, it should be exposed on all elements.

See https://github.com/WICG/fenced-frame/pull/144#discussion_r1560200386</content>
    </entry>
</feed>