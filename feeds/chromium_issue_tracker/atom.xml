<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-23T04:10:45.934Z</updated>
    <entry>
        <id>326518634</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326518634"/>
        <updated>2024-02-23T04:10:45.934Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263184:1263441:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1056e751-a0f4-40f3-92fb-d2b6c7d80ccb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1056e751-a0f4-40f3-92fb-d2b6c7d80ccb

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/v8.browsing_desktop-future/GC:duration_avg/browse_news/browse_news_flipboard_2020
       22.47%: 52.403999999999996 -&gt; 64.17949999999999 ms

Top 1 affected measurements in win-11-perf:
  - v8.browsing_desktop-future/GC:duration_avg/browse_news/browse_news_flipboard_2020
       22.47%: 52.403999999999996 -&gt; 64.17949999999999 ms

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: almuthanna@chromium.org, cbruni@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1263183..1263441
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a86e1971579f4165123467fa6ad378e552536b43..142a0614a468d2b4fb29227410c31ea8d0243dbe
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e..fa01e3fdc0570bb70f39d69d6b4815b9cf7bd09d</content>
    </entry>
    <entry>
        <id>326517409</id>
        <title>[Blink DOM]: 1 regressions in blink_perf.events</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326517409"/>
        <updated>2024-02-23T04:04:05.037Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263281:1263441:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=725e96e0-50fb-4702-938f-c674fff74c0e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=725e96e0-50fb-4702-938f-c674fff74c0e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/blink_perf.events/hit-test-lots-of-layers/hit-test-lots-of-layers.html
       56.51%: 0.9894499999999999 -&gt; 0.43035 unitless

Top 1 affected measurements in win-11-perf:
  - blink_perf.events/hit-test-lots-of-layers/hit-test-lots-of-layers.html
       56.51%: 0.9894499999999999 -&gt; 0.43035 unitless

Regressions grouped by blink_perf.events includes data from the following benchmarks with listed owners:
  blink_perf.events: masonf@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1263280..1263441
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/5859813aca9aa810205adde555cfcc4bc27b55cd..142a0614a468d2b4fb29227410c31ea8d0243dbe
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/88a8e44a511425eafb37b89b9af1ef981e1923d9..fa01e3fdc0570bb70f39d69d6b4815b9cf7bd09d</content>
    </entry>
    <entry>
        <id>326503088</id>
        <title>Add web platform tests for RWI</title>
        <author>
            <name>pk...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326503088"/>
        <updated>2024-02-23T03:30:11.982Z</updated>
        <summary>-</summary>
        <content type="html">Add web platform tests for RWI</content>
    </entry>
    <entry>
        <id>326518759</id>
        <title>[Chrome Perf Accessibility Sheriff]: 4 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326518759"/>
        <updated>2024-02-23T03:04:25.510Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264220:1264253:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=780a4d49-4b26-42b5-977b-426c4bfa57a1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=780a4d49-4b26-42b5-977b-426c4bfa57a1

Top 2 regressions (out of 11, with 9 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/RenderAccessibilityImpl::SendPendingAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
       56.78%: 1725.806 -&gt; 2705.7905 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/BrowserAccessibilityManager::OnAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
       24.02%: 244.4835 -&gt; 303.20050000000003 ms

Top 2 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.accessibility/RenderAccessibilityImpl::SendPendingAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
       56.78%: 1725.806 -&gt; 2705.7905 ms
  - blink_perf.accessibility/BrowserAccessibilityManager::OnAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
       24.02%: 244.4835 -&gt; 303.20050000000003 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1264219..1264253
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/c582ec924d4ac7a1b09c604f1cdff508881d311e..c582ec924d4ac7a1b09c604f1cdff508881d311e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e166dec0a9f143140377af113ba66fbf0e052b01..e166dec0a9f143140377af113ba66fbf0e052b01</content>
    </entry>
    <entry>
        <id>326517408</id>
        <title>[Desktop Power Perf Sheriff]: 2 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326517408"/>
        <updated>2024-02-23T03:04:10.868Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262965:1263144:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=25552966-365d-4909-b09b-db82c9b68bf1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=25552966-365d-4909-b09b-db82c9b68bf1

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_qq_2018
       15.10%: 0.283 -&gt; 0.32572500000000004 n%
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_ebay_2018
       12.48%: 0.3725 -&gt; 0.419 n%

Top 2 affected measurements in lacros-x86-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_qq_2018
       15.10%: 0.283 -&gt; 0.32572500000000004 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_ebay_2018
       12.48%: 0.3725 -&gt; 0.419 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/16164f9f0aeabc0de01b8f74a9a6d9fb18699495..bc1a3911712f6a8524a844ac6e23deb5fcc108c6
  Chromium Commit Position: https://crrev.com/1262964..1263219
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a86e1971579f4165123467fa6ad378e552536b43..a86e1971579f4165123467fa6ad378e552536b43
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e..2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e</content>
    </entry>
    <entry>
        <id>326518633</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326518633"/>
        <updated>2024-02-23T03:03:11.963Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262665:1263024:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=48b0e9b3-f826-42d8-9f5e-27b1daefd540

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=48b0e9b3-f826-42d8-9f5e-27b1daefd540

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cwv:largest_contentful_paint_avg/load_media/load_media_facebook_photos_desktop_2020
       12.15%: 1934.5 -&gt; 2169.5 ms

Top 1 affected measurements in lacros-x86-perf:
  - system_health.common_desktop/cwv:largest_contentful_paint_avg/load_media/load_media_facebook_photos_desktop_2020
       12.15%: 1934.5 -&gt; 2169.5 ms

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/876fff49519ead96df07af869e1dae6429419a95..6c6bf4c96e7324177b0fff3d3374bc5c04c7d501
  Chromium Commit Position: https://crrev.com/1262664..1263024
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a86e1971579f4165123467fa6ad378e552536b43..a86e1971579f4165123467fa6ad378e552536b43
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/36d5eec6e1972b39984a574019a9f68685c1ba99..2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e</content>
    </entry>
    <entry>
        <id>326517407</id>
        <title>[Graphics]: 2 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326517407"/>
        <updated>2024-02-23T02:48:33.453Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1262890:1263219:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=7d50134c-7c0d-4b4b-b364-4346a6cf1570

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=7d50134c-7c0d-4b4b-b364-4346a6cf1570

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/css_transitions_triggered_new_element
      160.00%: 2.5 -&gt; 6.5 unitless
  - ChromiumPerf/lacros-x86-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/main_60fps_with_jank_and_delay_impl_60fps
      125.00%: 1.0 -&gt; 2.25 unitless

Top 2 affected measurements in lacros-x86-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/css_transitions_triggered_new_element
      160.00%: 2.5 -&gt; 6.5 unitless
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/main_60fps_with_jank_and_delay_impl_60fps
      125.00%: 1.0 -&gt; 2.25 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/91496b5989a1786a13b079e4e0863e2e378cae65..bc1a3911712f6a8524a844ac6e23deb5fcc108c6
  Chromium Commit Position: https://crrev.com/1262889..1263219
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/a86e1971579f4165123467fa6ad378e552536b43..a86e1971579f4165123467fa6ad378e552536b43
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e..2a3db3131d4d6f4a51831a0c19f5da3ebbd9d92e</content>
    </entry>
    <entry>
        <id>326516472</id>
        <title>lkj</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326516472"/>
        <updated>2024-02-23T02:41:45.546Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326508293</id>
        <title>Authentication ceremony has reverted to interstitial UI in usernameless flows when user has passkey in platform authenticator</title>
        <author>
            <name>bo...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326508293"/>
        <updated>2024-02-23T02:21:57.308Z</updated>
        <summary>-</summary>
        <content type="html">I created a credential at webauthn.io. When using conditional mediation, MakeCredential works as expected: I'm showing the platform CredUI for Windows Hello.

However, if instead I use the 'Authenticate' button (no autofill), I'm presented with the Chromium UI picker enumerating a single credential in Hello. Clicking this option then sends me to the platform CredUI. I expect to no longer see the interstitial these days.

Attaching screenshot of unexpected Chromium UI, device-log for the (expected) autofill case, and device-log for the (unexpected) usernameless case.</content>
    </entry>
    <entry>
        <id>326490753</id>
        <title>Decouple WebUIBubbleWarmUpLevel from bubbles</title>
        <author>
            <name>ke...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326490753"/>
        <updated>2024-02-23T02:12:38.114Z</updated>
        <summary>-</summary>
        <content type="html">[WebUIBubbleWarmUpLevel](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/views/bubble/webui_bubble_manager.h;drc=609b992e806462e3dd5c20b6a1c2d23ac8a6b109;l=37) is a concept that can apply to all WebUI contents, no only bubbles. Move this to `chrome/browser/ui/webui/top_chrome/` and add utility to help computes the levels.</content>
    </entry>
    <entry>
        <id>326512877</id>
        <title>Split GN targets to reduce where it makes sense (mostly by package)</title>
        <author>
            <name>ag...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326512877"/>
        <updated>2024-02-23T02:07:19.337Z</updated>
        <summary>-</summary>
        <content type="html">We mostly have a monolithic `base_java` target, which is a transitive dep of almost every java target. This leads to having to rebuild every target whenever any file in it changes. 

We should split the target where it makes sense. E.g. by java package, or by looking at go/clank-class-graph to see what boundaries would make sense.</content>
    </entry>
    <entry>
        <id>326509123</id>
        <title>Replace libaom use in video_decoder.cc with libgav1</title>
        <author>
            <name>jz...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326509123"/>
        <updated>2024-02-23T01:30:57.956Z</updated>
        <summary>-</summary>
        <content type="html">The motivation behind this is to disable the decoder in libaom to reduce binary size.

[webcodecs/video_decoder.cc](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/webcodecs/video_decoder.cc;l=163;drc=d2b5c17eff35da6ebff8ba20c99688b87e1bc752) uses libaom in  `ParseAv1KeyFrame()`. This is the only use of the decoder as far I can tell now that WebRTC has migrated to dav1d for decoding AV1.

dav1d doesn't offer similar functionality to `aom_codec_peek_stream_info()`, but libgav1's obu parser is already used in media/gpu. Building locally for Linux saved ~230K in the Chrome binary.</content>
    </entry>
    <entry>
        <id>326508291</id>
        <title>Webpage crashes when visiting ndtv.com on Chrome iOS</title>
        <author>
            <name>da...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326508291"/>
        <updated>2024-02-23T01:24:14.268Z</updated>
        <summary>-</summary>
        <content type="html">Latest Chrome iOS (121)
1. Visit ndtv.com
2. Tap one of the articles (for example: https://www.ndtv.com/india-news/in-manipur-killing-fields-farmers-cannot-tend-to-crops-within-gun-range-in-naranseina-bishnupur-district-5108603#pfrom=home-ndtv_topscroll)
3. Tap "Show full article" to expand and keep scrolling up and down.
4. Sad face will show after a while (See attachment 1)


Note:
1. Safari doesn't have this issue
2. When debugging through inspector, there are tons of js errors in the console (See attachment 2)</content>
    </entry>
    <entry>
        <id>326505361</id>
        <title>Network Sandbox Issue :</title>
        <author>
            <name>pl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326505361"/>
        <updated>2024-02-23T01:02:20.536Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version :
OS Version     :
(please obtain full OS version by running 'winver' and supplying complete string e.g. Version 20H2 (OS Build 19042.1237)

Please list any third party software e.g. EDR/DLP installed on the client:

Please enclose the output of chrome://conficts

Please enclose the output of chrome://histograms/#NetworkService.GrantSandboxResult

Please enclose the output of chrome://histograms/#Process.Sandbox.Launch.Error (might be empty)

What steps will reproduce the problem?
(1)
(2)
(3)

Please describe what happens


</content>
    </entry>
    <entry>
        <id>326504187</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326504187"/>
        <updated>2024-02-23T00:55:36.143Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"display-p3\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                              0,0,0                              0,1,0                              1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                        1c 22 f6 ff                        fe fd 51 ff                        7f f8 49 ff ...\n                           act. colors == R,G,B,A: 0.109804,0.133333,0.964706,1.00000 0.996078,0.992157,0.317647,1.00000 0.498039,0.972549,0.286275,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.317647,1.00000 0.894118,0.243137,0.133333,1.00000 0.109804,0.133333,0.964706,1.00000 ...\n            act. normal-ULPs-from-zero ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"display-p3\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/8d0cf78d68951923866f14c5762b8787

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326502532</id>
        <title>[Feature Improvement] for "/build" and "/log" offload perm checking to Milo and Logdog</title>
        <author>
            <name>yu...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326502532"/>
        <updated>2024-02-23T00:43:02.193Z</updated>
        <summary>-</summary>
        <content type="html">Currently, BB always performs permission checks. It requires to add encryptedcookies related configurations. It has two disadvantages:
1. Increased some configuration complexity about adding encryptedcookies for just redirection URLs.
2. For an anonymous user who visits a *private* build via "/build/xxx" or "/log/xxx/...", it needs to sign in twice - one in Buildbucket, the other one in Milo or Logdog.

Potential improvment:
BB doesn't do any permission checks or access to any Datastore entities. 
* For "/build/xxx", blindly redirect to Milo, and let Milo do the perm checking and decide to display LUCI build page or the page that users specified in related Build proto fields.
* For "/log/xxx/...", if we know all log view_url points to LogDog, we can offload the perm checking to LogDog and let it decide whether the user has the read access.</content>
    </entry>
    <entry>
        <id>326501720</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326501720"/>
        <updated>2024-02-23T00:40:32.902Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                             0,0,0                             0,1,0                             1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                       1a 23 ff ff                       fe fd 00 ff                       3f fb 00 ff ...\n                           act. colors == R,G,B,A: 0.101961,0.137255,1.00000,1.00000 0.996078,0.992157,0.00000,1.00000 0.247059,0.984314,0.00000,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.00000,1.00000 0.972549,0.141176,0.00000,1.00000 0.101961,0.137255,1.00000,1.00000 ...\n            act. normal-ULPs-from-zero == R,G,B,A:       ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoFrame\";dstColorSpace=\"srgb\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f28ebd5bae5edd1a0eb695fe66d6c359

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326500831</id>
        <title>When pressing the right mouse button, the first item in the context menu is immediately clicked.</title>
        <author>
            <name>yi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326500831"/>
        <updated>2024-02-23T00:26:44.793Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open some website and click around links
2. Click the right mouse button
3. Without doing anything else, release the right mouse button
4. The first action in the context menu is executed. Usually this is "Back" so the browser navigates back to the last page annoyingly.

# Problem Description
I think this could be a Wayland/Linux specific problem as I've seen a history of such mouse cursor offset problems before.

Version etc:

```

Google Chrome	123.0.6312.4 (Official Build) beta (64-bit) 
Revision	6bbedb653d7f3de24abf06ec522ce79b0a18781b-refs/branch-heads/6312@{#12}
OS	Linux
JavaScript	V8 12.3.219.1
User Agent	Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Command Line	/usr/bin/google-chrome-beta --enable-features=UseOzonePlatform --ozone-platform=wayland --force-dark-mode --password-store=gnome-libsecret --enable-features=VaapiVideoDecoder,VaapiVideoEncoder,TouchpadOverscrollHistoryNavigation --gpu-active-vendor-id=0x8086 --flag-switches-begin --enable-zero-copy --ignore-gpu-blocklist --ozone-platform-hint=wayland --enable-features=VaapiVideoDecoder,VaapiVideoEncoder,TouchpadOverscrollHistoryNavigation,ChromeRefresh2023,CustomizeChromeSidePanel,DefaultANGLEVulkan,EnableDrDc,ScrollableTabStrip:minTabWidth/72,SkiaGraphite,TabGroupsSave,UseGpuSchedulerDfs,Vulkan --flag-switches-end
```

# Summary
When pressing the right mouse button, the first item in the context menu is immediately clicked.

# Additional Data
Category: UI \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326500988</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326500988"/>
        <updated>2024-02-23T00:25:18.676Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                             0,0,0                             0,1,0                             1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                       1a 23 ff ff                       fe fd 00 ff                       3f fb 00 ff ...\n                           act. colors == R,G,B,A: 0.101961,0.137255,1.00000,1.00000 0.996078,0.992157,0.00000,1.00000 0.247059,0.984314,0.00000,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.00000,1.00000 0.972549,0.141176,0.00000,1.00000 0.101961,0.137255,1.00000,1.00000 ...\n            act. normal-ULPs-from-zero == R,G,B,A:     ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"srgb\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5ab771cca55a294f4b52f3138a9466e6

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326498546</id>
        <title>Tests are failing: tutorial_test-gen.cc(423): Value of: RunJavascriptTestF( true, \"ChromeVoxTutorialTest\", \"ResourcesTest\")\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498546"/>
        <updated>2024-02-23T00:10:26.610Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
tutorial_test-gen.cc(423): Value of: RunJavascriptTestF( true, \"ChromeVoxTutorialTest\", \"ResourcesTest\")\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/ChromeVoxTutorialTest.ResourcesTest


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/07c5c20ec64d9ec6016bcfee501c6695

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326498918</id>
        <title>coverage tool doesn't work with gtest wildcard filter</title>
        <author>
            <name>sv...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498918"/>
        <updated>2024-02-23T00:09:33.375Z</updated>
        <summary>-</summary>
        <content type="html">Example command:
$ vpython3 tools/code_coverage/coverage.py  base_unittests -b out/coverage -o out/report -c 'out/coverage/base_unittests --gtest_filter=AtExitTest*' 
It would run all gtests, instead of run gtest based on the filter.
The issue is https://source.chromium.org/chromium/chromium/src/+/main:tools/code_coverage/coverage.py;l=476;drc=51e61c7d11f37e677a8c0abc6224376901464185
Not sure what the cl was trying to fix, but it doesn't work with a normal gtest filter.
Jeff, could you take a look if there's a quick fix? Or maybe just update the instructions so people don't get confused.</content>
    </entry>
    <entry>
        <id>326498460</id>
        <title>content_browsertests  failed on #124.0.6315.1 win-dcheck-tests of official-desktop builders</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326498460"/>
        <updated>2024-02-23T00:08:54.145Z</updated>
        <summary>-</summary>
        <content type="html">content_browsertests failed because of:

EvalJsBrowserTest.EvalJsTimeout

SRC_ClearKey/EncryptedMediaTest.Playback_VideoOnly_MP4_AV1/0

SmsBrowserTest.RecordOutcomeWithCrossOriginFrame

SmsBrowserTest.SmsReceivedAfterTabIsClosed

Build URL:
https://ci.chromium.org/ui/p/chrome/builders/ci/win-dcheck-tests/1127/overview

Error-Log URL:
https://logs.chromium.org/logs/chrome/buildbucket/cr-buildbucket/8755397181908599633/+/u/content_browsertests_on_Windows-10-19045/stdout</content>
    </entry>
    <entry>
        <id>326496693</id>
        <title>Expose real run start time in CQ attempt table</title>
        <author>
            <name>yi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326496693"/>
        <updated>2024-02-22T23:57:43.763Z</updated>
        <summary>-</summary>
        <content type="html">This is proposed work to launch quota in chromium because if quota kicks in, it could skew the CQ duration metric in Browser Infra as it will involve the waiting time.</content>
    </entry>
    <entry>
        <id>326496214</id>
        <title>Tests are failing: ninja://third_party/blink/renderer/platform:blink_platform_unittests/ResourceFetcherTest.RevalidateWhileFinishingLoading</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326496214"/>
        <updated>2024-02-22T23:55:20.999Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://third_party/blink/renderer/platform:blink_platform_unittests/ResourceFetcherTest.RevalidateWhileFinishingLoading

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e8e2e37187d7fb5dfeb42e81f3720e8c

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326496682</id>
        <title>Collect UKM: Occurrences of cross-origin LCP images</title>
        <author>
            <name>al...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326496682"/>
        <updated>2024-02-22T23:54:52.307Z</updated>
        <summary>-</summary>
        <content type="html">A cross-origin LCP image request incurs additional latency due to new connection and TLS handshake costs, vs. a same-origin LCP image. We could investigate and improve the LCP metric of Core Web Vitals, by collecting stats on what portion of the web embeds cross-origin images as their LCP element. 

This ticket tracks work required to implement a UKM to count instances of LCP occurring with LCP element=image and the image source is cross-origin with the main document. The UKM will be recorded as a web-exposed LCP element is finalized.</content>
    </entry>
    <entry>
        <id>326493639</id>
        <title>[webrtc] createAnswer fails with "Failed to create transport answer, transport is missing"</title>
        <author>
            <name>mm...@twilio.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326493639"/>
        <updated>2024-02-22T23:53:50.973Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://jsfiddle.net/manjeshbhargav/u7dgfv82/ on a Chrome beta tab
2. Click on "Start Test" button
3. Observe the logs section in the application

# Problem Description
Expected result: No errors logged
Actual result: An error message similar to the one described in the summary of this issue is logged

# Summary
[webrtc] createAnswer fails with "Failed to create transport answer, transport is missing"

# Custom Questions
#### Which component does this fall under?
Blink&gt;WebRTC

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Beta \
Regression: Yes</content>
    </entry>
    <entry>
        <id>326466778</id>
        <title>cryptfs log spam on P+ Android devices</title>
        <author>
            <name>bs...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326466778"/>
        <updated>2024-02-22T23:41:03.829Z</updated>
        <summary>-</summary>
        <content type="html">On our Android P+ devices with encrypted disks, there is frequent spam in the Swarming device event logs along the lines of:

```
Failed to get cryptfs field SystemLocale: vdc V 02-22 21:58:20 14338 14338 vdc.cpp:54] Waited 0ms for vold vdc E 02-22 21:58:20 14338 14338 vdc.cpp:181] Raw commands are no longer supported
```

Looking at the open source code for Android's vdc tool, it looks like support for `vdc cryptfs getprop` and `vdc cryptfs setprop` when support for automatic forwarding of commands to vold was removed in Android P. Now, only a small list of commands are explicitly supported and it seems like there is not way to use `vdc` to get properties anymore.

Thus, the offending code should be skipped on P+ to avoid unnecessary log spam.</content>
    </entry>
    <entry>
        <id>326494585</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326494585"/>
        <updated>2024-02-22T23:40:32.977Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                              0,0,0                              0,1,0                              1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                        1c 22 f6 ff                        fe fd 51 ff                        7f f8 49 ff ...\n                           act. colors == R,G,B,A: 0.109804,0.133333,0.964706,1.00000 0.996078,0.992157,0.317647,1.00000 0.498039,0.972549,0.286275,1.00000 ...\n                           exp. colors == R,G,B,A: 0.996078,0.992157,0.317647,1.00000 0.894118,0.243137,0.133333,1.00000 0.109804,0.133333,0.964706,1.00000 ...\n            act. normal-ULPs-from-zer...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-270.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-rotate-180.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bbb3bb28de4d9f7bfb26a8f0c65d6cba

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326493638</id>
        <title>Lossless WebP cannot have a quality specified as the API is currently presented</title>
        <author>
            <name>li...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326493638"/>
        <updated>2024-02-22T23:36:53.048Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
canvas.toDataURL('image/webp', 0.9) cannot make a lossless image.

# Problem Description
Using quality 1 is always necessary to preserve color profiles, even though it inflates the size considerably. Sharp (by lovell) is able to make near-lossless webp files about 30% smaller which are visually identical. It would be so helpful to have this available in Chromium to avoid needing extremely heavy dependencies (in Electron) or backend APIs to handle these use cases.

# Summary
Lossless WebP cannot have a quality specified as the API is currently presented

# Custom Questions
#### Which component does this fall under?
Blink&gt;Canvas

#### Does this work in other browsers? 
Not sure - I don't know

# Additional Data
Category: API \
Chrome Channel: Not sure \
Regression: No</content>
    </entry>
    <entry>
        <id>326494015</id>
        <title>[TabGroupIndicators] Update a11y descriptors for title indicators</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326494015"/>
        <updated>2024-02-22T23:36:29.001Z</updated>
        <summary>-</summary>
        <content type="html">Update a11y descriptors for title indicators.

Currently using a placeholder with the group name if it exists. Plan to match desktop behavior.</content>
    </entry>
    <entry>
        <id>326391770</id>
        <title>[minizip_bin] Disable build by default</title>
        <author>
            <name>ca...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326391770"/>
        <updated>2024-02-22T23:28:35.697Z</updated>
        <summary>-</summary>
        <content type="html">Apparently the new CMake buildsystem is being used for building Chromium zlib on Windows (a workflow I've not personally tested).

Since we added minizip_bin as a default target, it broke the build on Windows (https://android-review.googlesource.com/c/platform/external/python/cpython3/+/2942385).

The idea is to address the issue.
</content>
    </entry>
    <entry>
        <id>326492955</id>
        <title>[TabGroupIndicators] Collapse/expand tab group on title click</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492955"/>
        <updated>2024-02-22T23:28:01.227Z</updated>
        <summary>-</summary>
        <content type="html">Collapse/expand tab group on title click</content>
    </entry>
    <entry>
        <id>326492787</id>
        <title>[TabGroupIndicators] Update tab update flows</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492787"/>
        <updated>2024-02-22T23:27:30.991Z</updated>
        <summary>-</summary>
        <content type="html">Update tab update flows.

Trigger tab strip view rebuild on relevant events (tab group created, merged, destroyed, etc.).</content>
    </entry>
    <entry>
        <id>326492671</id>
        <title>[TabGroupIndicators] Add selected tab group outline for tab strip</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492671"/>
        <updated>2024-02-22T23:26:29.284Z</updated>
        <summary>-</summary>
        <content type="html">Add selected tab group outline for tab strip.</content>
    </entry>
    <entry>
        <id>326492620</id>
        <title>[TabGroupIndicators] Add tab group bottom indicator on tab strip</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492620"/>
        <updated>2024-02-22T23:26:06.577Z</updated>
        <summary>-</summary>
        <content type="html">Add tab group bottom indicator on tab strip</content>
    </entry>
    <entry>
        <id>326492662</id>
        <title>[TabGroupIndicators] Add group title indicator view on tab strip</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492662"/>
        <updated>2024-02-22T23:24:29.621Z</updated>
        <summary>-</summary>
        <content type="html">Add group title indicator view on tab strip.

Will add title bitmap &amp; bg color separately.</content>
    </entry>
    <entry>
        <id>326492044</id>
        <title>[TabGroupIndicators] Refactor StripLayoutTab to a generic StripLayoutView</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326492044"/>
        <updated>2024-02-22T23:23:46.847Z</updated>
        <summary>-</summary>
        <content type="html">Refactor StripLayoutTab to a generic StripLayoutView</content>
    </entry>
    <entry>
        <id>326368637</id>
        <title>TaskAttribution: Fix CPED edge cases and support conditional propagation</title>
        <author>
            <name>sh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/326368637"/>
        <updated>2024-02-22T23:23:44.377Z</updated>
        <summary>-</summary>
        <content type="html">We're simplifying task attribution by propagating the same task state when possible (push-based, from some source) and only propagating state when necessary.

This will reduce the number of objects we allocate and how often we need to propagate state. But there are a few minor issues with the CPED + `TaskScope` implementation that need to be sorted out.

---

**Problem 1**: The CPED stored on promise reaction objects is not restored if that data is undefined. This means the Isolate's CPED can be incorrect during a microtask if undefined is being propagated (which will be the case when there's nothing to propagate).

This can be fixed by:
 1. Clearing the Isolate's CPED before running microtasks, either in v8 or blink
     - It's a lot easier/cleaner to do this in v8, but possible in blink
 1. Unconditionally setting the Isolate's CPED when running a promise reaction job

**Note**: this isn't an issue currently because we always create state to propagate, so cached CPED should never be undefined. That optimization was for when CPED was exclusively used by self.scheduler and was rarely set.

---

**Problem 2**: Multiple events &amp; microtask checkpoints can run under a single `TaskScope` (which is what sets CPED in blink), but CPED is set to undefined after each microtask (if it changed CPED).

For example:
 1. Suppose an XHR event has 2 listeners
 1. A `TaskScope` is created for dispatching XHR events, setting CPED to _state_
 1. _listener1_ fires and a promise reaction with CPED = _state_ is created
 1. Microtasks for _listener1_ run: CPED is set to _state_ during a microtask and cleared after
 1. _listener2_ fires: CPED is undefined but should be _state_

This is partially mitigated currently by caching the CPED value set during `TaskScope` creation and returning that as the `RunningTask()`. But v8 has no knowledge of that, so it doesn't get propagated by v8's mechanism (only for callbacks in blink). And when undefined becomes a propagatable value, the fallback could cause incorrect values to be propagated.

This can be fixed by:
 1. Creating a second `TaskScope` in blink for each callback created during event dispatch, which ensures the previous value is restored before the next callback runs
 1. Restoring the previous CPED value after running a microtask instead of setting it to undefined (in v8)
 1. Restore the pre-microtask checkpoint CPED value after a microtasks run (in v8)

---

**Problem 3**: Blink microtasks (`EnqueueMicrotask()`) are not CPED-aware.

This is again partially mitigated by the fallback mentioned above, but there are edge cases and the fallback needs to be removed to support less frequent propagation.

This can be fixed by:
 1. Modifying v8's `EnqueueMicrotask()` API to support CPED
 1. Modify blink's usage of `EnqueueMicrotask()` (i.e. `EventLoop::EnqueueMicrotask()`) to set/reset CPED, matching what v8 does</content>
    </entry>
    <entry>
        <id>326488897</id>
        <title>[TabGroupIndicators] Hook into Tab Group APIs for title &amp; color</title>
        <author>
            <name>ne...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326488897"/>
        <updated>2024-02-22T23:22:47.736Z</updated>
        <summary>-</summary>
        <content type="html">Hook into Tab Group APIs for title &amp; color.

There's an existing util for the tab group title [1]. There will be one for the tab group color once that's implemented for the GTS. We may need to wrap in an observer to update when needed.

[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/tab_group/java/src/org/chromium/chrome/browser/tasks/tab_groups/TabGroupTitleUtils.java;l=24;drc=e5f8ff312fe542f39c7d34b4440f18d1500b15f9</content>
    </entry>
    <entry>
        <id>326411160</id>
        <title>[dPWA][Win] SMTC box not hidden on audio finish or navigation within the PWA</title>
        <author>
            <name>li...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326411160"/>
        <updated>2024-02-22T23:17:31.426Z</updated>
        <summary>-</summary>
        <content type="html">What steps will reproduce the problem?
1. Navigate to ![](chrome://flags/#enable-web-app-system-media-controls-win) and enable
2. Navigate to ![](https://liahiscock.github.io/PWA/MediaControls/App1) and install as a PWA
3. In the PWA window, start playing the audio. Open Windows SMTC UI (from taskbar right side) and verify SMTC box shows.
4. In the PWA window, click one of the two links on the page ("PWA #2" or "PWA #3")
5. Open the Windows SMTC UI again and note the box is still there even though we've navigated away from the page that was playing audio.
    - With the feature flag disabled, the SMTC UI disappears after the navigation, which is what we expect with the flag enabled as well
    - The issue also repros if you let the audio finish playing on its own -- with feature flag on, the SMTC box is still there. feature flag off, the box disappears as soon as the track finishes playing

----------------------------------------------------------------
This appears to be caused by different handling of audio ending for media controllers made to follow the active session vs a specific session.

Controllers that follow the active session appear to be cleaned up via
1. `AudioFocusManager::AbandonAudioFocusInternal`
2. `AudioFocusManager::MaybeUpdateActiveSession`
3. `MediaController::ClearMediaSession` called on the active_media_controller proxy (which flushes all its MediaControllerObservers with null/empty information that then notifies Windows)

Controllers that follow a specific media session seem to follow
1. `AudioFocusManager::AbandonAudioFocusInternal` which calls `OnFocusLost` on all of its `AudioFocusObservers` </content>
    </entry>
    <entry>
        <id>326489905</id>
        <title>Tests are failing: webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326489905"/>
        <updated>2024-02-22T23:10:36.987Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
webgpu_cts_integration_test_base.py(371): AssertionError: webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-hflip.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\" failed\n  - EXPECTATION FAILED: Texture level had unexpected contents:\n     between 0,0,0 and 1,1,0 inclusive:\n                                coords ==   X,Y,Z:                              0,0,0                              0,1,0                              1,0,0 ...\n      act. texel bytes (little-endian) ==      0x:                        fe fd 51 ff                        e3 3e 22 ff                        1c 22 f6 ff ...\n                           act. colors == R,G,B,A: 0.996078,0.992157,0.317647,1.00000 0.890196,0.243137,0.133333,1.00000 0.109804,0.133333,0.964706,1.00000 ...\n                           exp. colors == R,G,B,A: 0.894118,0.243137,0.133333,1.00000 0.996078,0.992157,0.317647,1.00000 0.498039,0.972549,0.286275,1.00000 ...\n            act. normal-ULPs-from-zero == ...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgpu_cts_integration_test.WebGpuCtsIntegrationTest.webgpu:web_platform,external_texture,video:importExternalTexture,compute:videoName=\"four-colors-h264-bt601-hflip.mp4\";sourceType=\"VideoElement\";dstColorSpace=\"display-p3\"


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/bdd12ca4ddcc22438bd927fb54b7ed94

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>326360728</id>
        <title>[Chrome Perf Accessibility Sheriff]: 43 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326360728"/>
        <updated>2024-02-22T23:04:02.705Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1264031:1264046:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ac80a1a3-0272-4f53-b1d2-29a50c17a7c7

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ac80a1a3-0272-4f53-b1d2-29a50c17a7c7

Top 10 regressions (out of 23, with 5 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    17444.24%: 0.9065000000000001 -&gt; 159.0385 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    15710.38%: 0.8 -&gt; 126.483 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12474.58%: 0.7355 -&gt; 92.48599999999999 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12067.56%: 0.5994999999999999 -&gt; 72.9445 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     5827.52%: 0.129 -&gt; 7.6465 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     4805.43%: 0.175 -&gt; 8.5845 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-focusable-containers.html
     2776.89%: 0.872 -&gt; 25.0865 ms
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-deep-tree.html
     2676.08%: 0.878 -&gt; 24.374000000000002 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-focusable-containers.html
     2524.47%: 1.1484999999999999 -&gt; 30.142 ms
  - ChromiumPerf/mac-laptop_low_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/unassignable-slots-deep-tree.html
     2496.44%: 1.1524999999999999 -&gt; 29.924 ms

Top 3 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    15710.38%: 0.8 -&gt; 126.483 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12067.56%: 0.5994999999999999 -&gt; 72.9445 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     5827.52%: 0.129 -&gt; 7.6465 ms


Top 3 affected measurements in mac-laptop_low_end-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-auto.html
    17444.24%: 0.9065000000000001 -&gt; 159.0385 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-nodes-toggle-content-visibility-hidden.html
    12474.58%: 0.7355 -&gt; 92.48599999999999 ms
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/insert-block-child-after-many-inline-children.html
     4805.43%: 0.175 -&gt; 8.5845 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1264018..1264036
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3869f246146eb4c4dbb46236ce4372a8e89ddb39..c582ec924d4ac7a1b09c604f1cdff508881d311e
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e166dec0a9f143140377af113ba66fbf0e052b01..e166dec0a9f143140377af113ba66fbf0e052b01</content>
    </entry>
    <entry>
        <id>326488819</id>
        <title>Block PDF viewer from loading in fenced frames</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326488819"/>
        <updated>2024-02-22T23:02:10.722Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326353889</id>
        <title>Add histogram to measure mouse/touch/stylus usage</title>
        <author>
            <name>Ad...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326353889"/>
        <updated>2024-02-22T22:56:37.141Z</updated>
        <summary>-</summary>
        <content type="html">Add a metric to compare usage of inputs between mouse/touch/stylus, for instance whenever a mouse is clicked or when a touchscreen is tapped with a finger or stylus (or "eraser").</content>
    </entry>
    <entry>
        <id>326487241</id>
        <title>Make all existing PDF tests pass</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326487241"/>
        <updated>2024-02-22T22:54:47.906Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326487435</id>
        <title>Remove GuestView PDF tests</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326487435"/>
        <updated>2024-02-22T22:53:35.234Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326487542</id>
        <title>Make existing chromeOS PDF extension tests pass</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326487542"/>
        <updated>2024-02-22T22:52:28.523Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326466942</id>
        <title>Chrome PDF Viewer is very slow/laggy</title>
        <author>
            <name>ne...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326466942"/>
        <updated>2024-02-22T22:52:05.239Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326486769</id>
        <title>Follow-up work</title>
        <author>
            <name>an...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326486769"/>
        <updated>2024-02-22T22:50:27.123Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>326459578</id>
        <title>[V8 Perf Sheriff]: 6 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/326459578"/>
        <updated>2024-02-22T22:47:49.574Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1263970:1264002:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=da9cb936-c4f3-4543-9e8b-b781e4f92986

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=da9cb936-c4f3-4543-9e8b-b781e4f92986

Top 6 regressions (out of 6, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_warm_2021
      752.68%: 5.5055 -&gt; 46.944500000000005 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_2021
      519.27%: 6.1325 -&gt; 37.9765 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_2021
      519.11%: 1.5335 -&gt; 9.494 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_warm_2021
      287.65%: 1.292 -&gt; 5.0085 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_media/browse_media_youtubetv_2019
      117.29%: 9.879999999999999 -&gt; 21.468 ms
  - ChromiumPerf/mac-m1_mini_2020-perf/v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_media/browse_media_youtubetv_2019
      117.28%: 19.759999999999998 -&gt; 42.935 ms

Top 3 affected measurements in mac-m1_mini_2020-perf:
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_warm_2021
      752.68%: 5.5055 -&gt; 46.944500000000005 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute_max/browse_tools/browse_tools_photoshop_2021
      519.27%: 6.1325 -&gt; 37.9765 ms
  - v8.browsing_desktop/total:500ms_window:renderer_eqt:v8:execute/browse_tools/browse_tools_photoshop_2021
      519.11%: 1.5335 -&gt; 9.494 ms

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: almuthanna@chromium.org, cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/80f679a1709fe1271f542e42a3ba3f1be31f8e26..8df6e2f99a043c956a3246be3f837aced00980c0
  Chromium Commit Position: https://crrev.com/1263969..1264002
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/8c2899cbd267fb705a48c9fdec7f246dff2900b8..3869f246146eb4c4dbb46236ce4372a8e89ddb39
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e166dec0a9f143140377af113ba66fbf0e052b01..e166dec0a9f143140377af113ba66fbf0e052b01</content>
    </entry>
</feed>