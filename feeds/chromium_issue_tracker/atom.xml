<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-29T04:06:50.010Z</updated>
    <entry>
        <id>327473155</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473155"/>
        <updated>2024-02-29T04:06:50.010Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266511:1266536:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=46c968c1-3256-4c72-88e4-9b552c0d0b59

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=46c968c1-3256-4c72-88e4-9b552c0d0b59
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=46c968c1-3256-4c72-88e4-9b552c0d0b59

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop-future/Total:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
       61.74%: 9045.6965 -&gt; 14630.194500000001 ms

Top 1 affected measurements in win-10-perf:
  - v8.browsing_desktop-future/Total:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
       61.74%: 9045.6965 -&gt; 14630.194500000001 ms

Regressions grouped by v8.browsing_desktop-future includes data from the following benchmarks with listed owners:
  v8.browsing_desktop-future: almuthanna@chromium.org, mythria@chromium.org, tmrts@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266510..1266536
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..7160fc436c967688ec8c12bce5b96723089dc4b3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327486158</id>
        <title>[Blink Layout]: 2 regressions in blink_perf.layout</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327486158"/>
        <updated>2024-02-29T04:06:18.438Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266511:1266536:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=6c02eaf4-0b2c-42d2-8243-e1218cc79b4f

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=6c02eaf4-0b2c-42d2-8243-e1218cc79b4f
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=6c02eaf4-0b2c-42d2-8243-e1218cc79b4f

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/blink_perf.layout/subtree-layout-scrollable-area/subtree-layout-scrollable-area.html
       14.75%: 70.59 -&gt; 81.0 ms
  - ChromiumPerf/win-10-perf/blink_perf.layout/word-break-break-all/word-break-break-all.html
       13.72%: 19.310000000000002 -&gt; 21.96 ms

Top 2 affected measurements in win-10-perf:
  - blink_perf.layout/subtree-layout-scrollable-area/subtree-layout-scrollable-area.html
       14.75%: 70.59 -&gt; 81.0 ms
  - blink_perf.layout/word-break-break-all/word-break-break-all.html
       13.72%: 19.310000000000002 -&gt; 21.96 ms

Regressions grouped by blink_perf.layout includes data from the following benchmarks with listed owners:
  blink_perf.layout: ikilpatrick@chromium.org, kojii@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266510..1266536
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..7160fc436c967688ec8c12bce5b96723089dc4b3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327473418</id>
        <title>[Graphics]: 7 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473418"/>
        <updated>2024-02-29T04:02:46.346Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266672:1266701:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2ff719a1-ae0a-4ebc-8e06-741b7a84c2f1

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2ff719a1-ae0a-4ebc-8e06-741b7a84c2f1

Top 7 regressions (out of 7, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.0769 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.PerScroll/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.1111 unitless
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/draw_image_not_pixel_aligned
         inf%: 0.0 -&gt; 0.5 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.0769 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.1111 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/throughput_scrolling_composited
       75.27%: 3.3554000000000004 -&gt; 5.881 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/repaint_cnn_2018
       19.80%: 5.73565 -&gt; 6.87125 unitless

Top 1 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/draw_image_not_pixel_aligned
         inf%: 0.0 -&gt; 0.5 unitless


Top 3 affected measurements in mac-m1_mini_2020-perf:
  - rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.0769 unitless
  - rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.PerScroll/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.1111 unitless
  - rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/text_constant_full_page_raster_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.0769 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6c27737cd5bb5c939db837821eddefba48d59e66..eabf4eb01ddb5df5cf156926f4656ee85283125e
  Chromium Commit Position: https://crrev.com/1266645..1266675
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ffbbc12861f55c50d80cf14e12f990becb352d10..b5c3d32f28d7af9f527a5eddca570c11e14303c9
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3afa1b2ce8295e11d4f18b52050c01434772fb26..3afa1b2ce8295e11d4f18b52050c01434772fb26</content>
    </entry>
    <entry>
        <id>327473417</id>
        <title>[Blink Storage]: 1 regressions in blink_perf.owp_storage</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473417"/>
        <updated>2024-02-29T04:01:34.281Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266511:1266536:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4b74d92d-a1ad-4354-8e51-6c64fbce26d6

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=4b74d92d-a1ad-4354-8e51-6c64fbce26d6
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4b74d92d-a1ad-4354-8e51-6c64fbce26d6

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/blink_perf.owp_storage/Registry::RegisterBlob/blob-perf-ipc.html
       23.55%: 0.64873 -&gt; 0.8015000000000001 ms

Top 1 affected measurements in win-10-perf:
  - blink_perf.owp_storage/Registry::RegisterBlob/blob-perf-ipc.html
       23.55%: 0.64873 -&gt; 0.8015000000000001 ms

Regressions grouped by blink_perf.owp_storage includes data from the following benchmarks with listed owners:
  blink_perf.owp_storage: dmurph@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266510..1266536
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..7160fc436c967688ec8c12bce5b96723089dc4b3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327473668</id>
        <title>PartitionAlloc Memroy increase consecutively  from 100M+ to 2500M+ when play mse/hls video</title>
        <author>
            <name>gu...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473668"/>
        <updated>2024-02-29T04:00:31.942Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  visit netrange AfroLandTV csp, 
    https://ver.netrange.com/internal.mse-player/production/v1/82/index.html?stream=https%3A%2F%2Fapi-ott.afrolandtv.com%2Floggingmediaurlpassthrough%2Fa.m3u8%3Fversion%3D12%26id%3D816%26partner%3Dnetrange&amp;epg=https%3A%2F%2Fapi-ott.afrolandtv.com%2Fgetrawvideosegments%3Fversion%3D12.5%26rss_format%3Dxmltv%26linear_channel_id%3D815%26partner%3Dnetrange%2 
   6days%3D2&amp;csp=OTTera#/
2. click play button, it will play live streaming video (hls) automatic

# Problem Description
1. we find that the page memory of renderer process is increase consecutively, from 100M+ to 2500M+, according to chrome more/task manager panel
2.  and we find that PartitionAlloc Memroy increase consecutively frome 100M+ to 2500M+, and it caused the  page memory of renderer process  increase , 
   accroding to chromium memory-infra tool
    https://chromium.googlesource.com/chromium/src/+/master/docs/memory-infra/

# Additional Comments
1. The problem is different from my another reported bugs(https://issues.chromium.org/issues/40282286)
2. Does is the page problem itself with hls, acconding to https://github.com/video-dev/hls.js/issues/5402
    or there are some memory leak in blink when play mse/hls video？

# Summary
PartitionAlloc Memroy increase consecutively  from 100M+ to 2500M+ when play mse/hls video

# Custom Questions
#### Does this work in other browsers?

Not sure - I don't know

# Additional Data
Category: Audio / Video \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327468395</id>
        <title>virtual/threaded-prefer-compositing/external/wpt/css/cssom-view/smooth-scroll-in-load-event.html is failing</title>
        <author>
            <name>ba...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327468395"/>
        <updated>2024-02-29T03:51:40.210Z</updated>
        <summary>-</summary>
        <content type="html">Step "blink_wpt_tests on Mac-12" failing on builder "chromium/ci/Mac12 Tests"

List of failed builders:

Builder: Mac12 Tests
https://ci.chromium.org/p/chromium/builders/ci/Mac12%20Tests
First failing build:
https://ci.chromium.org/p/chromium/builders/ci/Mac12%20Tests/b8754799755909796865
</content>
    </entry>
    <entry>
        <id>327477172</id>
        <title>[Android System Health Rotation Memory]: 2 regressions in system_health.memory_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327477172"/>
        <updated>2024-02-29T03:48:36.437Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266511:1266535:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=60b9539a-eb13-4c41-a75c-8604354bab8f

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=60b9539a-eb13-4c41-a75c-8604354bab8f

Top 2 regressions (out of 5, with 3 improvements) in this group:
  - ChromiumPerf/android-go-wembley-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_committed_size_avg/browse_news
       22.74%: 43821056.0 -&gt; 53783893.0 sizeInBytes
  - ChromiumPerf/android-go-wembley_webview-perf/system_health.memory_mobile/memory:chrome:all_processes:reported_by_os:system_memory:native_heap:proportional_resident_size_avg/load_games/load_games_lazors
       16.42%: 37815072.0 -&gt; 44023754.5 sizeInBytes

Top 1 affected measurements in android-go-wembley-perf:
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_chrome:malloc:max_committed_size_avg/browse_news
       22.74%: 43821056.0 -&gt; 53783893.0 sizeInBytes


Top 1 affected measurements in android-go-wembley_webview-perf:
  - system_health.memory_mobile/memory:chrome:all_processes:reported_by_os:system_memory:native_heap:proportional_resident_size_avg/load_games/load_games_lazors
       16.42%: 37815072.0 -&gt; 44023754.5 sizeInBytes

Regressions grouped by system_health.memory_mobile includes data from the following benchmarks with listed owners:
  system_health.memory_mobile: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/0316d0b6662ef90d62c2a11c3688cfec162a5983..5bedba5b34842c59d9d942a9b57f55d3760d8df2
  Chromium Commit Position: https://crrev.com/1266499..1266528
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..7160fc436c967688ec8c12bce5b96723089dc4b3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327489285</id>
        <title>Headless=new getDisplayMedia stream closes causes chromium to crash</title>
        <author>
            <name>ia...@brendong.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327489285"/>
        <updated>2024-02-29T03:24:19.972Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version: 121.0.6167.184
OS: Mac OS 14.1.1

What steps will reproduce the problem?
(1) Start up chrome from the terminal CLI with the flag `--auto-select-tab-capture-source-by-title=target_tab`
(2) Run the code below
(3) Note: the code spawns a new page, navigates and captures the display media. After a few seconds, it will call `stop` on the tracks which causes the failure.
```
const puppeteer = require('puppeteer');
const fetch = require('node-fetch');

async function connectToChrome() {
  try {
    console.log('Going to connect and run test');
    const result = await fetch('http://localhost:4005/json/version');
    const json = await result.json();
    const wsUrl = json.webSocketDebuggerUrl;
    // Connect to the Chrome instance
    const browser = await puppeteer.connect({
      browserWSEndpoint: wsUrl,
    });

    browser.on('close', () =&gt; {
      console.log('Browser closed');
    });

    // Create a new page
    const page = await browser.newPage();

    page.on('console', (e) =&gt; console.log(e.text()));
    page.on('error', (error) =&gt; {
      console.log('error with page:', error);
    });

    // // Navigate to a website
    await page.goto('https://chromium.org');
    await page.evaluate(async () =&gt; {
      document.title = 'target_tab';
      await window.navigator.mediaDevices
        .getDisplayMedia({
          // @ts-ignore
          preferCurrentTab: true,
          video: true,
        })
        .then((stream) =&gt; {
          console.log('Got stream!');
          console.log('Lets close stream');
        })
        .catch((err) =&gt; {
          console.log('Failed to get display media:', err);
          throw err;
        });
    });

    setTimeout(async () =&gt; {
      page.close();
    }, 10_000);
  } catch (error) {
    console.error('Failed to connect to Chrome:', error);
  }
}

(async () =&gt; {
  await connectToChrome();
})();
```

What is the expected result?
The stream should end quietly and not crash chrome.

What happens instead?
Chrome crashes with a few notable errors:
`[6551:259:0228/192236.444128:ERROR:observer_list.h(270)] Check failed: observers_.empty().`
`[0228/192236.681968:WARNING:crash_report_exception_handler.cc(235)] UniversalExceptionRaise: (os/kern) failure (5)`

</content>
    </entry>
    <entry>
        <id>327517308</id>
        <title>v8_wasm_compile_fuzzer: Fatal error in Exception mismatch! Expected: &amp;lt;&amp;lt;no exception&amp;gt;&amp;gt;; got: &amp;lt;RuntimeError: string offse</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327517308"/>
        <updated>2024-02-29T03:14:15.168Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5229622362308608

Fuzzing Engine: libFuzzer
Fuzz Target: v8_wasm_compile_fuzzer
Job Type: v8_libfuzzer_asan_debug_linux_arm64_sim
Platform Id: linux

Crash Type: Fatal error
Crash Address: 
Crash State:
  Exception mismatch! Expected: &lt;&lt;no exception&gt;&gt;; got: &lt;RuntimeError: string offse
  v8::internal::wasm::fuzzing::ExecuteAgainstReference
  v8::internal::wasm::fuzzing::WasmExecutionFuzzer::FuzzWasmModule
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=v8_libfuzzer_asan_debug_linux_arm64_sim&amp;range=1263700:1263705

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5229622362308608

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>327489283</id>
        <title>FCM is going to remove some endpoints this year.</title>
        <author>
            <name>ra...@lalamove.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327489283"/>
        <updated>2024-02-29T03:03:01.866Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Sorry that this might not be a bug.

# Problem Description
FCM is going to remove some endpoints this year. The link below describes the update of FCM endpoint.
https://firebase.google.com/docs/cloud-messaging/migrate-v1

Currently, Chrome uses FCM as a Push Service for VAPID Web Push and the endpoint that the Push Manager returned to us is the deprecated endpoint. I would like to know if Chrome team noticed this issue or not because it will affect production usage when FCM team remove the endpoints from their service. I confirmed with FCM team and they referred me to here for further confirmation.

# Summary
FCM is going to remove some endpoints this year.

# Custom Questions
#### Which component does this fall under?
Blink&gt;PushAPI

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327518023</id>
        <title>[V8 Speedometer2 Perf Sheriff]: 1 regressions in speedometer2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327518023"/>
        <updated>2024-02-29T03:01:59.763Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266696:1266708:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=6f86be64-c781-41ef-ad72-4feb530a2867

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=6f86be64-c781-41ef-ad72-4feb530a2867

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1-pro-perf/speedometer2/React-TodoMVC/Speedometer2
        1.49%: 53.16 -&gt; 53.95 

Top 1 affected measurements in mac-m1-pro-perf:
  - speedometer2/React-TodoMVC/Speedometer2
        1.49%: 53.16 -&gt; 53.95 

Regressions grouped by speedometer2 includes data from the following benchmarks with listed owners:
  speedometer2: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>327477171</id>
        <title>[Graphics]: 409 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327477171"/>
        <updated>2024-02-29T02:47:53.075Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266630:1266639:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=69454296-b226-48e3-b89a-992ca966b1bb

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=69454296-b226-48e3-b89a-992ca966b1bb

Top 10 regressions (out of 222, with 11 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/text_hover_05000_pixels_per_second
         inf%: 0.0 -&gt; 0.5 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/canvas_20000_pixels_per_second
         inf%: 0.0 -&gt; 0.5 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/canvas_05000_pixels_per_second
         inf%: 0.0 -&gt; 0.3529 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/text_hover_05000_pixels_per_second
         inf%: 0.0 -&gt; 0.0882 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/throughput_scrolling_uncomposited
         inf%: 0.0 -&gt; 0.0909 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/text_hover_40000_pixels_per_second
         inf%: 0.0 -&gt; 0.5556 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.DelayedFramesPercentage.FixedWindow/raf
         inf%: 0.0 -&gt; 0.2 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/canvas_60000_pixels_per_second
         inf%: 0.0 -&gt; 0.5455 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/google_web_search_2018
         inf%: 0.0 -&gt; 1.5 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/throughput_scrolling_uncomposited
         inf%: 0.0 -&gt; 1.0 unitless

Top 3 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/hw_accelerated_canvas_to_sw_canvas.html
         inf%: 0.0 -&gt; 0.5 unitless
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/main_60fps_impl_60fps
         inf%: 0.0 -&gt; 0.5 unitless
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/mix_blend_mode_animation_propagating_isolation
         inf%: 0.0 -&gt; 1.0 unitless


Top 3 affected measurements in mac-laptop_low_end-perf:
  - rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/text_hover_05000_pixels_per_second
         inf%: 0.0 -&gt; 0.5 unitless
  - rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.PerScroll/canvas_20000_pixels_per_second
         inf%: 0.0 -&gt; 0.5 unitless
  - rendering.desktop/Event.ScrollJank.MissedVsyncsPercentage.FixedWindow/canvas_05000_pixels_per_second
         inf%: 0.0 -&gt; 0.3529 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266607..1266637
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ffbbc12861f55c50d80cf14e12f990becb352d10..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3afa1b2ce8295e11d4f18b52050c01434772fb26..3afa1b2ce8295e11d4f18b52050c01434772fb26</content>
    </entry>
    <entry>
        <id>327518865</id>
        <title>[Desktop Power Perf Sheriff]: 152 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327518865"/>
        <updated>2024-02-29T02:16:54.915Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266596:1266629:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=459348ca-f8c1-4362-aef3-dd33ca9ce12b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=459348ca-f8c1-4362-aef3-dd33ca9ce12b

Top 10 regressions (out of 51, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_games/load_games_lazors
      253.03%: 0.066 -&gt; 0.233 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_hackernews_2018
      253.03%: 0.066 -&gt; 0.23299999999999998 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_chrome/load_chrome_blank
      240.98%: 0.0555 -&gt; 0.189245 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_yahoo_2018
      170.92%: 0.098 -&gt; 0.2655 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_baidu_2018
      142.86%: 0.105 -&gt; 0.255 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_media/load_media_google_images_2018
      117.34%: 0.124 -&gt; 0.2695 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_search/load_search_google_2018
       99.66%: 0.145 -&gt; 0.2895 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_accessibility_media/load_accessibility_media_wikipedia_2018
       98.85%: 0.1535 -&gt; 0.30523500000000003 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_bbc_2018
       97.07%: 0.1535 -&gt; 0.3025 n%
  - ChromiumPerf/mac-laptop_high_end-perf/system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_flipboard
       96.98%: 0.149 -&gt; 0.2935 n%

Top 3 affected measurements in mac-laptop_high_end-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_games/load_games_lazors
      253.03%: 0.066 -&gt; 0.233 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_news/load_news_hackernews_2018
      253.03%: 0.066 -&gt; 0.23299999999999998 n%
  - system_health.common_desktop/cpu_time_percentage_avg/load_chrome/load_chrome_blank
      240.98%: 0.0555 -&gt; 0.189245 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266595..1266629
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ffbbc12861f55c50d80cf14e12f990becb352d10..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3afa1b2ce8295e11d4f18b52050c01434772fb26..3afa1b2ce8295e11d4f18b52050c01434772fb26</content>
    </entry>
    <entry>
        <id>327518019</id>
        <title>[Chrome Perf Accessibility Sheriff]: 3 regressions in blink_perf.accessibility</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327518019"/>
        <updated>2024-02-29T02:08:12.376Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266596:1266629:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=8099374a-2a23-4fb8-9951-2c28fde19dff

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=8099374a-2a23-4fb8-9951-2c28fde19dff

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-text-changes-deep-hidden-subtree.html
       14.23%: 26.0805 -&gt; 29.793 ms

Top 1 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.accessibility/ProcessDeferredAccessibilityEvents_sum/many-text-changes-deep-hidden-subtree.html
       14.23%: 26.0805 -&gt; 29.793 ms

Regressions grouped by blink_perf.accessibility includes data from the following benchmarks with listed owners:
  blink_perf.accessibility: aleventhal@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266595..1266629
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ffbbc12861f55c50d80cf14e12f990becb352d10..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3afa1b2ce8295e11d4f18b52050c01434772fb26..3afa1b2ce8295e11d4f18b52050c01434772fb26</content>
    </entry>
    <entry>
        <id>327511539</id>
        <title>[Desktop Power Perf Sheriff]: 38 regressions in power.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327511539"/>
        <updated>2024-02-29T02:07:19.467Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266596:1266629:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fb1af50a-ac45-407c-bc72-58cd25ed9158

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fb1af50a-ac45-407c-bc72-58cd25ed9158

Top 10 regressions (out of 14, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/slideshare
      213.24%: 0.034 -&gt; 0.1065 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/indiatimes
      160.64%: 0.047 -&gt; 0.1225 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/microsoft
      133.96%: 0.053 -&gt; 0.124 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/sina
      125.45%: 0.055 -&gt; 0.124 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/TrivialBlinkingCursorPageSharedPageState
       80.23%: 0.086 -&gt; 0.155 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/TrivialGifPageSharedPageState
       74.05%: 0.0925 -&gt; 0.161 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/TrivialScrollingPageSharedPageState
       50.00%: 0.147 -&gt; 0.2205 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/TrivialFullscreenVideoPageSharedPageState
       49.55%: 0.11 -&gt; 0.1645 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/TrivialWebGLPageSharedPageState
       45.91%: 0.159 -&gt; 0.232 n%
  - ChromiumPerf/mac-laptop_high_end-perf/power.desktop/cpu_time_percentage_avg/TrivialCanvasPageSharedPageState
       41.57%: 0.173765 -&gt; 0.246 n%

Top 3 affected measurements in mac-laptop_high_end-perf:
  - power.desktop/cpu_time_percentage_avg/slideshare
      213.24%: 0.034 -&gt; 0.1065 n%
  - power.desktop/cpu_time_percentage_avg/indiatimes
      160.64%: 0.047 -&gt; 0.1225 n%
  - power.desktop/cpu_time_percentage_avg/microsoft
      133.96%: 0.053 -&gt; 0.124 n%

Regressions grouped by power.desktop includes data from the following benchmarks with listed owners:
  power.desktop: brucedawson@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266595..1266629
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ffbbc12861f55c50d80cf14e12f990becb352d10..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/3afa1b2ce8295e11d4f18b52050c01434772fb26..3afa1b2ce8295e11d4f18b52050c01434772fb26</content>
    </entry>
    <entry>
        <id>327511538</id>
        <title>Null-dereference READ in blink::TextSegments::FindBoundaryBackward</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327511538"/>
        <updated>2024-02-29T01:55:52.398Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5968466795757568

Fuzzer: miaubiz_css_fuzzer
Job Type: windows_asan_chrome_no_sandbox
Platform Id: windows

Crash Type: Null-dereference READ
Crash Address: 0x000000000034
Crash State:
  blink::TextSegments::FindBoundaryBackward
  blink::PreviousWordPosition
  blink::SelectionModifier::ModifyMovingBackward
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=windows_asan_chrome_no_sandbox&amp;range=1014866:1014867

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5968466795757568

Issue filed automatically.

</content>
    </entry>
    <entry>
        <id>327511537</id>
        <title>[Graphics]: 255 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327511537"/>
        <updated>2024-02-29T01:36:54.272Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266561:1266607:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=8f8cd25f-59c2-4c3f-ae8f-3ac434030e12

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=8f8cd25f-59c2-4c3f-ae8f-3ac434030e12

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/background_color_animation
     1950.00%: 0.5 -&gt; 10.25 unitless

Top 1 affected measurements in mac-laptop_low_end-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/background_color_animation
     1950.00%: 0.5 -&gt; 10.25 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266560..1266607
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ffbbc12861f55c50d80cf14e12f990becb352d10..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..3afa1b2ce8295e11d4f18b52050c01434772fb26</content>
    </entry>
    <entry>
        <id>327477169</id>
        <title>[Graphics]: 46 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327477169"/>
        <updated>2024-02-29T01:02:30.911Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266502:1266560:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e6797008-9e88-4528-8ccc-db9a56528ac7

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e6797008-9e88-4528-8ccc-db9a56528ac7

Top 4 regressions (out of 6, with 2 improvements) in this group:
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/docs_resume.html
         inf%: 0.0 -&gt; 2.0 unitless
  - ChromiumPerf/mac-laptop_low_end-perf/rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/sheets_render.html
      450.00%: 0.5 -&gt; 2.75 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/raf_canvas
       23.70%: 5.1921 -&gt; 6.4224 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/fill_clear_rect.html
       22.81%: 4.980650000000001 -&gt; 6.1167 unitless

Top 1 affected measurements in mac-laptop_low_end-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/sheets_render.html
      450.00%: 0.5 -&gt; 2.75 unitless


Top 3 affected measurements in mac-m1_mini_2020-perf:
  - rendering.desktop/Graphics.Smoothness.PercentDroppedFrames3.AllSequences/docs_resume.html
         inf%: 0.0 -&gt; 2.0 unitless
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/raf_canvas
       23.70%: 5.1921 -&gt; 6.4224 unitless
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/fill_clear_rect.html
       22.81%: 4.980650000000001 -&gt; 6.1167 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/4b699930deb5c891dbb0c895759a4ccb0145e7f2..1f2cd90cf2f585d18e66864f5c3e4d79115dc450
  Chromium Commit Position: https://crrev.com/1266522..1266554
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327509275</id>
        <title>Deprecate allow_submit_with_open_deps</title>
        <author>
            <name>dd...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327509275"/>
        <updated>2024-02-29T00:37:37.154Z</updated>
        <summary>-</summary>
        <content type="html">`allow_submit_open_deps` allows users to trigger a full-run with open deps. However, this option no longer makes sense since go/chained-cq-votes have been introduced. That is, if a given dependent CL has open deps, which are unsubmitted ancestor CLs in a relation chain, chained-cq-votes will copy CQ+2 into each of the open deps, and then submit them in order.

Therefore, `allow_submit_open_deps` is noop. Please update documents and mark it as deprecated to indicate that the option is noop.

Note `allow_submit_open_deps` is allowed only if the CQ config is not set with combine_cl.
https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/cv/internal/configs/validation/project.go;l=207</content>
    </entry>
    <entry>
        <id>327506349</id>
        <title>[V8 JetStream2 Perf Sheriff]: 2 regressions in jetstream2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327506349"/>
        <updated>2024-02-29T00:11:26.614Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266434:1266449:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=40076809-747c-4126-ac39-dd20c1749d5d

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=40076809-747c-4126-ac39-dd20c1749d5d
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=40076809-747c-4126-ac39-dd20c1749d5d

Top 1 regressions (out of 5, with 4 improvements) in this group:
  - ChromiumPerf/win-10-perf/jetstream2/FlightPlanner.Average/JetStream2
       11.08%: 1045.024 -&gt; 929.25335 unitless

Top 1 affected measurements in win-10-perf:
  - jetstream2/FlightPlanner.Average/JetStream2
       11.08%: 1045.024 -&gt; 929.25335 unitless

Regressions grouped by jetstream2 includes data from the following benchmarks with listed owners:
  jetstream2: hablich@chromium.org, tcwang@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1266425..1266456
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/1928f3476221cc48f16da476c2d3daf7a1082c8e..7160fc436c967688ec8c12bce5b96723089dc4b3
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/dcc15347648366b826df15d7e06b11d8b11ca7a9..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
    <entry>
        <id>327503979</id>
        <title>Tracking Prices toggles don’t sync while in multi-window mode</title>
        <author>
            <name>ie...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327503979"/>
        <updated>2024-02-29T00:02:12.283Z</updated>
        <summary>-</summary>
        <content type="html">
App Version: 123.0.6312.18 Beta
iOS Version: 17.4, 16.7.2
Device: iPad Pro 4th Gen, iPad Mini 6th Gen (iPads only)

Steps to reproduce:
  1. Launch Chrome
  2. Open a new window
  3. In both windows navigate to Settings &gt; Notifications &gt; Tracking Price
  4. Toggle options and observe

Observed results:
Tracking Prices toggles don’t sync while in multi-window mode

Expected results:
Tracking Prices toggles should sync while in multi-window mode

Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: NA
Bug reproducible on current stable build (App Version, iOS Version): Yes M122
Bug reproducible on the current beta channel build (App Version, iOS Version): Yes M123

Link to video:
https://drive.google.com/file/d/1Q05jD_LHTwH--1vX29fTqrgNfXg-z7tQ/view?usp=drive_link&amp;resourcekey=0-D9trP3PRkuRS7rvcem6b8g
</content>
    </entry>
    <entry>
        <id>327473664</id>
        <title>(Windows) DComp pending frames improvements</title>
        <author>
            <name>su...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473664"/>
        <updated>2024-02-28T23:51:51.971Z</updated>
        <summary>-</summary>
        <content type="html">DCompPresenter (like DirectCompositionChildSurfaceWin before it) uses D3D11 event queries to track GPU work for each frame. These queries are polled on the GPU main thread at vblank time (posted from VSyncThreadWin) and used to send PresentationFeedback back to Viz.

It might be better to instead use EnqueueSetEvent and either 1) poll the event handles on the vsync thread which can be done since there's no involvement of the D3D11 immediate context, or 2) use WaitableEventWatcher or similar to issue a callback when the event signals. The latter would be a larger change in behavior from the current implementation so I'm inclined to go with the first option.</content>
    </entry>
    <entry>
        <id>327502550</id>
        <title>updater: integration_tests_helper and absl command line args conflict</title>
        <author>
            <name>so...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327502550"/>
        <updated>2024-02-28T23:49:11.768Z</updated>
        <summary>-</summary>
        <content type="html">When `GTEST_HAS_ABSL` is defined, `--version` command line argument of `updater_integration_tests_helper.exe` conflicts with the `--version` defined by `absl` usage flags.</content>
    </entry>
    <entry>
        <id>327501273</id>
        <title>Tests are failing: web_app_browsertest.cc(1351): Value of: hit_the_bottom_right\n Actual: false\nExpected: true</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327501273"/>
        <updated>2024-02-28T23:40:57.646Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
web_app_browsertest.cc(1351): Value of: hit_the_bottom_right\n  Actual: false\nExpected: true

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/WebAppBrowserTest.WindowsOffsetForMultiWindowPWA


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/169a9a97d247d4737b15fd62602c8af7

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327473151</id>
        <title>[Graphics]: 1 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473151"/>
        <updated>2024-02-28T23:39:42.034Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260818:1263761:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=193536cb-8ddf-4d57-a82e-c3b55b2b3b83

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=193536cb-8ddf-4d57-a82e-c3b55b2b3b83

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/filter_terrain_svg
      262.11%: 5.3835 -&gt; 19.49435 unitless

Top 1 affected measurements in mac-laptop_high_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/filter_terrain_svg
      262.11%: 5.3835 -&gt; 19.49435 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1260817..1263761
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/08294ff5efd6e8902f1988d405fa9501e496ee8d..bf8df6003bc7a88b912529e02450b49cf7023280
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/23c32da48ae3f5f146dbd60b8b7fe4416f3750b4..efea7bb8ccb67db20bc6c3cf85996ef1edcb895f</content>
    </entry>
    <entry>
        <id>327498504</id>
        <title>CastMediaNotificationItemTest.MediaPositionUpdate is flaky on win11-arm64-rel-tests</title>
        <author>
            <name>ku...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327498504"/>
        <updated>2024-02-28T23:31:31.811Z</updated>
        <summary>-</summary>
        <content type="html">The first test case for CastMediaNotificationItemTest.MediaPositionUpdate is flaky and failing 12% of the time.

https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Ftest%3Aunit_tests%2FCastMediaNotificationItemTest.MediaPositionUpdate?q=VHASH%3A99adc6826e0b01e1

```
  {
    // Test that media position updated correctly with playing video.
    auto status = MediaStatus::New();
    status-&gt;play_state = MediaStatus::PlayState::PLAYING;
    status-&gt;duration = duration;
    status-&gt;current_time = current_time;
    EXPECT_CALL(view_, UpdateWithMediaPosition(_))
        .WillOnce([&amp;](const media_session::MediaPosition&amp; position) {
          EXPECT_EQ(1.0, position.playback_rate());
          EXPECT_EQ(duration, position.duration());
          EXPECT_NEAR(current_time.InSecondsF(),
                      position.GetPosition().InSecondsF(), 1e-3);
        });
    item_-&gt;OnMediaStatusUpdated(std::move(status));
  }
```

The delta in the media position ranged from 0.005~0.001 when fail on win11-arm64-rel-tests. Maybe the bot is slower?

Hi David, based on your improvement in https://crrev.com/c/2945084, what's your suggestion for win11-arm builders?</content>
    </entry>
    <entry>
        <id>327468390</id>
        <title>file:///storage/emulated/0/Download/Wed%20Feb%2028%202024%2015_49_13%20GMT-0500%20(Eastern%20Standar</title>
        <author>
            <name>ma...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327468390"/>
        <updated>2024-02-28T23:05:53.182Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. https://groups.google.com/a/chromium.org/d/msgid/blink-dev/CALEeEUCSym%2BRaquhSMyAjwEF09dWS3zLJk97kj8XaoCscL61Fg%40mail.gmail.com
2. 
3. 

# Problem Description
https://www.google.com/search?q=https+%2F%2Fwww.google.com%2Fandroid%2Fdevicemanager+u%3D0&amp;sca_esv=a1ed381ddb91d5f7&amp;sca_upv=1&amp;sxsrf=ACQVn09mpkark1qlgIhcTL6UPTjaESKGqA%3A1709160922251&amp;ei=2rnfZd2DD_i_kPIP6tWPiAo&amp;oq=https+%2F%2Fwww.google.com&amp;gs_lp=EhNtb2JpbGUtZ3dzLXdpei1zZXJwIhZodHRwcyAvL3d3dy5nb29nbGUuY29tKgIIAzIEECMYJzIKEAAYgAQYFBiHAjIQEAAYgAQYFBiHAhixAxiDATIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgAQyBRAAGIAESL52UMsRWMUscAB4AJABAJgBnASgAfAcqgEKMC4xNi4yLjUtMbgBAcgBAPgBAZgCCaACnw3CAgUQIRigAcICBhAAGBYYHpgDAIgGAZIHBTAuNi4z&amp;sclient=mobile-gws-wiz-serp

# Summary
file:///storage/emulated/0/Download/Wed%20Feb%2028%202024%2015_49_13%20GMT-0500%20(Eastern%20Standar

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>327495464</id>
        <title>Tests are failing: privacy_budget_browsertest.cc(860): Value of: seen_metrics\nExpected: contains at least one element that has a first field that type (type: 8-byte ...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327495464"/>
        <updated>2024-02-28T22:56:20.457Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
privacy_budget_browsertest.cc(860): Value of: seen_metrics\nExpected: contains at least one element that has a first field that type (type: 8-byte object &lt;07-00 00-00 00-00 00-00&gt;), and has a second field that is equal to 201217\n  Actual: { (0, 0), (7, 2736387613), (256, 0), (263, 3586087975), (512, 1), (519, 8896980769124590340), (768, 33), (775, -3903604747494429437), (1031, 691201), (1287, 691457), (1543, 691713), (1799, 692225), (896956215682477568, 1), (11181185366848792576, 0) }

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PrivacyBudgetMetaExperimentBrowserTestWithUkmRecording.ReportsEncounteredSurfacesAndDocumentCreatedMetrics


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/749c45d2161724a7e884d37fab3f83d5

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327494278</id>
        <title>http/tests/xmlhttprequest/ontimeout-event-override-after-failure.html flaky on win11-arm and win-rel</title>
        <author>
            <name>ku...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327494278"/>
        <updated>2024-02-28T22:48:38.090Z</updated>
        <summary>-</summary>
        <content type="html">Web Test http/tests/xmlhttprequest/ontimeout-event-override-after-failure.html is flaky on Windows

The following web test is flaky on Windows:

http/tests/xmlhttprequest/ontimeout-event-override-after-failure.html

More than 50% of the runs were failing and causing build failures.

https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fxmlhttprequest%2Fontimeout-event-override-after-failure.html?q=VHASH%3A9b30675a77baf900
https://ci.chromium.org/ui/test/chromium/ninja%3A%2F%2F%3Ablink_web_tests%2Fhttp%2Ftests%2Fxmlhttprequest%2Fontimeout-event-override-after-failure.html?q=V%3Abuilder%3Dwin-rel+</content>
    </entry>
    <entry>
        <id>327493665</id>
        <title>Tests are failing: ax_tree.cc(1439): Check failed: false. After a tree update, there is a tree inconsistency.</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327493665"/>
        <updated>2024-02-28T22:41:04.132Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
ax_tree.cc(1439): Check failed: false. After a tree update, there is a tree inconsistency.

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.ViewerPropertiesDialog/All.0
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.ViewerPropertiesDialog/All.1
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.Fullscreen/All.1
- ninja://chrome/test:browser_tests/PDFExtensionJSTest.Fullscreen/All.0


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/5b40c92d30baee9feda7248acb0f8a25

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>327457586</id>
        <title>Write unit tests for scrollbar dimension calculations</title>
        <author>
            <name>ga...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327457586"/>
        <updated>2024-02-28T22:18:23.227Z</updated>
        <summary>-</summary>
        <content type="html">Write unit tests for composited and non-composited scrollbar dimension calculations.
Follow up to https://crbug.com/327458810
</content>
    </entry>
    <entry>
        <id>327488620</id>
        <title>Make DeprecatedLayoutImmediately calls go away</title>
        <author>
            <name>dp...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327488620"/>
        <updated>2024-02-28T22:09:29.360Z</updated>
        <summary>-</summary>
        <content type="html">Most people should not be calling DeprecatedLayoutImmedately. We should update many (all?) of the callers to get the effect they need without requiring a synchronous layout.</content>
    </entry>
    <entry>
        <id>327458810</id>
        <title>Fluent overlay scrolllbar non-composited minimal mode thumb has wrong dimensions</title>
        <author>
            <name>ga...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327458810"/>
        <updated>2024-02-28T22:04:09.782Z</updated>
        <summary>-</summary>
        <content type="html">The non composited minimal mode thumb is missing the last step in the rect's size calculation, casting the rectF with the calculations to an enclosingRect. Currently, the results of the calculation are truncated.
Composited calculation: https://source.chromium.org/chromium/chromium/src/+/main:cc/layers/scrollbar_layer_impl_base.cc;l=149;drc=f4a00cc248dd2dc8ec8759fb51620d47b5114090;bpv=0;bpt=1
Non-composited: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/scroll/scrollbar_theme_fluent.cc;l=226?q=scrollbarthemefluent</content>
    </entry>
    <entry>
        <id>327467653</id>
        <title>Overlay timeout spinner is broken</title>
        <author>
            <name>al...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327467653"/>
        <updated>2024-02-28T21:58:20.535Z</updated>
        <summary>-</summary>
        <content type="html">The "spinner" which is supposed to appear when a page is about to, but hasn't yet, timed out appears to be broken. To the best of my memory, it doesn't appear on Desktop, and on Android we have to comment out the actual spinner binding, otherwise the overlay rendering appears to hang and never progress.</content>
    </entry>
    <entry>
        <id>327486153</id>
        <title>mediasource_MP4_AACLC_AVC_pipeline_integration_fuzzer.exe: CHECK failure: false. Unsupported pixel format: 73 in ffmpeg_common.cc</title>
        <author>
            <name>24...@project.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327486153"/>
        <updated>2024-02-28T21:51:47.443Z</updated>
        <summary>-</summary>
        <content type="html">Detailed Report: https://clusterfuzz.com/testcase?key=5969847157981184

Fuzzing Engine: libFuzzer
Fuzz Target: mediasource_MP4_AACLC_AVC_pipeline_integration_fuzzer
Job Type: windows_libfuzzer_chrome_asan
Platform Id: windows

Crash Type: CHECK failure
Crash Address: 
Crash State:
  false. Unsupported pixel format: 73 in ffmpeg_common.cc
  logging::NotReachedLogMessage::~NotReachedLogMessage
  media::AVPixelFormatToVideoPixelFormat
  
Sanitizer: address (ASAN)

Regressed: https://clusterfuzz.com/revisions?job=windows_libfuzzer_chrome_asan&amp;range=1264469:1264470

Reproducer Testcase: https://clusterfuzz.com/download?testcase_id=5969847157981184

Issue filed automatically.

See https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md for instructions on reproducing this bug locally.</content>
    </entry>
    <entry>
        <id>327485854</id>
        <title>Change re-auth bubble strings as per new UX alignment</title>
        <author>
            <name>vi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327485854"/>
        <updated>2024-02-28T21:51:24.325Z</updated>
        <summary>-</summary>
        <content type="html">Attached is the mock for the new strings for the mandatory re-auth opt-in bubble.</content>
    </entry>
    <entry>
        <id>327483127</id>
        <title>document.execCommand('copy') does not respect Browser Permission Policy clipboard-write</title>
        <author>
            <name>vi...@meta.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327483127"/>
        <updated>2024-02-28T21:31:45.641Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Restrict the clipboard-write permission on a page using Browser Permission Policy
2. Select text on the page then execute `document.execCommand('copy')` in the JS console
3. Note no permission policy violation is signalled in the JS console, no report is generated in the Reporting API tab, and the text is copied to the clipboard.

# Problem Description
document.execCommand('copy') does not respect Browser Permission Policy clipboard-write.

I didn't test the dual document.execCommand('paste') and clipboard-read, but I suspect they are also broken.

This is counterintuitive with the purpose of Permissions Policy to prevent JS access to the clipboard, because malicious actors (via XSS) will just use this API to do so, if the Clipboard API is blocked with a permission policy.

# Summary
document.execCommand('copy') does not respect Browser Permission Policy clipboard-write

# Additional Data
Category: JavaScript \
Chrome Channel: Stable \
Regression: No</content>
    </entry>
    <entry>
        <id>327481717</id>
        <title>Implement plan for aborted promos</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327481717"/>
        <updated>2024-02-28T21:26:48.123Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327481701</id>
        <title>Propose plan for aborted promos</title>
        <author>
            <name>df...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327481701"/>
        <updated>2024-02-28T21:26:14.494Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>327478398</id>
        <title>pytype presubmit timeouts</title>
        <author>
            <name>cb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327478398"/>
        <updated>2024-02-28T21:20:05.156Z</updated>
        <summary>-</summary>
        <content type="html">Pytype now regularly hits the 15min marks with the more updated version
https://ci.chromium.org/ui/p/v8/builders/try/crossbench_presubmit
This blocks me a bit at times with development (sometimes it gets a faster run, not sure why)

I see several ways to improve this (not sure what's feasible on the infra side):

- Dedicated tryjob so it can run on more threads
- Cache the pytype `.pytype/pyi` files between runs to speed up differential analysis</content>
    </entry>
    <entry>
        <id>327479959</id>
        <title>[Test Reviver] Passing in selected builders: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest#testExportHelpSite </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327479959"/>
        <updated>2024-02-28T21:19:58.677Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest#testExportHelpSite would pass in these builders if reenabled.

Builder: android-12l-x64-dbg-tests(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-oreo-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-arm64-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Builder: android-pie-x86-rel(CI)
History: P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest%23testExportHelpSite
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest%23testExportHelpSite
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.password_manager.settings.PasswordSettingsExportTest%23testExportHelpSite

==========================================
* We are limited to running the disabled test in only above reviver builders, but not all testing variants. If this test was disabled due to failing in one of the builders above, it can be reenabled. If it was failing due to other builders, the bug should be closed as WontFix.
==========================================
</content>
    </entry>
    <entry>
        <id>327479904</id>
        <title>[Test Reviver] Consistently failing: ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testLaunchIncognitoURL </title>
        <author>
            <name>ch...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327479904"/>
        <updated>2024-02-28T21:19:53.735Z</updated>
        <summary>-</summary>
        <content type="html">Based on following past run history:
ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.customtabs.CustomTabActivityTest#testLaunchIncognitoURL is consistently failing in the builders below, and the failure should be reliably reproducible in those builders. Please decide what action to take for this test:
1. Reduce the scope of the test if it can still cover bugs adequately (e.g. making an integration test into a unit test)
2. Delete the test if not useful or feasible to fix
3. Fix the test

Builder: android-12l-x64-dbg-tests(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-oreo-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-arm64-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Builder: android-pie-x86-rel(CI)
History: F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F F 

Test History View:
REVIVER history:
https://ci.chromium.org/ui/test/chromium%3Areviver/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testLaunchIncognitoURL
CI history:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testLaunchIncognitoURL
TRY history:
https://ci.chromium.org/ui/test/chromium%3Atry/ninja%3A%2F%2Fchrome%2Fandroid%3Achrome_public_test_apk%2Forg.chromium.chrome.browser.customtabs.CustomTabActivityTest%23testLaunchIncognitoURL

</content>
    </entry>
    <entry>
        <id>327480197</id>
        <title>support reduce user-agent android version and device model on webview</title>
        <author>
            <name>vi...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327480197"/>
        <updated>2024-02-28T21:18:47.408Z</updated>
        <summary>-</summary>
        <content type="html">currently, webview use its own logic to construct the user-agent instead of using the unified platform under chrome flag.
adding support reduce the user-agent android version and device model, build number on webview.</content>
    </entry>
    <entry>
        <id>327478130</id>
        <title>Strange auto-update interaction with cipd depot_tools bootstrap on mac arm64</title>
        <author>
            <name>ia...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327478130"/>
        <updated>2024-02-28T21:14:00.224Z</updated>
        <summary>-</summary>
        <content type="html">See thread https://chat.google.com/room/AAAAXGgrwSo/i75UijcgQjU

It seems that something is going on between the mac arm64 and amd64 version of cipd.

This needs some investigation (including e.g. that the arm64 package might accidentally contain the amd64 binary?).</content>
    </entry>
    <entry>
        <id>327475231</id>
        <title>Trying to download my own app from github and download marked as suspicious.</title>
        <author>
            <name>vi...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327475231"/>
        <updated>2024-02-28T20:56:44.910Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  open website : https://github.com/Victoare/SR-WLED-audio-server-win/releases/tag/v1.1.0
2.  download : https://github.com/Victoare/SR-WLED-audio-server-win/releases/download/v1.1.0/WledSRServer-v1.1.0.zip
3.  The download is partially blocked because it is suspicious. It let us scan and after a succesfull scan it allows the download.

# Problem Description
This is a Dotnet8 self containing exe, maybe the built in Microsoft famework download triggers it?
The source code can be found on the github page.
The previous versions are worked without flagging.

I had issues with other virus scanners (virustotal marked this file as malicious as well) but after submited the program to BitDeffender and McAfee the detections went from 17 down to 2.

# Summary
Trying to download my own app from github and download marked as suspicious.

# Additional Data
Category: Network / Downloading \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327473659</id>
        <title>filter css from parent should be shown on img and svg</title>
        <author>
            <name>ks...@icloud.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473659"/>
        <updated>2024-02-28T20:49:24.415Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : 121.0.6167.185 (Official Build) (64-bit) (cohort: Stable) 
OS                   : Windows 10 Version 22H2 (Build 19045.3930)

What steps will reproduce the problem?
On a parent element add css styling attribute filter, with whatever valid value you want.
have a child of this element be an image element (&lt;img&gt; or &lt;svg&gt;)

What is the expected result?
Styles for the img or svg element include the filter attribute from the parent element.

What happens instead?
Styles for the img or svg element do not include the filter attribute from the parent. The developer will be confused why the image looks different than the source, having to first realize that a parent has a filter attribute and then hunt down where that filter attribute is.


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!

This is a simple example I wrote with w3schools editor:

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
body {
  filter: grayscale(100%);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;The filter Property&lt;/h1&gt;

&lt;p&gt;Convert the image to grayscale:&lt;/p&gt;

&lt;img src="https://www.w3schools.com/cssref/pineapple.jpg" alt="Pineapple" width="300" height="300"&gt;
&lt;svg width="200" height="200" xmlns="http://www.w3.org/2000/svg"&gt;
  &lt;rect width="100" height="100" x="50" y="50" fill="red" /&gt;
&lt;/svg&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The filter property is not supported in Edge 12 or Internet Explorer.&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
    </entry>
    <entry>
        <id>327473301</id>
        <title>Attribution Internals visual / accessibility improvements</title>
        <author>
            <name>ap...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327473301"/>
        <updated>2024-02-28T20:48:18.935Z</updated>
        <summary>-</summary>
        <content type="html">We can make a variety of improvements here.</content>
    </entry>
    <entry>
        <id>327458809</id>
        <title>Chromoting must not use CGDisplayStream, CGDisplayCreateImage, CGWindowListCreateImage APIs</title>
        <author>
            <name>av...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/327458809"/>
        <updated>2024-02-28T20:37:30.408Z</updated>
        <summary>-</summary>
        <content type="html">The CGDisplayStream, CGDisplayCreateImage, and CGWindowListCreateImage APIs are likely entirely going away in macOS 15. Chromoting must ensure that it (either directly or indirectly) only uses ScreenCaptureKit.</content>
    </entry>
    <entry>
        <id>327467399</id>
        <title>Typing code in console yields different results than pasting code.</title>
        <author>
            <name>fr...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327467399"/>
        <updated>2024-02-28T20:36:08.171Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open the console and manually TYPE the following three lines:
  var e = Error('old')
  e.message = 'new'
  throw e
2. Note that the output will be 'Uncaught Error: old'.
3. Now PASTE those three lines (or use the 'up' cursor key to fetch each of those three lines again) and execute them.
4. Note that the output will be 'Uncaught Error: new'.

# Problem Description
I believe that 'new' is the expected answer.  That's what Firefox returns in all cases.  My suspicion is that the helpful autocomplete or answer previews one gets while typing in the console is having some side effects that affect the final answer.

# Summary
Typing code in console yields different results than pasting code.

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>327470257</id>
        <title>[Chrome-Fuchsia Perf Size Sheriff]: 2 regressions in sizes</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/327470257"/>
        <updated>2024-02-28T20:34:27.130Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1266514:1266560:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=72ca3d58-9600-4c49-8518-ad17618dc4b4

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=72ca3d58-9600-4c49-8518-ad17618dc4b4

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromeFYIInternal/fuchsia-fyi-arm64-size/sizes/web_engine_compressed
        0.53%: 42729472.0 -&gt; 42954752.0 sizeInBytes
  - ChromeFYIInternal/fuchsia-fyi-arm64-size/sizes/chrome_fuchsia_compressed
        0.49%: 43425792.0 -&gt; 43638784.0 sizeInBytes

Top 2 affected measurements in fuchsia-fyi-arm64-size:
  - sizes/web_engine_compressed
        0.53%: 42729472.0 -&gt; 42954752.0 sizeInBytes
  - sizes/chrome_fuchsia_compressed
        0.49%: 43425792.0 -&gt; 43638784.0 sizeInBytes

Regressions grouped by sizes includes data from the following benchmarks with listed owners:
  sizes: 
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/3a18c220052dac99ac728f3fee019d30adcf2412..cf1eae3ec49ea34e3ea49bf3d9d8ba630c941bf0
  Chromium Commit Position: https://crrev.com/1266513..1266560
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/7160fc436c967688ec8c12bce5b96723089dc4b3..ffbbc12861f55c50d80cf14e12f990becb352d10
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/95977d8a6ae26f83be61ddf32d4051ef757aa4af..95977d8a6ae26f83be61ddf32d4051ef757aa4af</content>
    </entry>
</feed>