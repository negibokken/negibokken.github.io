<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>1970-01-01T00:28:32.938Z</updated>
    <entry>
        <id>333957915</id>
        <title>"Page unresponsive" after creating blob URL</title>
        <author>
            <name>aw...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333957915"/>
        <updated>1970-01-01T00:28:32.938Z</updated>
        <summary>-</summary>
        <content type="html">Opening this as a public version of bug 40062699 (Chrome: Crash Report - [Renderer hang] blink::PublicURLManager::RegisterURL), for investigating the cause of page hangs after using URL.createObjectUrl.

For more information see: https://docs.google.com/document/d/110PHqQ1U84RekgXTzC1XPOEMZtt_9889OGd2ZRfQOb0/edit?usp=sharing</content>
    </entry>
    <entry>
        <id>333962768</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962768"/>
        <updated>1970-01-01T00:28:32.938Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285960:1286004:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=01f9bff6-4182-4c65-ba08-ac0a8c5b187b

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=01f9bff6-4182-4c65-ba08-ac0a8c5b187b
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=01f9bff6-4182-4c65-ba08-ac0a8c5b187b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full:cpp_sum/browse_news/browse_news_flipboard_2020
       35.63%: 19.453 -&gt; 26.3835 

Top 1 affected measurements in win-10-perf:
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full:cpp_sum/browse_news/browse_news_flipboard_2020
       35.63%: 19.453 -&gt; 26.3835 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971750</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 2 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971750"/>
        <updated>1970-01-01T00:28:32.937Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286050:1286085:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f396607d-3c29-4a77-9345-4f8e67d5fe71

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f396607d-3c29-4a77-9345-4f8e67d5fe71

Top 2 regressions (out of 24, with 22 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_media/browse_media_tumblr_2018
       65.30%: 139887308.5 -&gt; 231236031.5 sizeInBytes
  - ChromiumPerf/win-10_laptop_low_end-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_tools/browse_tools_maps_2019
       21.75%: 21091804.0 -&gt; 25680142.5 sizeInBytes

Top 2 affected measurements in win-10_laptop_low_end-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_media/browse_media_tumblr_2018
       65.30%: 139887308.5 -&gt; 231236031.5 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/browse_tools/browse_tools_maps_2019
       21.75%: 21091804.0 -&gt; 25680142.5 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286049..1286076
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/1c35107cdca725ca700f1c8c3ea39d690e4cfc3e..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333940413</id>
        <title>Updating textarea defaultValue breaks minlength validation</title>
        <author>
            <name>ju...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333940413"/>
        <updated>1970-01-01T00:28:32.937Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Add a textarea with minlength (say, 5)
2. Type fewer than 5 characters into the textarea
3. See textarea.validity.valid == false, CSS :invalid matches
4. Set textarea.defaultValue through JavaScript to something different than its current value
5. See textarea.validity.valid == true, CSS :invalid still matches

A HTML file that showcases the problem is attached.

# Problem Description
When the defaultValue of a textarea is changed with JavaScript, it undoes or bypasses minlength constraint validation. The textarea's ValidityState will go from { valid: false, tooShort: true } to { valid: true, tooShort: false }. This can be a problem in frameworks like React if the defaultValue is set to a state variable and can change. Safari and Firefox do not share this behavior.

I would expect that changing the defaultValue doesn't change whether or not the textarea's actual value is valid, and that this validation would match the CSS :invalid state.

# Summary
Updating textarea defaultValue breaks minlength validation

# Custom Questions
#### Which component does this fall under?
Blink&gt;Forms

#### Does this work in other browsers? 
Yes - This is just a Chrome problem

# Additional Data
Category: API \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>333886790</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886790"/>
        <updated>1970-01-01T00:28:32.937Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285928:1286017:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=a8f3e444-7723-42ba-8e69-d647b43a34c4

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=a8f3e444-7723-42ba-8e69-d647b43a34c4

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/v8.browsing_mobile/Compile:duration_avg/browse_news/browse_news_globo_2019
        4.23%: 337.947 -&gt; 352.25 

Top 1 affected measurements in android-pixel6-pro-perf:
  - v8.browsing_mobile/Compile:duration_avg/browse_news/browse_news_globo_2019
        4.23%: 337.947 -&gt; 352.25 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334084140</id>
        <title>clank instrumented build on aarch64: multiple __cyg_profile_func_enter_bare in one toplevel function</title>
        <author>
            <name>pa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334084140"/>
        <updated>1970-01-01T00:28:32.937Z</updated>
        <summary>-</summary>
        <content type="html">For the Clank orderfile generator we rely on `-finstrument-function-entry-bare` inserting the hook `_cyg_profile_func_enter_bare` after inlining. We then rely on identical inline decisions when we switch to the regular (uninstrumented build).

We are working now on switching the orderfile generator to aarch64. I noticed that for aarch64 we often have multiple calls to the hook from one toplevel function.

For example, here is a disassembly of `_ZN5blink14ResourceLoader16DidFinishLoadingEN4base9TimeTicksElml` (not in full, only the beginning):

```
 5b2378c: d503233f     	paciasp
 5b23790: d102c3ff     	sub	sp, sp, #0xb0
 5b23794: a9067bfd     	stp	x29, x30, [sp, #0x60]
 5b23798: f9003bf9     	str	x25, [sp, #0x70]
 5b2379c: a9085ff8     	stp	x24, x23, [sp, #0x80]
 5b237a0: a90957f6     	stp	x22, x21, [sp, #0x90]
 5b237a4: a90a4ff4     	stp	x20, x19, [sp, #0xa0]
 5b237a8: 910183fd     	add	x29, sp, #0x60
 5b237ac: aa0403f5     	mov	x21, x4
 5b237b0: aa0303f7     	mov	x23, x3
 5b237b4: aa0203f6     	mov	x22, x2
 5b237b8: aa0103f3     	mov	x19, x1
 5b237bc: aa0003f4     	mov	x20, x0
 5b237c0: 95b049e4     	bl	0xc735f50 &lt;__cyg_profile_func_enter_bare&gt;
 5b237c4: f00373d8     	adrp	x24, 0xc99e000 &lt;__emutls_v._ZN8perfetto10DataSourceIN2v88internal14CodeDataSourceENS2_20CodeDataSourceTraitsEE10tls_state_E+0x18&gt;
 5b237c8: b9804288     	ldrsw	x8, [x20, #0x40]
 5b237cc: f9404309     	ldr	x9, [x24, #0x80]
 5b237d0: 8a080539     	and	x25, x9, x8, lsl #1
 5b237d4: 395e4728     	ldrb	w8, [x25, #0x791]
 5b237d8: 37180ac8     	tbnz	w8, #0x3, 0x5b23930 &lt;_ZN5blink14ResourceLoader16DidFinishLoadingEN4base9TimeTicksElml+0x1a4&gt;
 5b237dc: 95b049dd     	bl	0xc735f50 &lt;__cyg_profile_func_enter_bare&gt;
 5b237e0: f9047736     	str	x22, [x25, #0x8e8]
 5b237e4: f9404309     	ldr	x9, [x24, #0x80]
 5b237e8: b9804288     	ldrsw	x8, [x20, #0x40]
 5b237ec: 8a080539     	and	x25, x9, x8, lsl #1
 5b237f0: 95b049d8     	bl	0xc735f50 &lt;__cyg_profile_func_enter_bare&gt;
 5b237f4: f9047b37     	str	x23, [x25, #0x8f0]
 5b237f8: f9404309     	ldr	x9, [x24, #0x80]
 5b237fc: b9804288     	ldrsw	x8, [x20, #0x40]
 5b23800: 8a080537     	and	x23, x9, x8, lsl #1
 5b23804: 95b049d3     	bl	0xc735f50 &lt;__cyg_profile_func_enter_bare&gt;
 5b23808: f9047ef5     	str	x21, [x23, #0x8f8]
 5b2380c: b9806289     	ldrsw	x9, [x20, #0x60]
 5b23810: f900a693     	str	x19, [x20, #0x148]
 5b23814: 340002e9     	cbz	w9, 0x5b23870 &lt;_ZN5blink14ResourceLoader16DidFinishLoadingEN4base9TimeTicksElml+0xe4&gt;
 5b23818: 3941ea8a     	ldrb	w10, [x20, #0x7a]
 5b2381c: f9404308     	ldr	x8, [x24, #0x80]
 5b23820: 370002aa     	tbnz	w10, #0x0, 0x5b23874 &lt;_ZN5blink14ResourceLoader16DidFinishLoadingEN4base9TimeTicksElml+0xe8&gt;
 5b23824: 8a090509     	and	x9, x8, x9, lsl #1
 5b23828: 3940d929     	ldrb	w9, [x9, #0x36]
 5b2382c: 35000249     	cbnz	w9, 0x5b23874 &lt;_ZN5blink14ResourceLoader16DidFinishLoadingEN4base9TimeTicksElml+0xe8&gt;
 5b23830: 39422289     	ldrb	w9, [x20, #0x88]
 5b23834: 37000069     	tbnz	w9, #0x0, 0x5b23840 &lt;_ZN5blink14ResourceLoader16DidFinishLoadingEN4base9TimeTicksElml+0xb4&gt;
```

I did not check whether it is a result of some aarch64 specifics or just a result of Clank/arm32 heavily discouraging inlining (for binary size reasons).

We recently changed the value of `-Wl,-mllvm,-import-instr-limit`, and it broke the orderfile pipeline, but I cannot attribute this breakage to the specific problem in this bug. It could be a combination of factors.

Here are our link flags (we are using thinlto and PGO):
```
-Wl,--version-script=gen/chrome/android/libmonochrome_64_linker_script.txt -Wl,--hash-style=gnu -Wl,-soname,libmonochrome_64.so --partitioned-library -Werror -fuse-ld=lld -Wl,--fatal-warnings -Wl,--build-id=sha1 -fPIC -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--color-diagnostics -Wl,-mllvm,-instcombine-lower-dbg-declare=0 -Wl,-mllvm,-split-threshold-for-reg-with-hint=0 -fexperimental-relative-c++-abi-vtables -Wl,--thinlto-cache-dir=thinlto-cache -Wl,--thinlto-cache-policy=cache_size=10\%:cache_size_bytes=40g:cache_size_files=100000 -flto=thin -Wl,--thinlto-jobs=all -Wl,-mllvm,-import-instr-limit=5 -Wl,-mllvm,-disable-auto-upgrade-debug-info -fwhole-program-vtables -Wl,--no-rosegment -Wl,--undefined-version -Wl,--exclude-libs=libvpx_assembly_arm.a -Wl,-z,max-page-size=16384 --target=aarch64-linux-android26 -Wl,-mllvm,-enable-machine-outliner=never -no-canonical-prefixes -Wl,--warn-shared-textrel -Wl,-O2 -Wl,--gc-sections -Wl,-z,defs -Wl,--as-needed --unwindlib=none -nostdlib++ --sysroot=../../third_party/android_toolchain/ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot -Wl,-mllvm,-enable-ext-tsp-block-placement=1 -Wl,-u,__cyg_profile_func_enter_bare -Wl,-z,force-bti -Wl,--lto-O2 -Wl,--symbol-ordering-file -Wl,../../clank/orderfiles/orderfile.arm.out -Wl,--no-warn-symbol-ordering -Wl,--pack-dyn-relocs=relr,--use-android-relr-tags -Wl,-wrap,calloc -Wl,-wrap,free -Wl,-wrap,malloc -Wl,-wrap,memalign -Wl,-wrap,posix_memalign -Wl,-wrap,pvalloc -Wl,-wrap,realloc -Wl,-wrap,valloc -Wl,-wrap,malloc_usable_size -Wl,-wrap,realpath -Wl,-wrap,strdup -Wl,-wrap,strndup -Wl,-wrap,getcwd -Wl,-wrap,asprintf -Wl,-wrap,vasprintf -Wl,--dynamic-linker,/system/bin/linker64 -o "./lib.unstripped/libmonochrome_64__combined.so" @"./libmonochrome_64__combined.so.rsp"
```

... then follow a few libs

Contents of `libmonochrome_64__combined.so.rsp`:
```
-Wl,--whole-archive [... many objects ...] -Wl,--no-whole-archive ../../third_party/llvm-build/Release+Asserts/lib/clang/19/lib/linux/libclang_rt.builtins-aarch64-android.a -ldl -lm -landroid -llog -ljnigraphics ../../base/android/library_loader/anchor_functions.lds -lGLESv2 -laaudio -lnativewindow -lmediandk
```

args:
```
enable_resource_allowlist_generation = false
is_chrome_branded = true
is_debug = false
is_official_build = true
symbol_level = 1
target_os = "android"
use_remoteexec = true
use_order_profiling = true
devtools_instrumentation_dumping = true
target_cpu = "arm64"
```</content>
    </entry>
    <entry>
        <id>333971749</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971749"/>
        <updated>1970-01-01T00:28:32.937Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2fdd8285-27b5-4144-80f5-44a6791b9750

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2fdd8285-27b5-4144-80f5-44a6791b9750

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_cnn.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_cnn.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971748</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971748"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285994:1286011:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=380ed717-f626-440d-85a1-738eeb860124

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=380ed717-f626-440d-85a1-738eeb860124
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=380ed717-f626-440d-85a1-738eeb860124

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:sweep:cpp_sum/browse_news/browse_news_flipboard_2020
       55.30%: 7.778 -&gt; 12.079 

Top 1 affected measurements in win-10-perf:
  - v8.browsing_desktop/v8:gc:cycle:main_thread:full:incremental:sweep:cpp_sum/browse_news/browse_news_flipboard_2020
       55.30%: 7.778 -&gt; 12.079 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971747</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971747"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286282:1286321:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=34858649-9b32-47ea-8322-736f88958bf3

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=34858649-9b32-47ea-8322-736f88958bf3

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-go-wembley_webview-perf/v8.browsing_mobile/v8:gc:cycle:main_thread:cpp_max/browse_media/browse_media_youtube_2019
       20.93%: 27.948 -&gt; 33.798 

Top 1 affected measurements in android-go-wembley_webview-perf:
  - v8.browsing_mobile/v8:gc:cycle:main_thread:cpp_max/browse_media/browse_media_youtube_2019
       20.93%: 27.948 -&gt; 33.798 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886789</id>
        <title>[V8 Memory Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886789"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286282:1286321:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=34858649-9b32-47ea-8322-736f88958bf3

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=34858649-9b32-47ea-8322-736f88958bf3

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-go-wembley_webview-perf/v8.browsing_mobile/v8:gc:cycle:main_thread:cpp_max/browse_media/browse_media_youtube_2019
       20.93%: 27.948 -&gt; 33.798 

Top 1 affected measurements in android-go-wembley_webview-perf:
  - v8.browsing_mobile/v8:gc:cycle:main_thread:cpp_max/browse_media/browse_media_youtube_2019
       20.93%: 27.948 -&gt; 33.798 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334081602</id>
        <title>[2024 PE] - Desktop: NTP module titles have too much top padding</title>
        <author>
            <name>se...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334081602"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">Optical spacing corrections are needed for the title of modules on desktop New Tab Page. The current one looks unbalanced (there is too much top padding).

The top padding is 16px; i.e.:

```
#titleContainer {
    ...
    padding: 16px 16px 8px 16px;
}
```

We can fix the extra padding by updating the top padding to be 10px:

```
#titleContainer {
    ...
    padding: 10px 16px 8px 16px;
}
```

See the attached screenshot for a visual comparison.</content>
    </entry>
    <entry>
        <id>333976548</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976548"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286317:1286356:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4c1e0a84-5082-48b3-a49a-e1fef69b7e57

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4c1e0a84-5082-48b3-a49a-e1fef69b7e57

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/v8.browsing_desktop/JavaScript:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
        2.05%: 290.9715 -&gt; 296.943 

Top 1 affected measurements in mac-laptop_high_end-perf:
  - v8.browsing_desktop/JavaScript:duration_avg/browse_social/browse_social_tumblr_infinite_scroll_2018
        2.05%: 290.9715 -&gt; 296.943 

Regressions grouped by v8.browsing_desktop includes data from the following benchmarks with listed owners:
  v8.browsing_desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971746</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971746"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=c399b3c8-849a-4a1c-a680-3fe2c265fc0c

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=c399b3c8-849a-4a1c-a680-3fe2c265fc0c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_techcrunch.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_techcrunch.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886788</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886788"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286007:1286050:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=07391c43-8fb0-494d-9119-5d825bacac4a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=07391c43-8fb0-494d-9119-5d825bacac4a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/v8.browsing_mobile/V8-Only:duration_avg/browse_news/browse_news_qq_2019
        5.28%: 850.30347 -&gt; 895.219 

Top 1 affected measurements in android-pixel6-pro-perf:
  - v8.browsing_mobile/V8-Only:duration_avg/browse_news/browse_news_qq_2019
        5.28%: 850.30347 -&gt; 895.219 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333962766</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333962766"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b64734cd-5339-48d5-bb9a-9ec13dd4e568

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b64734cd-5339-48d5-bb9a-9ec13dd4e568

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googleplus.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googleplus.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334079392</id>
        <title>Audio input (microphone) is severely degraded during web Chrome based video conference calls [Please Make This Private]</title>
        <author>
            <name>hk...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334079392"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">Audio input (microphone) is severely degraded during web Chrome based video conference calls

* Please make this private, move to a more restrict component or use ACLs, thank you.

* Chrome Version [0]: 123.0.6312.122 (Official Build) (64-bit) 
* Lacros Version n/a
* OS: Linux Debian Linux $hostname 6.6.15-2rodete2-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.6.15-2rodete2 (2024-03-19) x86_64 GNU/Linux

What steps will reproduce the problem?

#### Scenario A

1. Chrome is running with a few windows and tabs, some audio and video input/output events are triggered in a few tabs, typically using 1 builtin laptop display plus 1 external monitor display (HDMI or USB-C)
2. Start/launch a new video conference session, eg Google Meet: https://meet.google.com/
3. Other people in the video conf/call report report that your audio input (microphone) is severely degraded and it can not be understood
4. The factors can cause this Chrome audio input degradation are not clear (performance based? audio isolation issues/regression between different tabs/apps?)

#### Scenario B

Other web apps/sites/tabs in Chrome are also using accessing microphone / audio input [1] marked by the Chrome red circle in the tab
Start/launch a new video conference session, eg Google Meet: https://meet.google.com/
As long as the other Chrome tabs/apps are using the microphone (red circle), audio input (mic) in the video conf/call is going to be degraded
As soon as all "red circle" tabs are close, audio input becomes audible / understandable again
The reproduction rate of scenario is very high (~ &gt; 75%)

What is the expected result?

* Have clear audio input (microphone) and output (speakers) so everyone in the call or video conf call can understand each other
* Have total isolation of different Chrome tabs/windows/apps running at the same time, ie prevent any noisy neighbor issues, one Chrome tab/app/window should not interference or impact another one including audio, video or general performance 

What happens instead?

* Audio input (microphone) is severely degraded in video conf/calls and nobody else in the call can understand you

#### Problem Description

Hi Chromium and Chrome Community, Dev, Maintainers, Power Users, Sponsors and Google Teams,

Some time between December 2023 and February 2024, it has been very challenging to have video conference calls using Chrome (with Debian Linux and Google Meet). Audio input (microphone) becomes severely degraded in a way that other people can not understand you (eg robotic, chopping, static, etc).

It has been a very frustrating experience in all the past months.

I still am a firm believer in this strong combo: Google Chrome + Linux + Google Meet. So changing the OS, browser or video conference platform (or even hardware platform) is not a appealing option.

I've been trying to discuss this issue with some people and so far I believe this is a Chrome issue.

I would love to talk more and better with folks from Google as well. I would be happy to share more details, logs, files and configuration in private channel.

Have you seen this or similar problem like this?

What is the cause?

How can we narrow it down?

Are there any workarounds?

Are there any actions or fixes to address this audio degradation and isolation problems in Chrome?

I am looking forward to hearing and collaboration with you.

Thank you,


[0] Chrome version:

Google Chrome	123.0.6312.122 (Official Build) (64-bit) 
Revision	31f8248cdd90acbac59f700b603fed0b5967ca50-refs/branch-heads/6312@{#824}
OS	Linux
JavaScript	V8 12.3.219.16
User Agent	Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Command Line	/usr/bin/google-chrome --enable-features=VaapiVideoDecodeLinuxGL,VaapiVideoEncoder --disable-features=WaylandFractionalScaleV1 --use-gl=angle --ozone-platform=wayland --flag-switches-begin --ozone-platform-hint=auto --flag-switches-end
Executable Path	/opt/google/chrome/google-chrome

[1] Examples

a. Salesforce:

https://issues.salesforce.com/issue/a028c00000yzhWi/omniwidget-opens-microphone-for-long-durations-in-chrome

https://appexchange.salesforce.com/appxListingDetail?listingId=a0N3A00000EJH4yUAH

https://amazon-connect.github.io/amazon-connect-salesforce-cti/docs/classic/release-notes/#522-february-2024

https://github.com/amazon-connect/amazon-connect-streams/issues/478

https://vector.lightning.force.com/lightning/setup/ImportedPackage/0A34M000000kHE6/Components/view

Speakeasy Click2Dial (Alphabet / Google)

[2] More environment information

Chrome: Version 123.0.6312.122 (Official Build) (64-bit)

Chrome CLI: google-chrome --enable-features=VaapiVideoDecodeLinuxGL,VaapiVideoEncoder --disable-features=WaylandFractionalScaleV1 --use-gl=angle --ozone-platform=wayland

Chrome CLI note: issue was first observed using no custom CLI, using X11 and with and without GPU/Hardware acceleration.

cat /etc/debian_version

rodete

cat /etc/lsb-release

DISTRIB_CODENAME=rodete DISTRIB_DESCRIPTION="Debian GNU/Linux rodete" DISTRIB_ID=Debian DISTRIB_RELEASE=rodete XVAR_CODENAME=rodete XVAR_RELEASE="rodete 20240402.02.06RL" XVAR_ROLE=laptop XVAR_TRACK=stable

uname -a

Linux $hostname 6.6.15-2rodete2-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.6.15-2rodete2 (2024-03-19) x86_64 GNU/Linux
</content>
    </entry>
    <entry>
        <id>333976547</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976547"/>
        <updated>1970-01-01T00:28:32.936Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286082:1286123:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=71a37236-0546-4812-8460-65c9de3d0a96

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=71a37236-0546-4812-8460-65c9de3d0a96

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/v8.browsing_mobile-future/JavaScript:duration_avg/browse_media/browse_media_tiktok_infinite_scroll_2021
        2.45%: 1020.104 -&gt; 1045.069 

Top 1 affected measurements in android-pixel6-pro-perf:
  - v8.browsing_mobile-future/JavaScript:duration_avg/browse_media/browse_media_tiktok_infinite_scroll_2021
        2.45%: 1020.104 -&gt; 1045.069 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333972299</id>
        <title>[Blink Storage]: 2 regressions in blink_perf.owp_storage</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333972299"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286008:1286076:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d14c1774-b500-4de4-98f1-63b55c739f5c

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d14c1774-b500-4de4-98f1-63b55c739f5c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/blink_perf.owp_storage/blob-perf-tiny/blob-perf-tiny.html
       13.62%: 29.911 -&gt; 33.986000000000004 ms

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - blink_perf.owp_storage/blob-perf-tiny/blob-perf-tiny.html
       13.62%: 29.911 -&gt; 33.986000000000004 ms

Regressions grouped by blink_perf.owp_storage includes data from the following benchmarks with listed owners:
  blink_perf.owp_storage: dmurph@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1286007..1286076
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/3a36d2b100d790f363601d661909ff23fe7e50c5..3a36d2b100d790f363601d661909ff23fe7e50c5
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/f591f2dcf1bfb00f25967d214776fee6b675e2ef..0567fc17863c733a58907e561ef2fdcba53c17f8</content>
    </entry>
    <entry>
        <id>333972298</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333972298"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=12342db7-4785-4bb7-af91-433ac6fe8417

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=12342db7-4785-4bb7-af91-433ac6fe8417

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_twitter.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_twitter.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334057053</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334057053"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f1223f76-23e5-4bb2-a71d-47279cb4090d

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f1223f76-23e5-4bb2-a71d-47279cb4090d

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahoosports.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_yahoosports.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971745</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971745"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=0cfb6dc9-8e0b-4d13-82d7-ad03be4b6c72

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=0cfb6dc9-8e0b-4d13-82d7-ad03be4b6c72

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_espn.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_espn.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333926704</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926704"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e1273bd1-9ea5-430c-8e8f-0f5411313c66

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e1273bd1-9ea5-430c-8e8f-0f5411313c66

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_facebook.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_facebook.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333972297</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333972297"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285559:1285615:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=72696433-df2f-491f-8a04-430ccba3f2ed

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=72696433-df2f-491f-8a04-430ccba3f2ed

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-go-wembley-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_news/browse_news_toi_2019
      285.31%: 11.066 -&gt; 42.638 

Top 1 affected measurements in android-go-wembley-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:gc_max/browse_news/browse_news_toi_2019
      285.31%: 11.066 -&gt; 42.638 

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334026775</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334026775"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286082:1286123:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e8808a99-f283-4f3b-81e7-643cdd41d58a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e8808a99-f283-4f3b-81e7-643cdd41d58a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/v8.browsing_mobile-future/Compile-Background:duration_avg/browse_tools/browse_tools_maps_2019
       31.71%: 3.567 -&gt; 4.698 

Top 1 affected measurements in android-pixel6-pro-perf:
  - v8.browsing_mobile-future/Compile-Background:duration_avg/browse_tools/browse_tools_maps_2019
       31.71%: 3.567 -&gt; 4.698 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971744</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971744"/>
        <updated>1970-01-01T00:28:32.935Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286166:1286241:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9a014dc8-b450-4382-b9ff-276cdcc1cd4b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9a014dc8-b450-4382-b9ff-276cdcc1cd4b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_wordpress.html
        2.23%: 0.6955 -&gt; 0.711 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_wordpress.html
        2.23%: 0.6955 -&gt; 0.711 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886787</id>
        <title>[Blink Shadow DOM]: 1 regressions in blink_perf.shadow_dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886787"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286001:1286054:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=59912648-dea4-41fa-9492-b646ce7471f1

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=59912648-dea4-41fa-9492-b646ce7471f1
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=59912648-dea4-41fa-9492-b646ce7471f1

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/blink_perf.shadow_dom/shadow-style-share-with-distribution/shadow-style-share-with-distribution.html
        7.80%: 18.59 -&gt; 20.04 

Top 1 affected measurements in win-10-perf:
  - blink_perf.shadow_dom/shadow-style-share-with-distribution/shadow-style-share-with-distribution.html
        7.80%: 18.59 -&gt; 20.04 

Regressions grouped by blink_perf.shadow_dom includes data from the following benchmarks with listed owners:
  blink_perf.shadow_dom: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334073888</id>
        <title>ChromeOS Desk Hotkeys don't work with External Keyboard</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334073888"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">Using a Chromebook Flip (Eve) connected to an external monitor.
Have an external keyboard in usage. I'm using Bluetooth "Apple Magic Keyboard"

1) Create a new desk
2) Move some window to it
3) Return to primary "Desk 1"
4) Open "Key Shortcuts" to learn them for Desks
5) See that to change Desks it is "circular replacement for caps lock" + "]"
6) On external keyboard press "caps lock" + "]"

Expected:
The desks change

Actual:
Caps Lock is applied and ']' is entered into any focused text field

From Settings -&gt; Keyboard -&gt; Customize keyboard keys
it appears that "caps lock" needs to be manually switched to "launcher" to get this to work.
It also appears that "meta" is mapped to "launcher"

I would expect either:
  a) "caps lock" to be mapped to "launcher" by default
  b) The "Key Shortcuts" page to be more clear that "circular replacement for caps lock" is "meta"</content>
    </entry>
    <entry>
        <id>333969587</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333969587"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285954:1285984:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9d85412f-5189-48d5-bc84-4268684ce890

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=9d85412f-5189-48d5-bc84-4268684ce890
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9d85412f-5189-48d5-bc84-4268684ce890

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_cnn.html
        2.49%: 3.2715 -&gt; 3.353 

Top 1 affected measurements in linux-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_cnn.html
        2.49%: 3.2715 -&gt; 3.353 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334026774</id>
        <title>[V8 Speedometer2 Perf Sheriff]: 1 regressions in speedometer2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334026774"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286001:1286054:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d55cc79f-10c7-47be-9a40-acad2f122254

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=d55cc79f-10c7-47be-9a40-acad2f122254
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d55cc79f-10c7-47be-9a40-acad2f122254

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/speedometer2/RunsPerMinute/Speedometer2
        1.95%: 190.08685 -&gt; 186.3711 

Top 1 affected measurements in win-10-perf:
  - speedometer2/RunsPerMinute/Speedometer2
        1.95%: 190.08685 -&gt; 186.3711 

Regressions grouped by speedometer2 includes data from the following benchmarks with listed owners:
  speedometer2: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334074176</id>
        <title>Tests are failing: ninja://chrome/test:unit_tests/SiteEngagementServiceTest.GetTotalNotificationPoints</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334074176"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures with the test name: ninja://chrome/test:unit_tests/SiteEngagementServiceTest.GetTotalNotificationPoints

These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/e1b08e6a3081645741c7440013a7e9dd

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>334071651</id>
        <title>Audio input (microphone) is severely degraded during web Chrome based video conference calls</title>
        <author>
            <name>hk...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334071651"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
Scenario A

1. Chrome is running with a few windows and tabs, some audio and video input/output events are triggered in a few tabs, typically using 1 builtin laptop display plus 1 external monitor display (HDMI or USB-C)
2. Start/launch a new video conference session, eg Google Meet: https://meet.google.com/
3. Other people in the video conf/call report report that your audio input (microphone) is severely degraded and it can not be understood
4. The factors can cause this Chrome audio input degradation are not clear (performance based? audio isolation issues/regression between different tabs/apps?)

Scenario B

1. Other web apps/sites/tabs in Chrome are also using accessing microphone / audio input [1] marked by the Chrome red circle in the tab
2. Start/launch a new video conference session, eg Google Meet: https://meet.google.com/
3. As long as the other Chrome tabs/apps are using the microphone (red circle), audio input (mic) in the video conf/call is going to be degraded
4. As soon as all "red circle" tabs are close, audio input becomes audible / understandable again
5. The reproduction rate of scenario is very high (~ &gt; 75%)

# Problem Description
Hi Chromium and Chrome Community, Dev, Maintainers, Power Users, Sponsors and Google Teams,

Some time between December 2023 and February 2024, it has been very challenging to have video conference calls using Chrome (with Debian Linux and Google Meet).
Audio input (microphone) becomes severely degraded in a way that other people can not understand you (eg robotic, chopping, static, etc).

It has been a very frustrating experience in all the past months.

I still am a firm believer in this strong combo: Google Chrome + Linux + Google Meet.
So changing the OS, browser or video conference platform (or even hardware platform) is not a appealing option.

I've been trying to discuss this issue with some people and so far I believe this is a Chrome issue.

I would love to talk more and better with folks from Google as well.
I would be happy to share more details, logs, files and configuration in private channel.

1. Have you seen this or similar problem like this?

2. What is the cause?

3. How can we narrow it down?

4. Are there any workarounds?

5. Are there any actions or fixes to address this audio degradation and isolation problems in Chrome?

I am looking forward to hearing and collaboration with you.

Thank you,

[1] Examples

a. Salesforce: 

https://issues.salesforce.com/issue/a028c00000yzhWi/omniwidget-opens-microphone-for-long-durations-in-chrome

https://appexchange.salesforce.com/appxListingDetail?listingId=a0N3A00000EJH4yUAH

https://amazon-connect.github.io/amazon-connect-salesforce-cti/docs/classic/release-notes/#522-february-2024

https://github.com/amazon-connect/amazon-connect-streams/issues/478

https://vector.lightning.force.com/lightning/setup/ImportedPackage/0A34M000000kHE6/Components/view

Speakeasy Click2Dial (Alphabet / Google)

[2] More environment information

Chrome: Version 123.0.6312.122 (Official Build) (64-bit)

Chrome CLI: google-chrome --enable-features=VaapiVideoDecodeLinuxGL,VaapiVideoEncoder --disable-features=WaylandFractionalScaleV1 --use-gl=angle --ozone-platform=wayland

Chrome CLI note: issue was first observed using no custom CLI, using X11 and with and without GPU/Hardware acceleration.

cat /etc/debian_version

rodete

cat /etc/lsb-release 

DISTRIB_CODENAME=rodete
DISTRIB_DESCRIPTION="Debian GNU/Linux rodete"
DISTRIB_ID=Debian
DISTRIB_RELEASE=rodete
XVAR_CODENAME=rodete
XVAR_RELEASE="rodete 20240402.02.06RL"
XVAR_ROLE=laptop
XVAR_TRACK=stable

uname -a

Linux $hostname 6.6.15-2rodete2-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.6.15-2rodete2 (2024-03-19) x86_64 GNU/Linux

# Additional Comments
Latest issue occurred around ~ 2024-04-12 09:43 US/EDT meet.google.com/pys-brcm-too

[10174:10174:0412/092431.155455:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/092431.179063:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/092431.244181:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/092431.622287:ERROR:CONSOLE(5)] "Uncaught TypeError: Cannot read properties of undefined (reading 'addListener')", source: chrome-extension://nkeimhogjdpnpccoofpliimaahmaaome/thunk.js (5)
[10174:10174:0412/093956.189905:ERROR:wayland_window_drag_controller.cc(156)] zcr_extended_drag_v1 extension not available! Window/Tab dragging won't be fully functional.
[10174:10174:0412/094254.837846:ERROR:CONSOLE(5)] "Uncaught TypeError: Cannot read properties of undefined (reading 'addListener')", source: chrome-extension://nkeimhogjdpnpccoofpliimaahmaaome/thunk.js (5)
[10174:10174:0412/094309.174788:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10227:17765:0412/094319.336468:ERROR:vaapi_video_decoder.cc(1232)] failed Initialize()ing the frame pool
[10227:17774:0412/094330.595297:ERROR:vaapi_video_decoder.cc(1232)] failed Initialize()ing the frame pool
[10174:10174:0412/094340.358875:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094403.995824:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094414.051253:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094414.664786:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094414.667555:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094414.722576:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094527.053133:ERROR:CONSOLE(5)] "Uncaught TypeError: Cannot read properties of undefined (reading 'addListener')", source: chrome-extension://nkeimhogjdpnpccoofpliimaahmaaome/thunk.js (5)
[10174:10174:0412/094528.235848:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10227:21218:0412/094538.839479:ERROR:vaapi_video_decoder.cc(1232)] failed Initialize()ing the frame pool
[10174:10174:0412/094541.274875:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10174:10174:0412/094557.299601:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[20332:21:0412/094558.833411:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[20332:21:0412/094558.833659:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[20332:21:0412/094600.572129:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[10227:22966:0412/094625.158973:ERROR:vaapi_video_decoder.cc(1232)] failed Initialize()ing the frame pool
[10227:10227:0412/094641.682257:ERROR:shared_image_manager.cc(221)] SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:10227:0412/094641.686620:ERROR:shared_image_manager.cc(221)] SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10174:10174:0412/094652.703067:ERROR:fallback_task_provider.cc(126)] Every renderer should have at least one task provided by a primary task provider. If a "Renderer" fallback task is shown, it is a bug. If you have repro steps, please file a new bug and tag it as a dependency of crbug.com/739782.
[10227:10227:0412/094704.636787:ERROR:shared_image_manager.cc(221)] SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:10227:0412/094704.646869:ERROR:shared_image_manager.cc(221)] SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:23174:0412/094705.280106:ERROR:vaapi_video_decoder.cc(1232)] failed Initialize()ing the frame pool
[10174:10174:0412/094711.900706:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.900786:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.901529:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.901559:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.901976:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.902267:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.902851:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.902960:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.904499:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.904765:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.905410:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.905452:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.906477:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.906729:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.906909:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.907103:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.907203:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[10174:10174:0412/094711.907404:ERROR:extension_host.cc(416)] Received EventAck for extension bnhiahndmpkkdpepcbaakdolbhkbofak for an unknown event.
[20332:21:0412/094717.133917:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[20332:21:0412/094717.134243:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[20332:21:0412/094721.957477:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[20332:21:0412/094721.957585:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)
[20332:21:0412/094721.957658:ERROR:sdp_offer_answer.cc(3827)] Transceiver not found based on m-line index (INVALID_PARAMETER)

# Summary
Audio input (microphone) is severely degraded during web Chrome based video conference calls

# Custom Questions
#### Does this work in other browsers?

Yes - This is just a Chromium problem

#### Contents of chrome://gpu: 

Graphics Feature Status
=======================
*   Canvas: Hardware accelerated
*   Canvas out-of-process rasterization: Enabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Hardware accelerated
*   Multiple Raster Threads: Enabled
*   OpenGL: Enabled
*   Rasterization: Hardware accelerated
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Video Decode: Hardware accelerated
*   Video Encode: Hardware accelerated
*   Vulkan: Disabled
*   WebGL: Hardware accelerated
*   WebGL2: Hardware accelerated
*   WebGPU: Disabled

Driver Bug Workarounds
======================
*   enable_webgl_timer_query_extensions
*   exit_on_context_lost
*   msaa_is_slow
*   msaa_is_slow_2
*   rely_on_implicit_sync_for_swap_buffers
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent

Problems Detected
=================
*   WebGPU has been disabled via blocklist or the command line.
    Disabled Features: webgpu

*   On Intel GPUs MSAA performance is not acceptable for GPU rasterization:
    (http://crbug.com/527565), (http://crbug.com/1298585)
    Applied Workarounds: msaa_is_slow

*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   Expose WebGL's disjoint_timer_query extensions on platforms with site isolation:
    (http://crbug.com/808744), (http://crbug.com/870491)
    Applied Workarounds: enable_webgl_timer_query_extensions

*   Some drivers can't recover after OUT_OF_MEM and context lost:
    (http://crbug.com/893177)
    Applied Workarounds: exit_on_context_lost

*   Avoid waiting on a egl fence before swapping buffers and rely on implicit sync on Intel GPUs:
    (http://crbug.com/938286)
    Applied Workarounds: rely_on_implicit_sync_for_swap_buffers

*   On pre-Ice Lake Intel GPUs MSAA performance is not acceptable for GPU rasterization:
    (http://crbug.com/527565), (http://crbug.com/1298585), (http://crbug.com/1341830)
    Applied Workarounds: msaa_is_slow_2

ANGLE Features
==============
*   allowCompressedFormats (Frontend workarounds): Enabled
    condition: true
    Allow compressed formats

*   alwaysRunLinkSubJobsThreaded (Frontend features) (http://anglebug.com/8417): Disabled
    If true, sub tasks of the link job are always threaded, regardless of
    GL_KHR_parallel_shader_compile

*   cacheCompiledShader (Frontend features) (http://anglebug.com/7036): Disabled
    Enable to cache compiled shaders

*   compileJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Disabled
    condition: false
    If false, parts of the compile job cannot be parallelized

*   disableAnisotropicFiltering (Frontend workarounds): Disabled
    Disable support for anisotropic filtering

*   disableDrawBuffersIndexed (Frontend features) (http://anglebug.com/7724): Disabled
    Disable support for OES_draw_buffers_indexed and EXT_draw_buffers_indexed

*   disableProgramBinary (Frontend features) (http://anglebug.com/5007): Disabled
    condition: IsPowerVrRogue(functions)
    Disable support for GL_OES_get_program_binary

*   disableProgramCaching (Frontend features) (http://anglebug.com/1423136): Disabled
    Disables saving programs to the cache

*   disableProgramCachingForTransformFeedback (Frontend workarounds): Disabled
    condition: !isMesa &amp;&amp; isQualcomm
    On some GPUs, program binaries don't contain transform feedback varyings

*   dumpShaderSource (Frontend features) (http://anglebug.com/7760): Disabled
    Write shader source to temp directory

*   dumpTranslatedShaders (Frontend features) (http://anglebug.com/8280): Disabled
    Write translated shaders to temp directory

*   emulatePixelLocalStorage (Frontend features) (http://anglebug.com/7279): Enabled
    condition: true
    Emulate ANGLE_shader_pixel_local_storage using shader images

*   enableCaptureLimits (Frontend features) (http://anglebug.com/5750): Disabled
    Set the context limits like frame capturing was enabled

*   enableProgramBinaryForCapture (Frontend features) (http://anglebug.com/5658): Disabled
    Even if FrameCapture is enabled, enable GL_OES_get_program_binary

*   enableShaderSubstitution (Frontend workarounds) (http://anglebug.com/7761): Disabled
    Check the filesystem for shaders to use instead of those provided through
    glShaderSource

*   enableTranslatedShaderSubstitution (Frontend workarounds) (http://anglebug.com/8280): Disabled
    Check the filesystem for translated shaders to use instead of the shader
    translator's

*   forceDepthAttachmentInitOnClear (Frontend workarounds) (https://anglebug.com/7246): Disabled
    Force depth attachment initialization on clear ops

*   forceGlErrorChecking (Frontend features) (https://issuetracker.google.com/220069903): Disabled
    Force GL error checking (i.e. prevent applications from disabling error
    checking

*   forceInitShaderVariables (Frontend features): Disabled
    Force-enable shader variable initialization

*   forceMinimumMaxVertexAttributes (Frontend features): Disabled
    condition: false
    Force the minimum GL_MAX_VERTEX_ATTRIBS that the context's client version
    allows.

*   forceRobustResourceInit (Frontend features) (http://anglebug.com/6041): Disabled
    Force-enable robust resource init

*   linkJobIsThreadSafe (Frontend features) (http://anglebug.com/8297): Disabled
    condition: false
    If false, parts of the link job cannot be parallelized

*   loseContextOnOutOfMemory (Frontend workarounds): Enabled
    condition: true
    Some users rely on a lost context notification if a GL_OUT_OF_MEMORY error
    occurs

*   singleThreadedTextureDecompression (Frontend workarounds): Disabled
    Disables multi-threaded decompression of compressed texture formats

*   uncurrentEglSurfaceUponSurfaceDestroy (Frontend workarounds) (https://issuetracker.google.com/292285899): Disabled
    Make egl surface uncurrent when calling eglDestroySurface(), if the
    surface is still bound by the context of current render thread

*   RGBA4IsNotSupportedForColorRendering (OpenGL workarounds): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isIntel
    GL_RGBA4 is not color renderable

*   RGBDXT1TexturesSampleZeroAlpha (OpenGL workarounds) (http://anglebug.com/3729): Disabled
    condition: IsApple()
    Sampling BLACK texels from RGB DXT1 textures returns transparent black on
    Mac.

*   addAndTrueToLoopCondition (OpenGL workarounds): Disabled
    condition: IsApple() &amp;&amp; isIntel
    Calculation of loop conditions in for and while loop has bug

*   adjustSrcDstRegionForBlitFramebuffer (OpenGL workarounds) (http://crbug.com/830046): Enabled
    condition: IsLinux() || (IsAndroid() &amp;&amp; isNvidia) || (IsWindows() &amp;&amp; isNvidia) || (IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_ES)
    Many platforms have issues with blitFramebuffer when the parameters are
    large.

*   allowAstcFormats (OpenGL workarounds): Enabled
    condition: !isMesa || isIntel &amp;&amp; (Is9thGenIntel(device) || IsGeminiLake(device) || IsCoffeeLake(device) || Is11thGenIntel(device) || Is12thGenIntel(device))
    Enable ASTC on desktop OpenGL

*   allowClearForRobustResourceInit (OpenGL workarounds) (https://crbug.com/848952 http://crbug.com/883276): Disabled
    condition: IsApple()
    Using glClear for robust resource initialization is buggy on some drivers
    and leads to texture corruption. Default to data uploads except on MacOS
    where it is very slow.

*   allowETCFormats (OpenGL workarounds): Enabled
    condition: isIntel &amp;&amp; !IsSandyBridge(device) &amp;&amp; !IsIvyBridge(device) &amp;&amp; !IsHaswell(device)
    Enable ETC2/EAC on desktop OpenGL

*   alwaysCallUseProgramAfterLink (OpenGL workarounds) (http://crbug.com/110263): Enabled
    condition: true
    Always call useProgram after a successful link to avoid a driver bug

*   alwaysUnbindFramebufferTexture2D (OpenGL workarounds) (https://anglebug.com/5536): Disabled
    condition: isNvidia &amp;&amp; (IsWindows() || IsLinux())
    Force unbind framebufferTexture2D before binding renderbuffer to work
    around driver bug.

*   avoid1BitAlphaTextureFormats (OpenGL workarounds): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isAMD
    Issue with 1-bit alpha framebuffer formats

*   bindCompleteFramebufferForTimerQueries (OpenGL workarounds) (https://crbug.com/1356053): Disabled
    condition: isMali
    Some drivers require a complete framebuffer when beginQuery for
    TimeElapsed orTimestampis called.

*   bindTransformFeedbackBufferBeforeBindBufferRange (OpenGL workarounds) (https://anglebug.com/5140): Disabled
    condition: IsApple()
    Bind transform feedback buffers to the generic binding point before
    calling glBindBufferBase or glBindBufferRange.

*   clampArrayAccess (OpenGL workarounds) (http://anglebug.com/2978): Disabled
    condition: IsAndroid() || isAMD || !functions-&gt;hasExtension("GL_KHR_robust_buffer_access_behavior")
    Clamp uniform array access to avoid reading invalid memory.

*   clampFragDepth (OpenGL workarounds): Disabled
    condition: isNvidia
    gl_FragDepth is not clamped correctly when rendering to a floating point
    depth buffer

*   clampMscRate (OpenGL workarounds) (https://crbug.com/1042393): Enabled
    condition: IsLinux() &amp;&amp; IsWayland()
    Some drivers return bogus values for GetMscRate, so we clamp it to 30Hz

*   clampPointSize (OpenGL workarounds): Disabled
    condition: IsAndroid() || isNvidia
    The point size range reported from the API is inconsistent with the actual
    behavior

*   clearToZeroOrOneBroken (OpenGL workarounds) (https://crbug.com/710443): Disabled
    condition: IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 12, 6)
    Clears when the clear color is all zeros or ones do not work.

*   clipSrcRegionForBlitFramebuffer (OpenGL workarounds) (http://crbug.com/830046): Disabled
    condition: IsApple() || (IsLinux() &amp;&amp; isAMD)
    Issues with blitFramebuffer when the parameters don't match the
    framebuffer size.

*   corruptProgramBinaryForTesting (OpenGL workarounds) (https://anglebug.com/8471): Disabled
    Corrupt the program binary retrieved from the driver for testing purposes.

*   decodeEncodeSRGBForGenerateMipmap (OpenGL workarounds) (http://anglebug.com/4646): Disabled
    condition: IsApple()
    Decode and encode before generateMipmap for srgb format textures.

*   disableBaseInstanceVertex (OpenGL workarounds) (http://anglebug.com/8172): Disabled
    condition: IsMaliValhall(functions)
    Some drivers have buggy implementations of glDraw*BaseVertex*.

*   disableBlendFuncExtended (OpenGL workarounds) (http://anglebug.com/1085): Disabled
    condition: (!isMesa &amp;&amp; isQualcomm) || (IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 14, 0))
    ARB_blend_func_extended does not pass the tests

*   disableClipControl (OpenGL features) (http://crbug.com/1434317): Disabled
    condition: IsMaliG72OrG76OrG51(functions)
    Some devices genenerate errors when querying the clip control state

*   disableDrawBuffersIndexed (OpenGL workarounds): Disabled
    condition: IsWindows() &amp;&amp; isAMD
    Disable OES_draw_buffers_indexed extension.

*   disableGPUSwitchingSupport (OpenGL workarounds) (https://crbug.com/1091824): Disabled
    condition: isDualGPUMacWithNVIDIA
    Disable GPU switching support (use only the low-power GPU) on older
    MacBook Pros.

*   disableMultisampledRenderToTexture (OpenGL workarounds) (http://anglebug.com/2894): Disabled
    condition: isAdreno4xxOnAndroidLessThan51 || isAdreno4xxOnAndroid70 || isAdreno5xxOnAndroidLessThan70 || isAdreno5xxOnAndroid71 || isLinuxVivante || IsAndroid() || isWindowsNVIDIA
    Many drivers have bugs when using GL_EXT_multisampled_render_to_texture

*   disableNativeParallelCompile (OpenGL workarounds) (http://crbug.com/1094869): Disabled
    condition: isTSANBuild &amp;&amp; IsLinux() &amp;&amp; isNvidia
    Do not use native KHR_parallel_shader_compile even when available.

*   disableRenderSnorm (OpenGL workarounds) (https://anglebug.com/8315): Enabled
    condition: isMesa &amp;&amp; (mesaVersion &lt; (std::array&lt;int, 3&gt;{21, 3, 0}) || functions-&gt;standard == STANDARD_GL_ES)
    Disable EXT_render_snorm extension.

*   disableSemaphoreFd (OpenGL workarounds) (https://crbug.com/1046462): Disabled
    condition: IsLinux() &amp;&amp; isAMD &amp;&amp; isMesa &amp;&amp; mesaVersion &lt; (std::array&lt;int, 3&gt;{19, 3, 5})
    Disable GL_EXT_semaphore_fd extension

*   disableSyncControlSupport (OpenGL workarounds) (https://crbug.com/1137851): Disabled
    condition: IsLinux() &amp;&amp; isIntel &amp;&amp; isMesa &amp;&amp; mesaVersion[0] == 20
    Speculative fix for issues on Linux/Wayland where exposing
    GLX_OML_sync_control renders Chrome unusable

*   disableTextureClampToBorder (OpenGL workarounds) (https://anglebug.com/7405): Disabled
    condition: isImagination
    Imagination devices generate INVALID_ENUM when setting the texture border
    color.

*   disableTextureMirrorClampToEdge (OpenGL workarounds) (https://anglebug.com/8319): Disabled
    condition: functions-&gt;standard == STANDARD_GL_ES &amp;&amp; isMesa &amp;&amp; mesaVersion &lt; (std::array&lt;int, 3&gt;{23, 1, 7})
    Disable EXT_texture_mirror_clamp_to_edge extension.

*   disableTimestampQueries (OpenGL workarounds) (https://crbug.com/811661): Disabled
    condition: (IsLinux() &amp;&amp; isVMWare) || (IsAndroid() &amp;&amp; isNvidia) || (IsAndroid() &amp;&amp; GetAndroidSDKVersion() &lt; 27 &amp;&amp; IsAdreno5xxOrOlder(functions)) || (!isMesa &amp;&amp; IsMaliT8xxOrOlder(functions)) || (!isMesa &amp;&amp; IsMaliG31OrOlder(functions))
    Disable GL_EXT_disjoint_timer_query extension

*   doWhileGLSLCausesGPUHang (OpenGL workarounds) (http://crbug.com/644669): Disabled
    condition: IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 11, 0)
    Some GLSL constructs involving do-while loops cause GPU hangs

*   doesSRGBClearsOnLinearFramebufferAttachments (OpenGL workarounds): Enabled
    condition: isIntel || isAMD
    Issue clearing framebuffers with linear attachments when
    GL_FRAMEBUFFER_SRGB is enabled

*   dontInitializeUninitializedLocals (OpenGL workarounds) (http://anglebug.com/2046): Disabled
    condition: !isMesa &amp;&amp; isQualcomm
    Initializing uninitialized locals caused odd behavior in a few WebGL 2
    tests

*   dontUseLoopsToInitializeVariables (OpenGL workarounds) (http://crbug.com/809422): Disabled
    condition: (!isMesa &amp;&amp; isQualcomm) || (isIntel &amp;&amp; IsApple())
    For loops used to initialize variables hit native GLSL compiler bugs

*   emulateAbsIntFunction (OpenGL workarounds) (http://crbug.com/642227): Disabled
    condition: IsApple() &amp;&amp; isIntel
    abs(i) where i is an integer returns unexpected result

*   emulateAtan2Float (OpenGL workarounds) (http://crbug.com/672380): Disabled
    condition: isNvidia
    atan(y, x) may return a wrong answer

*   emulateClipDistanceState (OpenGL workarounds): Disabled
    condition: isQualcomm
    Some drivers ignore GL_CLIP_DISTANCEi_EXT state.

*   emulateClipOrigin (OpenGL workarounds): Disabled
    condition: !isMesa &amp;&amp; isQualcomm &amp;&amp; qualcommVersion &lt; 490 &amp;&amp; functions-&gt;hasGLESExtension("GL_EXT_clip_control")
    Some drivers incorrectly apply GL_CLIP_ORIGIN_EXT state.

*   emulateCopyTexImage2D (OpenGL workarounds): Disabled
    condition: isApple
    Replace CopyTexImage2D with TexImage2D + CopyTexSubImage2D.

*   emulateCopyTexImage2DFromRenderbuffers (OpenGL workarounds) (https://anglebug.com/4674): Disabled
    condition: IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_ES &amp;&amp; !(isAMD &amp;&amp; IsWindows())
    CopyTexImage2D spuriously returns errors on iOS when copying from
    renderbuffers.

*   emulateImmutableCompressedTexture3D (OpenGL workarounds) (https://crbug.com/1060012): Disabled
    condition: isQualcomm
    Use non-immutable texture allocation to work around a driver bug.

*   emulateIsnanFloat (OpenGL workarounds) (http://crbug.com/650547): Disabled
    condition: isIntel &amp;&amp; IsApple() &amp;&amp; IsSkylake(device) &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 13, 2)
    Using isnan() on highp float will get wrong answer

*   emulateMaxVertexAttribStride (OpenGL workarounds) (http://anglebug.com/1936): Disabled
    condition: IsLinux() &amp;&amp; functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isAMD
    Some drivers return 0 when MAX_VERTEX_ATTRIB_STRIED queried

*   emulatePackSkipRowsAndPackSkipPixels (OpenGL workarounds) (https://anglebug.com/4849): Disabled
    condition: IsApple()
    GL_PACK_SKIP_ROWS and GL_PACK_SKIP_PIXELS are ignored in Apple's OpenGL
    driver.

*   emulatePrimitiveRestartFixedIndex (OpenGL workarounds) (http://anglebug.com/3997): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; functions-&gt;isAtLeastGL(gl::Version(3, 1)) &amp;&amp; !functions-&gt;isAtLeastGL(gl::Version(4, 3))
    When GL_PRIMITIVE_RESTART_FIXED_INDEX is not available, emulate it with
    GL_PRIMITIVE_RESTART and glPrimitiveRestartIndex.

*   emulateRGB10 (OpenGL workarounds) (https://crbug.com/1300575): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP
    Emulate RGB10 support using RGB10_A2.

*   ensureNonEmptyBufferIsBoundForDraw (OpenGL features) (http://crbug.com/1456243): Disabled
    condition: IsApple() || IsAndroid()
    Apple OpenGL drivers crash when drawing with a zero-sized buffer bound
    using a non-zero divisor.

*   explicitFragmentLocations (OpenGL workarounds) (https://anglebug.com/8308): Disabled
    condition: isQualcomm
    Always write explicit location layout qualifiers for fragment outputs.

*   finishDoesNotCauseQueriesToBeAvailable (OpenGL workarounds): Disabled
    condition: functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isNvidia
    glFinish doesn't cause all queries to report available result

*   flushBeforeDeleteTextureIfCopiedTo (OpenGL workarounds) (http://anglebug.com/4267): Disabled
    condition: IsApple() &amp;&amp; isIntel
    Some drivers track CopyTex{Sub}Image texture dependencies incorrectly.
    Flush before glDeleteTextures in this case

*   flushOnFramebufferChange (OpenGL workarounds) (http://crbug.com/1181068): Disabled
    condition: IsApple() &amp;&amp; Has9thGenIntelGPU(systemInfo)
    Switching framebuffers without a flush can lead to crashes on Intel 9th
    Generation GPU Macs.

*   initFragmentOutputVariables (OpenGL workarounds) (http://crbug.com/1171371): Disabled
    condition: IsAdreno42xOr3xx(functions)
    No init gl_FragColor causes context lost

*   initializeCurrentVertexAttributes (OpenGL workarounds): Disabled
    condition: isNvidia
    During initialization, assign the current vertex attributes to the
    spec-mandated defaults

*   keepBufferShadowCopy (OpenGL workarounds): Disabled
    condition: !CanMapBufferForRead(functions)
    Maintain a shadow copy of buffer data when the GL API does not permit
    reading data back.

*   limitMax3dArrayTextureSizeTo1024 (OpenGL workarounds) (http://crbug.com/927470): Disabled
    condition: limitMaxTextureSize
    Limit max 3d texture size and max array texture layers to 1024 to avoid
    system hang

*   limitMaxMSAASamplesTo4 (OpenGL workarounds) (http://crbug.com/797243): Disabled
    condition: IsAndroid() || (IsApple() &amp;&amp; (isIntel || isAMD || isNvidia))
    Various rendering bugs have been observed when using higher MSAA counts

*   limitWebglMaxTextureSizeTo4096 (OpenGL workarounds) (http://crbug.com/927470): Disabled
    condition: IsAndroid() || limitMaxTextureSize
    Limit webgl max texture size to 4096 to avoid frequent out-of-memory
    errors

*   packLastRowSeparatelyForPaddingInclusion (OpenGL workarounds) (http://anglebug.com/1512): Disabled
    condition: IsApple() || isNvidia
    When uploading textures from an pack buffer, some drivers count an extra
    row padding

*   packOverlappingRowsSeparatelyPackBuffer (OpenGL workarounds): Disabled
    condition: isNvidia
    In the case of packing to a pixel pack buffer, pack overlapping rows row
    by row

*   passHighpToPackUnormSnormBuiltins (OpenGL workarounds) (http://anglebug.com/7527): Disabled
    condition: isQualcomm
    packUnorm4x8 fails on Pixel 4 if it is not passed a highp vec4.

*   preAddTexelFetchOffsets (OpenGL workarounds) (http://crbug.com/642605): Disabled
    condition: IsApple() &amp;&amp; isIntel
    Intel Mac drivers mistakenly consider the parameter position of nagative
    vaule as invalid even if the sum of position and offset is in range, so we
    need to add workarounds by rewriting texelFetchOffset(sampler, position,
    lod, offset) into texelFetch(sampler, position + offset, lod).

*   preTransformTextureCubeGradDerivatives (OpenGL workarounds): Disabled
    condition: isApple
    Apply a vendor-specific transformation to explicit cubemap derivatives

*   promotePackedFormatsTo8BitPerChannel (OpenGL workarounds) (http://anglebug.com/5469): Disabled
    condition: IsApple() &amp;&amp; hasAMD
    Packed color formats are buggy on Macs with AMD GPUs

*   queryCounterBitsGeneratesErrors (OpenGL workarounds) (http://anglebug.com/3027): Disabled
    condition: IsNexus5X(vendor, device)
    Drivers generate errors when querying the number of bits in timer queries

*   readPixelsUsingImplementationColorReadFormatForNorm16 (OpenGL workarounds) (http://anglebug.com/4214): Disabled
    condition: !isIntel &amp;&amp; functions-&gt;standard == STANDARD_GL_ES &amp;&amp; functions-&gt;isAtLeastGLES(gl::Version(3, 1)) &amp;&amp; functions-&gt;hasGLESExtension("GL_EXT_texture_norm16")
    Quite some OpenGL ES drivers don't implement readPixels for
    RGBA/UNSIGNED_SHORT from EXT_texture_norm16 correctly

*   reapplyUBOBindingsAfterUsingBinaryProgram (OpenGL workarounds) (http://anglebug.com/1637): Disabled
    condition: isAMD || IsAndroid()
    Some drivers forget about UBO bindings when using program binaries

*   regenerateStructNames (OpenGL workarounds) (http://crbug.com/403957): Disabled
    condition: IsApple()
    All Mac drivers do not handle struct scopes correctly. This workaround
    overwrites a structname with a unique prefix.

*   removeDynamicIndexingOfSwizzledVector (OpenGL workarounds) (http://crbug.com/709351): Disabled
    condition: IsApple() || IsAndroid() || IsWindows()
    Dynamic indexing of swizzled l-values doesn't work correctly on various
    platforms.

*   removeInvariantAndCentroidForESSL3 (OpenGL workarounds): Disabled
    condition: functions-&gt;isAtMostGL(gl::Version(4, 1)) || (functions-&gt;standard == STANDARD_GL_DESKTOP &amp;&amp; isAMD)
    Fix spec difference between GLSL 4.1 or lower and ESSL3

*   resetTexImage2DBaseLevel (OpenGL workarounds) (https://crbug.com/705865): Disabled
    condition: IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &gt;= OSVersion(10, 12, 4)
    Reset texture base level before calling glTexImage2D to work around pixel
    comparison failure.

*   resyncDepthRangeOnClipControl (OpenGL workarounds) (https://anglebug.com/8381): Disabled
    condition: !isMesa &amp;&amp; isQualcomm
    Resync depth range to apply clip control updates.

*   rewriteFloatUnaryMinusOperator (OpenGL workarounds) (http://crbug.com/308366): Disabled
    condition: IsApple() &amp;&amp; isIntel &amp;&amp; GetMacOSVersion() &lt; OSVersion(10, 12, 0)
    Using '-&lt;float&gt;' will get wrong answer

*   rewriteRepeatedAssignToSwizzled (OpenGL workarounds): Disabled
    condition: isNvidia
    Repeated assignment to swizzled values inside a GLSL user-defined function
    have incorrect results

*   rewriteRowMajorMatrices (OpenGL workarounds) (http://anglebug.com/2273): Disabled
    condition: false
    Rewrite row major matrices in shaders as column major as a driver bug
    workaround

*   sanitizeAMDGPURendererString (OpenGL workarounds) (http://crbug.com/1181193): Disabled
    condition: IsLinux() &amp;&amp; hasAMD
    Strip precise kernel and DRM version information from amdgpu renderer
    strings.

*   scalarizeVecAndMatConstructorArgs (OpenGL workarounds) (http://crbug.com/1420130): Disabled
    condition: isMali
    Rewrite vec/mat constructors to work around driver bugs

*   setPrimitiveRestartFixedIndexForDrawArrays (OpenGL workarounds) (http://anglebug.com/3997): Disabled
    condition: features-&gt;emulatePrimitiveRestartFixedIndex.enabled &amp;&amp; IsApple() &amp;&amp; isIntel
    Some drivers discard vertex data in DrawArrays calls when the fixed
    primitive restart index is within the number of primitives being drawn.

*   setZeroLevelBeforeGenerateMipmap (OpenGL workarounds): Disabled
    condition: IsApple()
    glGenerateMipmap fails if the zero texture level is not set on some Mac
    drivers.

*   shiftInstancedArrayDataWithOffset (OpenGL workarounds) (http://crbug.com/1144207): Disabled
    condition: IsApple() &amp;&amp; IsIntel(vendor) &amp;&amp; !IsHaswell(device)
    glDrawArraysInstanced is buggy on certain new Mac Intel GPUs

*   supportsFragmentShaderInterlockARB (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;isAtLeastGL(gl::Version(4, 5)) &amp;&amp; functions-&gt;hasGLExtension("GL_ARB_fragment_shader_interlock")
    Backend GL context supports ARB_fragment_shader_interlock extension

*   supportsFragmentShaderInterlockNV (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;isAtLeastGL(gl::Version(4, 3)) &amp;&amp; functions-&gt;hasGLExtension("GL_NV_fragment_shader_interlock")
    Backend GL context supports NV_fragment_shader_interlock extension

*   supportsFragmentShaderOrderingINTEL (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;isAtLeastGL(gl::Version(4, 4)) &amp;&amp; functions-&gt;hasGLExtension("GL_INTEL_fragment_shader_ordering")
    Backend GL context supports GL_INTEL_fragment_shader_ordering extension

*   supportsShaderFramebufferFetchEXT (OpenGL features) (http://anglebug.com/7279): Enabled
    condition: functions-&gt;hasGLESExtension("GL_EXT_shader_framebuffer_fetch")
    Backend GL context supports EXT_shader_framebuffer_fetch extension

*   supportsShaderFramebufferFetchNonCoherentEXT (OpenGL features) (http://anglebug.com/7279): Enabled
    condition: functions-&gt;hasGLESExtension("GL_EXT_shader_framebuffer_fetch_non_coherent")
    Backend GL context supports EXT_shader_framebuffer_fetch_non_coherent
    extension

*   supportsShaderPixelLocalStorageEXT (OpenGL features) (http://anglebug.com/7279): Disabled
    condition: functions-&gt;hasGLESExtension("GL_EXT_shader_pixel_local_storage")
    Backend GL context supports EXT_shader_pixel_local_storage extension

*   syncVertexArraysToDefault (OpenGL workarounds) (http://anglebug.com/5577): Disabled
    condition: !nativegl::SupportsVertexArrayObjects(functions)
    Only use the default VAO because of missing support or driver bugs

*   unbindFBOBeforeSwitchingContext (OpenGL workarounds) (http://crbug.com/1181193): Disabled
    condition: IsPowerVR(vendor)
    Imagination GL drivers are buggy with context switching.

*   unfoldShortCircuits (OpenGL workarounds) (http://anglebug.com/482): Disabled
    condition: IsApple()
    Mac incorrectly executes both sides of &amp;&amp; and || expressions when they
    should short-circuit.

*   unpackLastRowSeparatelyForPaddingInclusion (OpenGL workarounds) (http://anglebug.com/1512): Disabled
    condition: IsApple() || isNvidia
    When uploading textures from an unpack buffer, some drivers count an extra
    row padding

*   unpackOverlappingRowsSeparatelyUnpackBuffer (OpenGL workarounds): Disabled
    condition: isNvidia
    In the case of unpacking from a pixel unpack buffer, unpack overlapping
    rows row by row

*   unsizedSRGBReadPixelsDoesntTransform (OpenGL workarounds) (http://crbug.com/550292 http://crbug.com/565179): Disabled
    condition: !isMesa &amp;&amp; isQualcomm
    Drivers returning raw sRGB values instead of linearized values when
    calling glReadPixels on unsized sRGB texture formats

*   uploadTextureDataInChunks (OpenGL workarounds) (http://crbug.com/1181068): Disabled
    condition: IsApple()
    Upload texture data in &lt;120kb chunks to work around Mac driver hangs and
    crashes.

*   useUnusedBlocksWithStandardOrSharedLayout (OpenGL workarounds): Disabled
    condition: (IsApple() &amp;&amp; functions-&gt;standard == STANDARD_GL_DESKTOP) || (IsLinux() &amp;&amp; isAMD)
    Unused std140 or shared uniform blocks will be treated as inactive

*   vertexIDDoesNotIncludeBaseVertex (OpenGL workarounds): Disabled
    condition: IsApple() &amp;&amp; isAMD
    gl_VertexID in GLSL vertex shader doesn't include base vertex value

Dawn Info
=========

&lt;Integrated GPU&gt;  Vulkan backend - Intel(R) UHD Graphics (CML GT2)
------------------------------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   norm16texture-formats
*   adapter-properties-memory-heaps
*   shared-texture-memory-dma-buf
*   shared-texture-memory-opaque-fd
*   shared-fence-vk-semaphore-opaque-fd
*   shared-fence-vk-semaphore-sync-fd

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

*   vulkan_use_image_robust_access_2: 
    (https://crbug.com/tint/1890):
    Disable Tint robustness transform on textures when VK_EXT_robustness2 is
    supported and robustImageAccess2 == VK_TRUE.

*   vulkan_use_buffer_robust_access_2: 
    (https://crbug.com/tint/1890):
    Disable index clamping on the runtime-sized arrays on buffers in Tint
    robustness transform when VK_EXT_robustness2 is supported and
    robustBufferAccess2 == VK_TRUE.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

&lt;CPU&gt;  Vulkan backend - llvmpipe (LLVM 17.0.6, 256 bits)
--------------------------------------------------------

[WebGPU Status]
---------------
*   Blocklisted

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   adapter-properties-memory-heaps
*   shared-texture-memory-opaque-fd

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

*   vulkan_use_image_robust_access_2: 
    (https://crbug.com/tint/1890):
    Disable Tint robustness transform on textures when VK_EXT_robustness2 is
    supported and robustImageAccess2 == VK_TRUE.

*   vulkan_use_buffer_robust_access_2: 
    (https://crbug.com/tint/1890):
    Disable index clamping on the runtime-sized arrays on buffers in Tint
    robustness transform when VK_EXT_robustness2 is supported and
    robustBufferAccess2 == VK_TRUE.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

&lt;CPU&gt;  Vulkan backend - SwiftShader Device (Subzero)
----------------------------------------------------

[WebGPU Status]
---------------
*   Blocklisted

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   surface-capabilities
*   transient-attachments
*   adapter-properties-memory-heaps
*   shared-texture-memory-opaque-fd
*   shared-fence-vk-semaphore-opaque-fd

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Version Information
===================
Data exported              : 2024-04-12T15:05:48.965Z
Chrome version             : Chrome/123.0.6312.122
Operating system           : Linux 6.6.15-2rodete2-amd64
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/31f8248cdd90acbac59f700b603fed0b5967ca50/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/31f8248cdd90acbac59f700b603fed0b5967ca50/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : f6672dbbe223
2D graphics backend        : Skia/123 3d4e45907f9b239a54957001d619d2d4a6ca06b4
Command Line               : /usr/bin/google-chrome --enable-features=VaapiVideoDecodeLinuxGL,VaapiVideoEncoder --disable-features=WaylandFractionalScaleV1 --use-gl=angle --ozone-platform=wayland --flag-switches-begin --ozone-platform-hint=auto --flag-switches-end

Driver Information
==================
Initialization time             : 293
In-process GPU                  : false
Passthrough Command Decoder     : true
Sandboxed                       : false
GPU0                            : VENDOR= 0x8086 [Google Inc. (Intel)], DEVICE=0x9b41 [ANGLE (Intel, Mesa Intel(R) UHD Graphics (CML GT2), OpenGL ES 3.2 Mesa 23.3.4-1)], DRIVER_VENDOR=Mesa, DRIVER_VERSION=23.3.4 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
GPU CUDA compute capability major version: 0
Pixel shader version            : 1.00
Vertex shader version           : 1.00
Max. MSAA samples               : 16
Machine model name              : 
Machine model version           : 
GL implementation parts         : (gl=egl-angle,angle=opengl)
Display type                    : ANGLE_OPENGL
GL_VENDOR                       : Google Inc. (Intel)
GL_RENDERER                     : ANGLE (Intel, Mesa Intel(R) UHD Graphics (CML GT2), OpenGL ES 3.2 Mesa 23.3.4-1)
GL_VERSION                      : OpenGL ES 2.0.0 (ANGLE 2.1.22632 git hash: f6672dbbe223)
GL_EXTENSIONS                   : GL_AMD_performance_monitor GL_ANGLE_base_vertex_base_instance GL_ANGLE_base_vertex_base_instance_shader_builtin GL_ANGLE_client_arrays GL_ANGLE_compressed_texture_etc GL_ANGLE_depth_texture GL_ANGLE_framebuffer_blit GL_ANGLE_framebuffer_multisample GL_ANGLE_get_serialized_context_string GL_ANGLE_get_tex_level_parameter GL_ANGLE_instanced_arrays GL_ANGLE_memory_size GL_ANGLE_multi_draw GL_ANGLE_program_cache_control GL_ANGLE_request_extension GL_ANGLE_robust_client_memory GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 GL_ANGLE_texture_external_update GL_ANGLE_translated_shader_source GL_ARB_sync GL_CHROMIUM_bind_generates_resource GL_CHROMIUM_bind_uniform_location GL_CHROMIUM_color_buffer_float_rgba GL_CHROMIUM_copy_texture GL_CHROMIUM_lose_context GL_CHROMIUM_sync_query GL_EXT_base_instance GL_EXT_blend_func_extended GL_EXT_blend_minmax GL_EXT_clip_control GL_EXT_color_buffer_half_float GL_EXT_compressed_ETC1_RGB8_sub_texture GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_depth_clamp GL_EXT_discard_framebuffer GL_EXT_disjoint_timer_query GL_EXT_draw_buffers GL_EXT_draw_elements_base_vertex GL_EXT_float_blend GL_EXT_frag_depth GL_EXT_instanced_arrays GL_EXT_map_buffer_range GL_EXT_memory_object GL_EXT_memory_object_fd GL_EXT_multi_draw_indirect GL_EXT_occlusion_query_boolean GL_EXT_polygon_offset_clamp GL_EXT_read_format_bgra GL_EXT_robustness GL_EXT_sRGB GL_EXT_sRGB_write_control GL_EXT_semaphore GL_EXT_semaphore_fd GL_EXT_shader_framebuffer_fetch GL_EXT_shader_framebuffer_fetch_non_coherent GL_EXT_shadow_samplers GL_EXT_texture_border_clamp GL_EXT_texture_compression_bptc GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc_srgb GL_EXT_texture_filter_anisotropic GL_EXT_texture_format_BGRA8888 GL_EXT_texture_mirror_clamp_to_edge GL_EXT_texture_norm16 GL_EXT_texture_rg GL_EXT_texture_sRGB_decode GL_EXT_texture_type_2_10_10_10_REV GL_EXT_unpack_subimage GL_KHR_debug GL_KHR_parallel_shader_compile GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_sliced_3d GL_MESA_framebuffer_flip_y GL_NV_depth_buffer_float2 GL_NV_fence GL_NV_framebuffer_blit GL_NV_pack_subimage GL_NV_pixel_buffer_object GL_NV_read_depth GL_NV_read_stencil GL_OES_EGL_image GL_OES_EGL_image_external GL_OES_EGL_sync GL_OES_compressed_EAC_R11_signed_texture GL_OES_compressed_EAC_R11_unsigned_texture GL_OES_compressed_EAC_RG11_signed_texture GL_OES_compressed_EAC_RG11_unsigned_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_compressed_ETC2_RGB8_texture GL_OES_compressed_ETC2_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_RGBA8_texture GL_OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture GL_OES_compressed_ETC2_sRGB8_alpha8_texture GL_OES_compressed_ETC2_sRGB8_texture GL_OES_depth24 GL_OES_draw_elements_base_vertex GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_get_program_binary GL_OES_mapbuffer GL_OES_packed_depth_stencil GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_surfaceless_context GL_OES_texture_3D GL_OES_texture_border_clamp GL_OES_texture_float GL_OES_texture_float_linear GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_array_object GL_WEBGL_video_texture
Disabled Extensions             : GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent
Disabled WebGL Extensions       : 
Window system binding vendor    : Google Inc. (Intel)
Window system binding version   : 1.5 (ANGLE 2.1.22632 git hash: f6672dbbe223)
Window system binding extensions: EGL_EXT_create_context_robustness EGL_KHR_create_context EGL_KHR_image_base EGL_KHR_gl_colorspace EGL_KHR_gl_texture_2D_image EGL_KHR_gl_texture_cubemap_image EGL_KHR_gl_texture_3D_image EGL_KHR_gl_renderbuffer_image EGL_KHR_get_all_proc_addresses EGL_KHR_fence_sync EGL_KHR_wait_sync EGL_ANGLE_create_context_webgl_compatibility EGL_CHROMIUM_create_context_bind_generates_resource EGL_KHR_swap_buffers_with_damage EGL_EXT_pixel_format_float EGL_KHR_surfaceless_context EGL_ANGLE_display_texture_share_group EGL_ANGLE_display_semaphore_share_group EGL_ANGLE_create_context_client_arrays EGL_ANGLE_program_cache_control EGL_ANGLE_robust_resource_initialization EGL_ANGLE_create_context_extensions_enabled EGL_ANDROID_blob_cache EGL_ANDROID_recordable EGL_ANDROID_native_fence_sync EGL_ANGLE_create_context_backwards_compatible EGL_KHR_no_config_context EGL_KHR_create_context_no_error EGL_EXT_image_dma_buf_import EGL_EXT_image_dma_buf_import_modifiers EGL_KHR_reusable_sync EGL_ANGLE_external_context_and_surface EGL_EXT_buffer_age EGL_ANGLE_context_virtualization
XDG_CURRENT_DESKTOP             : GNOME
XDG_SESSION_TYPE                : wayland
GDMSESSION                      : gnome
Interfaces exposed by the Wayland compositor: wl_compositor:5 wl_shm:1 wl_output:4 wl_output:4 zxdg_output_manager_v1:3 wl_data_device_manager:3 zwp_primary_selection_device_manager_v1:1 wl_subcompositor:1 xdg_wm_base:4 gtk_shell1:5 wp_viewporter:1 wp_fractional_scale_manager_v1:1 zwp_pointer_gestures_v1:3 zwp_tablet_manager_v2:1 wl_seat:8 zwp_relative_pointer_manager_v1:1 zwp_pointer_constraints_v1:1 zxdg_exporter_v2:1 zxdg_importer_v2:1 zxdg_exporter_v1:1 zxdg_importer_v1:1 wp_single_pixel_buffer_manager_v1:1 zwp_keyboard_shortcuts_inhibit_manager_v1:1 zwp_text_input_manager_v3:1 wp_presentation:1 xdg_activation_v1:1 zwp_linux_dmabuf_v1:4 wl_drm:2
Ozone platform                  : wayland
Direct rendering version        : unknown
Reset notification strategy     : 0x8252
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: supported,  R_16: supported,  RG_88: supported,  RG_1616: supported,  BGR_565: supported,  RGBA_4444: supported,  RGBX_8888: supported,  RGBA_8888: supported,  BGRX_8888: supported,  BGRA_1010102: supported,  RGBA_1010102: supported,  BGRA_8888: supported,  RGBA_F16: supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: supported,  P010: not supported

Compositor Information
======================
Tile Update Mode: One-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : Software only
R_16              : Software only
RG_88             : Software only
RG_1616           : Software only
BGR_565           : GPU_READ
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, SCANOUT_FRONT_RENDERING
RGBA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, SCANOUT_FRONT_RENDERING
BGRX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, SCANOUT_FRONT_RENDERING
BGRA_1010102      : SCANOUT, SCANOUT_CPU_READ_WRITE, SCANOUT_FRONT_RENDERING
RGBA_1010102      : SCANOUT, SCANOUT_CPU_READ_WRITE, SCANOUT_FRONT_RENDERING
BGRA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, SCANOUT_FRONT_RENDERING
RGBA_F16          : Software only
YVU_420           : Software only
YUV_420_BIPLANAR  : Software only
YUVA_420_TRIPLANAR: Software only
P010              : Software only

Display(s) Information
======================
Info                          : Display[4] bounds=[0,174 1920x1080], workarea=[0,174 1920x1080], scale=1, rotation=0, panel_rotation=0 external detected
Color space (all)             : {primaries:BT709, transfer:SRGB, matrix:RGB, range:FULL}
Buffer format (all)           : RGBA_8888
Color volume                  : {name:'srgb', r:[0.6400, 0.3300], g:[0.3000, 0.6000], b:[0.1500, 0.3300], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24
Info                          : Display[5] bounds=[1920,0 3840x2160], workarea=[1920,0 3840x2160], scale=2, rotation=0, panel_rotation=0 external detected
Color space (all)             : {primaries:BT709, transfer:SRGB, matrix:RGB, range:FULL}
Buffer format (all)           : RGBA_8888
Color volume                  : {name:'srgb', r:[0.6400, 0.3300], g:[0.3000, 0.6000], b:[0.1500, 0.3300], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 16x16 to 4096x4096 pixels
Decode h264 main              : 16x16 to 4096x4096 pixels
Decode h264 high              : 16x16 to 4096x4096 pixels
Decode vp8                    : 16x16 to 4096x4096 pixels
Decode vp9 profile0           : 16x16 to 8192x8192 pixels
Decode vp9 profile2           : 16x16 to 8192x8192 pixels
Decode hevc main              : 16x16 to 8192x8192 pixels
Decode hevc main 10           : 16x16 to 8192x8192 pixels
Decode hevc main still-picture: 16x16 to 8192x8192 pixels
Encoding                      :

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============
[10227:10227:0412/092324.699213:WARNING:sandbox_linux.cc(418)] : InitializeSandbox() called with multiple threads in process gpu-process.
[10227:17765:0412/094319.336468:ERROR:vaapi_video_decoder.cc(1232)] : failed Initialize()ing the frame pool
[10227:17774:0412/094330.595297:ERROR:vaapi_video_decoder.cc(1232)] : failed Initialize()ing the frame pool
[10227:21218:0412/094538.839479:ERROR:vaapi_video_decoder.cc(1232)] : failed Initialize()ing the frame pool
[10227:22966:0412/094625.158973:ERROR:vaapi_video_decoder.cc(1232)] : failed Initialize()ing the frame pool
[10227:10227:0412/094641.682257:ERROR:shared_image_manager.cc(221)] : SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:10227:0412/094641.686620:ERROR:shared_image_manager.cc(221)] : SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:10227:0412/094704.636787:ERROR:shared_image_manager.cc(221)] : SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:10227:0412/094704.646869:ERROR:shared_image_manager.cc(221)] : SharedImageManager::ProduceSkia: Trying to Produce a Skia representation from a non-existent mailbox.
[10227:23174:0412/094705.280106:ERROR:vaapi_video_decoder.cc(1232)] : failed Initialize()ing the frame pool

# Additional Data
Category: Audio / Video \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>334069518</id>
        <title>WindowManager Sub Component Permissions Issue</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334069518"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">It seems that Permissions for Chromium&gt;UI&gt;Shell&gt;WindowManager and its sub-components are locked down. Neither my Google, nor Chromium account can create bugs in them.</content>
    </entry>
    <entry>
        <id>333952122</id>
        <title>Paste of image/svg+xml does not work correctly</title>
        <author>
            <name>er...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333952122"/>
        <updated>1970-01-01T00:28:32.934Z</updated>
        <summary>-</summary>
        <content type="html">Chrome v125

1. Put an SVG image on your clipboard (e.g. right-click Copy an image from Microsoft Word Desktop.
2. Visit https://webdbg.com/test/clipboard/ and hit CTRL+V to paste in the box

OBSERVE: Log shows
    Pasted 2 formats!

    Paste Item 0 has Kind:string Type: image/svg+xml
    Paste Item 1 has Kind:file Type: image/png
    item0 asString (0 chars): .

The problem here is that, while SVG is on the clipboard, the getAsString() method does not work. 

Why does this matter in the real world? It causes paste failures into the Azure DevOps issue editor which encounters the empty string and thus fails to paste properly.

In contrast, Mozilla Firefox does not expose the image/svg+xml data transfer item to JavaScript, exposing only the PNG image file, which allows the paste to function correctly.

This seems likely to be effectively a regression from Chrome 43 based on my read of https://issues.chromium.org/issues/40417854</content>
    </entry>
    <entry>
        <id>334068198</id>
        <title>Hide unsupported file system API interfaces from WebView</title>
        <author>
            <name>pb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334068198"/>
        <updated>1970-01-01T00:28:32.933Z</updated>
        <summary>-</summary>
        <content type="html">WebView does not expose the window.showOpenFilePicker(); method. The related FileSystemHandle interfaces should not be exposed either.

https://chromium-review.googlesource.com/c/chromium/src/+/5442877/comment/c987e7ac_a15c4808/</content>
    </entry>
    <entry>
        <id>333952121</id>
        <title>Add timing histograms to downloads UI</title>
        <author>
            <name>ja...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/333952121"/>
        <updated>1970-01-01T00:28:32.933Z</updated>
        <summary>-</summary>
        <content type="html">When we start to roll out the enhanced protection promotion row on download items, we'll need to monitor the load time of the page to ensure that the new mojo calls aren't impacting user experience. We can do that using [WebuiLoadTimer](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/webui/webui_load_timer.h;l=18;drc=813475877bc722e01263bc17f5cb4a8ccecea96d). 

Let's add this to [DownloadsUI](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/webui/downloads/downloads_ui.h;l=35;drc=26b32f461c85ff9e9858c1985810a5c7635b3d92) much like we have it on [ExtensionsUI](https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/ui/webui/extensions/extensions_ui.cc;l=477-479;drc=99ca66c7871461a7687ec193f377cc8e2131b5b7).

We can call the histograms as follows to follow the Download.* naming of downloads related histograms:

* Download.WebUi.DocumentLoadedInMainFrameTime
* Download.WebUi.LoadCompletedInMainFrame</content>
    </entry>
    <entry>
        <id>333957357</id>
        <title>[Graphics]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333957357"/>
        <updated>1970-01-01T00:28:32.933Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285954:1285984:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=91d7011f-9884-44bd-a2c8-499a4fa97d32

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=91d7011f-9884-44bd-a2c8-499a4fa97d32
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=91d7011f-9884-44bd-a2c8-499a4fa97d32

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/linux-perf/rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_techcrunch.html
        2.49%: 3.2715 -&gt; 3.353 

Top 1 affected measurements in linux-perf:
  - rasterize_and_record_micro.top_25/rasterize_time/file___static_top_25_techcrunch.html
        2.49%: 3.2715 -&gt; 3.353 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>334067134</id>
        <title>Failure to parse k-anonymity key commitment</title>
        <author>
            <name>be...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334067134"/>
        <updated>1970-01-01T00:28:32.933Z</updated>
        <summary>-</summary>
        <content type="html">Chrome fails to parse k-anonymity key commitments when the key identifier is greater than or equal to 2**31.</content>
    </entry>
    <entry>
        <id>334065543</id>
        <title>Hide unsupported Ink.requestPresenter API from WebView</title>
        <author>
            <name>pb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334065543"/>
        <updated>1970-01-01T00:28:32.933Z</updated>
        <summary>-</summary>
        <content type="html">presenter.updateInkTrailStartPoint is not a function in WebView

https://chromium-review.googlesource.com/c/chromium/src/+/5442877/comment/9c5a012a_3d15d338/</content>
    </entry>
    <entry>
        <id>334063352</id>
        <title>Hide picture-in-picture API from WebView webexposed APIs</title>
        <author>
            <name>pb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334063352"/>
        <updated>1970-01-01T00:28:32.932Z</updated>
        <summary>-</summary>
        <content type="html">HTMLVideoElement.requestPictureInPicture should not be exposed in WebView as picture-in-picture is not supported.

https://chromium-review.googlesource.com/c/chromium/src/+/5442877/comment/2b8f3f18_50e1ea6f/</content>
    </entry>
    <entry>
        <id>334064168</id>
        <title>Determine how CookieStoreManager works in WebView</title>
        <author>
            <name>pb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334064168"/>
        <updated>1970-01-01T00:28:32.932Z</updated>
        <summary>-</summary>
        <content type="html">CookieStoreManager lets service workers subscribe to changes in cookies.
https://developer.mozilla.org/en-US/docs/Web/API/CookieStoreManager

Figure out if this 
1. Works in WebView at all
2. Works in WebView if the embedding app changes or sets a cookie

https://chromium-review.googlesource.com/c/chromium/src/+/5442877/comment/5e36ddf0_9daca828/</content>
    </entry>
    <entry>
        <id>334063999</id>
        <title>TypedTraceEventTest.InstantThreadEvent is flaky on Android</title>
        <author>
            <name>aw...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/334063999"/>
        <updated>1970-01-01T00:28:32.932Z</updated>
        <summary>-</summary>
        <content type="html">TypedTraceEventTest.InstantThreadEvent and a few others seem be flaky almost 100% of the time (IIUC) on Android bots:

https://ci.chromium.org/ui/test/chromium/ninja%3A%2F%2Fbase%3Abase_unittests%2FTypedTraceEventTest.InstantThreadEvent?q=V%3Atest_suite%3Dbase_unittests+

Example failure: https://ci.chromium.org/ui/p/chromium/builders/try/android-x86-rel/216380/test-results?sortby=&amp;groupby=

```
[ RUN      ] TypedTraceEventTest.InstantThreadEvent
[216.841] cing_muxer_impl.cc:2645 PERFETTO_CHECK(!consumer-&gt;service_) (errno: 0, Success)
[ CRASHED      ]
```

Other tests that failed in that run:
 - TypedTraceEventTest.DescriptorPacketWrittenForEventWithTrack
 - TypedTraceEventTest.InstantProcessEvent</content>
    </entry>
    <entry>
        <id>334061124</id>
        <title>Hide FedCM API from WebView</title>
        <author>
            <name>pb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334061124"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">The FedCM web APIs are currently exposed in WebView, but are not implemented or working.

https://chromium-review.googlesource.com/c/chromium/src/+/5442877/comment/7f0408ad_bf729d2e/</content>
    </entry>
    <entry>
        <id>334059005</id>
        <title>Hide non-functional Contacts manager API from WebView exposed interfaces</title>
        <author>
            <name>pb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/334059005"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">The contacts API is exposed in WebView, but does not work.

https://chromium-review.googlesource.com/c/chromium/src/+/5442877/comment/0faaa42b_1cce8218/</content>
    </entry>
    <entry>
        <id>333926316</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile-future</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333926316"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285231:1285284:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4ffac3d9-feac-4bb7-89c2-e1f8a38da99e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4ffac3d9-feac-4bb7-89c2-e1f8a38da99e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/v8.browsing_mobile-future/GC:duration_avg/browse_search/browse_search_amp_sxg_2019
       10.90%: 16.942 -&gt; 18.7885 

Top 1 affected measurements in android-pixel2-perf:
  - v8.browsing_mobile-future/GC:duration_avg/browse_search/browse_search_amp_sxg_2019
       10.90%: 16.942 -&gt; 18.7885 

Regressions grouped by v8.browsing_mobile-future includes data from the following benchmarks with listed owners:
  v8.browsing_mobile-future: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333886786</id>
        <title>[Graphics]: 1 regressions in blink_perf.image_decoder</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333886786"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286283:1286303:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=8ac1cbfa-8fb6-43de-abf9-3186477f3681

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=8ac1cbfa-8fb6-43de-abf9-3186477f3681

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/mac-laptop_high_end-perf/blink_perf.image_decoder/ImageFrameGenerator::decode/decode-png.html
        1.26%: 45.7865 -&gt; 46.365 

Top 1 affected measurements in mac-laptop_high_end-perf:
  - blink_perf.image_decoder/ImageFrameGenerator::decode/decode-png.html
        1.26%: 45.7865 -&gt; 46.365 

Regressions grouped by blink_perf.image_decoder includes data from the following benchmarks with listed owners:
  blink_perf.image_decoder: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971743</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971743"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286082:1286123:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ddc1d83a-f0fa-4f97-9360-f3b778a9340a

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ddc1d83a-f0fa-4f97-9360-f3b778a9340a

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_google.html
        1.50%: 1.001 -&gt; 1.016 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_google.html
        1.50%: 1.001 -&gt; 1.016 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333976545</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333976545"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286113:1286176:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=d324811d-dd80-475c-9394-d6b5b8eaaf2e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=d324811d-dd80-475c-9394-d6b5b8eaaf2e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_facebook.html
        1.95%: 1.5635 -&gt; 1.594 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_facebook.html
        1.95%: 1.5635 -&gt; 1.594 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971742</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971742"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286082:1286123:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=f24a2b0d-6fe2-45fc-8ced-96975cce88a6

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=f24a2b0d-6fe2-45fc-8ced-96975cce88a6

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googleplus.html
        1.50%: 1.001 -&gt; 1.016 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googleplus.html
        1.50%: 1.001 -&gt; 1.016 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333971741</id>
        <title>[Desktop Power Perf Sheriff]: 1 regressions in power.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333971741"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1285994:1286011:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cebea4a7-0b92-4ef5-95a2-e834addddb2c

  Public Reports:
    - Chromium: https://perf.luci.app/_/alertgroup?group_id=cebea4a7-0b92-4ef5-95a2-e834addddb2c
  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cebea4a7-0b92-4ef5-95a2-e834addddb2c

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10-perf/power.desktop/cpu_time_percentage_avg/TrivialBlurAnimationPageSharedPageState
       82.22%: 0.1575 -&gt; 0.287 

Top 1 affected measurements in win-10-perf:
  - power.desktop/cpu_time_percentage_avg/TrivialBlurAnimationPageSharedPageState
       82.22%: 0.1575 -&gt; 0.287 

Regressions grouped by power.desktop includes data from the following benchmarks with listed owners:
  power.desktop: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>333969586</id>
        <title>[Blink Paint]: 1 regressions in rasterize_and_record_micro.top_25</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/333969586"/>
        <updated>1970-01-01T00:28:32.931Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1286113:1286176:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=4d99cef4-77cd-47cd-8c8b-901ad0a5217e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=4d99cef4-77cd-47cd-8c8b-901ad0a5217e

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel6-pro-perf/rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googleplus.html
        1.95%: 1.5635 -&gt; 1.594 

Top 1 affected measurements in android-pixel6-pro-perf:
  - rasterize_and_record_micro.top_25/record_time_caching_disabled/file___static_top_25_googleplus.html
        1.95%: 1.5635 -&gt; 1.594 

Regressions grouped by rasterize_and_record_micro.top_25 includes data from the following benchmarks with listed owners:
  rasterize_and_record_micro.top_25: 
      None

Commits in this range:</content>
    </entry>
</feed>