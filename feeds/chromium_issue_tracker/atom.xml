<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://negibokken.github.io/feeds/chromium_issue_tracker/atom.xml</id>
    <title>Chromium issue tracker feed</title>
    <link href="https://negibokken.github.io/feeds/intent_to_ship/atom.xml" rel="self"/>
    <updated>2024-02-15T08:14:15.981Z</updated>
    <entry>
        <id>325316140</id>
        <title>Remote Debugging Option not available</title>
        <author>
            <name>aa...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325316140"/>
        <updated>2024-02-15T08:14:15.981Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;from chrome://version/&gt;
OS                   : &lt;OS version&gt;

What steps will reproduce the problem?


What is the expected result?


What happens instead?


You can help us a lot by creating a minimal, reproducible example (https://stackoverflow.com/help/minimal-reproducible-example), e.g. on glitch.com, and/or attaching a screenshot or recording of the issue!</content>
    </entry>
    <entry>
        <id>325307785</id>
        <title>VisualViewport is missing the onscrollend attribute</title>
        <author>
            <name>fo...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307785"/>
        <updated>2024-02-15T08:04:53.219Z</updated>
        <summary>-</summary>
        <content type="html">The spec has this IDL attribute here:
https://drafts.csswg.org/cssom-view/#the-visualviewport-interface

But it's missing in Chromium here:
https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/visual_viewport.idl

This means it's no possible to listen for the event with the common `viewport.onscrollend = (event) =&gt; { doStuff() }` pattern, and also causes this feature detection test to fail:
https://mdn-bcd-collector.gooborg.com/tests/api/VisualViewport/scrollend_event</content>
    </entry>
    <entry>
        <id>325391526</id>
        <title>Tests are failing: dips_bounce_detector_browsertest.cc(2846): Value of: state-&amp;gt;user_interaction_times\nExpected: value has a first field that is equal to 1601-01-01 0...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325391526"/>
        <updated>2024-02-15T07:10:21.308Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
dips_bounce_detector_browsertest.cc(2846): Value of: state-&gt;user_interaction_times\nExpected: value has a first field that is equal to 1601-01-01 00:00:00.000000 UTC, and has a second field that is equal to 1601-01-01 00:00:00.000000 UTC\n  Actual: ((1601-01-01 00:00:00.000000 UTC, 2024-02-14 20:59:57.102439 UTC)), whose value (1601-01-01 00:00:00.000000 UTC, 2024-02-14 20:59:57.102439 UTC) doesn't match, whose second field does not match

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/DIPSThrottlingBrowserTest.InteractionRecording_NotThrottled_AfterRefresh
- ninja://chrome/test:browser_tests/DIPSThrottlingBrowserTest.InteractionRecording_Throttled


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/c9dc326f3dbce8616ed1e191fcec64bc

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325293267</id>
        <title>Update roller message</title>
        <author>
            <name>al...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293267"/>
        <updated>2024-02-15T07:00:33.357Z</updated>
        <summary>-</summary>
        <content type="html">The following CLs have a message that is incorrect: https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/5294544

RECORDER_OWNERS are only to be contacted when the roll is about puppeteer or puppeteer-replay updates. </content>
    </entry>
    <entry>
        <id>325365741</id>
        <title>Support components on browser tests.</title>
        <author>
            <name>rh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325365741"/>
        <updated>2024-02-15T06:24:42.534Z</updated>
        <summary>-</summary>
        <content type="html">Component updater is not now supported in browser tests. Therefore developing browser tests that need a downloaded component needs many additional steps to provide the package (see [go/chrome_screen_ai_tests](http://go/chrome_screen_ai_tests)).</content>
    </entry>
    <entry>
        <id>325318437</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 3 regressions in memory.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325318437"/>
        <updated>2024-02-15T05:48:08.502Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259804:1259958:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=1c18feb5-fefc-43c3-9146-951b925db845

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=1c18feb5-fefc-43c3-9146-951b925db845

Top 3 regressions (out of 3, with 0 improvements) in this group:
  - ChromiumPerf/win-11-perf/memory.desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/TrivialBlinkingCursorPageSharedPageState
       31.82%: 2523136.0 -&gt; 3325952.0 sizeInBytes
  - ChromiumPerf/win-11-perf/memory.desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/TrivialWebGLPageSharedPageState
       14.58%: 5221168.0 -&gt; 5982184.0 sizeInBytes
  - ChromiumPerf/win-11-perf/memory.desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/TrivialBlurAnimationPageSharedPageState
       13.97%: 5738296.0 -&gt; 6539752.0 sizeInBytes

Top 3 affected measurements in win-11-perf:
  - memory.desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/TrivialBlinkingCursorPageSharedPageState
       31.82%: 2523136.0 -&gt; 3325952.0 sizeInBytes
  - memory.desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/TrivialWebGLPageSharedPageState
       14.58%: 5221168.0 -&gt; 5982184.0 sizeInBytes
  - memory.desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/TrivialBlurAnimationPageSharedPageState
       13.97%: 5738296.0 -&gt; 6539752.0 sizeInBytes

Regressions grouped by memory.desktop includes data from the following benchmarks with listed owners:
  memory.desktop: lizeb@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1259803..1259958
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ee50bc8415cbf6756bfa4cb078155e498c89a4f7..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325376688</id>
        <title>[Chromium Perf Motionmark Sheriff]: 6 regressions in rendering.desktop.notracing</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325376688"/>
        <updated>2024-02-15T05:47:17.042Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260766:1260784:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cf6ecfe0-dd6e-4998-b61b-1e2082860751

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cf6ecfe0-dd6e-4998-b61b-1e2082860751

Top 6 regressions (out of 6, with 0 improvements) in this group:
  - ChromiumPerf/mac-m1-pro-perf/rendering.desktop.notracing/motionmark/motionmark_ramp_composite_ganesh
      100.00%: 2228.1039499999997 -&gt; 0.0 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop.notracing/motionmark/motionmark_ramp_composite
      100.00%: 4403.2701 -&gt; 0.0 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop.notracing/motionmark/motionmark_ramp_composite_graphite
      100.00%: 4490.4836 -&gt; 0.0 unitless
  - ChromiumPerf/mac-m1_mini_2020-perf/rendering.desktop.notracing/motionmark/motionmark_ramp_composite_ganesh
      100.00%: 4397.0774 -&gt; 0.0 unitless
  - ChromiumPerf/mac-m1-pro-perf/rendering.desktop.notracing/motionmark/motionmark_ramp_composite
      100.00%: 2222.1517000000003 -&gt; 0.0 unitless
  - ChromiumPerf/mac-m1-pro-perf/rendering.desktop.notracing/motionmark/motionmark_ramp_composite_graphite
      100.00%: 2279.8573 -&gt; 0.0 unitless

Top 3 affected measurements in mac-m1-pro-perf:
  - rendering.desktop.notracing/motionmark/motionmark_ramp_composite_ganesh
      100.00%: 2228.1039499999997 -&gt; 0.0 unitless
  - rendering.desktop.notracing/motionmark/motionmark_ramp_composite
      100.00%: 2222.1517000000003 -&gt; 0.0 unitless
  - rendering.desktop.notracing/motionmark/motionmark_ramp_composite_graphite
      100.00%: 2279.8573 -&gt; 0.0 unitless


Top 3 affected measurements in mac-m1_mini_2020-perf:
  - rendering.desktop.notracing/motionmark/motionmark_ramp_composite
      100.00%: 4403.2701 -&gt; 0.0 unitless
  - rendering.desktop.notracing/motionmark/motionmark_ramp_composite_graphite
      100.00%: 4490.4836 -&gt; 0.0 unitless
  - rendering.desktop.notracing/motionmark/motionmark_ramp_composite_ganesh
      100.00%: 4397.0774 -&gt; 0.0 unitless

Regressions grouped by rendering.desktop.notracing includes data from the following benchmarks with listed owners:
  rendering.desktop.notracing: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/45a7fb692d204e6157a40aa9c2eb9de9eadc53cf..4da853d3c66027eb7f942312d4b2f7e5dc7c0d9d
  Chromium Commit Position: https://crrev.com/1260765..1260784
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/f7f18510c4aed9c2d19e7e986fe9d91354dc93e8..08294ff5efd6e8902f1988d405fa9501e496ee8d
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/23c32da48ae3f5f146dbd60b8b7fe4416f3750b4..23c32da48ae3f5f146dbd60b8b7fe4416f3750b4</content>
    </entry>
    <entry>
        <id>325372938</id>
        <title>administrador</title>
        <author>
            <name>po...@colorado.com.br</name>
        </author>
        <link href="https://issues.chromium.org/issues/325372938"/>
        <updated>2024-02-15T05:41:08.639Z</updated>
        <summary>-</summary>
        <content type="html">Chrome Version       : &lt;Copy from: 'about:version'&gt;
URLs (if applicable) :
Other browsers tested:
  Add OK or FAIL, along with the version, after other browsers where you have tested this issue:
     Safari:
    Firefox:
       Edge:

What steps will reproduce the problem?
(1)
(2)
(3)

What is the expected result?


What happens instead?


Please provide any additional information below. Attach a screenshot if possible.

For graphics-related bugs, please save the contents of the about:gpu page to a text file and attach it to this bug report as an attachment.</content>
    </entry>
    <entry>
        <id>325316138</id>
        <title>Aw, Snap!
Something went wrong while displaying this webpage.
Error code: Out of Memory
getting this</title>
        <author>
            <name>dl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325316138"/>
        <updated>2024-02-15T05:38:58.102Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. i need solution for this 
2. 
3. 

# Problem Description
while running my python test script it basically work's fine in the beginning but eventually after some time it started slowing down the page loading and after an hour or somthing it show me this in my webdriver

# Summary
Aw, Snap!
Something went wrong while displaying this webpage.
Error code: Out of Memory
getting this

# Additional Data
Category: Content \
Chrome Channel: Stable \
Regression: Yes</content>
    </entry>
    <entry>
        <id>325306584</id>
        <title>[Chromium Desktop GPU Memory Sheriff]: 4 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325306584"/>
        <updated>2024-02-15T05:16:32.137Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=b5353a45-8366-4f33-8eec-48faa23d1d60

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=b5353a45-8366-4f33-8eec-48faa23d1d60

Top 4 regressions (out of 5, with 1 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/load_chrome/load_chrome_blank
       43.84%: 3071317.0 -&gt; 4417707.0 sizeInBytes
  - ChromiumPerf/lacros-x86-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/load_media/load_media_facebook_feed_desktop_2020
       41.54%: 12150916.0 -&gt; 17198447.0 sizeInBytes
  - ChromiumPerf/lacros-x86-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_lazors
       35.01%: 3542889.5 -&gt; 4783083.5 sizeInBytes
  - ChromiumPerf/lacros-x86-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/load_games/load_games_lazors
       27.42%: 5476352.0 -&gt; 6978219.0 sizeInBytes

Top 3 affected measurements in lacros-x86-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/load_chrome/load_chrome_blank
       43.84%: 3071317.0 -&gt; 4417707.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:cc:effective_size_avg/load_media/load_media_facebook_feed_desktop_2020
       41.54%: 12150916.0 -&gt; 17198447.0 sizeInBytes
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:gpu:effective_size_avg/load_games/load_games_lazors
       35.01%: 3542889.5 -&gt; 4783083.5 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325378566</id>
        <title>Tests are failing: autofill_interactive_uitest.cc(3917): Mock function called more times than expected - returning directly.\n Function call: OnFormSubmittedImpl(@0x2...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325378566"/>
        <updated>2024-02-15T05:10:28.251Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
autofill_interactive_uitest.cc(3917): Mock function called more times than expected - returning directly.\n    Function call: OnFormSubmittedImpl(@0x24d00005ec80 shipping https://127.0.0.1:34017/internal/test_url_path https://127.0.0.1:34017/success.html https://127.0.0.1:34017 Fields:label='Name:' unique_Id=BEB7369E4F17B43B6E8883EEB124218F_4 origin='https://127.0.0.1:34017' name='name' id_attribute='name' name_attribute='' value='Sarah' control='kInputText' autocomplete='' parsed_autocomplete='' placeholder='' max_length=4294967295 css_classes='' autofilled=0 check_status=kNotCheckable is_focusable=1 should_autocomplete=1 role=kOther text_direction=2 is_enabled=1 is_readonly=0 user_input= properties_mask=5 label_source=kCombined bounds=0,0 0x0,label='Address:' unique_Id=BEB7369E4F17B43B6E8883EEB124218F_5 origin='https://127.0.0.1:34017' name='address' id_attribute='address' name_attribute='' value='WA123 Main Road' control='kInputText' autocomplete='' parsed_autocomplete='' placeholder='' max_length=429496...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.SameDocumentNavigation
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.Submission
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.DomMutationAfterXhr
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.XhrSucceededAndDeleteForm
- ninja://chrome/test:interactive_ui_tests/AutofillInteractiveFormSubmissionTest.ProbableSubmission


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/f8f7084354675cc6eb3b0550cd8cb3fe

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325317382</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325317382"/>
        <updated>2024-02-15T05:06:41.992Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=cc692d24-a262-4914-8f92-cf5c70be2d85

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=cc692d24-a262-4914-8f92-cf5c70be2d85

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/blink_perf.parser/css-parser-yui/css-parser-yui.html
       22.01%: 509.42589999999996 -&gt; 397.30295 unitless

Top 1 affected measurements in lacros-x86-perf:
  - blink_perf.parser/css-parser-yui/css-parser-yui.html
       22.01%: 509.42589999999996 -&gt; 397.30295 unitless

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325378299</id>
        <title>[Blink DOM]: 2 regressions in blink_perf.dom</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325378299"/>
        <updated>2024-02-15T05:06:38.261Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=23cb762e-c9a0-4dad-862a-be31595e5436

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=23cb762e-c9a0-4dad-862a-be31595e5436

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/blink_perf.dom/select-single-remove/select-single-remove.html
       36.72%: 103.96119999999999 -&gt; 65.78675 unitless
  - ChromiumPerf/lacros-x86-perf/blink_perf.dom/custom-element-default-style-with-shadow/custom-element-default-style-with-shadow.html
       27.58%: 41.242599999999996 -&gt; 29.86905 unitless

Top 2 affected measurements in lacros-x86-perf:
  - blink_perf.dom/select-single-remove/select-single-remove.html
       36.72%: 103.96119999999999 -&gt; 65.78675 unitless
  - blink_perf.dom/custom-element-default-style-with-shadow/custom-element-default-style-with-shadow.html
       27.58%: 41.242599999999996 -&gt; 29.86905 unitless

Regressions grouped by blink_perf.dom includes data from the following benchmarks with listed owners:
  blink_perf.dom: masonf@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325306583</id>
        <title>[V8 JetStream2 Perf Sheriff]: 3 regressions in jetstream2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325306583"/>
        <updated>2024-02-15T05:03:45.150Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=dd603af8-6de3-471c-a920-c3fcf5d2601e

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=dd603af8-6de3-471c-a920-c3fcf5d2601e

Top 3 regressions (out of 14, with 11 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/jetstream2/segmentation.Worst/JetStream2
       22.15%: 10.0402 -&gt; 7.8166 unitless
  - ChromiumPerf/lacros-x86-perf/jetstream2/segmentation.Average/JetStream2
       15.49%: 12.96105 -&gt; 10.9536 unitless
  - ChromiumPerf/lacros-x86-perf/jetstream2/segmentation/JetStream2
       12.47%: 11.594249999999999 -&gt; 10.14865 unitless

Top 3 affected measurements in lacros-x86-perf:
  - jetstream2/segmentation.Worst/JetStream2
       22.15%: 10.0402 -&gt; 7.8166 unitless
  - jetstream2/segmentation.Average/JetStream2
       15.49%: 12.96105 -&gt; 10.9536 unitless
  - jetstream2/segmentation/JetStream2
       12.47%: 11.594249999999999 -&gt; 10.14865 unitless

Regressions grouped by jetstream2 includes data from the following benchmarks with listed owners:
  jetstream2: cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325372936</id>
        <title>HTML inert attribute should make text not findable by find-in-page</title>
        <author>
            <name>db...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325372936"/>
        <updated>2024-02-15T05:03:35.442Z</updated>
        <summary>-</summary>
        <content type="html">[The HTML spec says](https://html.spec.whatwg.org/multipage/interaction.html#inert-subtrees) that inert subtrees should not be findable by find-in-page.  Apparently no browsers implement this.

However, it came up today in CSSWG discussion of [w3c/csswg-drafts#3460](https://github.com/w3c/csswg-drafts/issues/3460).  As discussed in [w3c/csswg-drafts#9726](https://github.com/w3c/csswg-drafts/issues/9726) this would be useful for GitHub, which is working around this by putting the highlighted overlay in their source view (where they virtualize the highlighting by only constructing the DOM for it for the visible part of the page, and have the entire source in a textarea underneath) entirely in `::before` or `::after` pseudo-elements, which are not findable in Chromium or WebKit.  That approach causes bad performance problems in Firefox, where find-in-page finds into pseudo-elements, which thus requires a worse workaround for Firefox (single letter elements each with a pseudo-element, rather than larger pseudo-elements) that causes substantially worse performance in Firefox.

But it seems like maybe there's value in having the ability for text to be non-findable, and it also seems like `inert` may well be the right thing for this use case as well.</content>
    </entry>
    <entry>
        <id>325306582</id>
        <title>[Desktop Power Perf Sheriff]: 1 regressions in power.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325306582"/>
        <updated>2024-02-15T05:03:30.522Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=5f0a64c5-aa66-4ab6-8a07-69c7982ada92

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=5f0a64c5-aa66-4ab6-8a07-69c7982ada92

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/power.desktop/cpu_time_percentage_avg/TrivialScrollingPageSharedPageState
       39.22%: 0.269 -&gt; 0.3745 n%

Top 1 affected measurements in lacros-x86-perf:
  - power.desktop/cpu_time_percentage_avg/TrivialScrollingPageSharedPageState
       39.22%: 0.269 -&gt; 0.3745 n%

Regressions grouped by power.desktop includes data from the following benchmarks with listed owners:
  power.desktop: brucedawson@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325302589</id>
        <title>[Blink CSS]: 1 regressions in blink_perf.css</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302589"/>
        <updated>2024-02-15T04:49:16.162Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=9727648c-66a3-4906-817b-df44228d70e3

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=9727648c-66a3-4906-817b-df44228d70e3

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/blink_perf.css/LoadMaterializeStarterPage/LoadMaterializeStarterPage.html
       24.57%: 21.729999999999997 -&gt; 27.07 ms

Top 1 affected measurements in lacros-x86-perf:
  - blink_perf.css/LoadMaterializeStarterPage/LoadMaterializeStarterPage.html
       24.57%: 21.729999999999997 -&gt; 27.07 ms

Regressions grouped by blink_perf.css includes data from the following benchmarks with listed owners:
  blink_perf.css: andruud@chromium.org, futhark@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325306834</id>
        <title>[Desktop Power Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325306834"/>
        <updated>2024-02-15T04:48:51.559Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=e124b9f1-b916-439d-bd29-a624d514dbce

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=e124b9f1-b916-439d-bd29-a624d514dbce

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cpu_time_percentage_avg/load_chrome/load_chrome_blank
      173.17%: 0.123 -&gt; 0.336 n%

Top 1 affected measurements in lacros-x86-perf:
  - system_health.common_desktop/cpu_time_percentage_avg/load_chrome/load_chrome_blank
      173.17%: 0.123 -&gt; 0.336 n%

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325333336</id>
        <title>[Graphics]: 2 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325333336"/>
        <updated>2024-02-15T04:48:50.860Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=ce1c7445-dee5-4fc6-8bbd-80a267d444ce

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=ce1c7445-dee5-4fc6-8bbd-80a267d444ce

Top 2 regressions (out of 2, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/sheets_render.html
       32.02%: 13.10905 -&gt; 17.30675 unitless
  - ChromiumPerf/lacros-x86-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/canvas_10000_pixels_per_second
       22.77%: 8.3411 -&gt; 10.240749999999998 unitless

Top 2 affected measurements in lacros-x86-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/sheets_render.html
       32.02%: 13.10905 -&gt; 17.30675 unitless
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/canvas_10000_pixels_per_second
       22.77%: 8.3411 -&gt; 10.240749999999998 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325365547</id>
        <title>Create Getter and setter for last folder seen in EG tests</title>
        <author>
            <name>ar...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325365547"/>
        <updated>2024-02-15T04:48:41.709Z</updated>
        <summary>-</summary>
        <content type="html"></content>
    </entry>
    <entry>
        <id>325376687</id>
        <title>[V8 Perf Sheriff]: 1 regressions in v8.browsing_mobile</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325376687"/>
        <updated>2024-02-15T04:47:48.513Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1260236:1260266:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=359bded6-b0b0-4641-b970-001ffa400f35

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=359bded6-b0b0-4641-b970-001ffa400f35

Top 1 regressions (out of 26, with 25 improvements) in this group:
  - ChromiumPerf/android-pixel6-perf/v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute/browse_shopping/browse_shopping_amazon_2019
       50.89%: 0.2255 -&gt; 0.34025000000000005 ms

Top 1 affected measurements in android-pixel6-perf:
  - v8.browsing_mobile/total:500ms_window:renderer_eqt:v8:execute/browse_shopping/browse_shopping_amazon_2019
       50.89%: 0.2255 -&gt; 0.34025000000000005 ms

Regressions grouped by v8.browsing_mobile includes data from the following benchmarks with listed owners:
  v8.browsing_mobile: cbruni@chromium.org, leszeks@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/8e79afe6d67dcd0876d86a7f3121f3045005926c..c7e8fa674f3bdd4572266a11893743ab8cf84a21
  Chromium Commit Position: https://crrev.com/1260235..1260276
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/8520176308009ae785173e70261fc20e19e1fc60..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325317381</id>
        <title>[V8 Speedometer2 Perf Sheriff]: 1 regressions in speedometer2</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325317381"/>
        <updated>2024-02-15T04:47:26.240Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=78374401-5c67-4701-bb44-e16ec592e122

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=78374401-5c67-4701-bb44-e16ec592e122

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/speedometer2/AngularJS-TodoMVC/Speedometer2
       11.75%: 502.21000000000004 -&gt; 561.1949999999999 ms

Top 1 affected measurements in lacros-x86-perf:
  - speedometer2/AngularJS-TodoMVC/Speedometer2
       11.75%: 502.21000000000004 -&gt; 561.1949999999999 ms

Regressions grouped by speedometer2 includes data from the following benchmarks with listed owners:
  speedometer2: cbruni@chromium.org, vahl@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325317380</id>
        <title>[Loading Perf Sheriff]: 1 regressions in system_health.common_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325317380"/>
        <updated>2024-02-15T04:46:56.986Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=2f37fc6a-53cf-48da-98e3-6c32436c5a6b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=2f37fc6a-53cf-48da-98e3-6c32436c5a6b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.common_desktop/cwv:cumulative_layout_shift_avg/load_media/load_media_youtube_2018
      126.37%: 0.0182 -&gt; 0.0412 unitless

Top 1 affected measurements in lacros-x86-perf:
  - system_health.common_desktop/cwv:cumulative_layout_shift_avg/load_media/load_media_youtube_2018
      126.37%: 0.0182 -&gt; 0.0412 unitless

Regressions grouped by system_health.common_desktop includes data from the following benchmarks with listed owners:
  system_health.common_desktop: kouhei@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325317379</id>
        <title>[Skia Desktop Memory Sheriff]: 1 regressions in system_health.memory_desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325317379"/>
        <updated>2024-02-15T04:46:42.459Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259844:1260323:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=fa47f5ed-aa8b-4eb9-85ea-c61e58791125

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=fa47f5ed-aa8b-4eb9-85ea-c61e58791125

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/lacros-x86-perf/system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/browse_search/browse_search_google_india_2021
       29.29%: 455550.0 -&gt; 588985.0 sizeInBytes

Top 1 affected measurements in lacros-x86-perf:
  - system_health.memory_desktop/memory:chrome:all_processes:reported_by_chrome:skia:effective_size_avg/browse_search/browse_search_google_india_2021
       29.29%: 455550.0 -&gt; 588985.0 sizeInBytes

Regressions grouped by system_health.memory_desktop includes data from the following benchmarks with listed owners:
  system_health.memory_desktop: lizeb@chromium.org, pasko@chromium.org
      

Commits in this range:
  Chromium Git Hash: https://chromium.googlesource.com/chromium/src/+log/6dd809029b167902fca35474860140091189fc8d..20a6318db92809d4f1a0bb4063a82d4c07d779eb
  Chromium Commit Position: https://crrev.com/1259843..1260323
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/055f16a99236434241b72db611e804257d319822..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325372928</id>
        <title>Tests are failing: web_app_title_browsertest.cc(148): Value of: histogram_tester.GetAllSamples(\"Blink.UseCounter.Features\")\nExpected: (a surjection from elements t...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325372928"/>
        <updated>2024-02-15T04:25:21.514Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
web_app_title_browsertest.cc(148): Value of: histogram_tester.GetAllSamples(\"Blink.UseCounter.Features\")\nExpected: (a surjection from elements to requirements exists such that:\n - an element is equal to Bucket 4860: 1) and (only contains elements that is an object whose field `Bucket::min` ())\n  Actual: { Bucket 52: 1, Bucket 1441: 1 }, where the following matchers don't match any elements:\nmatcher #0: is equal to Bucket 4860: 1

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:browser_tests/WebAppTitleBrowserTest.DynamicAppTitle


These test failures are causing problem(s) which require your attention, including:
- many gardened builders are failing

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/43ceb0c08b412be28722ff656e891d6b

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325307461</id>
        <title>Rendering dynamically fetched large HTML is very slow</title>
        <author>
            <name>bl...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307461"/>
        <updated>2024-02-15T04:17:53.500Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://mathsdodger.eu.pythonanywhere.com/
2. Search for huge in the left pane
3. It took Chromium 5 minutes to display the result and during this the CPU usage was constantly around 101.3%

# Problem Description
I developed this web-based dictionary lookup system and it fetches articles from the back-end and displays them in the middle pane. If the size of the response JSON (which contains the article HTML) is on the magnitude of megabytes, it took Chromium an unreasonably long period of time to render the article after the JSON had been fetched. Strangely, if you directly load the HTML article by visiting https://mathsdodger.eu.pythonanywhere.com/api/query/Default%20Group/huge then it loads rapidly.

This bug is reproducible on desktop versions of Chromium-based browsers, including Chromium (from Debian), official Chrome builds for Linux and Windows, and Microsoft Edge on Windows, but NOT on Android Chrome. It is NOT present on Firefox (Linux), Safari (iPadOS), or Android Chrome.

# Summary
Rendering dynamically fetched large HTML is very slow

# Custom Questions
#### Example URL: 
https://mathsdodger.eu.pythonanywhere.com/

#### Does the problem occur on multiple sites?
Not sure - I don't know

#### Is it a problem with a plugin?
No - It's the browser itself

#### Does this work in other browsers? 
Yes - This is just a Chromium problem

# Additional Data
Category: Content \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325370038</id>
        <title>Tests are failing: inspector_backend.py(830): telemetry.core.exceptions.DevtoolsTargetCrashException: Devtools target crashed\n***************************************...</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325370038"/>
        <updated>2024-02-15T03:40:17.422Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
inspector_backend.py(830): telemetry.core.exceptions.DevtoolsTargetCrashException: Devtools target crashed\n********************************************************************************\n(/b/swarming/w/ir/third_party/catapult/telemetry/telemetry/internal/backends/chrome_inspector/inspector_backend.py:896 _AddDebuggingInformation) Received a socket error in the browser connection and the tab still exists. The operation probably timed out.\n********************************************************************************\n(/b/swarming/w/ir/third_party/catapult/telemetry/telemetry/internal/backends/chrome_inspector/inspector_backend.py:897 _AddDebuggingInformation) Debugger url: ws://127.0.0.1:36907/devtools/page/0\nFound Minidump: True\nStack Trace:\n********************************************************************************\nStack trace(s) already output above.\n********************************************************************************\nStandard output:\n***************************************************...

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/ogles/GL/mat/mat_033_to_040.html
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/glsl/bugs/assign-to-swizzled-twice-in-function.html
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/ogles/GL/build/build_025_to_032.html
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/ogles/GL/build/build_081_to_088.html
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/context/context-type-test.html


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/fe4587592eb18090c306239bd2e86c0d

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325314708</id>
        <title>RPP: Callstack is being cut off</title>
        <author>
            <name>pa...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325314708"/>
        <updated>2024-02-15T03:32:00.680Z</updated>
        <summary>-</summary>
        <content type="html">
See screenshots. First is actual. Second is expected.


This regressed in http://crrev.com/c/5172554  ... basically a fix for console broke us over here. 
But.. no biggie cuz we have a table in a span and all sorts of inline-block wrappers.. It's just silly.



I have a cl ready to fix.
</content>
    </entry>
    <entry>
        <id>325310635</id>
        <title>Developer tools must implement a feature to preserve the selected element after a refresh</title>
        <author>
            <name>al...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325310635"/>
        <updated>2024-02-15T02:43:02.890Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Open dev tools
2. Select any element (static or dynamic)
3. Refresh the page

# Problem Description
The selected element is lost and you have to manually find it through the DOM 
This is an obvious task and repeated hundres of times upon debugging and development and is soo trivial.
Please implement it!

# Summary
Developer tools must implement a feature to preserve the selected element after a refresh

# Additional Data
Category: Developer Tools \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325360823</id>
        <title>Tests are failing: connection.py(198): websockets.exceptions.ConnectionClosedError: no close frame received or sent</title>
        <author>
            <name>bi...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325360823"/>
        <updated>2024-02-15T02:10:12.451Z</updated>
        <summary>-</summary>
        <content type="html">This bug is for all test failures where the primary error message is similiar to the following (ignoring numbers and hexadecimal values):
connection.py(198): websockets.exceptions.ConnectionClosedError: no close frame received or sent

The following test(s) were observed to have matching failures at this time (at most five examples listed):
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.conformance/uniforms/out-of-bounds-uniform-array-access.html
- ninja://content/test:telemetry_gpu_integration_test_fuchsia/gpu_tests.expected_color_test.ExpectedColorTest.ExpectedColor_maps
- ninja://chrome/test:telemetry_gpu_integration_test/gpu_tests.pixel_integration_test.PixelIntegrationTest.Pixel_Video_Media_Stream_Incompatible_Stride
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.deqp/data/gles2/shaders/preprocessor.html
- ninja://chrome/test:telemetry_gpu_integration_test_android_chrome/gpu_tests.webgl1_conformance_integration_test.WebGL1ConformanceIntegrationTest.deqp/data/gles2/shaders/swizzles_ivec3.html


These test failures are causing problem(s) which require your attention, including:
- test variant(s) are being exonerated (ignored) in presubmit

See current problems, failure examples and more in LUCI Analysis at: https://luci-analysis.appspot.com/p/chromium/rules/161429230fc124d6750548d7f76a2636

How to action this bug: https://luci-analysis.appspot.com/help#new-bug-filed
Provide feedback: https://luci-analysis.appspot.com/help#feedback
Was this bug filed in the wrong component? See: https://luci-analysis.appspot.com/help#component-selection</content>
    </entry>
    <entry>
        <id>325352528</id>
        <title>Update per-origin data storage limit to a total byte quota</title>
        <author>
            <name>ca...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325352528"/>
        <updated>2024-02-15T01:56:36.143Z</updated>
        <summary>-</summary>
        <content type="html">To increase developer ergonomics, we have decided to drop the limit on number of key-value pairs per origin, as well as the previous character limits for keys and values,. We will move instead to a total byte quota of 5MB per origin.

Note that, strictly speaking, there will still a key and value length limit, in that each key and value must necessarily be less than or equal to 5MB, given that the total of all lengths.of keys and values must not exceed 5MB.</content>
    </entry>
    <entry>
        <id>325359457</id>
        <title>Make `TypedExtensionTracker::extension_field_` a non-reference</title>
        <author>
            <name>kd...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325359457"/>
        <updated>2024-02-15T01:55:33.103Z</updated>
        <summary>-</summary>
        <content type="html"># Context

* Chrome Memory Safety generally recommends that member pointers (and references) be `raw_ptr&lt;T&gt;` (and `raw_ref&lt;T&gt;`), with some exceptions: [When to use `raw_ptr`](https://chromium.googlesource.com/chromium/src/+/main/base/memory/raw_ptr.md#when-to-use-raw_ptr_t)

* C-M-S scans the codebase to rewrite members to bring them in alignment with this policy.

* It's meaningless to wrap Oilpan types in `raw_ptr`, as such types are not allocated by PartitionAlloc.

* This requires that we annotate things like `TypedExtensionTracker::extension_field_` (a `Member&lt;T&gt;&amp;`) with `RAW_PTR_EXCLUSION`.

# The Ask

[Can we make `extension_field_` a non-reference type, i.e. a `Member&lt;T&gt;`](https://chromium-review.googlesource.com/c/chromium/src/+/5240446/comment/3614f83c_83bbe3c5/)?</content>
    </entry>
    <entry>
        <id>325307460</id>
        <title>Editing / renaming bookmark crashes Chrome under GNOME desktop, with text scaling factor 1.5</title>
        <author>
            <name>yt...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307460"/>
        <updated>2024-02-15T01:49:13.229Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. In GNOME Tweaks I set text scaling factor to 1.5
2. Open Chrome to edit bookmark
3. The UI shakes and become unresponsive, and eventually the browser crashes

# Problem Description
Tested text scaling factor 1.5 and 1.0 in GNOME Tweaks.
The browser crashes if I set the text scaling factor to a fractional number (1.5, 1.25, etc.) but works fine if the text scaling factor is integer (1.0, 2.0, etc.).

Tested on X and Wayland sessions. Nothing changes.
Tested both the Refresh 2023 UI and the old UI. Nothing changes.

Tested with external monitor. (Screen size: 3840 by 2160 pixels)
If I do not plug in the external monitor the UI still shakes but I can manage to click on the Cancel button; if there is external monitor, the UI shakes more violently and becomes totally unresponsive, and eventually it crashes.

OS: Ubuntu 22.04.3 LTS
Desktop: GNOME 42.9 (Wayland)
Screen resolution: 2560 by 1600 pixels on my laptop; 3840 by 2160 pixels on external monitor

# Summary
Editing / renaming bookmark crashes Chrome under GNOME desktop, with text scaling factor 1.5

# Additional Data
Category: UI \
Chrome Channel: Not sure \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325356134</id>
        <title>[E2E] Activity transitions on a Foldable handled cleanly</title>
        <author>
            <name>do...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325356134"/>
        <updated>2024-02-15T01:40:09.200Z</updated>
        <summary>-</summary>
        <content type="html">When we fold a foldable there is a transition from one activity to another.
We need to handle this cleanly. We have an expedient fix being landed in https://b.corp.google.com/issues/41492043

Likely the EdgeToEdgeControllerImpl needs to monitor TabObserver#onActivityAttachmentChanged.</content>
    </entry>
    <entry>
        <id>325293264</id>
        <title>Record UMA for ad click triggered main frame navigation</title>
        <author>
            <name>ya...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293264"/>
        <updated>2024-02-15T01:35:44.588Z</updated>
        <summary>-</summary>
        <content type="html">Record UMA for ad click triggered main frame navigation. This makes it easier to analyze it in finch (compared to use counters).</content>
    </entry>
    <entry>
        <id>325314707</id>
        <title>[Feature Request] Support AudioOutputAllowed policy on Windows</title>
        <author>
            <name>ga...@microsoft.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325314707"/>
        <updated>2024-02-15T01:17:46.507Z</updated>
        <summary>-</summary>
        <content type="html">Currently the [AudioOutputAllowed](https://chromeenterprise.google/policies/#AudioOutputAllowed) enterprise policy is supported only in ChromeOS. We could extend support and have this policy also available on Windows.</content>
    </entry>
    <entry>
        <id>325293263</id>
        <title>Chrome crashes when dragging tab out during initiation of "Organize Tabs" function</title>
        <author>
            <name>xp...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293263"/>
        <updated>2024-02-15T01:17:36.753Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1.  Create multiple tabs that are the same e.g. 2 google.com tabs
2.  Open the menu to start the "Organize tabs" function.
3.  Click "Start Now"
4.  Click and drag the 2 google.com tabs out while the "Organize Tabs" function tries to find duplicate tabs. &lt;= Crash

# Problem Description
Crash

# Additional Comments
See video for replication. I can't replicate in ASan, as this feature doesn't work there? 

If any googler could tell me why, that'd be very helpful.

# Summary
Chrome crashes when dragging tab out during initiation of "Organize Tabs" function

# Custom Questions
#### How much crashed? 
The whole browser

#### Is it a problem with a plugin?
No - It's the browser itself

# Additional Data
Category: Crashes \
Chrome Channel: Canary \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325314706</id>
        <title> extensions.mojom.RendererHost leads to prerendering cancellation</title>
        <author>
            <name>nh...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325314706"/>
        <updated>2024-02-15T01:04:42.492Z</updated>
        <summary>-</summary>
        <content type="html">extensions.mojom.RendererHost is a major cancellation reason on several platforms.</content>
    </entry>
    <entry>
        <id>325307458</id>
        <title>60%/300W of RTX3080 usage when playing YT at 1080p60fps</title>
        <author>
            <name>ga...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325307458"/>
        <updated>2024-02-15T00:49:59.058Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Play YT video in fullscreen 
2. Observe very high GPU usage

# Problem Description
Hi there! I'm having a problem which seems to be a bug in Chromium.

Sample video: https://youtu.be/oHISLTg0C44

All tests were done by playing 1080p60fps:

Smallest-size player: https://i.imgur.com/tmjBUaj.png (30% avg load, 40W avg power)
Cinema mode: https://i.imgur.com/St0QL2E.png (23% avg load, 36W avg power)
Full screen: https://i.imgur.com/PBH1tVm.png (58% avg load, 296W avg power (sic!))

What is going on over here?

My specs:

P8Z77-V, i7 3770k @ 4.4Ghz, 16G RAM, Asus TUF RTX 3080 OC, AX860i PSU, two 1920x1200 screens.

I do have updated Nvidia drivers, Chrome and Windows.

I've also tested this on Edge and on Chrom Incognito without any plugins (both show same thing) and Firefox (no such thing there).

# Summary
60%/300W of RTX3080 usage when playing YT at 1080p60fps

# Custom Questions
#### Does this work in other browsers?

Yes - This is just a Chromium problem

# Additional Data
Category: Audio / Video \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325318436</id>
        <title>[Blink Parser]: 1 regressions in blink_perf.parser</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325318436"/>
        <updated>2024-02-15T00:33:33.402Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259957:1259998:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=41081490-6232-47b3-b502-fa7c5df58470

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=41081490-6232-47b3-b502-fa7c5df58470

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/android-pixel2-perf/blink_perf.parser/innerHTML-setter/innerHTML-setter.html
        1.12%: 958.60803 -&gt; 947.8712 

Top 1 affected measurements in android-pixel2-perf:
  - blink_perf.parser/innerHTML-setter/innerHTML-setter.html
        1.12%: 958.60803 -&gt; 947.8712 

Regressions grouped by blink_perf.parser includes data from the following benchmarks with listed owners:
  blink_perf.parser: 
      None

Commits in this range:</content>
    </entry>
    <entry>
        <id>325342140</id>
        <title>[TabGroupIndicators] Skip tab group bg highlights and reorder immediately</title>
        <author>
            <name>zh...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325342140"/>
        <updated>2024-02-15T00:10:44.152Z</updated>
        <summary>-</summary>
        <content type="html">Skip tab group bg highlights and reorder immediately instead of having to hover for a moment to match desktop
</content>
    </entry>
    <entry>
        <id>325302836</id>
        <title>[shared storage] Implement cross-origin worklet</title>
        <author>
            <name>ya...@chromium.org</name>
        </author>
        <link href="https://issues.chromium.org/issues/325302836"/>
        <updated>2024-02-14T23:50:50.658Z</updated>
        <summary>-</summary>
        <content type="html">Explainer: https://github.com/WICG/shared-storage/pull/130
Spec: https://github.com/WICG/shared-storage/pull/131
</content>
    </entry>
    <entry>
        <id>325340107</id>
        <title>[Graphics]: 5 regressions in rendering.desktop</title>
        <author>
            <name>ch...@appspot.gserviceaccount.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325340107"/>
        <updated>2024-02-14T23:33:35.176Z</updated>
        <summary>-</summary>
        <content type="html">All graphs for this regression group at 1259781:1259977:

  Internal (Googlers-only) Reports:
    - Chromium: https://chrome-perf.corp.goog/_/alertgroup?group_id=72586aed-550f-4e87-b455-7d44780ae78b

  (Legacy) Chromeperf Report: https://chromeperf.appspot.com/group_report?group_id=72586aed-550f-4e87-b455-7d44780ae78b

Top 1 regressions (out of 1, with 0 improvements) in this group:
  - ChromiumPerf/win-10_laptop_low_end-perf/rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_20000_pixels_per_second
       18.22%: 14.22415 -&gt; 16.8158 unitless

Top 1 affected measurements in win-10_laptop_low_end-perf:
  - rendering.desktop/thread_total_rendering_cpu_time_per_frame/text_20000_pixels_per_second
       18.22%: 14.22415 -&gt; 16.8158 unitless

Regressions grouped by rendering.desktop includes data from the following benchmarks with listed owners:
  rendering.desktop: chrome-gpu-metrics@google.com, jonross@chromium.org
      

Commits in this range:
  Chromium Commit Position: https://crrev.com/1259780..1259977
  V8 Commit Position: https://chromium.googlesource.com/v8/v8/+log/ee50bc8415cbf6756bfa4cb078155e498c89a4f7..8520176308009ae785173e70261fc20e19e1fc60
  WebRTC Git Hash: https://webrtc.googlesource.com/src/+log/e5cd905b9eb779fb205e8d2acedd44c09d9aad85..d99fb2f6ffea7d60dd1ffa5d6e29ae58abbd834a</content>
    </entry>
    <entry>
        <id>325331788</id>
        <title>NavigationController::GoToIndex() should return a bool</title>
        <author>
            <name>li...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331788"/>
        <updated>2024-02-14T23:23:17.130Z</updated>
        <summary>-</summary>
        <content type="html">NavigationController::GoToIndex() should return a bool to signal that a navigation request is successfully created.</content>
    </entry>
    <entry>
        <id>325337396</id>
        <title>[PCCT] Clean up PCCT closing animation logic</title>
        <author>
            <name>ji...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325337396"/>
        <updated>2024-02-14T23:20:26.215Z</updated>
        <summary>-</summary>
        <content type="html">https://g-issues.chromium.org/issues/41491741#comment16 The logic that got complicated over time in PCCT that handles closing animation [1] is not necessary any more.  This bug will track the process of cleaning up the relevant code. 


[1] https://source.chromium.org/chromium/chromium/src/+/main:chrome/android/java/src/org/chromium/chrome/browser/customtabs/BaseCustomTabActivity.java;l=637;drc=1701fd99b91dd2ea8deb3d8744a0bbffc36d02fa</content>
    </entry>
    <entry>
        <id>325336527</id>
        <title>external/wpt/html/semantics/interactive-elements/the-dialog-element/dialog-open.html test is flaky</title>
        <author>
            <name>sa...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325336527"/>
        <updated>2024-02-14T23:14:21.661Z</updated>
        <summary>-</summary>
        <content type="html">external/wpt/html/semantics/interactive-elements/the-dialog-element/dialog-open.html

Harness Failure on Linux Tests (dbg)(1) builder

Test history Link:
https://ci.chromium.org/ui/test/chromium%3Aci/ninja%3A%2F%2F%3Ablink_wpt_tests%2Fexternal%2Fwpt%2Fhtml%2Fsemantics%2Finteractive-elements%2Fthe-dialog-element%2Fdialog-open.html?q=VHASH%3A6002b55d65708e28

Dashboard:
https://data.corp.google.com/sites/chrome_generic_flakiness_dashboard_datasite/top_flakes/?f=test_id:eq:ninja:%2F%2F:blink_wpt_tests%2Fexternal%2Fwpt%2Fhtml%2Fsemantics%2Finteractive-elements%2Fthe-dialog-element%2Fdialog-open.html&amp;f=realm:in:(null)&amp;f=variant_test_suite:in:blink_wpt_tests&amp;can=2

and average 8.45% flaky rate in runs mostly on Linux builders</content>
    </entry>
    <entry>
        <id>325331782</id>
        <title>Status bar elements are displayed in white (invisible) after force quitting the app.</title>
        <author>
            <name>vb...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331782"/>
        <updated>2024-02-14T23:13:42.643Z</updated>
        <summary>-</summary>
        <content type="html">App Version: 123.0.6301.1 canary

iOS Version: 17.4 beta 3, 17.3, 16.6

Device: iPhone 15 pro max, iPhone 13 Pro, iPhone 14 Pro

URL: 


Steps to reproduce:

  1.   Launch chrome canary.

  2.   Force quit and relaunch the app.

 
Observed results:

Notice that the status bar elements (time, wifi, batter ) are displayed in white color and not visible clearly 


Expected results:

Status bar elements should be displayed clearly in black color.


Note: Once we perform an action like tapping on “Menu” the status bar elements are displayed in black


Number of times you were able to reproduce: 5/5
Bug reproducible after clean install: Yes
Bug reproducible after clearing cache and cookies: Yes
Bug reproducible on Chrome Mobile on Android: NA
Bug reproducible on Safari/Firefox: Firefox: No, Safari: No
Bug reproducible on current stable build (App Version, iOS Version):  No on M121, 122
Bug reproducible on the current beta channel build (App Version, iOS Version): NA

Good Build : 123.0.6263.1 canary 
Revision : b549f65ab435...

Bad Build : 123.0.6264.1
Revision : 9bfdfbcf3983...

Link to video/image: https://drive.google.com/file/d/18_zuasDVqF3c61Dka7fYcThGDQTKVLlw/view?resourcekey=0-P-SQ6ZEIj0hLvf9NAsiB0g
</content>
    </entry>
    <entry>
        <id>325293260</id>
        <title>Infinite loop of transitions when overriding CSS file with local overrides</title>
        <author>
            <name>an...@gmail.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325293260"/>
        <updated>2024-02-14T22:46:56.315Z</updated>
        <summary>-</summary>
        <content type="html"># Steps to reproduce the problem
1. Go to https://www.welt-der-baustoffe.de/produkte/vinyl-designboden/vinylboden-stoneliving-spc-rigid-premium-designvinyl-click-fliese/p/1253755
2. Open devtools
3. Go to sources tabs
4. Enable local overrides
5. Open the CSS file stark.styles.css?v=5a582ff6
6. Right-click on the file name in the sidebar, then select override content
7. The website transitions, and every style, start looping

# Problem Description
Infinite loop of transitions when overriding CSS file with local overrides. After the website starts looping the CSS application, the only way to stop it is to disable local overrides, or to delete the local overridden file.

# Summary
Infinite loop of transitions when overriding CSS file with local overrides

# Additional Data
Category: Developer Tools \
Chrome Channel: Stable \
Regression: N/A</content>
    </entry>
    <entry>
        <id>325331419</id>
        <title>Resource Attribution: Add an algorithm to group resource usage by same-origin frame clusters</title>
        <author>
            <name>jo...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331419"/>
        <updated>2024-02-14T22:44:11.446Z</updated>
        <summary>-</summary>
        <content type="html">This would be useful to find the resources used by subsets of frames on a page that can be treated as a group, or frames from a common host that are shared by many pages. (Google-internal http://shortn/_fBtUS7Ng0s has some more motivation.)</content>
    </entry>
    <entry>
        <id>325331239</id>
        <title>Investigate unexpected large CDM storage file sizes</title>
        <author>
            <name>vp...@google.com</name>
        </author>
        <link href="https://issues.chromium.org/issues/325331239"/>
        <updated>2024-02-14T22:38:12.046Z</updated>
        <summary>-</summary>
        <content type="html">Chromium Bug counterpart of b/310029102:

We are observing some unreasonably huge reads from the MediaLicenseDatabase during experiments. This is occuring on beta Chrome, so we'd like to get more information in Beta through Chromium mechanisms and also use this bug to file merge requests so we do not use the mechanisms in stable.

</content>
    </entry>
</feed>